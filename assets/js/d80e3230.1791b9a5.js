"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[85999],{7304:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>d,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>l});var t=n(85893),o=n(11151);function i(e){const r={em:"em",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"type-error"})," ",(0,t.jsx)(r.em,{children:"Condition Type"})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Class Precedence List:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"type-error"}),", ",(0,t.jsx)(r.strong,{children:"error"}),", ",(0,t.jsx)(r.strong,{children:"serious-condition"}),", ",(0,t.jsx)(r.strong,{children:"condition"}),", ",(0,t.jsx)(r.strong,{children:"t"})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.em,{children:"type"})," ",(0,t.jsx)(r.strong,{children:"type-error"})," represents a situation in which an ",(0,t.jsx)(r.em,{children:"object"})," is not of the expected type. The \u201coffending datum\u201d and \u201cexpected type\u201d are initialized by the initialization arguments named ",":datum"," and ",":expected-type"," to ",(0,t.jsx)(r.strong,{children:"make-condition"}),", and are ",(0,t.jsx)(r.em,{children:"accessed"})," by the functions ",(0,t.jsx)(r.strong,{children:"type-error-datum"})," and ",(0,t.jsx)(r.strong,{children:"type-error-expected-type"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"type-error-datum"}),", ",(0,t.jsx)(r.strong,{children:"type-error-expected-type"})]})]})}function c(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const s={title:"type-error"},d="type-error",p={id:"chap-4/e-e-dictionary/type-error_condition-type",title:"type-error",description:"Expanded Reference: type-error",source:"@site/docs/chap-4/e-e-dictionary/type-error_condition-type.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/type-error_condition-type",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/type-error_condition-type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-4/e-e-dictionary/type-error_condition-type.md",tags:[],version:"current",frontMatter:{title:"type-error"},sidebar:"tutorialSidebar",previous:{title:"type-error-datum, type-error-expected-type",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/type-error-datum_type-error-expected-type_function"},next:{title:"type-of",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/type-of_function"}},a={},l=[{value:"Expanded Reference: type-error",id:"expanded-reference-type-error",level:2}];function h(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"type-error",children:"type-error"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(r.h2,{id:"expanded-reference-type-error",children:"Expanded Reference: type-error"}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:"(type-error )\n"})})]})}function y(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>s,a:()=>c});var t=n(67294);const o={},i=t.createContext(o);function c(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);