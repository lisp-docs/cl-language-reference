"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[72714],{38173:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var t=r(85893),i=r(11151);function s(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{ClLinks:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"cerror"})," ",(0,t.jsx)(r,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{styled:!0,term:"cerror",children:(0,t.jsx)("b",{children:"cerror"})})," ",(0,t.jsx)(n.em,{children:"continue-format-control datum"})," &rest ",(0,t.jsx)(n.em,{children:"arguments \u2192"})," ",(0,t.jsx)(r,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Continue-format-control"}),"\u2014a ",(0,t.jsx)(n.em,{children:"format control"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"datum"}),", ",(0,t.jsx)(r,{styled:!0,term:"argument",children:(0,t.jsx)("i",{children:"arguments"})}),"\u2014",(0,t.jsx)(r,{styled:!0,term:"designator",children:(0,t.jsx)("i",{children:"designators"})})," for a ",(0,t.jsx)(r,{styled:!0,term:"condition",children:(0,t.jsx)("i",{children:"condition"})})," of default type ",(0,t.jsx)(r,{styled:!0,term:"simple-error",children:(0,t.jsx)("b",{children:"simple-error"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{styled:!0,term:"cerror",children:(0,t.jsx)("b",{children:"cerror"})})," effectively invokes ",(0,t.jsx)(r,{styled:!0,term:"error",children:(0,t.jsx)("b",{children:"error"})})," on the ",(0,t.jsx)(r,{styled:!0,term:"condition",children:(0,t.jsx)("i",{children:"condition"})})," named by ",(0,t.jsx)(n.em,{children:"datum"}),". As with any function that implicitly calls ",(0,t.jsx)(r,{styled:!0,term:"error",children:(0,t.jsx)("b",{children:"error"})}),", if the ",(0,t.jsx)(r,{styled:!0,term:"condition",children:(0,t.jsx)("i",{children:"condition"})})," is not handled, (invoke-debugger ",(0,t.jsx)(r,{styled:!0,term:"condition",children:(0,t.jsx)("i",{children:"condition"})}),") is executed. While signaling is going on, and while in the debugger if it is reached, it is possible to continue code execution (",(0,t.jsx)(n.em,{children:"i.e."}),", to return from ",(0,t.jsx)(r,{styled:!0,term:"cerror",children:(0,t.jsx)("b",{children:"cerror"})}),") using the ",(0,t.jsx)(n.strong,{children:"continue"})," ",(0,t.jsx)(r,{styled:!0,term:"restart",children:(0,t.jsx)("i",{children:"restart"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"datum"})," is a ",(0,t.jsx)(r,{styled:!0,term:"condition",children:(0,t.jsx)("i",{children:"condition"})}),", ",(0,t.jsx)(r,{styled:!0,term:"argument",children:(0,t.jsx)("i",{children:"arguments"})})," can be supplied, but are used only in conjunction with the ",(0,t.jsx)(n.em,{children:"continue-format-control"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:'\n(defun real-sqrt (n) \n  (when (minusp n) \n    (setq n (- n)) \n\n    \n    \n    **cerror** \n    (cerror "Return sqrt(~D) instead." "Tried to take sqrt(-~D)." n)) (sqrt n)) \n(real-sqrt 4) \n\u2192 2.0 \n(real-sqrt -9) \n\u25b7 Correctable error in REAL-SQRT: Tried to take sqrt(-9). \n\u25b7 Restart options: \n\u25b7 1: Return sqrt(9) instead. \n\u25b7 2: Top level. \n\u25b7 Debug> :continue 1 \n\u2192 3.0 \n(define-condition not-a-number (error) \n  ((argument :reader not-a-number-argument :initarg :argument)) (:report (lambda (condition stream) \n\t\t\t\t\t\t\t\t\t   (format stream "~S is not a number." \n\t\t\t\t\t\t\t\t\t\t   (not-a-number-argument condition))))) \n(defun assure-number (n) \n  (loop (when (numberp n) (return n)) \n   (cerror "Enter a number." \n\t   \u2019not-a-number :argument n) \n   (format t "~&Type a number: ") \n   (setq n (read)) \n   (fresh-line))) \n(assure-number \u2019a) \n\u25b7 Correctable error in ASSURE-NUMBER: A is not a number. \n\u25b7 Restart options: \n\u25b7 1: Enter a number. \n\u25b7 2: Top level. \n\u25b7 Debug> :continue 1 \n\u25b7 Type a number: 1/2 \n\u2192 1/2 \n(defun assure-large-number (n) \n  (loop (when (and (numberp n) (> n 73)) (return n)) \n   (cerror "Enter a number~:[~; a bit larger than ~D~]." \n\t   "~\\*~A is not a large number." \n\t   (numberp n) n) \n   (format t "~&Type a large number: ") \n   (setq n (read)) \n   (fresh-line))) \n\n\n\n**cerror** \n(assure-large-number 10000) \n\u2192 10000 \n(assure-large-number \u2019a) \n\u25b7 Correctable error in ASSURE-LARGE-NUMBER: A is not a large number. \n\u25b7 Restart options: \n\u25b7 1: Enter a number. \n\u25b7 2: Top level. \n\u25b7 Debug> :continue 1 \n\u25b7 Type a large number: 88 \n\u2192 88 \n(assure-large-number 37) \n\u25b7 Correctable error in ASSURE-LARGE-NUMBER: 37 is not a large number. \n\u25b7 Restart options: \n\u25b7 1: Enter a number a bit larger than 37. \n\u25b7 2: Top level. \n\u25b7 Debug> :continue 1 \n\u25b7 Type a large number: 259 \n\u2192 259 \n(define-condition not-a-large-number (error) \n  ((argument :reader not-a-large-number-argument :initarg :argument)) \n  (:report (lambda (condition stream) \n\t     (format stream "~S is not a large number." \n\t\t     (not-a-large-number-argument condition))))) \n(defun assure-large-number (n) \n  (loop (when (and (numberp n) (> n 73)) (return n)) \n   (cerror "Enter a number~3\\*~:[~; a bit larger than ~\\*~D~]." \n\t   \u2019not-a-large-number \n\t   :argument n \n\t   :ignore (numberp n) \n\t   :ignore n \n\t   :allow-other-keys t) \n   (format t "~&Type a large number: ") \n   (setq n (read)) \n   (fresh-line))) \n(assure-large-number \u2019a) \n\u25b7 Correctable error in ASSURE-LARGE-NUMBER: A is not a large number. \n\u25b7 Restart options: \n\u25b7 1: Enter a number. \n\n\n\n\u25b7 2: Top level. \n\u25b7 Debug> :continue 1 \n\u25b7 Type a large number: 88 \n\u2192 88 \n(assure-large-number 37) \n\u25b7 Correctable error in ASSURE-LARGE-NUMBER: A is not a large number. \n\u25b7 Restart options: \n\u25b7 1: Enter a number a bit larger than 37. \n\u25b7 2: Top level. \n\u25b7 Debug> :continue 1 \n\u25b7 Type a large number: 259 \n\u2192 259 \n\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{styled:!0,term:"break-on-signals",children:(0,t.jsx)("b",{children:"*break-on-signals*"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Existing handler bindings."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{styled:!0,term:"error",children:(0,t.jsx)("b",{children:"error"})}),", ",(0,t.jsx)(r,{styled:!0,term:"format",children:(0,t.jsx)("b",{children:"format"})}),", ",(0,t.jsx)(r,{styled:!0,term:"handler-bind",children:(0,t.jsx)("b",{children:"handler-bind"})}),", ",(0,t.jsx)(r,{styled:!0,term:"break-on-signals",children:(0,t.jsx)("b",{children:"*break-on-signals*"})}),", ",(0,t.jsx)(r,{styled:!0,term:"simple-type-error",children:(0,t.jsx)("b",{children:"simple-type-error"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"datum"})," is a ",(0,t.jsx)(n.em,{children:"condition type"})," rather than a ",(0,t.jsx)(r,{styled:!0,term:"string",children:(0,t.jsx)("i",{children:"string"})}),", the ",(0,t.jsx)(r,{styled:!0,term:"format",children:(0,t.jsx)("b",{children:"format"})})," directive ~* may be especially useful in the ",(0,t.jsx)(n.em,{children:"continue-format-control"})," in order to ignore the ",(0,t.jsx)(r,{styled:!0,term:"keyword",children:(0,t.jsx)("i",{children:"keywords"})})," in the ",(0,t.jsx)(n.em,{children:"initialization argument list"}),". For example:"]}),"\n",(0,t.jsx)(n.p,{children:'(cerror "enter a new value to replace ~*~s"'}),"\n",(0,t.jsx)(n.p,{children:"\u2019not-a-number"}),"\n",(0,t.jsxs)(n.p,{children:[":argument"," a)"]})]})}function o(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}const c={title:"cerror"},a="cerror",l={id:"chap-9/j-c-dictionary/cerror_function",title:"cerror",description:"Expanded Reference: cerror",source:"@site/docs/chap-9/j-c-dictionary/cerror_function.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/cerror_function",permalink:"/cl-language-reference/chap-9/j-c-dictionary/cerror_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/cerror_function.md",tags:[],version:"current",frontMatter:{title:"cerror"},sidebar:"tutorialSidebar",previous:{title:"cell-error",permalink:"/cl-language-reference/chap-9/j-c-dictionary/cell-error_condition-type"},next:{title:"check-type",permalink:"/cl-language-reference/chap-9/j-c-dictionary/check-type_macro"}},d={},u=[{value:"Expanded Reference: cerror",id:"expanded-reference-cerror",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"cerror",children:"cerror"}),"\n","\n","\n",(0,t.jsx)(o,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-cerror",children:"Expanded Reference: cerror"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(cerror )\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>o});var t=r(67294);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);