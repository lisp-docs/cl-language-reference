"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[66530],{63224:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>p,toc:()=>o});var t=i(85893),a=i(11151);function r(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{DictionaryLink:i,GlossaryTerm:r}=n;return i||l("DictionaryLink",!0),r||l("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"wild-pathname-p"})," ",(0,t.jsx)(r,{term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{term:"wild-pathname-p",children:(0,t.jsx)("b",{children:"wild-pathname-p"})})," ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," &optional ",(0,t.jsx)(n.em,{children:"field-key \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})}),"\u2014a ",(0,t.jsx)(r,{styled:!0,term:"pathname designator",children:(0,t.jsx)("i",{children:"pathname designator"})})," ."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Field-key"}),"\u2014one of ",":host",", ",":device"," ",":directory",", ",":name",", ",":type",", ",":version",", or ",(0,t.jsx)(i,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(r,{styled:!0,term:"generalized boolean",children:(0,t.jsx)("i",{children:"generalized boolean"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{term:"wild-pathname-p",children:(0,t.jsx)("b",{children:"wild-pathname-p"})})," tests ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," for the presence of wildcard components."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," (as returned by ",(0,t.jsx)(i,{term:"pathname",children:(0,t.jsx)("b",{children:"pathname"})}),") it represents the name used to open the file. This may be, but is not required to be, the actual name of the file."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"field-key"})," is not supplied or ",(0,t.jsx)(i,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),", ",(0,t.jsx)(i,{term:"wild-pathname-p",children:(0,t.jsx)("b",{children:"wild-pathname-p"})})," returns true if ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," has any wildcard components, ",(0,t.jsx)(i,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," if ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," has none. If ",(0,t.jsx)(n.em,{children:"field-key"})," is ",(0,t.jsx)(r,{term:"non-nil",children:(0,t.jsx)("i",{children:"non-nil"})}),", ",(0,t.jsx)(i,{term:"wild-pathname-p",children:(0,t.jsx)("b",{children:"wild-pathname-p"})})," returns true if the indicated component of ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a wildcard, ",(0,t.jsx)(i,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," if the component is not a wildcard."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:';;;The following examples are not portable. They are written to run \n;;;with particular file systems and particular wildcard conventions. \n;;;Other implementations will behave differently. These examples are \n;;;intended to be illustrative, not to be prescriptive. \n(wild-pathname-p (make-pathname :name :wild)) \u2192 true \n(wild-pathname-p (make-pathname :name :wild) :name) \u2192 true \n(wild-pathname-p (make-pathname :name :wild) :type) \u2192 false \n(wild-pathname-p (pathname "s:>foo>\\*\\*>")) \u2192 true ;Lispm \n(wild-pathname-p (pathname :name "F\\*O")) \u2192 true ;Most places \n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is not a ",(0,t.jsx)(r,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})}),", a ",(0,t.jsx)(r,{term:"string",children:(0,t.jsx)("i",{children:"string"})}),", or a ",(0,t.jsx)(r,{styled:!0,term:"stream associated with a file",children:(0,t.jsx)("i",{children:"stream associated with a file"})})," an error of ",(0,t.jsx)(r,{term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(i,{term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{term:"pathname",children:(0,t.jsx)("b",{children:"pathname"})}),", ",(0,t.jsx)(i,{term:"logical-pathname",children:(0,t.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["Not all implementations support wildcards in all fields. See Section 19.2.2.2.2 (",":WILD"," as a"]}),"\n",(0,t.jsx)(n.p,{children:"Component Value) and Section 19.2.2.3 (Restrictions on Wildcard Pathnames)."})]})}function s(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"wild-pathname-p"},c="wild-pathname-p",p={id:"chap-19/bj-e-dictionary/wild-pathname-p_function",title:"wild-pathname-p",description:"Expanded Reference: wild-pathname-p",source:"@site/docs/chap-19/bj-e-dictionary/wild-pathname-p_function.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/wild-pathname-p_function",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/wild-pathname-p_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/wild-pathname-p_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"wild-pathname-p"},sidebar:"tutorialSidebar",previous:{title:"translate-pathname",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/translate-pathname_function"},next:{title:"20.1 File System Concepts",permalink:"/cl-language-reference/chap-20/ca-b-file-system-concepts"}},h={},o=[{value:"Expanded Reference: wild-pathname-p",id:"expanded-reference-wild-pathname-p",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"wild-pathname-p",children:"wild-pathname-p"}),"\n","\n","\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-wild-pathname-p",children:"Expanded Reference: wild-pathname-p"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(wild-pathname-p )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>s});var t=i(67294);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);