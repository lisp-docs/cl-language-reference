"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[85093],{681:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>w,contentTitle:()=>y,default:()=>T,frontMatter:()=>b,metadata:()=>v,toc:()=>D});var r=i(85893),s=i(11151);function t(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Declarations"})," provide a way of specifying information for use by program processors, such as the evaluator or the compiler."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Local declarations"})," can be embedded in executable code using ",(0,r.jsx)(n.strong,{children:"declare"}),". ",(0,r.jsx)(n.em,{children:"Global declarations"}),", or ",(0,r.jsx)(n.em,{children:"proclamations"}),", are established by ",(0,r.jsx)(n.strong,{children:"proclaim"})," or ",(0,r.jsx)(n.strong,{children:"declaim"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"the"})," ",(0,r.jsx)(n.em,{children:"special form"})," provides a shorthand notation for making a ",(0,r.jsx)(n.em,{children:"local declaration"})," about the ",(0,r.jsx)(n.em,{children:"type"})," of the ",(0,r.jsx)(n.em,{children:"value"})," of a given ",(0,r.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The consequences are undefined if a program violates a ",(0,r.jsx)(n.em,{children:"declaration"})," or a ",(0,r.jsx)(n.em,{children:"proclamation"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}function o(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In general, an ",(0,r.jsx)(n.em,{children:"implementation"})," is free to ignore ",(0,r.jsx)(n.em,{children:"declaration specifiers"})," except for the ",(0,r.jsx)(n.strong,{children:"declaration"}),", ",(0,r.jsx)(n.strong,{children:"notinline"}),", ",(0,r.jsx)(n.strong,{children:"safety"}),", and ",(0,r.jsx)(n.strong,{children:"special"})," ",(0,r.jsx)(n.em,{children:"declaration specifiers"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"declaration"})," ",(0,r.jsx)(n.em,{children:"declaration"})," must suppress warnings about unrecognized ",(0,r.jsx)(n.em,{children:"declarations"})," of the kind that it declares. If an ",(0,r.jsx)(n.em,{children:"implementation"})," does not produce warnings about unrecognized declarations, it may safely ignore this ",(0,r.jsx)(n.em,{children:"declaration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"notinline"})," ",(0,r.jsx)(n.em,{children:"declaration"})," must be recognized by any ",(0,r.jsx)(n.em,{children:"implementation"})," that supports inline functions or ",(0,r.jsx)(n.em,{children:"compiler macros"})," in order to disable those facilities. An ",(0,r.jsx)(n.em,{children:"implementation"})," that does not use inline functions or ",(0,r.jsx)(n.em,{children:"compiler macros"})," may safely ignore this ",(0,r.jsx)(n.em,{children:"declaration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"safety"})," ",(0,r.jsx)(n.em,{children:"declaration"})," that increases the current safety level must always be recognized. An ",(0,r.jsx)(n.em,{children:"implementation"})," that always processes code as if safety were high may safely ignore this ",(0,r.jsx)(n.em,{children:"declaration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"special"})," ",(0,r.jsx)(n.em,{children:"declaration"})," must be processed by all ",(0,r.jsx)(n.em,{children:"implementations"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}function a(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"declaration specifier"})," is an ",(0,r.jsx)(n.em,{children:"expression"})," that can appear at top level of a ",(0,r.jsx)(n.strong,{children:"declare"})," expression or a ",(0,r.jsx)(n.strong,{children:"declaim"})," form, or as the argument to ",(0,r.jsx)(n.strong,{children:"proclaim"}),". It is a ",(0,r.jsx)(n.em,{children:"list"})," whose ",(0,r.jsx)(n.em,{children:"car"})," is a ",(0,r.jsx)(n.em,{children:"declaration identifier"})," , and whose ",(0,r.jsx)(n.em,{children:"cdr"})," is data interpreted according to rules specific to the ",(0,r.jsx)(n.em,{children:"declaration identifier"})," ."]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}function h(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Figure 3\u20139 shows a list of all ",(0,r.jsx)(n.em,{children:"declaration identifiers"})," defined by this standard."]}),"\n",(0,r.jsxs)(n.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(n.strong,{children:"declaration ignore special"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(n.strong,{children:"dynamic-extent inline type"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(n.strong,{children:"ftype notinline"})," "]}),(0,r.jsx)("p",{children:(0,r.jsx)(n.strong,{children:"ignorable optimize"})}),"|"]}),"\n",(0,r.jsx)(n.p,{children:"| :- |"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Figure 3\u20139. Common Lisp Declaration Identifiers"})}),"\n",(0,r.jsxs)(n.p,{children:["An implementation is free to support other (",(0,r.jsx)(n.em,{children:"implementation-defined"}),") ",(0,r.jsx)(n.em,{children:"declaration identifiers"})," as well. A warning might be issued if a ",(0,r.jsx)(n.em,{children:"declaration identifier"})," is not among those defined above, is not defined by the ",(0,r.jsx)(n.em,{children:"implementation"}),", is not a ",(0,r.jsx)(n.em,{children:"type name"}),", and has not been declared in a ",(0,r.jsx)(n.strong,{children:"declaration"})," ",(0,r.jsx)(n.em,{children:"proclamation"}),"."]})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function m(e){const n={em:"em",p:"p",...(0,s.a)(),...e.components};return(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"type specifier"})," can be used as a ",(0,r.jsx)(n.em,{children:"declaration identifier"})," . (",(0,r.jsx)(n.em,{children:"type-specifier {var}"}),"*) is taken as shorthand for (type ",(0,r.jsx)(n.em,{children:"type-specifier {var}"}),"*)."]})}function j(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}function p(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Declarations"})," can be divided into two kinds: those that apply to the ",(0,r.jsx)(n.em,{children:"bindings"})," of ",(0,r.jsx)(n.em,{children:"variables"})," or ",(0,r.jsx)(n.em,{children:"functions"}),"; and those that do not apply to ",(0,r.jsx)(n.em,{children:"bindings"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"declaration"})," that appears at the head of a binding ",(0,r.jsx)(n.em,{children:"form"})," and applies to a ",(0,r.jsx)(n.em,{children:"variable"})," or ",(0,r.jsx)(n.em,{children:"function binding"})," made by that ",(0,r.jsx)(n.em,{children:"form"})," is called a ",(0,r.jsx)(n.em,{children:"bound declaration"}),"; such a ",(0,r.jsx)(n.em,{children:"declaration"})," affects both the ",(0,r.jsx)(n.em,{children:"binding"})," and any references within the ",(0,r.jsx)(n.em,{children:"scope"})," of the ",(0,r.jsx)(n.em,{children:"declaration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Declarations"})," that are not ",(0,r.jsx)(n.em,{children:"bound declarations"})," are called ",(0,r.jsx)(n.em,{children:"free declarations"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"free declaration"})," in a ",(0,r.jsx)(n.em,{children:"form F"}),"1 that applies to a ",(0,r.jsx)(n.em,{children:"binding"})," for a ",(0,r.jsx)(n.em,{children:"name N established"})," by some ",(0,r.jsx)(n.em,{children:"form F"}),"2 of which ",(0,r.jsx)(n.em,{children:"F"}),"1 is a ",(0,r.jsx)(n.em,{children:"subform"})," affects only references to ",(0,r.jsx)(n.em,{children:"N"})," within ",(0,r.jsx)(n.em,{children:"F"}),"1; it does not to apply to other references to ",(0,r.jsx)(n.em,{children:"N"})," outside of ",(0,r.jsx)(n.em,{children:"F"}),"1, nor does it affect the manner in which the ",(0,r.jsx)(n.em,{children:"binding"})," of ",(0,r.jsx)(n.em,{children:"N"})," by ",(0,r.jsx)(n.em,{children:"F"}),"2 is ",(0,r.jsx)(n.em,{children:"established"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Declarations"})," that do not apply to ",(0,r.jsx)(n.em,{children:"bindings"})," can only appear as ",(0,r.jsx)(n.em,{children:"free declarations"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"scope"})," of a ",(0,r.jsx)(n.em,{children:"bound declaration"})," is the same as the ",(0,r.jsx)(n.em,{children:"lexical scope"})," of the ",(0,r.jsx)(n.em,{children:"binding"})," to which it applies; for ",(0,r.jsx)(n.em,{children:"special variables"}),", this means the ",(0,r.jsx)(n.em,{children:"scope"})," that the ",(0,r.jsx)(n.em,{children:"binding"})," would have had had it been a ",(0,r.jsx)(n.em,{children:"lexical binding"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Unless explicitly stated otherwise, the ",(0,r.jsx)(n.em,{children:"scope"})," of a ",(0,r.jsx)(n.em,{children:"free declaration"})," includes only the body ",(0,r.jsx)(n.em,{children:"subforms"})," of the ",(0,r.jsx)(n.em,{children:"form"})," at whose head it appears, and no other ",(0,r.jsx)(n.em,{children:"subforms"}),". The ",(0,r.jsx)(n.em,{children:"scope"})," of ",(0,r.jsx)(n.em,{children:"free declarations"})," specifically does not include ",(0,r.jsx)(n.em,{children:"initialization forms"})," for ",(0,r.jsx)(n.em,{children:"bindings"})," established by the ",(0,r.jsx)(n.em,{children:"form"})," containing the ",(0,r.jsx)(n.em,{children:"declarations"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Some ",(0,r.jsx)(n.em,{children:"iteration forms"})," include step, end-test, or result ",(0,r.jsx)(n.em,{children:"subforms"})," that are also included in the ",(0,r.jsx)(n.em,{children:"scope"})," of ",(0,r.jsx)(n.em,{children:"declarations"})," that appear in the ",(0,r.jsx)(n.em,{children:"iteration form"}),". Specifically, the ",(0,r.jsx)(n.em,{children:"iteration forms"})," and ",(0,r.jsx)(n.em,{children:"subforms"})," involved are:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2022"})," ",(0,r.jsx)(n.strong,{children:"do"}),", ",(0,r.jsx)(n.strong,{children:"do*"}),": ",(0,r.jsx)(n.em,{children:"step-forms"}),", ",(0,r.jsx)(n.em,{children:"end-test-form"}),", and ",(0,r.jsx)(n.em,{children:"result-forms"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2022"})," ",(0,r.jsx)(n.strong,{children:"dolist"}),", ",(0,r.jsx)(n.strong,{children:"dotimes"}),": ",(0,r.jsx)(n.em,{children:"result-form"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2022"})," ",(0,r.jsx)(n.strong,{children:"do-all-symbols"}),", ",(0,r.jsx)(n.strong,{children:"do-external-symbols"}),", ",(0,r.jsx)(n.strong,{children:"do-symbols"}),": ",(0,r.jsx)(n.em,{children:"result-form"})]})]})}function f(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}function u(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Here is an example illustrating the ",(0,r.jsx)(n.em,{children:"scope"})," of ",(0,r.jsx)(n.em,{children:"bound declarations"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"(let ((x 1)) ;[1] 1st occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"(declare (special x)) ;[2] 2nd occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"(let ((x 2)) ;[3] 3rd occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"(let ((old-x x) ;[4] 4th occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"(x 3)) ;[5] 5th occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"(declare (special x)) ;[6] 6th occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"(list old-x x)))) ;[7] 7th occurrence of x"}),"\n",(0,r.jsx)(n.p,{children:"\u2192 (2 3)"}),"\n",(0,r.jsxs)(n.p,{children:["The first occurrence of x ",(0,r.jsx)(n.em,{children:"establishes"})," a ",(0,r.jsx)(n.em,{children:"dynamic binding"})," of x because of the ",(0,r.jsx)(n.strong,{children:"special"})," ",(0,r.jsx)(n.em,{children:"declaration"})," for x in the second line. The third occurrence of x ",(0,r.jsx)(n.em,{children:"establishes"})," a ",(0,r.jsx)(n.em,{children:"lexical binding"})," of x (because there is no ",(0,r.jsx)(n.strong,{children:"special"})," ",(0,r.jsx)(n.em,{children:"declaration"})," in the corresponding ",(0,r.jsx)(n.strong,{children:"let"})," ",(0,r.jsx)(n.em,{children:"form"}),"). The fourth occurrence of x ",(0,r.jsx)(n.em,{children:"x"})," is a reference to the ",(0,r.jsx)(n.em,{children:"lexical binding"})," of x established in the third line. The fifth occurrence of x ",(0,r.jsx)(n.em,{children:"establishes"})," a ",(0,r.jsx)(n.em,{children:"dynamic binding"})," of ",(0,r.jsx)(n.em,{children:"x"})," for the body of the ",(0,r.jsx)(n.strong,{children:"let"})," ",(0,r.jsx)(n.em,{children:"form"})," that begins on that line because of the ",(0,r.jsx)(n.strong,{children:"special"})," ",(0,r.jsx)(n.em,{children:"declaration"})," for x in the sixth line. The reference to x in the fourth line is not affected by the ",(0,r.jsx)(n.strong,{children:"special"})," ",(0,r.jsx)(n.em,{children:"declaration"})," in the sixth line because that reference is not within the \u201cwould-be ",(0,r.jsx)(n.em,{children:"lexical scope"}),"\u201d of the ",(0,r.jsx)(n.em,{children:"variable"})," x in the fifth line. The reference to x in the seventh line is a reference to the ",(0,r.jsx)(n.em,{children:"dynamic binding"})," of ",(0,r.jsx)(n.em,{children:"x established"})," in the fifth line."]}),"\n",(0,r.jsxs)(n.p,{children:["Here is another example, to illustrate the ",(0,r.jsx)(n.em,{children:"scope"})," of a ",(0,r.jsx)(n.em,{children:"free declaration"}),". In the following:"]}),"\n",(0,r.jsx)(n.p,{children:"(lambda (&optional (x (foo 1))) ;[1]"}),"\n",(0,r.jsx)(n.p,{children:"(declare (notinline foo)) ;[2]"}),"\n",(0,r.jsx)(n.p,{children:"(foo x)) ;[3]"}),"\n",(0,r.jsxs)(n.p,{children:["the ",(0,r.jsx)(n.em,{children:"call"})," to foo in the first line might be compiled inline even though the ",(0,r.jsx)(n.em,{children:"call"})," to foo in the third line must not be. This is because the ",(0,r.jsx)(n.strong,{children:"notinline"})," ",(0,r.jsx)(n.em,{children:"declaration"})," for foo in the second line applies only to the body on the third line. In order to suppress inlining for both ",(0,r.jsx)(n.em,{children:"calls"}),", one might write:"]}),"\n",(0,r.jsx)(n.p,{children:"(locally (declare (notinline foo)) ;[1]"}),"\n",(0,r.jsx)(n.p,{children:"(lambda (&optional (x (foo 1))) ;[2]"}),"\n",(0,r.jsx)(n.p,{children:"(foo x))) ;[3]"}),"\n",(0,r.jsx)(n.p,{children:"or, alternatively:"}),"\n",(0,r.jsx)(n.p,{children:"(lambda (&optional ;[1]"}),"\n",(0,r.jsx)(n.p,{children:"(x (locally (declare (notinline foo)) ;[2]"}),"\n",(0,r.jsx)(n.p,{children:"(foo 1)))) ;[3]"}),"\n",(0,r.jsx)(n.p,{children:"(declare (notinline foo)) ;[4]"}),"\n",(0,r.jsx)(n.p,{children:"(foo x)) ;[5]"}),"\n",(0,r.jsxs)(n.p,{children:["Finally, here is an example that shows the ",(0,r.jsx)(n.em,{children:"scope"})," of ",(0,r.jsx)(n.em,{children:"declarations"})," in an ",(0,r.jsx)(n.em,{children:"iteration form"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"(let ((x 1)) ;[1]"}),"\n",(0,r.jsx)(n.p,{children:"(declare (special x)) ;[2]"}),"\n",(0,r.jsx)(n.p,{children:"(let ((x 2)) ;[3]"}),"\n",(0,r.jsx)(n.p,{children:"(dotimes (i x x) ;[4]"}),"\n",(0,r.jsx)(n.p,{children:"(declare (special x))))) ;[5]"}),"\n",(0,r.jsx)(n.p,{children:"\u2192 1"}),"\n",(0,r.jsxs)(n.p,{children:["In this example, the first reference to x on the fourth line is to the ",(0,r.jsx)(n.em,{children:"lexical binding"})," of x established on the third line. However, the second occurrence of x on the fourth line lies within the ",(0,r.jsx)(n.em,{children:"scope"})," of the ",(0,r.jsx)(n.em,{children:"free declaration"})," on the fifth line (because this is the ",(0,r.jsx)(n.em,{children:"result-form"})," of the ",(0,r.jsx)(n.strong,{children:"dotimes"}),") and therefore refers to the ",(0,r.jsx)(n.em,{children:"dynamic binding"})," of x."]})]})}function g(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}const b={title:"3.3 Declarations"},y="3.3 Declarations",v={id:"chap-3/d-d-declarations",title:"3.3 Declarations",description:"3.3.1 Minimal Declaration Processing Requirements",source:"@site/docs/chap-3/d-d-declarations.md",sourceDirName:"chap-3",slug:"/chap-3/d-d-declarations",permalink:"/cl-language-reference/docs/chap-3/d-d-declarations",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-3/d-d-declarations.md",tags:[],version:"current",frontMatter:{title:"3.3 Declarations"},sidebar:"tutorialSidebar",previous:{title:"3.2 Compilation",permalink:"/cl-language-reference/docs/chap-3/d-c-compilation"},next:{title:"3.4 Lambda Lists",permalink:"/cl-language-reference/docs/chap-3/d-e-lambda-lists"}},w={},D=[{value:"3.3.1 Minimal Declaration Processing Requirements",id:"331-minimal-declaration-processing-requirements",level:2},{value:"3.3.2 Declaration Specifiers",id:"332-declaration-specifiers",level:2},{value:"3.3.3 Declaration Identifiers",id:"333-declaration-identifiers",level:2},{value:"3.3.3.1 Shorthand notation for Type Declarations",id:"3331-shorthand-notation-for-type-declarations",level:3},{value:"3.3.4 Declaration Scope",id:"334-declaration-scope",level:2},{value:"3.3.4.1 Examples of Declaration Scope",id:"3341-examples-of-declaration-scope",level:3}];function F(e){const n={h1:"h1",h2:"h2",h3:"h3",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"33-declarations",children:"3.3 Declarations"}),"\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"331-minimal-declaration-processing-requirements",children:"3.3.1 Minimal Declaration Processing Requirements"}),"\n","\n",(0,r.jsx)(l,{}),"\n",(0,r.jsx)(n.h2,{id:"332-declaration-specifiers",children:"3.3.2 Declaration Specifiers"}),"\n","\n",(0,r.jsx)(d,{}),"\n",(0,r.jsx)(n.h2,{id:"333-declaration-identifiers",children:"3.3.3 Declaration Identifiers"}),"\n","\n",(0,r.jsx)(x,{}),"\n",(0,r.jsx)(n.h3,{id:"3331-shorthand-notation-for-type-declarations",children:"3.3.3.1 Shorthand notation for Type Declarations"}),"\n","\n",(0,r.jsx)(j,{}),"\n",(0,r.jsx)(n.h2,{id:"334-declaration-scope",children:"3.3.4 Declaration Scope"}),"\n","\n",(0,r.jsx)(f,{}),"\n",(0,r.jsx)(n.h3,{id:"3341-examples-of-declaration-scope",children:"3.3.4.1 Examples of Declaration Scope"}),"\n","\n","\n",(0,r.jsx)(g,{})]})}function T(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(F,{...e})}):F(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>c});var r=i(67294);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);