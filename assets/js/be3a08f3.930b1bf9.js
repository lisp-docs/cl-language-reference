"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[20107],{83782:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var i=r(85893),s=r(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"parse-integer"})," ",(0,i.jsx)(r,{styled:!0,term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"parse-integer",children:(0,i.jsx)("b",{children:"parse-integer"})})," ",(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})})," &key ",(0,i.jsx)(n.em,{children:"start end radix junk-allowed \u2192 integer, pos"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})}),"\u2014a ",(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"start"}),", ",(0,i.jsx)(n.em,{children:"end"}),"\u2014",(0,i.jsx)(n.em,{children:"bounding index designators"})," of ",(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})}),". The defaults for ",(0,i.jsx)(n.em,{children:"start"})," and ",(0,i.jsx)(n.em,{children:"end"})," are 0 and ",(0,i.jsx)(r,{styled:!0,term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),", respectively."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"radix",children:(0,i.jsx)("i",{children:"radix"})}),"\u2014a ",(0,i.jsx)(r,{styled:!0,term:"radix",children:(0,i.jsx)("i",{children:"radix"})})," . The default is 10."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"junk-allowed"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,i.jsx)(r,{styled:!0,term:"false",children:(0,i.jsx)("i",{children:"false"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"integer"}),"\u2014an ",(0,i.jsx)(n.em,{children:"integer"})," or ",(0,i.jsx)(r,{styled:!0,term:"false",children:(0,i.jsx)("i",{children:"false"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pos"}),"\u2014a ",(0,i.jsx)(n.em,{children:"bounding index"})," of ",(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"parse-integer",children:(0,i.jsx)("b",{children:"parse-integer"})})," parses an ",(0,i.jsx)(n.em,{children:"integer"})," in the specified ",(0,i.jsx)(r,{styled:!0,term:"radix",children:(0,i.jsx)("i",{children:"radix"})})," from the substring of ",(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})})," delimited by ",(0,i.jsx)(n.em,{children:"start"})," and ",(0,i.jsx)(n.em,{children:"end"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"parse-integer",children:(0,i.jsx)("b",{children:"parse-integer"})})," expects an optional sign (+ or -) followed by a a non-empty sequence of digits to be interpreted in the specified ",(0,i.jsx)(r,{styled:!0,term:"radix",children:(0,i.jsx)("i",{children:"radix"})}),". Optional leading and trailing ",(0,i.jsx)(r,{styled:!0,term:"whitespace",children:(0,i.jsx)("i",{children:"whitespace"})}),(0,i.jsx)("sub",{children:"1"})," is ignored."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"parse-integer",children:(0,i.jsx)("b",{children:"parse-integer"})})," does not recognize the syntactic radix-specifier prefixes #O, #B, #X, and #",(0,i.jsx)(n.em,{children:"n"}),"R, nor does it recognize a trailing decimal point."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"junk-allowed"})," is ",(0,i.jsx)(r,{styled:!0,term:"false",children:(0,i.jsx)("i",{children:"false"})}),", an error of ",(0,i.jsx)(r,{styled:!0,term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(r,{styled:!0,term:"parse-error",children:(0,i.jsx)("b",{children:"parse-error"})})," is signaled if substring does not consist entirely of the representation of a signed ",(0,i.jsx)(n.em,{children:"integer"})," , possibly surrounded on either side by ",(0,i.jsx)(r,{styled:!0,term:"whitespace",children:(0,i.jsx)("i",{children:"whitespace"})}),(0,i.jsx)("sub",{children:"1"})," ",(0,i.jsx)(r,{styled:!0,term:"character",children:(0,i.jsx)("i",{children:"characters"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The first ",(0,i.jsx)(r,{styled:!0,term:"value",children:(0,i.jsx)("i",{children:"value"})})," returned is either the ",(0,i.jsx)(n.em,{children:"integer"})," that was parsed, or else ",(0,i.jsx)(r,{styled:!0,term:"nil",children:(0,i.jsx)("b",{children:"nil"})})," if no syntactically correct ",(0,i.jsx)(n.em,{children:"integer"})," was seen but ",(0,i.jsx)(n.em,{children:"junk-allowed"})," was ",(0,i.jsx)(r,{styled:!0,term:"true",children:(0,i.jsx)("i",{children:"true"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The second ",(0,i.jsx)(r,{styled:!0,term:"value",children:(0,i.jsx)("i",{children:"value"})})," is either the index into the ",(0,i.jsx)(r,{styled:!0,term:"string",children:(0,i.jsx)("i",{children:"string"})})," of the delimiter that terminated the parse, or the upper ",(0,i.jsx)(n.em,{children:"bounding index"})," of the substring if the parse terminated at the end of the substring (as is always the case if ",(0,i.jsx)(n.em,{children:"junk-allowed"})," is ",(0,i.jsx)(r,{styled:!0,term:"false",children:(0,i.jsx)("i",{children:"false"})}),")."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:'\n(parse-integer "123") \u2192 123, 3 \n(parse-integer "123" :start 1 :radix 5) \u2192 13, 3 \n(parse-integer "no-integer" :junk-allowed t) \u2192 NIL, 0 \n\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"junk-allowed"})," is ",(0,i.jsx)(r,{styled:!0,term:"false",children:(0,i.jsx)("i",{children:"false"})}),", an error is signaled if substring does not consist entirely of the representation of an ",(0,i.jsx)(n.em,{children:"integer"})," , possibly surrounded on either side by ",(0,i.jsx)(r,{styled:!0,term:"whitespace",children:(0,i.jsx)("i",{children:"whitespace"})}),(0,i.jsx)("sub",{children:"1"})," characters."]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}const c={title:"parse-integer"},l="parse-integer",a={id:"chap-12/bc-c-dictionary/parse-integer_function",title:"parse-integer",description:"Expanded Reference: parse-integer",source:"@site/docs/chap-12/bc-c-dictionary/parse-integer_function.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/parse-integer_function",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/parse-integer_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/parse-integer_function.md",tags:[],version:"current",frontMatter:{title:"parse-integer"},sidebar:"tutorialSidebar",previous:{title:"1+, 1",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/oneplus_one_function"},next:{title:"phase",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/phase_function"}},h={},o=[{value:"Expanded Reference: parse-integer",id:"expanded-reference-parse-integer",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"parse-integer",children:"parse-integer"}),"\n","\n","\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-parse-integer",children:"Expanded Reference: parse-integer"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(parse-integer )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>d});var i=r(67294);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);