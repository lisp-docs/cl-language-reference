"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[75480],{38093:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var i=t(85893),r=t(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"method"})," ",(0,i.jsx)(n.em,{children:"System Class"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("b",{children:"method"})}),", ",(0,i.jsx)(t,{term:"t",children:(0,i.jsx)("b",{children:"t"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," is an ",(0,i.jsx)(t,{term:"object",children:(0,i.jsx)("i",{children:"object"})})," that represents a modular part of the behavior of a ",(0,i.jsx)(n.em,{children:"generic function"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," contains ",(0,i.jsx)(t,{term:"code",children:(0,i.jsx)("i",{children:"code"})})," to implement the ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"method"})}),"\u2019s behavior, a sequence of ",(0,i.jsx)(n.em,{children:"parameter specializers"})," that specify when the given ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," is applicable, and a sequence of ",(0,i.jsx)(t,{term:"qualifier",children:(0,i.jsx)("i",{children:"qualifiers"})})," that is used by the method combination facility to distinguish among ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"methods"})}),". Each required parameter of each ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," has an associated ",(0,i.jsx)(n.em,{children:"parameter specializer"})," , and the ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," will be invoked only on arguments that satisfy its ",(0,i.jsx)(n.em,{children:"parameter specializers"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The method combination facility controls the selection of ",(0,i.jsx)(t,{term:"method",children:(0,i.jsx)("i",{children:"methods"})}),", the order in which they are run, and the values that are returned by the generic function. The object system offers a default method combination type and provides a facility for declaring new types of method combination."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:"Section 7.6 (Generic Functions and Methods)"})]})}function o(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}const c={title:"method"},d="method",a={id:"chap-4/e-e-dictionary/method_system-class",title:"method",description:"Expanded Reference: method",source:"@site/docs/chap-4/e-e-dictionary/method_system-class.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/method_system-class",permalink:"/cl-language-reference/chap-4/e-e-dictionary/method_system-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-4/e-e-dictionary/method_system-class.md",tags:[],version:"current",frontMatter:{title:"method"},sidebar:"tutorialSidebar",previous:{title:"method-combination",permalink:"/cl-language-reference/chap-4/e-e-dictionary/method-combination_system-class"},next:{title:"nil",permalink:"/cl-language-reference/chap-4/e-e-dictionary/nil_type"}},h={},l=[{value:"Expanded Reference: method",id:"expanded-reference-method",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"method",children:"method"}),"\n","\n","\n",(0,i.jsx)(o,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-method",children:"Expanded Reference: method"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(method )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var i=t(67294);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);