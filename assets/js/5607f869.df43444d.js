"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[80914],{93088:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>w,contentTitle:()=>v,default:()=>k,frontMatter:()=>b,metadata:()=>y,toc:()=>C});var t=n(85893),r=n(11151);function i(e){const s={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.em,{children:"cons"})," is a compound data ",(0,t.jsx)(s.em,{children:"object"})," having two components called the ",(0,t.jsx)(s.em,{children:"car"})," and the ",(0,t.jsx)(s.em,{children:"cdr"})," ."]}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsx)(s.tr,{children:(0,t.jsxs)(s.th,{style:{textAlign:"left"},children:["<p>",(0,t.jsx)(s.strong,{children:"car cons rplacd"})," </p><p>",(0,t.jsx)(s.strong,{children:"cdr rplaca"}),"</p>"]})})})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Figure 14\u20131. Some defined names relating to conses."})}),"\n",(0,t.jsxs)(s.p,{children:["Depending on context, a group of connected ",(0,t.jsx)(s.em,{children:"conses"})," can be viewed in a variety of different ways. A variety of operations is provided to support each of these various views."]})]})}function c(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}function a(e){const s={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.em,{children:"tree"})," is a binary recursive data structure made up of ",(0,t.jsx)(s.em,{children:"conses"})," and ",(0,t.jsx)(s.em,{children:"atoms"}),": the ",(0,t.jsx)(s.em,{children:"conses"})," are themselves also ",(0,t.jsx)(s.em,{children:"trees"})," (sometimes called \u201csubtrees\u201d or \u201cbranches\u201d), and the ",(0,t.jsx)(s.em,{children:"atoms"})," are terminal nodes (sometimes called ",(0,t.jsx)(s.em,{children:"leaves"}),"). Typically, the ",(0,t.jsx)(s.em,{children:"leaves"})," represent data while the branches establish some relationship among that data."]}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsx)(s.tr,{children:(0,t.jsxs)(s.th,{style:{textAlign:"left"},children:["<p>",(0,t.jsx)(s.strong,{children:"caaaar caddar cdar nsubst"})," </p><p>",(0,t.jsx)(s.strong,{children:"caaadr cadddr cddaar nsubst-if"})," </p><p>",(0,t.jsx)(s.strong,{children:"caaar caddr cddadr nsubst-if-not caadar cadr cddar nthcdr"})," </p><p>",(0,t.jsx)(s.strong,{children:"caaddr cdaaar cdddar sublis"})," </p><p>",(0,t.jsx)(s.strong,{children:"caadr cdaadr cddddr subst"})," </p><p>",(0,t.jsx)(s.strong,{children:"caar cdaar cdddr subst-if"})," </p><p>",(0,t.jsx)(s.strong,{children:"cadaar cdadar cddr subst-if-not cadadr cdaddr copy-tree tree-equal cadar cdadr nsublis"}),"</p>"]})})})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Figure 14\u20132. Some defined names relating to trees."})})]})}function o(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}function d(e){const s={em:"em",p:"p",...(0,r.a)(),...e.components};return(0,t.jsxs)(s.p,{children:["Except as explicitly stated otherwise, for any ",(0,t.jsx)(s.em,{children:"standardized function"})," that takes a ",(0,t.jsx)(s.em,{children:"parameter"})," that is required to be a ",(0,t.jsx)(s.em,{children:"tree"}),", the consequences are undefined if that ",(0,t.jsx)(s.em,{children:"tree"})," is circular."]})}function l(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function h(e){const s={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.em,{children:"list"})," is a chain of ",(0,t.jsx)(s.em,{children:"conses"})," in which the ",(0,t.jsx)(s.em,{children:"car"})," of each ",(0,t.jsx)(s.em,{children:"cons"})," is an ",(0,t.jsx)(s.em,{children:"element"})," of the ",(0,t.jsx)(s.em,{children:"list"}),", and the ",(0,t.jsx)(s.em,{children:"cdr"})," of each ",(0,t.jsx)(s.em,{children:"cons"})," is either the next link in the chain or a terminating ",(0,t.jsx)(s.em,{children:"atom"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.em,{children:"proper list"})," is a ",(0,t.jsx)(s.em,{children:"list"})," terminated by the ",(0,t.jsx)(s.em,{children:"empty list"}),". The ",(0,t.jsx)(s.em,{children:"empty list"})," is a ",(0,t.jsx)(s.em,{children:"proper list"}),", but is not a ",(0,t.jsx)(s.em,{children:"cons"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["An ",(0,t.jsx)(s.em,{children:"improper list"})," is a ",(0,t.jsx)(s.em,{children:"list"})," that is not a ",(0,t.jsx)(s.em,{children:"proper list"}),"; that is, it is a ",(0,t.jsx)(s.em,{children:"circular list"})," or a ",(0,t.jsx)(s.em,{children:"dotted list"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.em,{children:"dotted list"})," is a ",(0,t.jsx)(s.em,{children:"list"})," that has a terminating ",(0,t.jsx)(s.em,{children:"atom"})," that is not the ",(0,t.jsx)(s.em,{children:"empty list"}),". A ",(0,t.jsx)(s.em,{children:"non-nil atom"})," by itself is not considered to be a ",(0,t.jsx)(s.em,{children:"list"})," of any kind\u2014not even a ",(0,t.jsx)(s.em,{children:"dotted list"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.em,{children:"circular list"})," is a chain of ",(0,t.jsx)(s.em,{children:"conses"})," that has no termination because some ",(0,t.jsx)(s.em,{children:"cons"})," in the chain is the ",(0,t.jsx)(s.em,{children:"cdr"})," of a later ",(0,t.jsx)(s.em,{children:"cons"}),"."]}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsx)(s.tr,{children:(0,t.jsxs)(s.th,{style:{textAlign:"left"},children:["<p>",(0,t.jsx)(s.strong,{children:"append last nbutlast rest"})," </p><p>",(0,t.jsx)(s.strong,{children:"butlast ldiff nconc revappend copy-alist list ninth second copy-list list* nreconc seventh eighth list-length nth sixth endp make-list nthcdr tailp"})," </p><p>",(0,t.jsx)(s.strong,{children:"fifth member pop tenth first member-if push third fourth member-if-not pushnew"}),"</p>"]})})})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Figure 14\u20133. Some defined names relating to lists."})})]})}function p(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function m(e){const s={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["An ",(0,t.jsx)(s.em,{children:"association list"})," is a ",(0,t.jsx)(s.em,{children:"list"})," of ",(0,t.jsx)(s.em,{children:"conses"})," representing an association of ",(0,t.jsx)(s.em,{children:"keys"})," with ",(0,t.jsx)(s.em,{children:"values"}),", where the ",(0,t.jsx)(s.em,{children:"car"})," of each ",(0,t.jsx)(s.em,{children:"cons"})," is the ",(0,t.jsx)(s.em,{children:"key"})," and the ",(0,t.jsx)(s.em,{children:"cdr"})," is the ",(0,t.jsx)(s.em,{children:"value"})," associated with that ",(0,t.jsx)(s.em,{children:"key"}),"."]}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsx)(s.tr,{children:(0,t.jsxs)(s.th,{style:{textAlign:"left"},children:["<p>",(0,t.jsx)(s.strong,{children:"acons assoc-if pairlis rassoc-if"})," </p><p>",(0,t.jsx)(s.strong,{children:"assoc assoc-if-not rassoc rassoc-if-not"}),"</p>"]})})})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Figure 14\u20134. Some defined names related to assocation lists."})})]})}function x(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}function j(e){const s={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"Lists"})," are sometimes viewed as sets by considering their elements unordered and by assuming there is no duplication of elements."]}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsx)(s.tr,{children:(0,t.jsxs)(s.th,{style:{textAlign:"left"},children:["<p>",(0,t.jsx)(s.strong,{children:"adjoin nset-difference set-difference union intersection nset-exclusive-or set-exclusive-or"})," </p><p>",(0,t.jsx)(s.strong,{children:"nintersection nunion subsetp"}),"</p>"]})})})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Figure 14\u20135. Some defined names related to sets."})})]})}function u(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}function f(e){const s={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["Except as explicitly specified otherwise, any ",(0,t.jsx)(s.em,{children:"standardized function"})," that takes a ",(0,t.jsx)(s.em,{children:"parameter"})," that is required to be a ",(0,t.jsx)(s.em,{children:"list"})," should be prepared to signal an error of ",(0,t.jsx)(s.em,{children:"type"})," ",(0,t.jsx)(s.strong,{children:"type-error"})," if the ",(0,t.jsx)(s.em,{children:"value"})," received is a ",(0,t.jsx)(s.em,{children:"dotted list"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Except as explicitly specified otherwise, for any ",(0,t.jsx)(s.em,{children:"standardized function"})," that takes a ",(0,t.jsx)(s.em,{children:"parameter"})," that is required to be a ",(0,t.jsx)(s.em,{children:"list"}),", the consequences are undefined if that ",(0,t.jsx)(s.em,{children:"list"})," is ",(0,t.jsx)(s.em,{children:"circular"})," ."]})]})}function g(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}const b={title:"14.1 Cons Concepts"},v="14.1 Cons Concepts",y={id:"chap-14/be-b-cons-concepts",title:"14.1 Cons Concepts",description:"14.1.1 Conses as Trees",source:"@site/docs/chap-14/be-b-cons-concepts.md",sourceDirName:"chap-14",slug:"/chap-14/be-b-cons-concepts",permalink:"/cl-language-reference/docs/chap-14/be-b-cons-concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-b-cons-concepts.md",tags:[],version:"current",frontMatter:{title:"14.1 Cons Concepts"},sidebar:"tutorialSidebar",previous:{title:"14. Conses",permalink:"/cl-language-reference/docs/category/14-conses"},next:{title:"14.2 Conses Dictionary",permalink:"/cl-language-reference/docs/category/142-conses-dictionary"}},w={},C=[{value:"14.1.1 Conses as Trees",id:"1411-conses-as-trees",level:2},{value:"14.1.1.1 General Restrictions on Parameters that must be Trees",id:"14111-general-restrictions-on-parameters-that-must-be-trees",level:3},{value:"14.1.2 Conses as Lists",id:"1412-conses-as-lists",level:2},{value:"14.1.2.1 Lists as Association Lists",id:"14121-lists-as-association-lists",level:3},{value:"14.1.2.2 Lists as Sets",id:"14122-lists-as-sets",level:3},{value:"14.1.2.3 General Restrictions on Parameters that must be Lists",id:"14123-general-restrictions-on-parameters-that-must-be-lists",level:3}];function A(e){const s={h1:"h1",h2:"h2",h3:"h3",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"141-cons-concepts",children:"14.1 Cons Concepts"}),"\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(s.h2,{id:"1411-conses-as-trees",children:"14.1.1 Conses as Trees"}),"\n","\n",(0,t.jsx)(o,{}),"\n",(0,t.jsx)(s.h3,{id:"14111-general-restrictions-on-parameters-that-must-be-trees",children:"14.1.1.1 General Restrictions on Parameters that must be Trees"}),"\n","\n",(0,t.jsx)(l,{}),"\n",(0,t.jsx)(s.h2,{id:"1412-conses-as-lists",children:"14.1.2 Conses as Lists"}),"\n","\n",(0,t.jsx)(p,{}),"\n",(0,t.jsx)(s.h3,{id:"14121-lists-as-association-lists",children:"14.1.2.1 Lists as Association Lists"}),"\n","\n",(0,t.jsx)(x,{}),"\n",(0,t.jsx)(s.h3,{id:"14122-lists-as-sets",children:"14.1.2.2 Lists as Sets"}),"\n","\n",(0,t.jsx)(u,{}),"\n",(0,t.jsx)(s.h3,{id:"14123-general-restrictions-on-parameters-that-must-be-lists",children:"14.1.2.3 General Restrictions on Parameters that must be Lists"}),"\n","\n","\n",(0,t.jsx)(g,{})]})}function k(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(A,{...e})}):A(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>c});var t=n(67294);const r={},i=t.createContext(r);function c(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);