"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[57295],{46671:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>a,toc:()=>o});var t=n(85893),r=n(11151);function c(e){const s={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"typecase, ctypecase, etypecase"})," ",(0,t.jsx)(n,{styled:!0,term:"macro",children:(0,t.jsx)("i",{children:"Macro"})})]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})})," ",(0,t.jsx)(s.em,{children:"keyform {\u2193normal-clause}"}),"* [",(0,t.jsx)(s.em,{children:"\u2193otherwise-clause"}),"] \u2192 {result}*"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})})," ",(0,t.jsx)(s.em,{children:"keyplace {\u2193normal-clause}"}),"* \u2192 {result}*"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"typecase, ctypecase, etypecase"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})})," ",(0,t.jsx)(s.em,{children:"keyform {\u2193normal-clause}"}),"* \u2192 {result}*"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"normal-clause::"}),"=(",(0,t.jsx)(s.em,{children:"type {form}"}),"*)"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"otherwise-clause::"}),"=(",(0,t.jsx)(s.em,{children:"{otherwise | t} {form}"}),"*)"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"clause::"}),"=",(0,t.jsx)(s.em,{children:"normal-clause | otherwise-clause"})]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"keyform"}),"\u2014a ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"form"})}),"; evaluated to produce a ",(0,t.jsx)(s.em,{children:"test-key"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"keyplace"}),"\u2014a ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"form"})}),"; evaluated initially to produce a ",(0,t.jsx)(s.em,{children:"test-key"}),". Possibly also used later as a ",(0,t.jsx)(n,{styled:!0,term:"place",children:(0,t.jsx)("i",{children:"place"})})," if no ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"types"})})," match."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"test-key"}),"\u2014an object produced by evaluating ",(0,t.jsx)(s.em,{children:"keyform"})," or ",(0,t.jsx)(s.em,{children:"keyplace"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})}),"\u2014a ",(0,t.jsx)(s.em,{children:"type specifier"})," ."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"forms"})}),"\u2014an ",(0,t.jsx)(s.em,{children:"implicit progn"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"results"}),"\u2014the ",(0,t.jsx)(n,{styled:!0,term:"value",children:(0,t.jsx)("i",{children:"values"})})," returned by the ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"forms"})})," in the matching ",(0,t.jsx)(s.em,{children:"clause"}),"."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(s.p,{children:["These ",(0,t.jsx)(n,{styled:!0,term:"macro",children:(0,t.jsx)("i",{children:"macros"})})," allow the conditional execution of a body of ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"forms"})})," in a ",(0,t.jsx)(s.em,{children:"clause"})," that is selected by matching the ",(0,t.jsx)(s.em,{children:"test-key"})," on the basis of its ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.em,{children:"keyform"})," or ",(0,t.jsx)(s.em,{children:"keyplace"})," is ",(0,t.jsx)(s.em,{children:"evaluated"})," to produce the ",(0,t.jsx)(s.em,{children:"test-key"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Each of the ",(0,t.jsx)(s.em,{children:"normal-clauses"})," is then considered in turn. If the ",(0,t.jsx)(s.em,{children:"test-key"})," is of the ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," given by the ",(0,t.jsx)(s.em,{children:"clauses"}),"\u2019s ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})}),", the ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"forms"})})," in that ",(0,t.jsx)(s.em,{children:"clause"})," are ",(0,t.jsx)(s.em,{children:"evaluated"})," as an ",(0,t.jsx)(s.em,{children:"implicit progn"}),", and the ",(0,t.jsx)(n,{styled:!0,term:"value",children:(0,t.jsx)("i",{children:"values"})})," it returns are returned as the value of the ",(0,t.jsx)(n,{styled:!0,term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})}),", ",(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})}),", or ",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})})," ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"form"})}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["These ",(0,t.jsx)(n,{styled:!0,term:"macro",children:(0,t.jsx)("i",{children:"macros"})})," differ only in their ",(0,t.jsx)(s.em,{children:"behavior"})," when no ",(0,t.jsx)(s.em,{children:"normal-clause"})," matches; specifically:"]}),"\n",(0,t.jsx)(n,{styled:!0,term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})}),"\n",(0,t.jsxs)(s.p,{children:["If no ",(0,t.jsx)(s.em,{children:"normal-clause"})," matches, and there is an ",(0,t.jsx)(s.em,{children:"otherwise-clause"}),", then that ",(0,t.jsx)(s.em,{children:"otherwise-clause"})," automatically matches; the ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"forms"})})," in that ",(0,t.jsx)(s.em,{children:"clause"})," are ",(0,t.jsx)(s.em,{children:"evaluated"})," as an ",(0,t.jsx)(s.em,{children:"implicit progn"}),", and the ",(0,t.jsx)(n,{styled:!0,term:"value",children:(0,t.jsx)("i",{children:"values"})})," it returns are returned as the value of the ",(0,t.jsx)(n,{styled:!0,term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["If there is no ",(0,t.jsx)(s.em,{children:"otherwise-clause"}),", ",(0,t.jsx)(n,{styled:!0,term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})})," returns ",(0,t.jsx)(n,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})}),"\n",(0,t.jsxs)(s.p,{children:["If no ",(0,t.jsx)(s.em,{children:"normal-clause"})," matches, a ",(0,t.jsx)(s.em,{children:"correctable error"})," of ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(n,{styled:!0,term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," is signaled. The offending datum is the ",(0,t.jsx)(s.em,{children:"test-key"})," and the expected type is ",(0,t.jsx)(s.em,{children:"type equivalent"})," to (or ",(0,t.jsx)(s.em,{children:"type1 type2"})," ...). The ",(0,t.jsx)(s.strong,{children:"store-value"})," ",(0,t.jsx)(n,{styled:!0,term:"restart",children:(0,t.jsx)("i",{children:"restart"})})," can be used to correct the error."]}),"\n",(0,t.jsxs)(s.p,{children:["If the ",(0,t.jsx)(s.strong,{children:"store-value"})," ",(0,t.jsx)(n,{styled:!0,term:"restart",children:(0,t.jsx)("i",{children:"restart"})})," is invoked, its ",(0,t.jsx)(n,{styled:!0,term:"argument",children:(0,t.jsx)("i",{children:"argument"})})," becomes the new ",(0,t.jsx)(s.em,{children:"test-key"}),", and is stored Data and Control"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"typecase, ctypecase, etypecase"})}),"\n",(0,t.jsxs)(s.p,{children:["in ",(0,t.jsx)(s.em,{children:"keyplace"})," as if by (setf ",(0,t.jsx)(s.em,{children:"keyplace test-key"}),"). Then ",(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})})," starts over, considering each ",(0,t.jsx)(s.em,{children:"clause"})," anew."]}),"\n",(0,t.jsxs)(s.p,{children:["If the ",(0,t.jsx)(s.strong,{children:"store-value"})," ",(0,t.jsx)(n,{styled:!0,term:"restart",children:(0,t.jsx)("i",{children:"restart"})})," is invoked interactively, the user is prompted for a new ",(0,t.jsx)(s.em,{children:"test-key"})," to use."]}),"\n",(0,t.jsxs)(s.p,{children:["The subforms of ",(0,t.jsx)(s.em,{children:"keyplace"})," might be evaluated again if none of the cases holds."]}),"\n",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})}),"\n",(0,t.jsxs)(s.p,{children:["If no ",(0,t.jsx)(s.em,{children:"normal-clause"})," matches, a ",(0,t.jsx)(s.em,{children:"non-correctable error"})," of ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(n,{styled:!0,term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," is signaled. The offending datum is the ",(0,t.jsx)(s.em,{children:"test-key"})," and the expected type is ",(0,t.jsx)(s.em,{children:"type equivalent"})," to (or ",(0,t.jsx)(s.em,{children:"type1 type2"})," ...)."]}),"\n",(0,t.jsxs)(s.p,{children:["Note that in contrast with ",(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})}),", the caller of ",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})})," may rely on the fact that ",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})})," does not return if a ",(0,t.jsx)(s.em,{children:"normal-clause"})," does not match."]}),"\n",(0,t.jsxs)(s.p,{children:["In all three cases, is permissible for more than one ",(0,t.jsx)(s.em,{children:"clause"})," to specify a matching ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})}),", particularly if one is a ",(0,t.jsx)(n,{styled:!0,term:"subtype",children:(0,t.jsx)("i",{children:"subtype"})})," of another; the earliest applicable ",(0,t.jsx)(s.em,{children:"clause"})," is chosen."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-lisp",children:'\n;;; (Note that the parts of this example which use TYPE-OF \n;;; are implementation-dependent.) \n(defun what-is-it (x) \n  (format t "~&~S is ~A.~%" \n\t  x (typecase x \n\t      (float "a float") \n\t      (null "a symbol, boolean false, or the empty list") \n\t      (list "a list") \n\t      (t (format nil "a(n) ~(~A~)" (type-of x)))))) \n\u2192 WHAT-IS-IT \n(map \u2019nil #\u2019what-is-it \u2019(nil (a b) 7.0 7 box)) \n\u25b7 NIL is a symbol, boolean false, or the empty list. \n\u25b7 (A B) is a list. \n\u25b7 7.0 is a float. \n\u25b7 7 is a(n) integer. \n\u25b7 BOX is a(n) symbol. \n\u2192 NIL \n(setq x 1/3) \n\u2192 1/3 \n(ctypecase x \n  (integer (\\* x 4)) \n  (symbol (symbol-value x))) \n\u25b7 Error: The value of X, 1/3, is neither an integer nor a symbol. \n\u25b7 To continue, type :CONTINUE followed by an option number: \n\u25b7 1: Specify a value to use instead. \n\n\n\n\u25b7 2: Return to Lisp Toplevel. \n\u25b7 Debug> :CONTINUE 1 \n\u25b7 Use value: 3.7 \n\u25b7 Error: The value of X, 3.7, is neither an integer nor a symbol. \n\u25b7 To continue, type :CONTINUE followed by an option number: \n\u25b7 1: Specify a value to use instead. \n\u25b7 2: Return to Lisp Toplevel. \n\u25b7 Debug> :CONTINUE 1 \n\u25b7 Use value: 12 \n*!* 48 \nx *!* 12 \n\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Aected By:"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})})," and ",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})}),", since they might signal an error, are potentially a\u21b5ected by existing ",(0,t.jsx)(n,{styled:!0,term:"handler",children:(0,t.jsx)("i",{children:"handlers"})})," and ",(0,t.jsx)(s.strong,{children:"*debug-io*"}),"."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})})," and ",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})})," signal an error of ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(n,{styled:!0,term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," if no ",(0,t.jsx)(s.em,{children:"normal-clause"})," matches."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(n,{styled:!0,term:"compiler",children:(0,t.jsx)("i",{children:"compiler"})})," may choose to issue a warning of ",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(n,{styled:!0,term:"style-warning",children:(0,t.jsx)("b",{children:"style-warning"})})," if a ",(0,t.jsx)(s.em,{children:"clause"})," will never be selected because it is completely shadowed by earlier clauses."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{styled:!0,term:"case",children:(0,t.jsx)("b",{children:"case"})}),", ",(0,t.jsx)(n,{styled:!0,term:"cond",children:(0,t.jsx)("b",{children:"cond"})}),", ",(0,t.jsx)(n,{styled:!0,term:"setf",children:(0,t.jsx)("b",{children:"setf"})}),", Section 5.1 (Generalized Reference)"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(s.p,{children:["(typecase ",(0,t.jsx)(s.em,{children:"test-key"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"{"}),"(",(0,t.jsx)(s.em,{children:"type {form}"}),"*)",(0,t.jsx)(s.em,{children:"}"}),"*)"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"\u2318"})}),"\n",(0,t.jsxs)(s.p,{children:["(let ((#1=#",":g0001"," ",(0,t.jsx)(s.em,{children:"test-key"}),"))"]}),"\n",(0,t.jsxs)(s.p,{children:["(cond ",(0,t.jsx)(s.em,{children:"{"}),"((typep #1# \u2019",(0,t.jsx)(n,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})}),") ",(0,t.jsx)(n,{styled:!0,term:"form",children:(0,t.jsx)("i",{children:"{form}"})}),"*)",(0,t.jsx)(s.em,{children:"}"}),"*))"]}),"\n",(0,t.jsxs)(s.p,{children:["The specific error message used by ",(0,t.jsx)(n,{styled:!0,term:"etypecase",children:(0,t.jsx)("b",{children:"etypecase"})})," and ",(0,t.jsx)(n,{styled:!0,term:"ctypecase",children:(0,t.jsx)("b",{children:"ctypecase"})})," can vary between implementations. In situations where control of the specific wording of the error message is important, it is better to use ",(0,t.jsx)(n,{styled:!0,term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})})," with an ",(0,t.jsx)(s.em,{children:"otherwise-clause"})," that explicitly signals an error with an appropriate message."]})]})}function i(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}const l={title:"typecase, ctypecase, etypecase"},d="typecase, ctypecase, etypecase",a={id:"chap-5/f-d-dictionary/typecase_ctypecase_etypecase_macro",title:"typecase, ctypecase, etypecase",description:"Expanded Reference: typecase, ctypecase, etypecase",source:"@site/docs/chap-5/f-d-dictionary/typecase_ctypecase_etypecase_macro.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/typecase_ctypecase_etypecase_macro",permalink:"/cl-language-reference/chap-5/f-d-dictionary/typecase_ctypecase_etypecase_macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/typecase_ctypecase_etypecase_macro.md",tags:[],version:"current",frontMatter:{title:"typecase, ctypecase, etypecase"},sidebar:"tutorialSidebar",previous:{title:"throw",permalink:"/cl-language-reference/chap-5/f-d-dictionary/throw_special-operator"},next:{title:"undefined-function",permalink:"/cl-language-reference/chap-5/f-d-dictionary/undefined-function_condition-type"}},h={},o=[{value:"Expanded Reference: typecase, ctypecase, etypecase",id:"expanded-reference-typecase-ctypecase-etypecase",level:2}];function p(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"typecase-ctypecase-etypecase",children:"typecase, ctypecase, etypecase"}),"\n","\n","\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(s.h2,{id:"expanded-reference-typecase-ctypecase-etypecase",children:"Expanded Reference: typecase, ctypecase, etypecase"}),"\n",(0,t.jsx)(s.admonition,{type:"tip",children:(0,t.jsx)(s.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-lisp",children:"(typecase, ctypecase, etypecase )\n"})})]})}function x(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>i});var t=n(67294);const r={},c=t.createContext(r);function i(e){const s=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);