"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[81552],{87567:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>a});var i=t(85893),r=t(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"simple-bit-vector"})," ",(0,i.jsx)(n.em,{children:"Type"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Supertypes:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"simple-bit-vector"}),", ",(0,i.jsx)(n.strong,{children:"bit-vector"}),", ",(0,i.jsx)(n.strong,{children:"vector"}),", ",(0,i.jsx)(n.strong,{children:"simple-array"}),", ",(0,i.jsx)(n.strong,{children:"array"}),", ",(0,i.jsx)(n.strong,{children:"sequence"}),", ",(0,i.jsx)(n.strong,{children:"t"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"type"})," of a ",(0,i.jsx)(n.em,{children:"bit vector"})," that is not displaced to another ",(0,i.jsx)(n.em,{children:"array"}),", has no ",(0,i.jsx)(n.em,{children:"fill pointer"})," , and is not ",(0,i.jsx)(n.em,{children:"expressly adjustable"})," is a ",(0,i.jsx)(n.em,{children:"subtype"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"simple-bit-vector"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,i.jsx)(n.p,{children:"Abbreviating."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:["(simple-bit-vector [",(0,i.jsx)(n.em,{children:"size"}),"])"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"size"}),"\u2014a non-negative ",(0,i.jsx)(n.em,{children:"fixnum"}),", or the ",(0,i.jsx)(n.em,{children:"symbol"})," ",(0,i.jsx)(n.strong,{children:"*"}),". The default is the ",(0,i.jsx)(n.em,{children:"symbol"})," ",(0,i.jsx)(n.strong,{children:"*"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["This denotes the same type as the ",(0,i.jsx)(n.em,{children:"type"})," (simple-array bit (",(0,i.jsx)(n.em,{children:"size"}),")); that is, the set of ",(0,i.jsx)(n.em,{children:"simple bit vectors"})," of size ",(0,i.jsx)(n.em,{children:"size"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}const o={title:"simple-bit-vector"},l="simple-bit-vector",p={id:"chap-15/bf-c-dictionary/simple-bit-vector_type",title:"simple-bit-vector",description:"Expanded Reference: simple-bit-vector",source:"@site/docs/chap-15/bf-c-dictionary/simple-bit-vector_type.md",sourceDirName:"chap-15/bf-c-dictionary",slug:"/chap-15/bf-c-dictionary/simple-bit-vector_type",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/simple-bit-vector_type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-c-dictionary/simple-bit-vector_type.md",tags:[],version:"current",frontMatter:{title:"simple-bit-vector"},sidebar:"tutorialSidebar",previous:{title:"simple-bit-vector-p",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/simple-bit-vector-p_function"},next:{title:"simple-vector-p",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/simple-vector-p_function"}},d={},a=[{value:"Expanded Reference: simple-bit-vector",id:"expanded-reference-simple-bit-vector",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"simple-bit-vector",children:"simple-bit-vector"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-simple-bit-vector",children:"Expanded Reference: simple-bit-vector"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(simple-bit-vector )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>c});var i=t(67294);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);