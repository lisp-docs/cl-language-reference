"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[16875],{86914:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>x,frontMatter:()=>o,metadata:()=>m,toc:()=>h});var s=r(85893),i=r(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:t}=n;return r||l("DictionaryLink",!0),t||l("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"make-symbol"})," ",(0,s.jsx)(t,{term:"function",children:(0,s.jsx)("i",{children:"Function"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(r,{term:"make-symbol",children:(0,s.jsx)("b",{children:"make-symbol"})})," ",(0,s.jsx)(n.em,{children:"name \u2192 new-symbol"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})}),"\u2014a ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"new-symbol"}),"\u2014a ",(0,s.jsx)(t,{term:"fresh",children:(0,s.jsx)("i",{children:"fresh"})}),", ",(0,s.jsx)(n.em,{children:"uninterned symbol"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(r,{term:"make-symbol",children:(0,s.jsx)("b",{children:"make-symbol"})})," creates and returns a ",(0,s.jsx)(t,{term:"fresh",children:(0,s.jsx)("i",{children:"fresh"})}),", ",(0,s.jsx)(n.em,{children:"uninterned symbol"})," whose ",(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})})," is the given ",(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})}),". The ",(0,s.jsx)(n.em,{children:"new-symbol"})," is neither ",(0,s.jsx)(t,{term:"bound",children:(0,s.jsx)("i",{children:"bound"})})," nor ",(0,s.jsx)(t,{term:"fbound",children:(0,s.jsx)("i",{children:"fbound"})})," and has a ",(0,s.jsx)(n.em,{children:"null property list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["It is ",(0,s.jsx)(t,{term:"implementation-dependent",children:(0,s.jsx)("i",{children:"implementation-dependent"})})," whether the ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})})," that becomes the ",(0,s.jsx)(n.em,{children:"new-symbol"}),"\u2019s ",(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})})," is the given ",(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})})," or a copy of it. Once a ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})})," has been given as the ",(0,s.jsx)(n.em,{children:"name argument"})," to ",(0,s.jsx)(n.em,{children:"make-symbol"}),", the consequences are undefined if a subsequent attempt is made to alter that ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:'(setq temp-string "temp") \u2192 "temp" \n(setq temp-symbol (make-symbol temp-string)) \u2192 #:|temp| \n(symbol-name temp-symbol) \u2192 "temp" \n(eq (symbol-name temp-symbol) temp-string) \u2192 implementation-dependent \n(find-symbol "temp") \u2192 NIL, NIL \n(eq (make-symbol temp-string) (make-symbol temp-string)) \u2192 false \n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["Should signal an error of ",(0,s.jsx)(t,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(r,{term:"type-error",children:(0,s.jsx)("b",{children:"type-error"})})," if ",(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})})," is not a ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsx)(r,{term:"copy-symbol",children:(0,s.jsx)("b",{children:"copy-symbol"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["No attempt is made by ",(0,s.jsx)(r,{term:"make-symbol",children:(0,s.jsx)("b",{children:"make-symbol"})})," to convert the case of the ",(0,s.jsx)(t,{term:"name",children:(0,s.jsx)("i",{children:"name"})})," to uppercase. The only case conversion which ever occurs for ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbols"})})," is done by the ",(0,s.jsx)(n.em,{children:"Lisp reader"})," . The program interface to ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," creation retains case, and the program interface to interning symbols is case-sensitive."]}),"\n",(0,s.jsx)(r,{term:"copy-symbol",children:(0,s.jsx)("b",{children:"copy-symbol"})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const o={title:"make-symbol"},a="make-symbol",m={id:"chap-10/ba-c-dictionary/make-symbol_function",title:"make-symbol",description:"Expanded Reference: make-symbol",source:"@site/docs/chap-10/ba-c-dictionary/make-symbol_function.md",sourceDirName:"chap-10/ba-c-dictionary",slug:"/chap-10/ba-c-dictionary/make-symbol_function",permalink:"/cl-language-reference/chap-10/ba-c-dictionary/make-symbol_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-10/ba-c-dictionary/make-symbol_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"make-symbol"},sidebar:"tutorialSidebar",previous:{title:"keywordp",permalink:"/cl-language-reference/chap-10/ba-c-dictionary/keywordp_function"},next:{title:"makunbound",permalink:"/cl-language-reference/chap-10/ba-c-dictionary/makunbound_function"}},d={},h=[{value:"Expanded Reference: make-symbol",id:"expanded-reference-make-symbol",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"make-symbol",children:"make-symbol"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-make-symbol",children:"Expanded Reference: make-symbol"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(make-symbol )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>c});var s=r(67294);const i={},t=s.createContext(i);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);