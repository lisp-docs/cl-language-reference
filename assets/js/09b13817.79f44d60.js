"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[44222],{20049:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var a=t(85893),s=t(11151);const c={},r="make-instance-standard-class",o={id:"meta-object-protocol/make-instance-standard-class",title:"make-instance-standard-class",description:"Method MAKE-INSTANCE",source:"@site/docs/meta-object-protocol/make-instance-standard-class.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/make-instance-standard-class",permalink:"/cl-language-reference/meta-object-protocol/make-instance-standard-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/make-instance-standard-class.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"make-instance-funcallable-standard-class",permalink:"/cl-language-reference/meta-object-protocol/make-instance-funcallable-standard-class"},next:{title:"make-instance-symbol",permalink:"/cl-language-reference/meta-object-protocol/make-instance-symbol"}},i={},l=[];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"make-instance-standard-class",children:"make-instance-standard-class"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Method"})," ",(0,a.jsx)(n.strong,{children:"MAKE-INSTANCE"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"make-instance"})," ",(0,a.jsx)(n.em,{children:"(class"})," standard-class) ",(0,a.jsx)(n.code,{children:"&rest"})," ",(0,a.jsx)(n.em,{children:"initargs"})," => ",(0,a.jsx)(n.em,{children:"instance"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Description:"})}),"\n",(0,a.jsxs)(n.p,{children:["This is a method on the generic function",(0,a.jsx)(n.a,{href:"/meta-object-protocol/make-instance",children:"make-instance"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["This method implements the behavior of ",(0,a.jsx)(n.a,{href:"/meta-object-protocol/make-instance",children:"make-instance"})," described in the ",(0,a.jsx)(n.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/07_a.htm",children:"CLOS specification section named ``Object Creation and Initialization.''"})]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var a=t(67294);const s={},c=a.createContext(s);function r(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);