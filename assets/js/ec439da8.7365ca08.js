"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[79526],{83304:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>j,frontMatter:()=>d,metadata:()=>a,toc:()=>o});var s=r(85893),t=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"write-byte"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"write-byte"})," ",(0,s.jsx)(n.em,{children:"byte stream \u2192 byte"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"byte"}),"\u2014an ",(0,s.jsx)(n.em,{children:"integer"})," of the ",(0,s.jsx)(n.em,{children:"stream element type"})," of ",(0,s.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"stream"}),"\u2014a ",(0,s.jsx)(n.em,{children:"binary output stream"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"write-byte"})," writes one byte, ",(0,s.jsx)(n.em,{children:"byte"}),", to ",(0,s.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:' \n\n(with-open-file (s "temp-bytes" \n\n:direction :output \n\n:element-type \u2019unsigned-byte) \n\n(write-byte 101 s)) \u2192 101 \n\n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"stream"})," is modified."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"element type"})," of the ",(0,s.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["Should signal an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"type-error"})," if ",(0,s.jsx)(n.em,{children:"stream"})," is not a ",(0,s.jsx)(n.em,{children:"stream"}),". Should signal an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"error"})," if ",(0,s.jsx)(n.em,{children:"stream"})," is not a ",(0,s.jsx)(n.em,{children:"binary output stream"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Might signal an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"type-error"})," if ",(0,s.jsx)(n.em,{children:"byte"})," is not an ",(0,s.jsx)(n.em,{children:"integer"})," of the ",(0,s.jsx)(n.em,{children:"stream element type"})," of ",(0,s.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"read-byte"}),", ",(0,s.jsx)(n.strong,{children:"write-char"}),", ",(0,s.jsx)(n.strong,{children:"write-sequence"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"peek-char"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"peek-char"})," ",(0,s.jsx)(n.em,{children:"Function"})," ",(0,s.jsx)(n.strong,{children:"Syntax:"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"peek-char"})," &optional ",(0,s.jsx)(n.em,{children:"peek-type input-stream eof-error-p eof-value recursive-p"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"peek-type"}),"\u2014a ",(0,s.jsx)(n.em,{children:"character"})," or ",(0,s.jsx)(n.strong,{children:"t"})," or ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"\u2192 char"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"input-stream"}),"\u2014",(0,s.jsx)(n.em,{children:"input stream designator"})," . The default is ",(0,s.jsx)(n.em,{children:"standard input"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"eof-error-p"}),"\u2014a ",(0,s.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,s.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"eof-value"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),". The default is ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"recursive-p"}),"\u2014a ",(0,s.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,s.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"char"}),"\u2014a ",(0,s.jsx)(n.em,{children:"character"})," or the ",(0,s.jsx)(n.em,{children:"eof-value"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"peek-char"})," obtains the next character in ",(0,s.jsx)(n.em,{children:"input-stream"})," without actually reading it, thus leaving the character to be read at a later time. It can also be used to skip over and discard intervening characters in the ",(0,s.jsx)(n.em,{children:"input-stream"})," until a particular character is found."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"peek-type"})," is not supplied or ",(0,s.jsx)(n.strong,{children:"nil"}),", ",(0,s.jsx)(n.strong,{children:"peek-char"})," returns the next character to be read from ",(0,s.jsx)(n.em,{children:"input-stream"}),", without actually removing it from ",(0,s.jsx)(n.em,{children:"input-stream"}),". The next time input is done from ",(0,s.jsx)(n.em,{children:"input-stream"}),", the character will still be there. If ",(0,s.jsx)(n.em,{children:"peek-type"})," is ",(0,s.jsx)(n.strong,{children:"t"}),", then ",(0,s.jsx)(n.strong,{children:"peek-char"})," skips over ",(0,s.jsx)(n.em,{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(n.em,{children:"characters"}),", but not comments, and then performs the peeking operation on the next character. The last character examined, the one that starts an ",(0,s.jsx)(n.em,{children:"object"}),", is not removed from ",(0,s.jsx)(n.em,{children:"input-stream"}),". If ",(0,s.jsx)(n.em,{children:"peek-type"})," is a ",(0,s.jsx)(n.em,{children:"character"})," , then ",(0,s.jsx)(n.strong,{children:"peek-char"})," skips over input characters until a character that is ",(0,s.jsx)(n.strong,{children:"char="})," to that ",(0,s.jsx)(n.em,{children:"character"})," is found; that character is left in ",(0,s.jsx)(n.em,{children:"input-stream"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If an ",(0,s.jsx)(n.em,{children:"end of file"}),(0,s.jsx)("sub",{children:"2"})," occurs and ",(0,s.jsx)(n.em,{children:"eof-error-p"})," is ",(0,s.jsx)(n.em,{children:"false"}),", ",(0,s.jsx)(n.em,{children:"eof-value"})," is returned."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"recursive-p"})," is ",(0,s.jsx)(n.em,{children:"true"}),", this call is expected to be embedded in a higher-level call to ",(0,s.jsx)(n.strong,{children:"read"})," or a similar ",(0,s.jsx)(n.em,{children:"function"})," used by the ",(0,s.jsx)(n.em,{children:"Lisp reader"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.em,{children:"input-stream"})," is an ",(0,s.jsx)(n.em,{children:"echo stream"}),", characters that are only peeked at are not echoed. In the case that ",(0,s.jsx)(n.em,{children:"peek-type"})," is not ",(0,s.jsx)(n.strong,{children:"nil"}),", the characters that are passed by ",(0,s.jsx)(n.strong,{children:"peek-char"})," are treated as if by ",(0,s.jsx)(n.strong,{children:"read-char"}),", and so are echoed unless they have been marked otherwise by ",(0,s.jsx)(n.strong,{children:"unread-char"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:' \n\n(with-input-from-string (input-stream " 1 2 3 4 5") \n\n(format t "&#126;S &#126;S &#126;S" \n\n(peek-char t input-stream) \n\n\n\n \n\n \n\n(peek-char #\\4 input-stream) \n\n(peek-char nil input-stream))) \n\n\u25b7 #\\1 #\\4 #\\4 \n\n\u2192 NIL \n\n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"*readtable*"}),", ",(0,s.jsx)(n.strong,{children:"*standard-input*"}),", ",(0,s.jsx)(n.strong,{children:"*terminal-io*"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"eof-error-p"})," is ",(0,s.jsx)(n.em,{children:"true"})," and an ",(0,s.jsx)(n.em,{children:"end of file"}),(0,s.jsx)("sub",{children:"2"})," occurs an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"end-of-file"})," is signaled."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"peek-type"})," is a ",(0,s.jsx)(n.em,{children:"character"})," , an ",(0,s.jsx)(n.em,{children:"end of file"}),(0,s.jsx)("sub",{children:"2"})," occurs, and ",(0,s.jsx)(n.em,{children:"eof-error-p"})," is ",(0,s.jsx)(n.em,{children:"true"}),", an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"end-of-file"})," is signaled."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"recursive-p"})," is ",(0,s.jsx)(n.em,{children:"true"})," and an ",(0,s.jsx)(n.em,{children:"end of file"}),(0,s.jsx)("sub",{children:"2"})," occurs, an error of ",(0,s.jsx)(n.em,{children:"type"})]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const d={},l="write-byte",a={id:"chap-21/cb-c-dictionary/writebyte",title:"write-byte",description:"Expanded Reference: write-byte",source:"@site/docs/chap-21/cb-c-dictionary/writebyte.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/writebyte",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/writebyte",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/writebyte.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"with-output-to-string",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/withoutputtostring"},next:{title:"write-char",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/writechar"}},h={},o=[{value:"Expanded Reference: write-byte",id:"expanded-reference-write-byte",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"write-byte",children:"write-byte"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-write-byte",children:"Expanded Reference: write-byte"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(write-byte )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>c});var s=r(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);