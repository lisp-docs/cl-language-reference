"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[31365],{43443:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>l,default:()=>j,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var s=n(85893),i=n(11151);function t(e){const r={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"array"})," ",(0,s.jsx)(r.em,{children:"System Class"})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Class Precedence List:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("b",{children:"array"})}),", ",(0,s.jsx)(n,{styled:!0,term:"t",children:(0,s.jsx)("b",{children:"t"})})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(r.p,{children:["An ",(0,s.jsx)("i",{children:"array"})," contains ",(0,s.jsx)("i",{children:"objects"})," arranged according to a Cartesian coordinate system. An ",(0,s.jsx)("i",{children:"array"})," provides mappings from a set of ",(0,s.jsx)("i",{children:"fixnums {i"}),(0,s.jsx)("sub",{children:"0"}),(0,s.jsx)("i",{children:", i"}),(0,s.jsx)("sub",{children:"1"}),(0,s.jsxs)("i",{children:[", . . . , i",(0,s.jsx)("sub",{children:"r\u2212"})]}),"1",(0,s.jsx)("i",{children:"}"})," to corresponding ",(0,s.jsx)("i",{children:"elements"})," of the ",(0,s.jsx)("i",{children:"array"}),", where 0 ",(0,s.jsxs)("i",{children:["\u2264 i",(0,s.jsx)("sub",{children:"j"})]})," < ",(0,s.jsxs)("i",{children:["d",(0,s.jsx)("sub",{children:"j"})]})," , ",(0,s.jsx)("i",{children:"r"})," is the rank of the array, and ",(0,s.jsxs)("i",{children:["d",(0,s.jsx)("sub",{children:"j"})]})," is the size of ",(0,s.jsx)("i",{children:"dimension j"})," of the array."]}),"\n",(0,s.jsxs)(r.p,{children:["When an ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"array"})})," is created, the program requesting its creation may declare that all ",(0,s.jsx)(n,{styled:!0,term:"element",children:(0,s.jsx)("i",{children:"elements"})})," are of a particular ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})}),", called the ",(0,s.jsx)(r.em,{children:"expressed array element type"}),". The implementation is permitted to ",(0,s.jsx)(n,{styled:!0,term:"upgrade",children:(0,s.jsx)("i",{children:"upgrade"})})," this type in order to produce the ",(0,s.jsx)(r.em,{children:"actual array element type"}),", which is the ",(0,s.jsx)(r.em,{children:"element type"})," for the ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"array"})})," is actually ",(0,s.jsx)(n,{styled:!0,term:"specialized",children:(0,s.jsx)("i",{children:"specialized"})}),". See the ",(0,s.jsx)(n,{styled:!0,term:"function",children:(0,s.jsx)("i",{children:"function"})})," ",(0,s.jsx)(n,{styled:!0,term:"upgraded-array-element-type",children:(0,s.jsx)("b",{children:"upgraded-array-element-type"})}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,s.jsx)(r.p,{children:"Specializing."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,s.jsxs)(r.p,{children:["(array [",(0,s.jsx)(r.em,{children:"{element-type |"})," ",(0,s.jsx)(r.strong,{children:"*"}),(0,s.jsx)(r.em,{children:"}"})," [",(0,s.jsx)(r.em,{children:"dimension-spec"}),"]])"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"dimension-spec::"}),"=",(0,s.jsx)(r.em,{children:"rank |"})," ",(0,s.jsx)(r.strong,{children:"*"})," ",(0,s.jsx)(r.em,{children:"|"})," (",(0,s.jsx)(r.em,{children:"{dimension |"})," ",(0,s.jsx)(r.strong,{children:"*"}),(0,s.jsx)(r.em,{children:"}"}),"*)"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimension"})}),"\u2014a ",(0,s.jsx)(r.em,{children:"valid array dimension"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"element-type"}),"\u2014a ",(0,s.jsx)(r.em,{children:"type specifier"})," ."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"rank",children:(0,s.jsx)("i",{children:"rank"})}),"\u2014a non-negative ",(0,s.jsx)(n,{styled:!0,term:"fixnum",children:(0,s.jsx)("i",{children:"fixnum"})}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,s.jsxs)(r.p,{children:["This denotes the set of ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," whose ",(0,s.jsx)(r.em,{children:"element type"}),", ",(0,s.jsx)(r.em,{children:"rank"}),", and ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimensions"})})," match any given ",(0,s.jsx)(r.em,{children:"element-type"}),", ",(0,s.jsx)(n,{styled:!0,term:"rank",children:(0,s.jsx)("i",{children:"rank"})}),", and ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimensions"})}),". Specifically:"]}),"\n",(0,s.jsxs)(r.p,{children:["If ",(0,s.jsx)(r.em,{children:"element-type"})," is the ",(0,s.jsx)(n,{styled:!0,term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," ",(0,s.jsx)(r.strong,{children:"*"}),", ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," are not excluded on the basis of their ",(0,s.jsx)(r.em,{children:"element type"}),". Otherwise, only those ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," are included whose ",(0,s.jsx)(r.em,{children:"actual array element type"})," is the result of ",(0,s.jsx)(r.em,{children:"upgrading element-type"}),"; see Section 15.1.2.1 (Array Upgrading)."]}),"\n",(0,s.jsxs)(r.p,{children:["If the ",(0,s.jsx)(r.em,{children:"dimension-spec"})," is a ",(0,s.jsx)(n,{styled:!0,term:"rank",children:(0,s.jsx)("i",{children:"rank"})}),", the set includes only those ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," having that ",(0,s.jsx)(n,{styled:!0,term:"rank",children:(0,s.jsx)("i",{children:"rank"})}),". If the ",(0,s.jsx)(r.em,{children:"dimension-spec"})," is a ",(0,s.jsx)(n,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"list"})})," of ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimensions"})}),", the set includes only those ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," having a ",(0,s.jsx)(n,{styled:!0,term:"rank",children:(0,s.jsx)("i",{children:"rank"})})," given by the ",(0,s.jsx)(n,{styled:!0,term:"length",children:(0,s.jsx)("i",{children:"length"})})," of the ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimensions"})}),", and having the indicated ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimensions"})}),"; in this case, ",(0,s.jsx)(r.strong,{children:"*"})," matches any value for the corresponding ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimension"})}),". If the ",(0,s.jsx)(r.em,{children:"dimension-spec"})," is the ",(0,s.jsx)(n,{styled:!0,term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," ",(0,s.jsx)(r.strong,{children:"*"}),", the set is not restricted on the basis of ",(0,s.jsx)(n,{styled:!0,term:"rank",children:(0,s.jsx)("i",{children:"rank"})})," or ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimension"})}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"print-array",children:(0,s.jsx)("b",{children:"*print-array*"})}),", ",(0,s.jsx)(n,{styled:!0,term:"aref",children:(0,s.jsx)("b",{children:"aref"})}),", ",(0,s.jsx)(n,{styled:!0,term:"make-array",children:(0,s.jsx)("b",{children:"make-array"})}),", ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("b",{children:"vector"})}),", Section 2.4.8.12 (Sharpsign A), Section 22.1.3.8 (Printing Other Arrays)"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(r.p,{children:["Note that the type (array t) is a proper ",(0,s.jsx)(n,{styled:!0,term:"subtype",children:(0,s.jsx)("i",{children:"subtype"})})," of the type (array *). The reason is that the type (array t) is the set of ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," that can hold any ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})})," (the ",(0,s.jsx)(n,{styled:!0,term:"element",children:(0,s.jsx)("i",{children:"elements"})})," are of ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(n,{styled:!0,term:"t",children:(0,s.jsx)("b",{children:"t"})}),", which includes all ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"objects"})}),"). On the other hand, the type (array *) is the set of all ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," whatsoever,"]}),"\n",(0,s.jsxs)(r.p,{children:["including for example ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," that can hold only ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"characters"})}),". The type (array character) is not a ",(0,s.jsx)(n,{styled:!0,term:"subtype",children:(0,s.jsx)("i",{children:"subtype"})})," of the type (array t); the two sets are ",(0,s.jsx)(n,{styled:!0,term:"disjoint",children:(0,s.jsx)("i",{children:"disjoint"})})," because the type (array character) is not the set of all ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," that can hold ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"characters"})}),", but rather the set of ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," that are specialized to hold precisely ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"characters"})})," and no other ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"objects"})}),"."]})]})}function d(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}const c={title:"array"},l="array",a={id:"chap-15/bf-c-dictionary/array_system-class",title:"array",description:"Expanded Reference: array",source:"@site/docs/chap-15/bf-c-dictionary/array_system-class.md",sourceDirName:"chap-15/bf-c-dictionary",slug:"/chap-15/bf-c-dictionary/array_system-class",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/array_system-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-c-dictionary/array_system-class.md",tags:[],version:"current",frontMatter:{title:"array"},sidebar:"tutorialSidebar",previous:{title:"array-total-size",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/array-total-size_function"},next:{title:"arrayp",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/arrayp_function"}},h={},o=[{value:"Expanded Reference: array",id:"expanded-reference-array",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"array",children:"array"}),"\n","\n","\n",(0,s.jsx)(d,{}),"\n",(0,s.jsx)(r.h2,{id:"expanded-reference-array",children:"Expanded Reference: array"}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:"(array )\n"})})]})}function j(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>d});var s=n(67294);const i={},t=s.createContext(i);function d(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);