"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[67197],{87869:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>o,toc:()=>h});var s=r(85893),t=r(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rest"})," ",(0,s.jsx)(n.em,{children:"Accessor"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rest"})," ",(0,s.jsx)(n.em,{children:"list \u2192 tail"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"(setf (rest"})," ",(0,s.jsx)(n.em,{children:"list"}),"**)** ",(0,s.jsx)(n.em,{children:"new-tail"}),"**)**"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"list"}),"\u2014a ",(0,s.jsx)(n.em,{children:"list"}),", which might be a ",(0,s.jsx)(n.em,{children:"dotted list"})," or a ",(0,s.jsx)(n.em,{children:"circular list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"tail"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rest"})," performs the same operation as ",(0,s.jsx)(n.strong,{children:"cdr"}),", but mnemonically complements ",(0,s.jsx)(n.strong,{children:"first"}),". Specifically,"]}),"\n",(0,s.jsxs)(n.p,{children:["(rest ",(0,s.jsx)(n.em,{children:"list"}),") ",(0,s.jsx)(n.em,{children:"\u2261"})," (cdr ",(0,s.jsx)(n.em,{children:"list"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(setf (rest ",(0,s.jsx)(n.em,{children:"list"}),") ",(0,s.jsx)(n.em,{children:"new-tail"}),") ",(0,s.jsx)(n.em,{children:"\u2261"})," (setf (cdr ",(0,s.jsx)(n.em,{children:"list"}),") ",(0,s.jsx)(n.em,{children:"new-tail"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:'\n(rest \u2019(1 2)) \u2192 (2) \n\n\n\n(rest \u2019(1 . 2)) \u2192 2 \n(rest \u2019(1)) \u2192 NIL \n(setq \\*cons\\* \u2019(1 . 2)) \u2192 (1 . 2) \n(setf (rest \\*cons\\*) "two") \u2192 "two" \n\\*cons\\* \u2192 (1 . "two") \n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"cdr"}),", ",(0,s.jsx)(n.strong,{children:"nthcdr"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rest"})," is often preferred stylistically over ",(0,s.jsx)(n.strong,{children:"cdr"})," when the argument is to being subjectively viewed as a ",(0,s.jsx)(n.em,{children:"list"})," rather than as a ",(0,s.jsx)(n.em,{children:"cons"}),"."]})]})}function i(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}const l={},d="rest",o={id:"chap-14/be-c-dictionary/rest",title:"rest",description:"Expanded Reference: rest",source:"@site/docs/chap-14/be-c-dictionary/rest.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/rest",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/rest",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/rest.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"remf",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/remf"},next:{title:"revappend, nreconc",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/revappend"}},a={},h=[{value:"Expanded Reference: rest",id:"expanded-reference-rest",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"rest",children:"rest"}),"\n","\n","\n",(0,s.jsx)(i,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-rest",children:"Expanded Reference: rest"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(rest )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>i});var s=r(67294);const t={},c=s.createContext(t);function i(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);