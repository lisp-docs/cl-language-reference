"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[13892],{25441:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var s=r(85893),t=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"getf"})," ",(0,s.jsx)(n.em,{children:"Accessor"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"getf"})," ",(0,s.jsx)(n.em,{children:"plist indicator"})," &optional ",(0,s.jsx)(n.em,{children:"default \u2192 value"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"(setf (getf"})," ",(0,s.jsx)(n.em,{children:"place indicator"})," &optional ",(0,s.jsx)(n.em,{children:"default"}),"**)** ",(0,s.jsx)(n.em,{children:"new-value"}),"**)**"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"plist"}),"\u2014a ",(0,s.jsx)(n.em,{children:"property list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"place"}),"\u2014a ",(0,s.jsx)(n.em,{children:"place"}),", the ",(0,s.jsx)(n.em,{children:"value"})," of which is a ",(0,s.jsx)(n.em,{children:"property list"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"getf"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"indicator"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"default"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),". The default is ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"value"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"new-value"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"getf"})," finds a ",(0,s.jsx)(n.em,{children:"property"})," on the ",(0,s.jsx)(n.em,{children:"plist"})," whose ",(0,s.jsx)(n.em,{children:"property indicator"})," is ",(0,s.jsx)(n.em,{children:"identical"})," to ",(0,s.jsx)(n.em,{children:"indicator"}),", and returns its corresponding ",(0,s.jsx)(n.em,{children:"property value"}),". If there are multiple ",(0,s.jsx)(n.em,{children:"properties"}),(0,s.jsx)("sub",{children:"1"})," with that ",(0,s.jsx)(n.em,{children:"property indicator"})," , ",(0,s.jsx)(n.strong,{children:"getf"})," uses the first such ",(0,s.jsx)(n.em,{children:"property"}),". If there is no ",(0,s.jsx)(n.em,{children:"property"})," with that ",(0,s.jsx)(n.em,{children:"property indicator"})," , ",(0,s.jsx)(n.em,{children:"default"})," is returned."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setf"})," of ",(0,s.jsx)(n.strong,{children:"getf"})," may be used to associate a new ",(0,s.jsx)(n.em,{children:"object"})," with an existing indicator in the ",(0,s.jsx)(n.em,{children:"property list"})," held by ",(0,s.jsx)(n.em,{children:"place"}),", or to create a new assocation if none exists. If there are multiple ",(0,s.jsx)(n.em,{children:"properties"}),(0,s.jsx)("sub",{children:"1"})," with that ",(0,s.jsx)(n.em,{children:"property indicator"})," , ",(0,s.jsx)(n.strong,{children:"setf"})," of ",(0,s.jsx)(n.strong,{children:"getf"})," associates the ",(0,s.jsx)(n.em,{children:"new-value"})," with the first such ",(0,s.jsx)(n.em,{children:"property"}),". When a ",(0,s.jsx)(n.strong,{children:"getf"})," ",(0,s.jsx)(n.em,{children:"form"})," is used as a ",(0,s.jsx)(n.strong,{children:"setf"})," ",(0,s.jsx)(n.em,{children:"place"}),", any ",(0,s.jsx)(n.em,{children:"default"})," which is supplied is evaluated according to normal left-to-right evaluation rules, but its ",(0,s.jsx)(n.em,{children:"value"})," is ignored."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setf"})," of ",(0,s.jsx)(n.strong,{children:"getf"})," is permitted to either ",(0,s.jsx)(n.em,{children:"write"})," the ",(0,s.jsx)(n.em,{children:"value"})," of ",(0,s.jsx)(n.em,{children:"place"})," itself, or modify of any part, ",(0,s.jsx)(n.em,{children:"car"})," or ",(0,s.jsx)(n.em,{children:"cdr"})," , of the ",(0,s.jsx)(n.em,{children:"list structure"})," held by ",(0,s.jsx)(n.em,{children:"place"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:" \n\n\n\n(setq x \u2019()) *\u2192* NIL \n\n\n\n(getf x \u2019prop1) *\u2192* NIL \n\n\n\n(getf x \u2019prop1 7) *\u2192* 7 \n\n\n\n(getf x \u2019prop1) *\u2192* NIL \n\n\n\n(setf (getf x \u2019prop1) \u2019val1) *\u2192* VAL1 \n\n\n\n(eq (getf x \u2019prop1) \u2019val1) *\u2192 true* \n\n\n\n(getf x \u2019prop1) *\u2192* VAL1 \n\n\n\n(getf x \u2019prop1 7) *\u2192* VAL1 \n\n\n\nx *\u2192* (PROP1 VAL1) \n\n\n\n;; Examples of implementation variation permitted. \n\n\n\n(setq foo (list \u2019a \u2019b \u2019c \u2019d \u2019e \u2019f)) *\u2192* (A B C D E F) \n\n\n\n(setq bar (cddr foo)) *\u2192* (C D E F) \n\n\n\n(remf foo \u2019c) *\u2192 true* \n\n\n\nfoo *\u2192* (A B E F) \n\n\n\nbar \n\n\n\n*\u2192* (C D E F) \n\n\n\n<i><sup>or</sup>\u2192</i> (C) \n\n\n\n<i><sup>or</sup>\u2192</i> (NIL) \n\n\n\n<i><sup>or</sup>\u2192</i> (C NIL) \n\n\n\n<i><sup>or</sup>\u2192</i> (C D) \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"get"}),", ",(0,s.jsx)(n.strong,{children:"get-properties"}),", ",(0,s.jsx)(n.strong,{children:"setf"}),", Section 5.1.2.2 (Function Call Forms as Places)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["There is no way (using ",(0,s.jsx)(n.strong,{children:"getf"}),") to distinguish an absent property from one whose value is ",(0,s.jsx)(n.em,{children:"default"}),"; but see ",(0,s.jsx)(n.strong,{children:"get-properties"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that while supplying a ",(0,s.jsx)(n.em,{children:"default"})," argument to ",(0,s.jsx)(n.strong,{children:"getf"})," in a ",(0,s.jsx)(n.strong,{children:"setf"})," situation is sometimes not very interesting, it is still important because some macros, such as ",(0,s.jsx)(n.strong,{children:"push"})," and ",(0,s.jsx)(n.strong,{children:"incf"}),", require a ",(0,s.jsx)(n.em,{children:"place"})," argument which data is both ",(0,s.jsx)(n.em,{children:"read"})," from and ",(0,s.jsx)(n.em,{children:"written"})," to. In such a context, if a ",(0,s.jsx)(n.em,{children:"default"})," argument is to be supplied for the ",(0,s.jsx)(n.em,{children:"read"})," situation, it must be syntactically valid for the ",(0,s.jsx)(n.em,{children:"write"})," situation as well. For example,"]}),"\n",(0,s.jsx)(n.p,{children:"(let ((plist \u2019()))"}),"\n",(0,s.jsx)(n.p,{children:"(incf (getf plist \u2019count 0))"}),"\n",(0,s.jsxs)(n.p,{children:["plist) ",(0,s.jsx)(n.em,{children:"\u2192"})," (COUNT 1)"]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const l={},o="getf",d={id:"chap-14/be-c-dictionary/getf",title:"getf",description:"Expanded Reference: getf",source:"@site/docs/chap-14/be-c-dictionary/getf.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/getf",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/getf",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/getf.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/first"},next:{title:"get-properties",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/getproperties"}},a={},h=[{value:"Expanded Reference: getf",id:"expanded-reference-getf",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"getf",children:"getf"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-getf",children:"Expanded Reference: getf"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(getf )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>c});var s=r(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);