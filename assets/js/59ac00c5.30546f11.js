"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[78769],{91357:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var s=n(85893),i=n(11151);const t={title:"G",sidebar_position:103},l=void 0,c={id:"chap-26/g",title:"G",description:"G",source:"@site/docs/chap-26/g.md",sourceDirName:"chap-26",slug:"/chap-26/g",permalink:"/cl-language-reference/chap-26/g",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/g.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",sidebarPosition:103,frontMatter:{title:"G",sidebar_position:103},sidebar:"tutorialSidebar",previous:{title:"F",permalink:"/cl-language-reference/chap-26/f"},next:{title:"H",permalink:"/cl-language-reference/chap-26/h"}},d={},a=[];function h(e){const r={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:t}=r;return n||j("DictionaryLink",!0),t||j("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"G"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"general"})," ",(0,s.jsx)(r.em,{children:"adj."})," (of an ",(0,s.jsx)(t,{term:"array",children:(0,s.jsx)("i",{children:"array"})}),") having ",(0,s.jsx)(t,{styled:!0,term:"element type",children:(0,s.jsx)("i",{children:"element type"})})," ",(0,s.jsx)(n,{term:"t",children:(0,s.jsx)("b",{children:"t"})}),", and consequently able to have any ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," as an ",(0,s.jsx)(t,{term:"element",children:(0,s.jsx)("i",{children:"element"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"generalized boolean"})," ",(0,s.jsx)(r.em,{children:"n."})," an ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," used as a truth value, where the symbol ",(0,s.jsx)(n,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})})]}),"\n",(0,s.jsxs)(r.p,{children:["represents ",(0,s.jsx)(t,{term:"false",children:(0,s.jsx)("i",{children:"false"})})," and all other ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"objects"})})," represent ",(0,s.jsx)(t,{term:"true",children:(0,s.jsx)("i",{children:"true"})}),". See ",(0,s.jsx)(t,{term:"boolean",children:(0,s.jsx)("i",{children:"boolean"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"generalized instance"})," ",(0,s.jsx)(r.em,{children:"n."})," (of a ",(0,s.jsx)(t,{term:"class",children:(0,s.jsx)("i",{children:"class"})}),") an ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," the ",(0,s.jsx)(t,{term:"class",children:(0,s.jsx)("i",{children:"class"})})," of which is either that ",(0,s.jsx)(t,{term:"class",children:(0,s.jsx)("i",{children:"class"})})," itself, or some subclass of that ",(0,s.jsx)(t,{term:"class",children:(0,s.jsx)("i",{children:"class"})}),". (Because of the correspondence between types and classes, the term \u201cgeneralized instance of ",(0,s.jsx)(r.em,{children:"X"}),"\u201d implies \u201cobject of type ",(0,s.jsx)(r.em,{children:"X"}),"\u201d and in cases where ",(0,s.jsx)(r.em,{children:"X"})," is a ",(0,s.jsx)(t,{term:"class",children:(0,s.jsx)("i",{children:"class"})})," (or ",(0,s.jsx)(r.em,{children:"class name"}),") the reverse is also true. The former terminology emphasizes the view of ",(0,s.jsx)(r.em,{children:"X"})," as a ",(0,s.jsx)(t,{term:"class",children:(0,s.jsx)("i",{children:"class"})})," while the latter emphasizes the view of ",(0,s.jsx)(r.em,{children:"X"})," as a ",(0,s.jsx)(t,{styled:!0,term:"type specifier",children:(0,s.jsx)("i",{children:"type specifier"})})," .)"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"generalized reference"})," ",(0,s.jsx)(r.em,{children:"n."})," a reference to a location storing an ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," as if to a"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),". (Such a reference can be either to ",(0,s.jsx)(t,{term:"read",children:(0,s.jsx)("i",{children:"read"})})," or ",(0,s.jsx)(t,{term:"write",children:(0,s.jsx)("i",{children:"write"})})," the location.) See Section 5.1 (Generalized Reference). See also ",(0,s.jsx)(t,{term:"place",children:(0,s.jsx)("i",{children:"place"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"generalized synonym stream"})," ",(0,s.jsx)(r.em,{children:"n."})," (with a ",(0,s.jsx)(t,{styled:!0,term:"synonym stream symbol",children:(0,s.jsx)("i",{children:"synonym stream symbol"})}),") 1. (to a ",(0,s.jsx)(t,{term:"stream",children:(0,s.jsx)("i",{children:"stream"})}),") a ",(0,s.jsx)(t,{styled:!0,term:"synonym stream",children:(0,s.jsx)("i",{children:"synonym stream"})})," to the ",(0,s.jsx)(t,{term:"stream",children:(0,s.jsx)("i",{children:"stream"})}),", or a ",(0,s.jsx)(t,{styled:!0,term:"composite stream",children:(0,s.jsx)("i",{children:"composite stream"})})," which has as a target a"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{styled:!0,term:"generalized synonym stream",children:(0,s.jsx)("i",{children:"generalized synonym stream"})})," to the ",(0,s.jsx)(t,{term:"stream",children:(0,s.jsx)("i",{children:"stream"})}),". 2. (to a ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})}),") a ",(0,s.jsx)(t,{styled:!0,term:"synonym stream",children:(0,s.jsx)("i",{children:"synonym stream"})})," to the ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})}),", or a ",(0,s.jsx)(t,{styled:!0,term:"composite stream",children:(0,s.jsx)("i",{children:"composite stream"})})," which has as a target a ",(0,s.jsx)(t,{styled:!0,term:"generalized synonym stream",children:(0,s.jsx)("i",{children:"generalized synonym stream"})})," to the ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"generic function"})," ",(0,s.jsx)(r.em,{children:"n."})," a ",(0,s.jsx)(t,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," whose behavior depends on the ",(0,s.jsx)(r.em,{children:"classes"})," or identities of the arguments supplied to it and whose parts include, among other things, a set of ",(0,s.jsx)(t,{term:"method",children:(0,s.jsx)("i",{children:"methods"})}),", a ",(0,s.jsx)(t,{styled:!0,term:"lambda list",children:(0,s.jsx)("i",{children:"lambda list"})}),", and a ",(0,s.jsx)(t,{styled:!0,term:"method combination",children:(0,s.jsx)("i",{children:"method combination"})})," type."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"generic function lambda list"})," ",(0,s.jsx)(r.em,{children:"n."})," A ",(0,s.jsx)(t,{styled:!0,term:"lambda list",children:(0,s.jsx)("i",{children:"lambda list"})})," that is used to describe data flow into a ",(0,s.jsx)(t,{styled:!0,term:"generic function",children:(0,s.jsx)("i",{children:"generic function"})}),". See Section 3.4.2 (Generic Function Lambda Lists)."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{term:"gensym",children:(0,s.jsx)("b",{children:"gensym"})})," ",(0,s.jsx)(r.em,{children:"n. Trad."})," an ",(0,s.jsx)(r.em,{children:"uninterned symbol"}),". See the ",(0,s.jsx)(t,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," ",(0,s.jsx)(n,{term:"gensym",children:(0,s.jsx)("b",{children:"gensym"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"global declaration"})," ",(0,s.jsx)(r.em,{children:"n."})," a ",(0,s.jsx)(t,{term:"form",children:(0,s.jsx)("i",{children:"form"})})," that makes certain kinds of information about code globally available; that is, a ",(0,s.jsx)(n,{term:"proclaim",children:(0,s.jsx)("b",{children:"proclaim"})})," ",(0,s.jsx)(t,{term:"form",children:(0,s.jsx)("i",{children:"form"})})," or a ",(0,s.jsx)(n,{term:"declaim",children:(0,s.jsx)("b",{children:"declaim"})})," ",(0,s.jsx)(t,{term:"form",children:(0,s.jsx)("i",{children:"form"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"global environment"})," ",(0,s.jsx)(r.em,{children:"n."})," that part of an ",(0,s.jsx)(t,{term:"environment",children:(0,s.jsx)("i",{children:"environment"})})," that contains ",(0,s.jsx)(t,{term:"binding",children:(0,s.jsx)("i",{children:"bindings"})})," with ",(0,s.jsx)(t,{styled:!0,term:"indefinite scope",children:(0,s.jsx)("i",{children:"indefinite scope"})})," and ",(0,s.jsx)(t,{styled:!0,term:"indefinite extent",children:(0,s.jsx)("i",{children:"indefinite extent"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"global variable"})," ",(0,s.jsx)(r.em,{children:"n."})," a ",(0,s.jsx)(t,{styled:!0,term:"dynamic variable",children:(0,s.jsx)("i",{children:"dynamic variable"})})," or a ",(0,s.jsx)(t,{styled:!0,term:"constant variable",children:(0,s.jsx)("i",{children:"constant variable"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"glyph"})," ",(0,s.jsx)(r.em,{children:"n."})," a visual representation. \u201cGraphic characters have associated glyphs.\u201d"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{term:"go",children:(0,s.jsx)("b",{children:"go"})})," ",(0,s.jsx)(r.em,{children:"v."})," to transfer control to a ",(0,s.jsx)(t,{styled:!0,term:"go point",children:(0,s.jsx)("i",{children:"go point"})}),". See the ",(0,s.jsx)(t,{styled:!0,term:"special operator",children:(0,s.jsx)("i",{children:"special operator"})})," ",(0,s.jsx)(n,{term:"go",children:(0,s.jsx)("b",{children:"go"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"go point"})," one of possibly several ",(0,s.jsx)(t,{styled:!0,term:"exit point",children:(0,s.jsx)("i",{children:"exit points"})})," that are ",(0,s.jsx)(r.em,{children:"established"})," by ",(0,s.jsx)(n,{term:"tagbody",children:(0,s.jsx)("b",{children:"tagbody"})})," (or other abstractions, such as ",(0,s.jsx)(r.strong,{children:"prog"}),", which are built from ",(0,s.jsx)(n,{term:"tagbody",children:(0,s.jsx)("b",{children:"tagbody"})}),")."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"go tag"})," ",(0,s.jsx)(r.em,{children:"n."})," the ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," or ",(0,s.jsx)(r.em,{children:"integer"})," that, within the ",(0,s.jsx)(t,{styled:!0,term:"lexical scope",children:(0,s.jsx)("i",{children:"lexical scope"})})," of a ",(0,s.jsx)(n,{term:"tagbody",children:(0,s.jsx)("b",{children:"tagbody"})})," ",(0,s.jsx)(t,{term:"form",children:(0,s.jsx)("i",{children:"form"})}),", names an ",(0,s.jsx)(r.em,{children:"exit point established"})," by that ",(0,s.jsx)(n,{term:"tagbody",children:(0,s.jsx)("b",{children:"tagbody"})})," ",(0,s.jsx)(t,{term:"form",children:(0,s.jsx)("i",{children:"form"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"graphic"})," ",(0,s.jsx)(r.em,{children:"adj."})," (of a ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," ) being a \u201cprinting\u201d or \u201cdisplayable\u201d ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," that has a standard visual representation as a single ",(0,s.jsx)(t,{term:"glyph",children:(0,s.jsx)("i",{children:"glyph"})}),", such as A or * or =. ",(0,s.jsx)(t,{term:"space",children:(0,s.jsx)("i",{children:"Space"})})," is defined to be ",(0,s.jsx)(t,{term:"graphic",children:(0,s.jsx)("i",{children:"graphic"})}),". Of the ",(0,s.jsx)(t,{styled:!0,term:"standard character",children:(0,s.jsx)("i",{children:"standard characters"})}),", all but ",(0,s.jsx)(t,{term:"newline",children:(0,s.jsx)("i",{children:"newline"})})," are ",(0,s.jsx)(t,{term:"graphic",children:(0,s.jsx)("i",{children:"graphic"})}),". See ",(0,s.jsx)(t,{term:"non-graphic",children:(0,s.jsx)("i",{children:"non-graphic"})}),"."]})]})}function o(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function j(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>l});var s=n(67294);const i={},t=s.createContext(i);function l(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);