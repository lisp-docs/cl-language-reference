"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[89561],{41888:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var t=i(85893),s=i(11151);function r(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"initialize-instance"})," ",(0,t.jsx)(n.em,{children:"Standard Generic Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"initialize-instance"})," ",(0,t.jsx)(n.em,{children:"instance"})," &rest ",(0,t.jsx)(n.em,{children:"initargs"})," &key &allow-other-keys ",(0,t.jsx)(n.em,{children:"! instance"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Method Signatures:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"initialize-instance"})," (",(0,t.jsx)(n.em,{children:"instance"})," ",(0,t.jsx)(n.strong,{children:"standard-object"}),") &rest ",(0,t.jsx)(n.em,{children:"initargs"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"instance"}),"\u2014an ",(0,t.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"initargs"}),"\u2014a ",(0,t.jsx)(n.em,{children:"defaulted initialization argument list"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Called by ",(0,t.jsx)(n.strong,{children:"make-instance"})," to initialize a newly created ",(0,t.jsx)(n.em,{children:"instance"}),". The generic function is called with the new ",(0,t.jsx)(n.em,{children:"instance"})," and the ",(0,t.jsx)(n.em,{children:"defaulted initialization argument list"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The system-supplied primary ",(0,t.jsx)(n.em,{children:"method"})," on ",(0,t.jsx)(n.strong,{children:"initialize-instance"})," initializes the ",(0,t.jsx)(n.em,{children:"slots"})," of the ",(0,t.jsx)(n.em,{children:"instance"})," with values according to the ",(0,t.jsx)(n.em,{children:"initargs"})," and the ",":initform"," forms of the ",(0,t.jsx)(n.em,{children:"slots"}),". It does this by calling the generic function ",(0,t.jsx)(n.strong,{children:"shared-initialize"})," with the following arguments: the ",(0,t.jsx)(n.em,{children:"instance"}),", ",(0,t.jsx)(n.strong,{children:"t"})," (this indicates that all ",(0,t.jsx)(n.em,{children:"slots"})," for which no initialization arguments are provided should be initialized according to their ",":initform"," forms), and the ",(0,t.jsx)(n.em,{children:"initargs"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Programmers can define ",(0,t.jsx)(n.em,{children:"methods"})," for ",(0,t.jsx)(n.strong,{children:"initialize-instance"})," to specify actions to be taken when an instance is initialized. If only ",(0,t.jsx)(n.em,{children:"after methods"})," are defined, they will be run after the system-supplied primary ",(0,t.jsx)(n.em,{children:"method"})," for initialization and therefore will not interfere with the default behavior of ",(0,t.jsx)(n.strong,{children:"initialize-instance"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"shared-initialize"}),", ",(0,t.jsx)(n.strong,{children:"make-instance"}),", ",(0,t.jsx)(n.strong,{children:"slot-boundp"}),", ",(0,t.jsx)(n.strong,{children:"slot-makunbound"}),", Section 7.1 (Object Creation and Initialization), Section 7.1.4 (Rules for Initialization Arguments), Section 7.1.2 (Declaring the Validity of Initialization Arguments)"]})]})}function a(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}const c={},l="initialize-instance",o={id:"chap-7/h-h-dictionary/initializeinstance",title:"initialize-instance",description:"Expanded Reference: initialize-instance",source:"@site/docs/chap-7/h-h-dictionary/initializeinstance.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/initializeinstance",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/initializeinstance",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-7/h-h-dictionary/initializeinstance.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"function-keywords",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/functionkeywords"},next:{title:"make-instance",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/makeinstance"}},d={},h=[{value:"Expanded Reference: initialize-instance",id:"expanded-reference-initialize-instance",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"initialize-instance",children:"initialize-instance"}),"\n","\n","\n",(0,t.jsx)(a,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-initialize-instance",children:"Expanded Reference: initialize-instance"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(initialize-instance )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>a});var t=i(67294);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);