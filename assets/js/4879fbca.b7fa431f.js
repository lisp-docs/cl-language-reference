"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[71670],{66718:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>r});var i=n(85893),o=n(11151);const a={},c="Initialization of generic function and method metaobjects",l={id:"meta-object-protocol/initialization-of-generic-function-and-method-metaobjects",title:"Initialization of generic function and method metaobjects",description:"Initialization of generic function and method metaobjects",source:"@site/docs/meta-object-protocol/initialization-of-generic-function-and-method-metaobjects.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/initialization-of-generic-function-and-method-metaobjects",permalink:"/cl-language-reference/meta-object-protocol/initialization-of-generic-function-and-method-metaobjects",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/initialization-of-generic-function-and-method-metaobjects.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Initialization of Class Metaobjects",permalink:"/cl-language-reference/meta-object-protocol/initialization-of-class-metaobjects2"},next:{title:"Initialization of Generic Function Metaobjects",permalink:"/cl-language-reference/meta-object-protocol/initialization-of-generic-function-metaobjects"}},s={},r=[{value:"Initialization of generic function and method metaobjects",id:"initialization-of-generic-function-and-method-metaobjects-1",level:4}];function d(e){const t={a:"a",h1:"h1",h4:"h4",p:"p",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"initialization-of-generic-function-and-method-metaobjects",children:"Initialization of generic function and method metaobjects"}),"\n",(0,i.jsx)(t.h4,{id:"initialization-of-generic-function-and-method-metaobjects-1",children:"Initialization of generic function and method metaobjects"}),"\n",(0,i.jsxs)(t.p,{children:["An example of creating a generic function and a method metaobject, and then adding the method to the generic function is shown below. This example is comparable to the method definition shown in ",(0,i.jsx)(t.a,{href:"/meta-object-protocol/fig-defmethod-1",children:"this figure"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["(let* ((gf (make-instance 'standard-generic-function\n",":lambda-list"," '(p l &optional visiblyp &key)))\n(method-class (generic-function-method-class gf)))\n(multiple-value-bind (lambda initargs)\n(make-method-lambda\ngf\n(class-prototype method-class)\n'(lambda (p l &optional (visiblyp t) &key color)\n(set-to-origin p)\n(when visiblyp (show-move p 0 color)))\nnil)\n(add-method gf\n(apply #'make-instance method-class\n",":function"," (compile nil lambda)\n",":specializers"," (list (find-class 'position)\n(intern-eql-specializer 0))\n",":qualifiers"," ()\n",":lambda-list"," '(p l &optional (visiblyp t)\n&key color)\ninitargs))))"]})]})}function m(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>c});var i=n(67294);const o={},a=i.createContext(o);function c(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);