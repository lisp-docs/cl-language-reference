"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[61289],{80939:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>h,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>p});var c=n(85893),a=n(11151);function t(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:t}=r;return n||s("DictionaryLink",!0),t||s("GlossaryTerm",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"unread-char"})," ",(0,c.jsx)(t,{term:"function",children:(0,c.jsx)("i",{children:"Function"})})]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," ",(0,c.jsx)(t,{term:"character",children:(0,c.jsx)("i",{children:"character"})})," &optional ",(0,c.jsx)(r.em,{children:"input-stream \u2192"})," ",(0,c.jsx)(n,{term:"nil",children:(0,c.jsx)("b",{children:"nil"})})]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(t,{term:"character",children:(0,c.jsx)("i",{children:"character"})}),"\u2014a ",(0,c.jsx)(t,{term:"character",children:(0,c.jsx)("i",{children:"character"})})," ; must be the last ",(0,c.jsx)(t,{term:"character",children:(0,c.jsx)("i",{children:"character"})})," that was read from ",(0,c.jsx)(r.em,{children:"input-stream"}),". ",(0,c.jsx)(r.em,{children:"input-stream"}),"\u2014an ",(0,c.jsx)(r.em,{children:"input stream designator"})," . The default is ",(0,c.jsx)(t,{styled:!0,term:"standard input",children:(0,c.jsx)("i",{children:"standard input"})}),"."]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," places ",(0,c.jsx)(t,{term:"character",children:(0,c.jsx)("i",{children:"character"})})," back onto the front of ",(0,c.jsx)(r.em,{children:"input-stream"})," so that it will again be the next character in ",(0,c.jsx)(r.em,{children:"input-stream"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:["When ",(0,c.jsx)(r.em,{children:"input-stream"})," is an ",(0,c.jsx)(t,{styled:!0,term:"echo stream",children:(0,c.jsx)("i",{children:"echo stream"})}),", no attempt is made to undo any echoing of the character that might already have been done on ",(0,c.jsx)(r.em,{children:"input-stream"}),". However, characters placed on ",(0,c.jsx)(r.em,{children:"input-stream"})," by ",(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," are marked in such a way as to inhibit later re-echo by ",(0,c.jsx)(n,{term:"read-char",children:(0,c.jsx)("b",{children:"read-char"})}),"."]}),"\n",(0,c.jsxs)(r.p,{children:["It is an error to invoke ",(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," twice consecutively on the same ",(0,c.jsx)(t,{term:"stream",children:(0,c.jsx)("i",{children:"stream"})})," without an intervening call to ",(0,c.jsx)(n,{term:"read-char",children:(0,c.jsx)("b",{children:"read-char"})})," (or some other input operation which implicitly reads characters) on that ",(0,c.jsx)(t,{term:"stream",children:(0,c.jsx)("i",{children:"stream"})}),"."]}),"\n",(0,c.jsxs)(r.p,{children:["Invoking ",(0,c.jsx)(n,{term:"peek-char",children:(0,c.jsx)("b",{children:"peek-char"})})," or ",(0,c.jsx)(n,{term:"read-char",children:(0,c.jsx)("b",{children:"read-char"})})," commits all previous characters. The consequences of invoking ",(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," on any character preceding that which is returned by ",(0,c.jsx)(n,{term:"peek-char",children:(0,c.jsx)("b",{children:"peek-char"})})," (including those passed over by ",(0,c.jsx)(n,{term:"peek-char",children:(0,c.jsx)("b",{children:"peek-char"})})," that has a ",(0,c.jsx)(r.em,{children:"non-nil peek-type"}),") are unspecified. In particular, the consequences of invoking ",(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," after ",(0,c.jsx)(n,{term:"peek-char",children:(0,c.jsx)("b",{children:"peek-char"})})," are unspecified."]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-lisp",children:'(with-input-from-string (is "0123") \n  (dotimes (i 6) \n    (let ((c (read-char is))) \n      (if (evenp i) (format t "~&~S ~S~%" i c) (unread-char c is))))) \n\u25b7 0 #\\0 \n\u25b7 2 #\\1 \n\u25b7 4 #\\2 \n\u2192 NIL \n\n\n'})}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Affected By:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"*standard-input*"}),", ",(0,c.jsx)(n,{term:"terminal-io",children:(0,c.jsx)("b",{children:"*terminal-io*"})}),"."]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(n,{term:"peek-char",children:(0,c.jsx)("b",{children:"peek-char"})}),", ",(0,c.jsx)(n,{term:"read-char",children:(0,c.jsx)("b",{children:"read-char"})}),", Section 21.1 (Stream Concepts)"]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(n,{term:"unread-char",children:(0,c.jsx)("b",{children:"unread-char"})})," is intended to be an efficient mechanism for allowing the ",(0,c.jsx)(r.em,{children:"Lisp reader"})," and other parsers to perform one-character lookahead in ",(0,c.jsx)(r.em,{children:"input-stream"}),"."]})]})}function i(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}function s(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"unread-char"},h="unread-char",l={id:"chap-21/cb-c-dictionary/unread-char_function",title:"unread-char",description:"Expanded Reference: unread-char",source:"@site/docs/chap-21/cb-c-dictionary/unread-char_function.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/unread-char_function",permalink:"/cl-language-reference/chap-21/cb-c-dictionary/unread-char_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-21/cb-c-dictionary/unread-char_function.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{title:"unread-char"},sidebar:"tutorialSidebar",previous:{title:"two-way-stream",permalink:"/cl-language-reference/chap-21/cb-c-dictionary/two-way-stream_system-class"},next:{title:"with-input-from-string",permalink:"/cl-language-reference/chap-21/cb-c-dictionary/with-input-from-string_macro"}},o={},p=[{value:"Expanded Reference: unread-char",id:"expanded-reference-unread-char",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.h1,{id:"unread-char",children:"unread-char"}),"\n","\n","\n",(0,c.jsx)(i,{}),"\n",(0,c.jsx)(r.h2,{id:"expanded-reference-unread-char",children:"Expanded Reference: unread-char"}),"\n",(0,c.jsx)(r.admonition,{type:"tip",children:(0,c.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-lisp",children:"(unread-char )\n"})})]})}function u(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>s,a:()=>i});var c=n(67294);const a={},t=c.createContext(a);function i(e){const r=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),c.createElement(t.Provider,{value:r},e.children)}}}]);