"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[30652],{51483:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>d,default:()=>x,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var s=r(85893),t=r(11151);function i(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:i}=n;return r||l("DictionaryLink",!0),i||l("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"number"})," ",(0,s.jsx)(i,{styled:!0,term:"system class",children:(0,s.jsx)("i",{children:"System Class"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(r,{term:"number",children:(0,s.jsx)("b",{children:"number"})}),", ",(0,s.jsx)(r,{term:"t",children:(0,s.jsx)("b",{children:"t"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(r,{term:"number",children:(0,s.jsx)("b",{children:"number"})})," contains ",(0,s.jsx)(i,{term:"object",children:(0,s.jsx)("i",{children:"objects"})})," which represent mathematical numbers. The ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"types"})})," ",(0,s.jsx)(r,{term:"real",children:(0,s.jsx)("b",{children:"real"})})," and ",(0,s.jsx)(r,{term:"complex",children:(0,s.jsx)("b",{children:"complex"})})," are ",(0,s.jsx)(n.em,{children:"disjoint subtypes"})," of ",(0,s.jsx)(r,{term:"number",children:(0,s.jsx)("b",{children:"number"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," ",(0,s.jsx)(r,{term:"=",children:(0,s.jsx)("b",{children:"="})})," tests for numerical equality. The ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," ",(0,s.jsx)(r,{term:"eql",children:(0,s.jsx)("b",{children:"eql"})}),", when its arguments are both ",(0,s.jsx)(i,{term:"number",children:(0,s.jsx)("i",{children:"numbers"})}),", tests that they have both the same ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," and numerical value. Two ",(0,s.jsx)(i,{term:"number",children:(0,s.jsx)("i",{children:"numbers"})})," that are the ",(0,s.jsx)(i,{term:"same",children:(0,s.jsx)("i",{children:"same"})})," under ",(0,s.jsx)(r,{term:"eql",children:(0,s.jsx)("b",{children:"eql"})})," or ",(0,s.jsx)(r,{term:"=",children:(0,s.jsx)("b",{children:"="})})," are not necessarily the ",(0,s.jsx)(i,{term:"same",children:(0,s.jsx)("i",{children:"same"})})," under ",(0,s.jsx)(r,{term:"eq",children:(0,s.jsx)("b",{children:"eq"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["Common Lisp differs from mathematics on some naming issues. In mathematics, the set of real numbers is traditionally described as a subset of the complex numbers, but in Common Lisp, the ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(r,{term:"real",children:(0,s.jsx)("b",{children:"real"})})," and the ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(r,{term:"complex",children:(0,s.jsx)("b",{children:"complex"})})," are disjoint. The Common Lisp type which includes all mathematical complex numbers is called ",(0,s.jsx)(r,{term:"number",children:(0,s.jsx)("b",{children:"number"})}),". The reasons for these differences include historical precedent, compatibility with most other popular computer languages, and various issues of time and space efficiency."]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const a={title:"number"},d="number",o={id:"chap-12/bc-c-dictionary/number_system-class",title:"number",description:"Expanded Reference: number",source:"@site/docs/chap-12/bc-c-dictionary/number_system-class.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/number_system-class",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/number_system-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-12/bc-c-dictionary/number_system-class.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"number"},sidebar:"tutorialSidebar",previous:{title:"most-positive-fixnum, most-negative-fixnum",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/most-positive-fixnum_most-negative-fixnum_constant-variable"},next:{title:"numberp",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/numberp_function"}},m={},h=[{value:"Expanded Reference: number",id:"expanded-reference-number",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"number",children:"number"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-number",children:"Expanded Reference: number"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(number )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>c});var s=r(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);