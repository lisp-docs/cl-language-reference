"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[57203],{83039:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>d,toc:()=>a});var r=i(85893),s=i(11151);function l(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"compile-file"})," ",(0,r.jsx)(n.em,{children:"Function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"compile-file"})," ",(0,r.jsx)(n.em,{children:"input-file"})," &key ",(0,r.jsx)(n.em,{children:"output-file verbose"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"print external-format"})}),"\n",(0,r.jsx)(n.p,{children:"\u2192 output-truename, warnings-p, failure-p"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"input-file"}),"\u2014a ",(0,r.jsx)(n.em,{children:"pathname designator"})," . (Default fillers for unspecified components are taken from ",(0,r.jsx)(n.strong,{children:"*default-pathname-defaults*"}),".)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"output-file"}),"\u2014a ",(0,r.jsx)(n.em,{children:"pathname designator"})," . The default is ",(0,r.jsx)(n.em,{children:"implementation-defined"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"verbose"}),"\u2014a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),". The default is the ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*compile-verbose*"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"print"}),"\u2014a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),". The default is the ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*compile-print*"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"external-format"}),"\u2014an ",(0,r.jsx)(n.em,{children:"external file format designator"})," . The default is ",":default","."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"output-truename"}),"\u2014a ",(0,r.jsx)(n.em,{children:"pathname"})," (the ",(0,r.jsx)(n.strong,{children:"truename"})," of the output ",(0,r.jsx)(n.em,{children:"file"}),"), or ",(0,r.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"warnings-p"}),"\u2014a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"failure-p"}),"\u2014a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"compile-file"})," transforms the contents of the file specified by ",(0,r.jsx)(n.em,{children:"input-file"})," into ",(0,r.jsx)(n.em,{children:"implementation-dependent"})," binary data which are placed in the file specified by ",(0,r.jsx)(n.em,{children:"output-file"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"file"})," to which ",(0,r.jsx)(n.em,{children:"input-file"})," refers should be a ",(0,r.jsx)(n.em,{children:"source file"}),". ",(0,r.jsx)(n.em,{children:"output-file"})," can be used to specify an output ",(0,r.jsx)(n.em,{children:"pathname"}),"; the actual ",(0,r.jsx)(n.em,{children:"pathname"})," of the ",(0,r.jsx)(n.em,{children:"compiled file"})," to which ",(0,r.jsx)(n.em,{children:"compiled code"})," will be output is computed as if by calling ",(0,r.jsx)(n.strong,{children:"compile-file-pathname"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.em,{children:"input-file"})," or ",(0,r.jsx)(n.em,{children:"output-file"})," is a ",(0,r.jsx)(n.em,{children:"logical pathname"}),", it is translated into a ",(0,r.jsx)(n.em,{children:"physical pathname"})," as if by calling ",(0,r.jsx)(n.strong,{children:"translate-logical-pathname"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.em,{children:"verbose"})," is ",(0,r.jsx)(n.em,{children:"true"}),", ",(0,r.jsx)(n.strong,{children:"compile-file"})," prints a message in the form of a comment (",(0,r.jsx)(n.em,{children:"i.e."}),", with a leading ",(0,r.jsx)(n.em,{children:"semicolon"}),") to ",(0,r.jsx)(n.em,{children:"standard output"})," indicating what ",(0,r.jsx)(n.em,{children:"file"})," is being ",(0,r.jsx)(n.em,{children:"compiled"})," and other useful information. If ",(0,r.jsx)(n.em,{children:"verbose"})," is ",(0,r.jsx)(n.em,{children:"false"}),", ",(0,r.jsx)(n.strong,{children:"compile-file"})," does not print this information."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.em,{children:"print"})," is ",(0,r.jsx)(n.em,{children:"true"}),", information about ",(0,r.jsx)(n.em,{children:"top level forms"})," in the file being compiled is printed to ",(0,r.jsx)(n.em,{children:"standard output"}),". Exactly what is printed is ",(0,r.jsx)(n.em,{children:"implementation-dependent"}),", but nevertheless some information is printed. If ",(0,r.jsx)(n.em,{children:"print"})," is ",(0,r.jsx)(n.strong,{children:"nil"}),", no information is printed."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"external-format"})," specifies the ",(0,r.jsx)(n.em,{children:"external file format"})," to be used when opening the ",(0,r.jsx)(n.em,{children:"file"}),"; see the System"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"compile-file"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"function"})," ",(0,r.jsx)(n.strong,{children:"open"}),". ",(0,r.jsx)(n.strong,{children:"compile-file"})," and ",(0,r.jsx)(n.strong,{children:"load"})," must cooperate in such a way that the resulting ",(0,r.jsx)(n.em,{children:"compiled file"})," can be ",(0,r.jsx)(n.em,{children:"loaded"})," without specifying an ",(0,r.jsx)(n.em,{children:"external file format"})," anew; see the ",(0,r.jsx)(n.em,{children:"function"})," ",(0,r.jsx)(n.strong,{children:"load"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"compile-file"})," binds ",(0,r.jsx)(n.strong,{children:"*readtable*"})," and ",(0,r.jsx)(n.strong,{children:"*package*"})," to the values they held before processing the file."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*compile-file-truename*"})," is bound by ",(0,r.jsx)(n.strong,{children:"compile-file"})," to hold the ",(0,r.jsx)(n.em,{children:"truename"})," of the ",(0,r.jsx)(n.em,{children:"pathname"})," of the file being compiled."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*compile-file-pathname*"})," is bound by ",(0,r.jsx)(n.strong,{children:"compile-file"})," to hold a ",(0,r.jsx)(n.em,{children:"pathname"})," denoted by the first argu ment to ",(0,r.jsx)(n.strong,{children:"compile-file"}),", merged against the defaults; that is, (pathname (merge-pathnames ",(0,r.jsx)(n.em,{children:"input-file"}),"))."]}),"\n",(0,r.jsxs)(n.p,{children:["The compiled ",(0,r.jsx)(n.em,{children:"functions"})," contained in the ",(0,r.jsx)(n.em,{children:"compiled file"})," become available for use when the ",(0,r.jsx)(n.em,{children:"compiled file"})," is ",(0,r.jsx)(n.em,{children:"loaded"})," into Lisp. Any function definition that is processed by the compiler, including #\u2019(lambda ...) forms and local function definitions made by ",(0,r.jsx)(n.strong,{children:"flet"}),", ",(0,r.jsx)(n.strong,{children:"labels"})," and ",(0,r.jsx)(n.strong,{children:"defun"})," forms, result in an ",(0,r.jsx)(n.em,{children:"object"})," of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"compiled-function"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"primary value"})," returned by ",(0,r.jsx)(n.strong,{children:"compile-file"}),", ",(0,r.jsx)(n.em,{children:"output-truename"}),", is the ",(0,r.jsx)(n.strong,{children:"truename"})," of the output file, or ",(0,r.jsx)(n.strong,{children:"nil"})," if the file could not be created."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"secondary value"}),", ",(0,r.jsx)(n.em,{children:"warnings-p"}),", is ",(0,r.jsx)(n.em,{children:"false"})," if no ",(0,r.jsx)(n.em,{children:"conditions"})," of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"error"})," or ",(0,r.jsx)(n.strong,{children:"warning"})," were detected by the compiler, and ",(0,r.jsx)(n.em,{children:"true"})," otherwise."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"tertiary value"}),", ",(0,r.jsx)(n.em,{children:"failure-p"}),", is ",(0,r.jsx)(n.em,{children:"false"})," if no ",(0,r.jsx)(n.em,{children:"conditions"})," of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"error"})," or ",(0,r.jsx)(n.strong,{children:"warning"})," (other than ",(0,r.jsx)(n.strong,{children:"style-warning"}),") were detected by the compiler, and ",(0,r.jsx)(n.em,{children:"true"})," otherwise."]}),"\n",(0,r.jsxs)(n.p,{children:["For general information about how ",(0,r.jsx)(n.em,{children:"files"})," are processed by the ",(0,r.jsx)(n.em,{children:"file compiler"})," , see Section 3.2.3 (File Compilation)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Programs"})," to be compiled by the ",(0,r.jsx)(n.em,{children:"file compiler"})," must only contain ",(0,r.jsx)(n.em,{children:"externalizable objects"}),"; for details on such ",(0,r.jsx)(n.em,{children:"objects"}),", see Section 3.2.4 (Literal Objects in Compiled Files). For information on how to extend the set of ",(0,r.jsx)(n.em,{children:"externalizable objects"}),", see the ",(0,r.jsx)(n.em,{children:"function"})," ",(0,r.jsx)(n.strong,{children:"make-load-form"})," and Section 3.2.4.4 (Additional Constraints on Externalizable Objects)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*error-output*"}),", ",(0,r.jsx)(n.strong,{children:"*standard-output*"}),", ",(0,r.jsx)(n.strong,{children:"*compile-verbose*"}),", ",(0,r.jsx)(n.strong,{children:"*compile-print*"})]}),"\n",(0,r.jsx)(n.p,{children:"The computer\u2019s file system."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsx)(n.p,{children:"For information about errors detected during the compilation process, see Section 3.2.5 (Exceptional Situations in the Compiler)."}),"\n",(0,r.jsxs)(n.p,{children:["An error of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"file-error"})," might be signaled if (wild-pathname-p ",(0,r.jsx)(n.em,{children:"input-file"}),") returns true."]}),"\n",(0,r.jsxs)(n.p,{children:["If either the attempt to open the ",(0,r.jsx)(n.em,{children:"source file"})," for input or the attempt to open the ",(0,r.jsx)(n.em,{children:"compiled file"})," for output fails, an error of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"file-error"})," is signaled."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"compile"}),", ",(0,r.jsx)(n.strong,{children:"declare"}),", ",(0,r.jsx)(n.strong,{children:"eval-when"}),", ",(0,r.jsx)(n.strong,{children:"pathname"}),", ",(0,r.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]})]})}function t(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}const c={},o="compile-file",d={id:"chap-24/ce-c-dictionary/compilefile",title:"compile-file",description:"Expanded Reference: compile-file",source:"@site/docs/chap-24/ce-c-dictionary/compilefile.md",sourceDirName:"chap-24/ce-c-dictionary",slug:"/chap-24/ce-c-dictionary/compilefile",permalink:"/cl-language-reference/docs/chap-24/ce-c-dictionary/compilefile",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-24/ce-c-dictionary/compilefile.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\\*compile-verbose\\*",permalink:"/cl-language-reference/docs/chap-24/ce-c-dictionary/compile-verbose_variable"},next:{title:"compile-file-pathname",permalink:"/cl-language-reference/docs/chap-24/ce-c-dictionary/compilefilepathname"}},h={},a=[{value:"Expanded Reference: compile-file",id:"expanded-reference-compile-file",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"compile-file",children:"compile-file"}),"\n","\n","\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-compile-file",children:"Expanded Reference: compile-file"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(compile-file )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>t});var r=i(67294);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);