"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[25077],{96909:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>a,default:()=>m,frontMatter:()=>c,metadata:()=>l,toc:()=>o});var i=n(85893),s=n(11151);function t(e){const r={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"read-delimited-list"})," ",(0,i.jsx)(r.em,{children:"Function"})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"read-delimited-list"})," ",(0,i.jsx)(r.em,{children:"char"})," &optional ",(0,i.jsx)(r.em,{children:"input-stream recursive-p \u2192 list"})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"char"}),"\u2014a ",(0,i.jsx)(r.em,{children:"character"})," ."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"input-stream"}),"\u2014an ",(0,i.jsx)(r.em,{children:"input stream designator"})," . The default is ",(0,i.jsx)(r.em,{children:"standard input"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"recursive-p"}),"\u2014a ",(0,i.jsx)(r.em,{children:"generalized boolean"}),". The default is ",(0,i.jsx)(r.em,{children:"false"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"list"}),"\u2014a ",(0,i.jsx)(r.em,{children:"list"})," of the ",(0,i.jsx)(r.em,{children:"objects"})," read."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"read-delimited-list"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"read-delimited-list"})," reads ",(0,i.jsx)(r.em,{children:"objects"})," from ",(0,i.jsx)(r.em,{children:"input-stream"})," until the next character after an ",(0,i.jsx)(r.em,{children:"object"}),"\u2019s representation (ignoring ",(0,i.jsx)(r.em,{children:"whitespace"}),"<sub>2</sub> characters and comments) is ",(0,i.jsx)(r.em,{children:"char"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"read-delimited-list"})," looks ahead at each step for the next non-",(0,i.jsx)(r.em,{children:"whitespace"}),"<sub>2</sub> ",(0,i.jsx)(r.em,{children:"character"})," and peeks at it as if with ",(0,i.jsx)(r.strong,{children:"peek-char"}),". If it is ",(0,i.jsx)(r.em,{children:"char"}),", then the ",(0,i.jsx)(r.em,{children:"character"})," is consumed and the ",(0,i.jsx)(r.em,{children:"list"})," of ",(0,i.jsx)(r.em,{children:"objects"})," is returned. If it is a ",(0,i.jsx)(r.em,{children:"constituent"})," or ",(0,i.jsx)(r.em,{children:"escape character"})," , then ",(0,i.jsx)(r.strong,{children:"read"})," is used to read an ",(0,i.jsx)(r.em,{children:"object"}),", which is added to the end of the ",(0,i.jsx)(r.em,{children:"list"}),". If it is a ",(0,i.jsx)(r.em,{children:"macro character"})," , its ",(0,i.jsx)(r.em,{children:"reader macro function"})," is called; if the function returns a ",(0,i.jsx)(r.em,{children:"value"}),", that ",(0,i.jsx)(r.em,{children:"value"})," is added to the ",(0,i.jsx)(r.em,{children:"list"}),". The peek-ahead process is then repeated."]}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(r.em,{children:"recursive-p"})," is ",(0,i.jsx)(r.em,{children:"true"}),", this call is expected to be embedded in a higher-level call to ",(0,i.jsx)(r.strong,{children:"read"})," or a similar function."]}),"\n",(0,i.jsxs)(r.p,{children:["It is an error to reach end-of-file during the operation of ",(0,i.jsx)(r.strong,{children:"read-delimited-list"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["The consequences are undefined if ",(0,i.jsx)(r.em,{children:"char"})," has a ",(0,i.jsx)(r.em,{children:"syntax type"})," of ",(0,i.jsx)(r.em,{children:"whitespace"}),"<sub>2</sub> in the ",(0,i.jsx)(r.em,{children:"current readtable"}),". ",(0,i.jsx)(r.strong,{children:"Examples:"})]}),"\n",(0,i.jsx)(r.p,{children:"(read-delimited-list #]) 1 2 3 4 5 6 ]"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"\u2192"})," (1 2 3 4 5 6)"]}),"\n",(0,i.jsxs)(r.p,{children:["Suppose you wanted #{",(0,i.jsx)(r.em,{children:"a b c . . . z"}),"} to read as a list of all pairs of the elements ",(0,i.jsx)(r.em,{children:"a"}),", ",(0,i.jsx)(r.em,{children:"b"}),", ",(0,i.jsx)(r.em,{children:"c"}),", ",(0,i.jsx)(r.em,{children:". . ."}),", ",(0,i.jsx)(r.em,{children:"z"}),", for example."]}),"\n",(0,i.jsx)(r.p,{children:"#{p q z a} reads as ((p q) (p z) (p a) (q z) (q a) (z a))"}),"\n",(0,i.jsxs)(r.p,{children:["This can be done by specifying a macro-character definition for #{ that does two things: reads in all the items up to the }, and constructs the pairs. ",(0,i.jsx)(r.strong,{children:"read-delimited-list"})," performs the first task."]}),"\n",(0,i.jsx)(r.p,{children:"(defun |#{-reader| (stream char arg)"}),"\n",(0,i.jsx)(r.p,{children:"(declare (ignore char arg))"}),"\n",(0,i.jsx)(r.p,{children:"(mapcon #\u2019(lambda (x)"}),"\n",(0,i.jsx)(r.p,{children:"(mapcar #\u2019(lambda (y) (list (car x) y)) (cdr x)))"}),"\n",(0,i.jsxs)(r.p,{children:["(read-delimited-list #&#125; stream t))) ",(0,i.jsx)(r.em,{children:"\u2192"})," |#{-reader|"]}),"\n",(0,i.jsxs)(r.p,{children:["(set-dispatch-macro-character ## #&#123; #\u2019|#{-reader|) ",(0,i.jsx)(r.em,{children:"\u2192"})," T"]}),"\n",(0,i.jsxs)(r.p,{children:["(set-macro-character #&#125; (get-macro-character #) ",(0,i.jsx)(r.strong,{children:"nil"}),"))"]}),"\n",(0,i.jsxs)(r.p,{children:["Note that ",(0,i.jsx)(r.em,{children:"true"})," is supplied for the ",(0,i.jsx)(r.em,{children:"recursive-p"})," argument."]}),"\n",(0,i.jsx)(r.p,{children:"It is necessary here to give a definition to the character } as well to prevent it from being a constituent. If the line"}),"\n",(0,i.jsxs)(r.p,{children:["(set-macro-character #&#125; (get-macro-character #) ",(0,i.jsx)(r.strong,{children:"nil"}),"))"]}),"\n",(0,i.jsx)(r.p,{children:"shown above were not included, then the } in"}),"\n",(0,i.jsx)(r.p,{children:"#{ p q z a}"}),"\n",(0,i.jsxs)(r.p,{children:["would be considered a constituent character, part of the symbol named a}. This could be corrected by putting a space before the }, but it is better to call ",(0,i.jsx)(r.strong,{children:"set-macro-character"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Giving } the same definition as the standard definition of the character ) has the twin benefit of making it terminate tokens for use with ",(0,i.jsx)(r.strong,{children:"read-delimited-list"})," and also making it invalid for use in any other context. Attempting to read a stray } will signal an error."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Affected By:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"*standard-input*"}),", ",(0,i.jsx)(r.strong,{children:"*readtable*"}),", ",(0,i.jsx)(r.strong,{children:"*terminal-io*"}),"."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"read"}),", ",(0,i.jsx)(r.strong,{children:"peek-char"}),", ",(0,i.jsx)(r.strong,{children:"read-char"}),", ",(0,i.jsx)(r.strong,{children:"unread-char"}),"."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"read-delimited-list"})," is intended for use in implementing ",(0,i.jsx)(r.em,{children:"reader macros"}),". Usually it is desirable for ",(0,i.jsx)(r.em,{children:"char"})," to be a ",(0,i.jsx)(r.em,{children:"terminating macro character"})," so that it can be used to delimit tokens; however, ",(0,i.jsx)(r.strong,{children:"read-delimited-list"})," makes no attempt to alter the syntax specified for ",(0,i.jsx)(r.em,{children:"char"})," by the current readtable. The caller must make any necessary changes to the readtable syntax explicitly."]})]})}function d(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}const c={},a="read-delimited-list",l={id:"chap-23/cd-c-dictionary/readdelimitedlist",title:"read-delimited-list",description:"Expanded Reference: read-delimited-list",source:"@site/docs/chap-23/cd-c-dictionary/readdelimitedlist.md",sourceDirName:"chap-23/cd-c-dictionary",slug:"/chap-23/cd-c-dictionary/readdelimitedlist",permalink:"/cl-language-reference/docs/chap-23/cd-c-dictionary/readdelimitedlist",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-23/cd-c-dictionary/readdelimitedlist.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"read, read-preserving-whitespace",permalink:"/cl-language-reference/docs/chap-23/cd-c-dictionary/readaareadpreservingwhitespace"},next:{title:"reader-error",permalink:"/cl-language-reference/docs/chap-23/cd-c-dictionary/readererror"}},h={},o=[{value:"Expanded Reference: read-delimited-list",id:"expanded-reference-read-delimited-list",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"read-delimited-list",children:"read-delimited-list"}),"\n","\n","\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(r.h2,{id:"expanded-reference-read-delimited-list",children:"Expanded Reference: read-delimited-list"}),"\n",(0,i.jsx)(r.admonition,{type:"tip",children:(0,i.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lisp",children:"(read-delimited-list )\n"})})]})}function m(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>d});var i=n(67294);const s={},t=i.createContext(s);function d(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);