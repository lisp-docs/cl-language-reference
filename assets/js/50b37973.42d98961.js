"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[22601],{96020:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>f,contentTitle:()=>l,default:()=>j,frontMatter:()=>d,metadata:()=>a,toc:()=>h});var r=i(85893),t=i(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components},{DictionaryLink:i,GlossaryTerm:s}=n;return i||o("DictionaryLink",!0),s||o("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"fdefinition"})," ",(0,r.jsx)(s,{term:"accessor",children:(0,r.jsx)("i",{children:"Accessor"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," ",(0,r.jsx)(n.em,{children:"function-name \u2192 definition"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"(setf (fdefinition"})," ",(0,r.jsx)(n.em,{children:"function-name"}),"**)** ",(0,r.jsx)(n.em,{children:"new-definition"}),"**)**"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"function-name"}),"\u2014a ",(0,r.jsx)(s,{styled:!0,term:"function name",children:(0,r.jsx)("i",{children:"function name"})}),". In the non-",(0,r.jsx)(i,{term:"setf",children:(0,r.jsx)("b",{children:"setf"})})," case, the ",(0,r.jsx)(s,{term:"name",children:(0,r.jsx)("i",{children:"name"})})," must be ",(0,r.jsx)(s,{term:"fbound",children:(0,r.jsx)("i",{children:"fbound"})})," in the ",(0,r.jsx)(s,{styled:!0,term:"global environment",children:(0,r.jsx)("i",{children:"global environment"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"definition"}),"\u2014Current global function definition named by ",(0,r.jsx)(n.em,{children:"function-name"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"new-definition"}),"\u2014a ",(0,r.jsx)(s,{term:"function",children:(0,r.jsx)("i",{children:"function"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," ",(0,r.jsx)(n.em,{children:"accesses"})," the current global function definition named by ",(0,r.jsx)(n.em,{children:"function-name"}),". The definition may be a ",(0,r.jsx)(s,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," or may be an ",(0,r.jsx)(s,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," representing a ",(0,r.jsx)(s,{styled:!0,term:"special form",children:(0,r.jsx)("i",{children:"special form"})})," or ",(0,r.jsx)(s,{term:"macro",children:(0,r.jsx)("i",{children:"macro"})}),". The value returned by ",(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," when ",(0,r.jsx)(i,{term:"fboundp",children:(0,r.jsx)("b",{children:"fboundp"})})," returns true but the ",(0,r.jsx)(n.em,{children:"function-name"})," denotes a ",(0,r.jsx)(s,{term:"macro",children:(0,r.jsx)("i",{children:"macro"})})," or ",(0,r.jsx)(s,{styled:!0,term:"special form",children:(0,r.jsx)("i",{children:"special form"})})," is not well-defined, but ",(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," does not signal an error."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsxs)(n.p,{children:["Should signal an error of ",(0,r.jsx)(s,{term:"type",children:(0,r.jsx)("i",{children:"type"})})," ",(0,r.jsx)(i,{term:"type-error",children:(0,r.jsx)("b",{children:"type-error"})})," if ",(0,r.jsx)(n.em,{children:"function-name"})," is not a ",(0,r.jsx)(s,{styled:!0,term:"function name",children:(0,r.jsx)("i",{children:"function name"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["An error of ",(0,r.jsx)(s,{term:"type",children:(0,r.jsx)("i",{children:"type"})})," ",(0,r.jsx)(i,{term:"undefined-function",children:(0,r.jsx)("b",{children:"undefined-function"})})," is signaled in the non-",(0,r.jsx)(i,{term:"setf",children:(0,r.jsx)("b",{children:"setf"})})," case if ",(0,r.jsx)(n.em,{children:"function-name"})," is not ",(0,r.jsx)(s,{term:"fbound",children:(0,r.jsx)("i",{children:"fbound"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(i,{term:"fboundp",children:(0,r.jsx)("b",{children:"fboundp"})}),", ",(0,r.jsx)(i,{term:"fmakunbound",children:(0,r.jsx)("b",{children:"fmakunbound"})}),", ",(0,r.jsx)(i,{term:"macro-function",children:(0,r.jsx)("b",{children:"macro-function"})}),", ",(0,r.jsx)(i,{term:"special-operator-p",children:(0,r.jsx)("b",{children:"special-operator-p"})}),", ",(0,r.jsx)(i,{term:"symbol-function",children:(0,r.jsx)("b",{children:"symbol-function"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," cannot ",(0,r.jsx)(s,{term:"access",children:(0,r.jsx)("i",{children:"access"})})," the value of a lexical function name produced by ",(0,r.jsx)(i,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," or ",(0,r.jsx)(i,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})}),"; it can ",(0,r.jsx)(s,{term:"access",children:(0,r.jsx)("i",{children:"access"})})," only the global function value."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(i,{term:"setf",children:(0,r.jsx)("b",{children:"setf"})})," can be used with ",(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," to replace a global function definition when the ",(0,r.jsx)(n.em,{children:"function-name"}),"\u2019s function definition does not represent a ",(0,r.jsx)(s,{styled:!0,term:"special form",children:(0,r.jsx)("i",{children:"special form"})}),". ",(0,r.jsx)(i,{term:"setf",children:(0,r.jsx)("b",{children:"setf"})})," of ",(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," requires a ",(0,r.jsx)(s,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," as the new value. It is an error to set the ",(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," of a ",(0,r.jsx)(n.em,{children:"function-name"})," to a ",(0,r.jsx)(s,{term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})}),", a ",(0,r.jsx)(s,{term:"list",children:(0,r.jsx)("i",{children:"list"})}),", or the value returned by ",(0,r.jsx)(i,{term:"fdefinition",children:(0,r.jsx)("b",{children:"fdefinition"})})," on the name of a ",(0,r.jsx)(s,{term:"macro",children:(0,r.jsx)("i",{children:"macro"})})," or ",(0,r.jsx)(s,{styled:!0,term:"special form",children:(0,r.jsx)("i",{children:"special form"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Data and Control"}),"\n",(0,r.jsx)(i,{term:"fboundp",children:(0,r.jsx)("b",{children:"fboundp"})})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"fdefinition"},l="fdefinition",a={id:"chap-5/f-d-dictionary/fdefinition_accessor",title:"fdefinition",description:"Expanded Reference: fdefinition",source:"@site/docs/chap-5/f-d-dictionary/fdefinition_accessor.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/fdefinition_accessor",permalink:"/cl-language-reference/chap-5/f-d-dictionary/fdefinition_accessor",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-5/f-d-dictionary/fdefinition_accessor.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{title:"fdefinition"},sidebar:"tutorialSidebar",previous:{title:"fboundp",permalink:"/cl-language-reference/chap-5/f-d-dictionary/fboundp_function"},next:{title:"flet, labels, macrolet",permalink:"/cl-language-reference/chap-5/f-d-dictionary/flet_labels_macrolet_special-operator"}},f={},h=[{value:"Expanded Reference: fdefinition",id:"expanded-reference-fdefinition",level:2}];function x(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components},{GlossaryTerm:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"fdefinition",children:"fdefinition"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-fdefinition",children:"Expanded Reference: fdefinition"}),"\n",(0,r.jsxs)(n.p,{children:["The function name that is set with ",(0,r.jsx)(n.code,{children:"(setf (fdefinition"})," does not have to be ",(0,r.jsx)(i,{term:"fbound",children:(0,r.jsx)("i",{children:"fbound"})})," in the ",(0,r.jsx)(i,{styled:!0,term:"global environment",children:(0,r.jsx)("i",{children:"global environment"})}),". Therefore this can be useful for defining new functions programatically for them to be available in the ",(0,r.jsx)(i,{styled:!0,term:"global environment",children:(0,r.jsx)("i",{children:"global environment"})}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"CL-USER> (setf (fdefinition 'foo) (lambda (x) (+ x 1)))\n#<FUNCTION (LAMBDA (X)) {5436EE0B}>\nCL-USER> (foo 3)\n4 (3 bits, #x4, #o4, #b100)\n"})}),"\n",(0,r.jsx)(n.p,{children:"This can be useful when wanting to bind a function returned from another function to a global name."}),"\n",(0,r.jsxs)(n.p,{children:["Notice that ",(0,r.jsx)(n.code,{children:"fdefinition"})," is a function, so that its arguments are evaluated. Thus, if it is desirable to use a literal function name, it must be quoted."]}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"name"})," argument is not quoted, it will be taken to be the name of a variable, and if that variable does not have a value, an error will be signaled:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"CL-USER> (setf (fdefinition bar) (lambda (x) (+ x 1)))\n; in: SETF (FDEFINITION BAR)\n;     (#:BAR2176 BAR)\n; \n; caught WARNING:\n;   undefined variable: COMMON-LISP-USER::BAR\n; \n; compilation unit finished\n;   Undefined variable:\n;     BAR\n;   caught 1 WARNING condition\n; Debugger entered on #<UNBOUND-VARIABLE BAR {1005485F93}>\n\nThe variable BAR is unbound.\n   [Condition of type UNBOUND-VARIABLE]\n"})})]})}function j(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>c});var r=i(67294);const t={},s=r.createContext(t);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);