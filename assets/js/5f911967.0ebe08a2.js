"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[20227],{26732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var c=t(85893),i=t(11151);const s={},r="setf-generic-function-name",o={id:"meta-object-protocol/setf-generic-function-name",title:"setf-generic-function-name",description:"Generic Function (SETF GENERIC-FUNCTION-NAME)",source:"@site/docs/meta-object-protocol/setf-generic-function-name.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/setf-generic-function-name",permalink:"/cl-language-reference/meta-object-protocol/setf-generic-function-name",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/setf-generic-function-name.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"setf-class-name",permalink:"/cl-language-reference/meta-object-protocol/setf-class-name"},next:{title:"setf-slot-value-using-class-built-in-class",permalink:"/cl-language-reference/meta-object-protocol/setf-slot-value-using-class-built-in-class"}},a={},l=[];function m(e){const n={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"setf-generic-function-name",children:"setf-generic-function-name"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"Generic Function"})," ",(0,c.jsx)(n.strong,{children:"(SETF GENERIC-FUNCTION-NAME)"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:["(",(0,c.jsx)(n.code,{children:"setf"})," (",(0,c.jsx)(n.strong,{children:"generic-function-name"})," ",(0,c.jsx)(n.em,{children:"generic-function"}),") ",(0,c.jsx)(n.em,{children:"new-name"}),") => ",(0,c.jsx)(n.em,{children:"new-name"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Arguments and values:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"generic-function"})," -- A generic function metaobject."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"new-name"})," -- A function name or ",(0,c.jsx)(n.code,{children:"nil"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["This function changes the name of ",(0,c.jsx)(n.em,{children:"generic-function"})," to ",(0,c.jsx)(n.em,{children:"new-name"}),". This value is usually a function name (i.e., a symbol or a list of the form ",(0,c.jsx)(n.code,{children:"(setf symbol)"}),") or ",(0,c.jsx)(n.code,{children:"nil"}),", if the generic function is to have no name."]}),"\n",(0,c.jsxs)(n.p,{children:["This function works by calling",(0,c.jsx)(n.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/f_reinit.htm#reinitialize-instance",children:"reinitialize-instance"})," with ",(0,c.jsx)(n.em,{children:"generic-function"})," as its first argument, the symbol ",(0,c.jsx)(n.code,{children:":name"})," as its second argument and ",(0,c.jsx)(n.em,{children:"new-name"})," as its third argument."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var c=t(67294);const i={},s=c.createContext(i);function r(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);