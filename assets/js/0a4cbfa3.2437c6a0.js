"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[47660],{40421:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>j,frontMatter:()=>l,metadata:()=>h,toc:()=>a});var n=r(85893),s=r(11151);function i(e){const t={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"with-output-to-string"})," ",(0,n.jsx)(r,{styled:!0,term:"macro",children:(0,n.jsx)("i",{children:"Macro"})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"with-output-to-string",children:(0,n.jsx)("b",{children:"with-output-to-string"})})," (",(0,n.jsx)(t.em,{children:"var"})," &optional ",(0,n.jsx)(t.em,{children:"string-form"})," &key ",(0,n.jsx)(t.em,{children:"element-type"}),") ",(0,n.jsx)(r,{styled:!0,term:"declaration",children:(0,n.jsx)("i",{children:"{declaration}"})}),"* ",(0,n.jsx)(r,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"{form}"})}),"* \u2192 {result}*"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Arguments and Values:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"var"}),"\u2014a ",(0,n.jsx)(t.em,{children:"variable name"}),"."]}),"\n",(0,n.jsx)(r,{styled:!0,term:"with-output-to-string",children:(0,n.jsx)("b",{children:"with-output-to-string"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"string-form"}),"\u2014a ",(0,n.jsx)(r,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"form"})})," or ",(0,n.jsx)(r,{styled:!0,term:"nil",children:(0,n.jsx)("b",{children:"nil"})}),"; if ",(0,n.jsx)(r,{styled:!0,term:"non-nil",children:(0,n.jsx)("i",{children:"non-nil"})}),", evaluated to produce ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})}),"\u2014a ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," that has a ",(0,n.jsx)(t.em,{children:"fill pointer"})," ."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"element-type"}),"\u2014a ",(0,n.jsx)(t.em,{children:"type specifier"})," ; evaluated. The default is ",(0,n.jsx)(r,{styled:!0,term:"character",children:(0,n.jsx)("b",{children:"character"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"declaration",children:(0,n.jsx)("i",{children:"declaration"})}),"\u2014a ",(0,n.jsx)(r,{styled:!0,term:"declare",children:(0,n.jsx)("b",{children:"declare"})})," ",(0,n.jsx)(r,{styled:!0,term:"expression",children:(0,n.jsx)("i",{children:"expression"})}),"; not evaluated."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"forms"})}),"\u2014an ",(0,n.jsx)(t.em,{children:"implicit progn"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"results"}),"\u2014If a ",(0,n.jsx)(t.em,{children:"string-form"})," is not supplied or ",(0,n.jsx)(r,{styled:!0,term:"nil",children:(0,n.jsx)("b",{children:"nil"})}),", a ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})}),"; otherwise, the ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"values"})})," returned by the ",(0,n.jsx)(r,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"forms"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Description:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"with-output-to-string",children:(0,n.jsx)("b",{children:"with-output-to-string"})})," creates a character ",(0,n.jsx)(t.em,{children:"output stream"}),", performs a series of operations that may send results to this ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),", and then closes the ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.em,{children:"element-type"})," names the ",(0,n.jsx)(r,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"type"})})," of the elements of the ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),"; a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," is constructed of the most specialized ",(0,n.jsx)(r,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"type"})})," that can accommodate elements of the given ",(0,n.jsx)(r,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"type"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The body is executed as an ",(0,n.jsx)(t.em,{children:"implicit progn"})," with ",(0,n.jsx)(t.em,{children:"var"})," bound to an ",(0,n.jsx)(t.em,{children:"output string stream"}),". All output to that ",(0,n.jsx)(t.em,{children:"string stream"})," is saved in a ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["If ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," is supplied, ",(0,n.jsx)(t.em,{children:"element-type"})," is ignored, and the output is incrementally appended to ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," as if by use of ",(0,n.jsx)(r,{styled:!0,term:"vector-push-extend",children:(0,n.jsx)("b",{children:"vector-push-extend"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.em,{children:"output stream"})," is automatically closed on exit from ",(0,n.jsx)(t.strong,{children:"with-output-from-string"}),", no matter whether the exit is normal or abnormal. The ",(0,n.jsx)(t.em,{children:"output string stream"})," to which the ",(0,n.jsx)(t.em,{children:"variable var"})," is ",(0,n.jsx)(r,{styled:!0,term:"bound",children:(0,n.jsx)("i",{children:"bound"})})," has ",(0,n.jsx)(t.em,{children:"dynamic extent"}),"; its ",(0,n.jsx)(r,{styled:!0,term:"extent",children:(0,n.jsx)("i",{children:"extent"})})," ends when the ",(0,n.jsx)(r,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"form"})})," is exited."]}),"\n",(0,n.jsxs)(t.p,{children:["If no ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," is provided, then ",(0,n.jsx)(t.strong,{children:"with-output-from-string"})," produces a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," that accepts characters and returns a ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," of the indicated ",(0,n.jsx)(t.em,{children:"element-type"}),". If ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," is provided, ",(0,n.jsx)(r,{styled:!0,term:"with-output-to-string",children:(0,n.jsx)("b",{children:"with-output-to-string"})})," returns the results of evaluating the last ",(0,n.jsx)(r,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"form"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The consequences are undefined if an attempt is made to ",(0,n.jsx)(r,{styled:!0,term:"assign",children:(0,n.jsx)("i",{children:"assign"})})," the ",(0,n.jsx)(t.em,{children:"variable var"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Examples:"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lisp",children:' \n(setq fstr (make-array \u2019(0) :element-type \u2019base-char \n:fill-pointer 0 :adjustable t)) \u2192 "" \n(with-output-to-string (s fstr) \n(format s "here\u2019s some output") \n(input-stream-p s)) \u2192 false \nfstr \u2192 "here\u2019s some output" \n\n'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Side Effects:"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," is modified."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Exceptional Situations:"})}),"\n",(0,n.jsxs)(t.p,{children:["The consequences are undefined if destructive modifications are performed directly on the ",(0,n.jsx)(r,{styled:!0,term:"string",children:(0,n.jsx)("i",{children:"string"})})," during the ",(0,n.jsx)(t.em,{children:"dynamic extent"})," of the call."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"See Also:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("b",{children:"make-string-output-stream"}),", ",(0,n.jsx)("b",{children:"vector-push-extend"}),", Section 3.6 (Traversal Rules and Side Effects) ",(0,n.jsxs)("sup",{children:[(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:"debug-io"}),(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:","})," ",(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:"error-output"}),(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:","})," ",(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:"query-io"}),(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:","})," ",(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:"standard"})]})," input",(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:","})," ",(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:"standard-output"}),(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:","})," ",(0,n.jsx)("i",{children:"\u2217"}),(0,n.jsx)("b",{children:"trace-output"}),(0,n.jsx)("i",{children:"\u2217 Variable"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Value Type:"})}),"\n",(0,n.jsxs)(t.p,{children:["For ",(0,n.jsx)(t.strong,{children:"*standard-input*"}),": an ",(0,n.jsx)(t.em,{children:"input stream"})]}),"\n",(0,n.jsxs)(t.p,{children:["For ",(0,n.jsx)(t.strong,{children:"*error-output*"}),", ",(0,n.jsx)(t.strong,{children:"*standard-output*"}),", and ",(0,n.jsx)(t.strong,{children:"*trace-output*"}),": an ",(0,n.jsx)(t.em,{children:"output stream"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["For ",(0,n.jsx)(t.strong,{children:"*debug-io*"}),", ",(0,n.jsx)(t.strong,{children:"*query-io*"}),": a ",(0,n.jsx)(t.em,{children:"bidirectional stream"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Initial Value:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"implementation-dependent",children:(0,n.jsx)("i",{children:"implementation-dependent"})}),", but it must be an ",(0,n.jsx)(t.em,{children:"open stream"})," that is not a ",(0,n.jsx)(t.em,{children:"generalized synonym stream"})," to an ",(0,n.jsx)(t.em,{children:"I/O customization variables"})," but that might be a ",(0,n.jsx)(t.em,{children:"generalized synonym stream"})," to the value of some ",(0,n.jsx)(t.em,{children:"I/O customization variable"}),". The initial value might also be a ",(0,n.jsx)(t.em,{children:"generalized synonym stream"})," to either the ",(0,n.jsx)(r,{styled:!0,term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," ",(0,n.jsx)(r,{styled:!0,term:"terminal-io",children:(0,n.jsx)("b",{children:"*terminal-io*"})})," or to the ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," that is its ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Description:"})}),"\n",(0,n.jsxs)(t.p,{children:["These ",(0,n.jsx)(r,{styled:!0,term:"variable",children:(0,n.jsx)("i",{children:"variables"})})," are collectively called the ",(0,n.jsx)(t.em,{children:"standardized I/O customization variables"}),". They can be ",(0,n.jsx)(r,{styled:!0,term:"bound",children:(0,n.jsx)("i",{children:"bound"})})," or ",(0,n.jsx)(t.em,{children:"assigned"})," in order to change the default destinations for input and/or output used by various ",(0,n.jsx)(t.em,{children:"standardized operators"})," and facilities."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(t.strong,{children:"*debug-io*"}),", called ",(0,n.jsx)(t.em,{children:"debug I/O"}),", is a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," to be used for interactive debugging purposes."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(t.strong,{children:"*error-output*"}),", called ",(0,n.jsx)(t.em,{children:"error output"}),", is a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," to which warnings and non-interactive error messages should be sent."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(t.strong,{children:"*query-io*"}),", called ",(0,n.jsx)(t.em,{children:"query I/O"}),", is a ",(0,n.jsx)(t.em,{children:"bidirectional stream"})," to be used when asking questions of the user. The question should be output to this ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),", and the answer read from it."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(t.strong,{children:"*standard-input*"}),", called ",(0,n.jsx)(t.em,{children:"standard input"}),", is a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," that is used by many ",(0,n.jsx)(r,{styled:!0,term:"operator",children:(0,n.jsx)("i",{children:"operators"})})," as a default source of input when no specific ",(0,n.jsx)(t.em,{children:"input stream"})," is explicitly supplied."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(t.strong,{children:"*standard-output*"}),", called ",(0,n.jsx)(t.em,{children:"standard output"}),", is a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," that is used by many ",(0,n.jsx)(r,{styled:!0,term:"operator",children:(0,n.jsx)("i",{children:"operators"})})," as a default destination for output when no specific ",(0,n.jsx)(t.em,{children:"output stream"})," is explicitly supplied."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(t.strong,{children:"*trace-output*"}),", called ",(0,n.jsx)(t.em,{children:"trace output"}),", is the ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," on which traced functions (see ",(0,n.jsx)(r,{styled:!0,term:"trace",children:(0,n.jsx)("b",{children:"trace"})}),") and the ",(0,n.jsx)(r,{styled:!0,term:"time",children:(0,n.jsx)("b",{children:"time"})})," ",(0,n.jsx)(r,{styled:!0,term:"macro",children:(0,n.jsx)("i",{children:"macro"})})," print their output."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"\u2217"}),(0,n.jsx)(t.strong,{children:"debug-io"}),(0,n.jsx)(t.em,{children:"\u2217"}),"**,** ",(0,n.jsx)(t.em,{children:"\u2217"}),(0,n.jsx)(t.strong,{children:"error-output"}),(0,n.jsx)(t.em,{children:"\u2217"}),"**,** ",(0,n.jsx)(t.em,{children:"\u2217"}),(0,n.jsx)(t.strong,{children:"query-io"}),(0,n.jsx)(t.em,{children:"\u2217"}),"**,** ",(0,n.jsx)(t.em,{children:". . ."})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Examples:"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lisp",children:'\n(with-output-to-string (\\*error-output\\*) \n  (warn "this string is sent to \\*error-output\\*")) \n\u2192 "Warning: this string is sent to \\*error-output\\* \n" ;The exact format of this string is *implementation-dependent*. \n(with-input-from-string (\\*standard-input\\* "1001") \n  (+ 990 (read))) \u2192 1991 \n(progn (setq out (with-output-to-string (\\*standard-output\\*) \n\t\t   (print "print and format t send things to") \n\t\t   (format t "\\*standard-output\\* now going to a string"))) \n       :done) \n\u2192 :DONE \nout \n\u2192 " \n\\"print and format t send things to\\" \\*standard-output\\* now going to a string" \n(defun fact (n) (if (< n 2) 1 (\\* n (fact (- n 1))))) \n\u2192 FACT \n(trace fact) \n\u2192 (FACT) \n;; Of course, the format of traced output is implementation-dependent. \n(with-output-to-string (\\*trace-output\\*) \n  (fact 3)) \n\u2192 " \n1 Enter FACT 3 \n| 2 Enter FACT 2 \n| 3 Enter FACT 1 \n| 3 Exit FACT 1 \n| 2 Exit FACT 2 \n1 Exit FACT 6" \n\n'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"See Also:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"terminal-io",children:(0,n.jsx)("b",{children:"*terminal-io*"})}),", ",(0,n.jsx)(r,{styled:!0,term:"synonym-stream",children:(0,n.jsx)("b",{children:"synonym-stream"})}),", ",(0,n.jsx)(r,{styled:!0,term:"time",children:(0,n.jsx)("b",{children:"time"})}),", ",(0,n.jsx)(r,{styled:!0,term:"trace",children:(0,n.jsx)("b",{children:"trace"})}),", Chapter 9 (Conditions), Chapter 23 (Reader), Chapter 22 (Printer)"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Notes:"})}),"\n",(0,n.jsxs)(t.p,{children:["The intent of the constraints on the initial ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of the ",(0,n.jsx)(t.em,{children:"I/O customization variables"})," is to ensure that it is always safe to ",(0,n.jsx)(r,{styled:!0,term:"bind",children:(0,n.jsx)("i",{children:"bind"})})," or ",(0,n.jsx)(r,{styled:!0,term:"assign",children:(0,n.jsx)("i",{children:"assign"})})," such a ",(0,n.jsx)(r,{styled:!0,term:"variable",children:(0,n.jsx)("i",{children:"variable"})})," to the ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"value"})})," of another ",(0,n.jsx)(t.em,{children:"I/O customization"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(r,{styled:!0,term:"variable",children:(0,n.jsx)("i",{children:"variable"})}),", without unduly restricting ",(0,n.jsx)(r,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," flexibility."]}),"\n",(0,n.jsxs)(t.p,{children:["It is common for an ",(0,n.jsx)(r,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," to make the initial ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"values"})})," of ",(0,n.jsx)(t.strong,{children:"*debug-io*"})," and ",(0,n.jsx)(t.strong,{children:"*query-io*"})," be the ",(0,n.jsx)(t.em,{children:"same stream"}),", and to make the initial ",(0,n.jsx)(r,{styled:!0,term:"value",children:(0,n.jsx)("i",{children:"values"})})," of ",(0,n.jsx)(t.strong,{children:"*error-output*"})," and ",(0,n.jsx)(t.strong,{children:"*standard-output*"})," be the ",(0,n.jsx)(t.em,{children:"same stream"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The functions ",(0,n.jsx)(r,{styled:!0,term:"y-or-n-p",children:(0,n.jsx)("b",{children:"y-or-n-p"})})," and ",(0,n.jsx)(r,{styled:!0,term:"yes-or-no-p",children:(0,n.jsx)("b",{children:"yes-or-no-p"})})," use ",(0,n.jsx)(t.em,{children:"query I/O"})," for their input and output."]}),"\n",(0,n.jsxs)(t.p,{children:["In the normal ",(0,n.jsx)(t.em,{children:"Lisp read-eval-print loop"}),", input is read from ",(0,n.jsx)(t.em,{children:"standard input"}),". Many input functions, including ",(0,n.jsx)(r,{styled:!0,term:"read",children:(0,n.jsx)("b",{children:"read"})})," and ",(0,n.jsx)(r,{styled:!0,term:"read-char",children:(0,n.jsx)("b",{children:"read-char"})}),", take a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," argument that defaults to ",(0,n.jsx)(t.em,{children:"standard input"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["In the normal ",(0,n.jsx)(t.em,{children:"Lisp read-eval-print loop"}),", output is sent to ",(0,n.jsx)(t.em,{children:"standard output"}),". Many output functions, including ",(0,n.jsx)(r,{styled:!0,term:"print",children:(0,n.jsx)("b",{children:"print"})})," and ",(0,n.jsx)(r,{styled:!0,term:"write-char",children:(0,n.jsx)("b",{children:"write-char"})}),", take a ",(0,n.jsx)(r,{styled:!0,term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," argument that defaults to ",(0,n.jsx)(t.em,{children:"standard output"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["A program that wants, for example, to divert output to a file should do so by ",(0,n.jsx)(r,{styled:!0,term:"binding",children:(0,n.jsx)("i",{children:"binding"})})," ",(0,n.jsx)(t.strong,{children:"*standard-output*"}),"; that way error messages sent to ",(0,n.jsx)(t.strong,{children:"*error-output*"})," can still get to the user by going through ",(0,n.jsx)(r,{styled:!0,term:"terminal-io",children:(0,n.jsx)("b",{children:"*terminal-io*"})})," (if ",(0,n.jsx)(t.strong,{children:"*error-output*"})," is bound to ",(0,n.jsx)(r,{styled:!0,term:"terminal-io",children:(0,n.jsx)("b",{children:"*terminal-io*"})}),"), which is usually what is desired."]})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}const l={title:"with-output-to-string"},c="with-output-to-string",h={id:"chap-21/cb-c-dictionary/with-output-to-string_macro",title:"with-output-to-string",description:"Expanded Reference: with-output-to-string",source:"@site/docs/chap-21/cb-c-dictionary/with-output-to-string_macro.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/with-output-to-string_macro",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/with-output-to-string_macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/with-output-to-string_macro.md",tags:[],version:"current",frontMatter:{title:"with-output-to-string"},sidebar:"tutorialSidebar",previous:{title:"with-open-stream",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/with-open-stream_macro"},next:{title:"write-byte",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/write-byte_function"}},o={},a=[{value:"Expanded Reference: with-output-to-string",id:"expanded-reference-with-output-to-string",level:2}];function x(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"with-output-to-string",children:"with-output-to-string"}),"\n","\n","\n",(0,n.jsx)(d,{}),"\n",(0,n.jsx)(t.h2,{id:"expanded-reference-with-output-to-string",children:"Expanded Reference: with-output-to-string"}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lisp",children:"(with-output-to-string )\n"})})]})}function j(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>l,a:()=>d});var n=r(67294);const s={},i=n.createContext(s);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);