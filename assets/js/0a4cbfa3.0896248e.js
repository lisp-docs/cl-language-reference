"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[47660],{40421:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>l,toc:()=>h});var r=t(85893),s=t(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"with-output-to-string"})," ",(0,r.jsx)(n.em,{children:"Macro"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"with-output-to-string"})," (",(0,r.jsx)(n.em,{children:"var"})," &optional ",(0,r.jsx)(n.em,{children:"string-form"})," &key ",(0,r.jsx)(n.em,{children:"element-type"}),") ",(0,r.jsx)(n.em,{children:"{declaration}"}),"* ",(0,r.jsx)(n.em,{children:"{form}"}),"* \u2192 {result}*"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"var"}),"\u2014a ",(0,r.jsx)(n.em,{children:"variable name"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"with-output-to-string"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"string-form"}),"\u2014a ",(0,r.jsx)(n.em,{children:"form"})," or ",(0,r.jsx)(n.strong,{children:"nil"}),"; if ",(0,r.jsx)(n.em,{children:"non-nil"}),", evaluated to produce ",(0,r.jsx)(n.em,{children:"string"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"string"}),"\u2014a ",(0,r.jsx)(n.em,{children:"string"})," that has a ",(0,r.jsx)(n.em,{children:"fill pointer"})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"element-type"}),"\u2014a ",(0,r.jsx)(n.em,{children:"type specifier"})," ; evaluated. The default is ",(0,r.jsx)(n.strong,{children:"character"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"declaration"}),"\u2014a ",(0,r.jsx)(n.strong,{children:"declare"})," ",(0,r.jsx)(n.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"forms"}),"\u2014an ",(0,r.jsx)(n.em,{children:"implicit progn"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"results"}),"\u2014If a ",(0,r.jsx)(n.em,{children:"string-form"})," is not supplied or ",(0,r.jsx)(n.strong,{children:"nil"}),", a ",(0,r.jsx)(n.em,{children:"string"}),"; otherwise, the ",(0,r.jsx)(n.em,{children:"values"})," returned by the ",(0,r.jsx)(n.em,{children:"forms"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"with-output-to-string"})," creates a character ",(0,r.jsx)(n.em,{children:"output stream"}),", performs a series of operations that may send results to this ",(0,r.jsx)(n.em,{children:"stream"}),", and then closes the ",(0,r.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"element-type"})," names the ",(0,r.jsx)(n.em,{children:"type"})," of the elements of the ",(0,r.jsx)(n.em,{children:"stream"}),"; a ",(0,r.jsx)(n.em,{children:"stream"})," is constructed of the most specialized ",(0,r.jsx)(n.em,{children:"type"})," that can accommodate elements of the given ",(0,r.jsx)(n.em,{children:"type"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The body is executed as an ",(0,r.jsx)(n.em,{children:"implicit progn"})," with ",(0,r.jsx)(n.em,{children:"var"})," bound to an ",(0,r.jsx)(n.em,{children:"output string stream"}),". All output to that ",(0,r.jsx)(n.em,{children:"string stream"})," is saved in a ",(0,r.jsx)(n.em,{children:"string"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.em,{children:"string"})," is supplied, ",(0,r.jsx)(n.em,{children:"element-type"})," is ignored, and the output is incrementally appended to ",(0,r.jsx)(n.em,{children:"string"})," as if by use of ",(0,r.jsx)(n.strong,{children:"vector-push-extend"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"output stream"})," is automatically closed on exit from ",(0,r.jsx)(n.strong,{children:"with-output-from-string"}),", no matter whether the exit is normal or abnormal. The ",(0,r.jsx)(n.em,{children:"output string stream"})," to which the ",(0,r.jsx)(n.em,{children:"variable var"})," is ",(0,r.jsx)(n.em,{children:"bound"})," has ",(0,r.jsx)(n.em,{children:"dynamic extent"}),"; its ",(0,r.jsx)(n.em,{children:"extent"})," ends when the ",(0,r.jsx)(n.em,{children:"form"})," is exited."]}),"\n",(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.em,{children:"string"})," is provided, then ",(0,r.jsx)(n.strong,{children:"with-output-from-string"})," produces a ",(0,r.jsx)(n.em,{children:"stream"})," that accepts characters and returns a ",(0,r.jsx)(n.em,{children:"string"})," of the indicated ",(0,r.jsx)(n.em,{children:"element-type"}),". If ",(0,r.jsx)(n.em,{children:"string"})," is provided, ",(0,r.jsx)(n.strong,{children:"with-output-to-string"})," returns the results of evaluating the last ",(0,r.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The consequences are undefined if an attempt is made to ",(0,r.jsx)(n.em,{children:"assign"})," the ",(0,r.jsx)(n.em,{children:"variable var"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:' \n(setq fstr (make-array \u2019(0) :element-type \u2019base-char \n:fill-pointer 0 :adjustable t)) \u2192 "" \n(with-output-to-string (s fstr) \n(format s "here\u2019s some output") \n(input-stream-p s)) \u2192 false \nfstr \u2192 "here\u2019s some output" \n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"string"})," is modified."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsxs)(n.p,{children:["The consequences are undefined if destructive modifications are performed directly on the ",(0,r.jsx)(n.em,{children:"string"})," during the ",(0,r.jsx)(n.em,{children:"dynamic extent"})," of the call."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"make-string-output-stream"}),", ",(0,r.jsx)(n.strong,{children:"vector-push-extend"}),", Section 3.6 (Traversal Rules and Side Effects) ",(0,r.jsxs)("sup",{children:[(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"debug-io"}),(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:","})," ",(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"error-output"}),(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:","})," ",(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"query-io"}),(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:","})," ",(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"standard"})]})," input",(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:","})," ",(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"standard-output"}),(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:","})," ",(0,r.jsx)("i",{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"trace-output"}),(0,r.jsx)("i",{children:"\u2217 Variable"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.strong,{children:"*standard-input*"}),": an ",(0,r.jsx)(n.em,{children:"input stream"})]}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.strong,{children:"*error-output*"}),", ",(0,r.jsx)(n.strong,{children:"*standard-output*"}),", and ",(0,r.jsx)(n.strong,{children:"*trace-output*"}),": an ",(0,r.jsx)(n.em,{children:"output stream"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.strong,{children:"*debug-io*"}),", ",(0,r.jsx)(n.strong,{children:"*query-io*"}),": a ",(0,r.jsx)(n.em,{children:"bidirectional stream"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"implementation-dependent"}),", but it must be an ",(0,r.jsx)(n.em,{children:"open stream"})," that is not a ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to an ",(0,r.jsx)(n.em,{children:"I/O customization variables"})," but that might be a ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to the value of some ",(0,r.jsx)(n.em,{children:"I/O customization variable"}),". The initial value might also be a ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to either the ",(0,r.jsx)(n.em,{children:"symbol"})," ",(0,r.jsx)(n.strong,{children:"*terminal-io*"})," or to the ",(0,r.jsx)(n.em,{children:"stream"})," that is its ",(0,r.jsx)(n.em,{children:"value"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["These ",(0,r.jsx)(n.em,{children:"variables"})," are collectively called the ",(0,r.jsx)(n.em,{children:"standardized I/O customization variables"}),". They can be ",(0,r.jsx)(n.em,{children:"bound"})," or ",(0,r.jsx)(n.em,{children:"assigned"})," in order to change the default destinations for input and/or output used by various ",(0,r.jsx)(n.em,{children:"standardized operators"})," and facilities."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*debug-io*"}),", called ",(0,r.jsx)(n.em,{children:"debug I/O"}),", is a ",(0,r.jsx)(n.em,{children:"stream"})," to be used for interactive debugging purposes."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*error-output*"}),", called ",(0,r.jsx)(n.em,{children:"error output"}),", is a ",(0,r.jsx)(n.em,{children:"stream"})," to which warnings and non-interactive error messages should be sent."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*query-io*"}),", called ",(0,r.jsx)(n.em,{children:"query I/O"}),", is a ",(0,r.jsx)(n.em,{children:"bidirectional stream"})," to be used when asking questions of the user. The question should be output to this ",(0,r.jsx)(n.em,{children:"stream"}),", and the answer read from it."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*standard-input*"}),", called ",(0,r.jsx)(n.em,{children:"standard input"}),", is a ",(0,r.jsx)(n.em,{children:"stream"})," that is used by many ",(0,r.jsx)(n.em,{children:"operators"})," as a default source of input when no specific ",(0,r.jsx)(n.em,{children:"input stream"})," is explicitly supplied."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*standard-output*"}),", called ",(0,r.jsx)(n.em,{children:"standard output"}),", is a ",(0,r.jsx)(n.em,{children:"stream"})," that is used by many ",(0,r.jsx)(n.em,{children:"operators"})," as a default destination for output when no specific ",(0,r.jsx)(n.em,{children:"output stream"})," is explicitly supplied."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*trace-output*"}),", called ",(0,r.jsx)(n.em,{children:"trace output"}),", is the ",(0,r.jsx)(n.em,{children:"stream"})," on which traced functions (see ",(0,r.jsx)(n.strong,{children:"trace"}),") and the ",(0,r.jsx)(n.strong,{children:"time"})," ",(0,r.jsx)(n.em,{children:"macro"})," print their output."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"debug-io"}),(0,r.jsx)(n.em,{children:"\u2217"}),"**,** ",(0,r.jsx)(n.em,{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"error-output"}),(0,r.jsx)(n.em,{children:"\u2217"}),"**,** ",(0,r.jsx)(n.em,{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"query-io"}),(0,r.jsx)(n.em,{children:"\u2217"}),"**,** ",(0,r.jsx)(n.em,{children:". . ."})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:'\n(with-output-to-string (\\*error-output\\*) \n  (warn "this string is sent to \\*error-output\\*")) \n\u2192 "Warning: this string is sent to \\*error-output\\* \n" ;The exact format of this string is *implementation-dependent*. \n(with-input-from-string (\\*standard-input\\* "1001") \n  (+ 990 (read))) \u2192 1991 \n(progn (setq out (with-output-to-string (\\*standard-output\\*) \n\t\t   (print "print and format t send things to") \n\t\t   (format t "\\*standard-output\\* now going to a string"))) \n       :done) \n\u2192 :DONE \nout \n\u2192 " \n\\"print and format t send things to\\" \\*standard-output\\* now going to a string" \n(defun fact (n) (if (< n 2) 1 (\\* n (fact (- n 1))))) \n\u2192 FACT \n(trace fact) \n\u2192 (FACT) \n;; Of course, the format of traced output is implementation-dependent. \n(with-output-to-string (\\*trace-output\\*) \n  (fact 3)) \n\u2192 " \n1 Enter FACT 3 \n| 2 Enter FACT 2 \n| 3 Enter FACT 1 \n| 3 Exit FACT 1 \n| 2 Exit FACT 2 \n1 Exit FACT 6" \n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*terminal-io*"}),", ",(0,r.jsx)(n.strong,{children:"synonym-stream"}),", ",(0,r.jsx)(n.strong,{children:"time"}),", ",(0,r.jsx)(n.strong,{children:"trace"}),", Chapter 9 (Conditions), Chapter 23 (Reader), Chapter 22 (Printer)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["The intent of the constraints on the initial ",(0,r.jsx)(n.em,{children:"value"})," of the ",(0,r.jsx)(n.em,{children:"I/O customization variables"})," is to ensure that it is always safe to ",(0,r.jsx)(n.em,{children:"bind"})," or ",(0,r.jsx)(n.em,{children:"assign"})," such a ",(0,r.jsx)(n.em,{children:"variable"})," to the ",(0,r.jsx)(n.em,{children:"value"})," of another ",(0,r.jsx)(n.em,{children:"I/O customization"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"variable"}),", without unduly restricting ",(0,r.jsx)(n.em,{children:"implementation"})," flexibility."]}),"\n",(0,r.jsxs)(n.p,{children:["It is common for an ",(0,r.jsx)(n.em,{children:"implementation"})," to make the initial ",(0,r.jsx)(n.em,{children:"values"})," of ",(0,r.jsx)(n.strong,{children:"*debug-io*"})," and ",(0,r.jsx)(n.strong,{children:"*query-io*"})," be the ",(0,r.jsx)(n.em,{children:"same stream"}),", and to make the initial ",(0,r.jsx)(n.em,{children:"values"})," of ",(0,r.jsx)(n.strong,{children:"*error-output*"})," and ",(0,r.jsx)(n.strong,{children:"*standard-output*"})," be the ",(0,r.jsx)(n.em,{children:"same stream"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The functions ",(0,r.jsx)(n.strong,{children:"y-or-n-p"})," and ",(0,r.jsx)(n.strong,{children:"yes-or-no-p"})," use ",(0,r.jsx)(n.em,{children:"query I/O"})," for their input and output."]}),"\n",(0,r.jsxs)(n.p,{children:["In the normal ",(0,r.jsx)(n.em,{children:"Lisp read-eval-print loop"}),", input is read from ",(0,r.jsx)(n.em,{children:"standard input"}),". Many input functions, including ",(0,r.jsx)(n.strong,{children:"read"})," and ",(0,r.jsx)(n.strong,{children:"read-char"}),", take a ",(0,r.jsx)(n.em,{children:"stream"})," argument that defaults to ",(0,r.jsx)(n.em,{children:"standard input"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In the normal ",(0,r.jsx)(n.em,{children:"Lisp read-eval-print loop"}),", output is sent to ",(0,r.jsx)(n.em,{children:"standard output"}),". Many output functions, including ",(0,r.jsx)(n.strong,{children:"print"})," and ",(0,r.jsx)(n.strong,{children:"write-char"}),", take a ",(0,r.jsx)(n.em,{children:"stream"})," argument that defaults to ",(0,r.jsx)(n.em,{children:"standard output"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A program that wants, for example, to divert output to a file should do so by ",(0,r.jsx)(n.em,{children:"binding"})," ",(0,r.jsx)(n.strong,{children:"*standard-output*"}),"; that way error messages sent to ",(0,r.jsx)(n.strong,{children:"*error-output*"})," can still get to the user by going through ",(0,r.jsx)(n.strong,{children:"*terminal-io*"})," (if ",(0,r.jsx)(n.strong,{children:"*error-output*"})," is bound to ",(0,r.jsx)(n.strong,{children:"*terminal-io*"}),"), which is usually what is desired."]})]})}function o(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}const d={},c="with-output-to-string",l={id:"chap-21/cb-c-dictionary/with-output-to-string_macro",title:"with-output-to-string",description:"Expanded Reference: with-output-to-string",source:"@site/docs/chap-21/cb-c-dictionary/with-output-to-string_macro.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/with-output-to-string_macro",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/with-output-to-string_macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/with-output-to-string_macro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"with-open-file",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/with-open-file_macro"},next:{title:"with-input-from-string",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/withinputfromstring"}},a={},h=[{value:"Expanded Reference: with-output-to-string",id:"expanded-reference-with-output-to-string",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"with-output-to-string",children:"with-output-to-string"}),"\n","\n","\n",(0,r.jsx)(o,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-with-output-to-string",children:"Expanded Reference: with-output-to-string"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(with-output-to-string )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>o});var r=t(67294);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);