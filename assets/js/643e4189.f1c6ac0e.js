"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[39416],{21416:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>h,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=t(85893),i=t(11151);function s(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:s}=n;return t||c("DictionaryLink",!0),s||c("GlossaryTerm",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"pathname"})," ",(0,a.jsx)(s,{term:"function",children:(0,a.jsx)("i",{children:"Function"})})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(t,{term:"pathname",children:(0,a.jsx)("b",{children:"pathname"})})," ",(0,a.jsx)(n.em,{children:"pathspec \u2192 pathname"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,a.jsx)(s,{styled:!0,term:"pathname designator",children:(0,a.jsx)("i",{children:"pathname designator"})})," ."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(s,{term:"pathname",children:(0,a.jsx)("i",{children:"pathname"})}),"\u2014a ",(0,a.jsx)(s,{term:"pathname",children:(0,a.jsx)("i",{children:"pathname"})}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Description:"})}),"\n",(0,a.jsxs)(n.p,{children:["Returns the ",(0,a.jsx)(s,{term:"pathname",children:(0,a.jsx)("i",{children:"pathname"})})," denoted by ",(0,a.jsx)(n.em,{children:"pathspec"}),"."]}),"\n",(0,a.jsx)(t,{term:"pathname",children:(0,a.jsx)("b",{children:"pathname"})}),"\n",(0,a.jsxs)(n.p,{children:["If the ",(0,a.jsx)(n.em,{children:"pathspec designator"})," is a ",(0,a.jsx)(s,{term:"stream",children:(0,a.jsx)("i",{children:"stream"})}),", the ",(0,a.jsx)(s,{term:"stream",children:(0,a.jsx)("i",{children:"stream"})})," can be either open or closed; in both cases, the ",(0,a.jsx)(t,{term:"pathname",children:(0,a.jsx)("b",{children:"pathname"})})," returned corresponds to the ",(0,a.jsx)(s,{term:"filename",children:(0,a.jsx)("i",{children:"filename"})})," used to open the ",(0,a.jsx)(s,{term:"file",children:(0,a.jsx)("i",{children:"file"})}),". ",(0,a.jsx)(t,{term:"pathname",children:(0,a.jsx)("b",{children:"pathname"})})," returns the same ",(0,a.jsx)(s,{term:"pathname",children:(0,a.jsx)("i",{children:"pathname"})})," for a ",(0,a.jsx)(s,{styled:!0,term:"file stream",children:(0,a.jsx)("i",{children:"file stream"})})," after it is closed as it did when it was open."]}),"\n",(0,a.jsxs)(n.p,{children:["If the ",(0,a.jsx)(n.em,{children:"pathspec designator"})," is a ",(0,a.jsx)(s,{styled:!0,term:"file stream",children:(0,a.jsx)("i",{children:"file stream"})})," created by opening a ",(0,a.jsx)(s,{styled:!0,term:"logical pathname",children:(0,a.jsx)("i",{children:"logical pathname"})}),", a ",(0,a.jsx)(s,{styled:!0,term:"logical pathname",children:(0,a.jsx)("i",{children:"logical pathname"})})," is returned."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lisp",children:';; There is a great degree of variability permitted here. The next \n;; several examples are intended to illustrate just a few of the many \n;; possibilities. Whether the name is canonicalized to a particular \n;; case (either upper or lower) depends on both the file system and the \n;; implementation since two different implementations using the same \n;; file system might differ on many issues. How information is stored \n;; internally (and possibly presented in #S notation) might vary, \n;; possibly requiring \u2018accessors\u2019 such as PATHNAME-NAME to perform case \n;; conversion upon access. The format of a namestring is dependent both \n;; on the file system and the implementation since, for example, one \n;; implementation might include the host name in a namestring, and \n;; another might not. #S notation would generally only be used in a \n;; situation where no appropriate namestring could be constructed for use \n;; with #P. \n(setq p1 (pathname "test")) \n\u2192 #P"CHOCOLATE:TEST" ; with case canonicalization (e.g., VMS) \n<i><sup>or</sup>\u2192</i> #P"VANILLA:test" ; without case canonicalization (e.g., Unix) \n<i><sup>or</sup>\u2192</i> #P"test" \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "STRAWBERRY" :NAME "TEST") \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "BELGIAN-CHOCOLATE" :NAME "test") \n(setq p2 (pathname "test")) \n\u2192 #P"CHOCOLATE:TEST" \n<i><sup>or</sup>\u2192</i> #P"VANILLA:test" \n<i><sup>or</sup>\u2192</i> #P"test" \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "STRAWBERRY" :NAME "TEST") \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "BELGIAN-CHOCOLATE" :NAME "test") \n(pathnamep p1) \u2192 true \n(eq p1 (pathname p1)) \u2192 true \n(eq p1 p2) \n\u2192 true \n<i><sup>or</sup>\u2192 false</i> \n(with-open-file (stream "test" :direction :output) \n  (pathname stream)) \n\u2192 #P"ORANGE-CHOCOLATE:>Gus>test.lisp.newest" \n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(t,{term:"pathname",children:(0,a.jsx)("b",{children:"pathname"})}),", ",(0,a.jsx)(t,{term:"logical-pathname",children:(0,a.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as"]}),"\n",(0,a.jsx)(n.p,{children:"Filenames)"})]})}function r(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const o={title:"pathname"},h="pathname",p={id:"chap-19/bj-e-dictionary/pathname_function",title:"pathname",description:"Expanded Reference: pathname",source:"@site/docs/chap-19/bj-e-dictionary/pathname_function.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/pathname_function",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/pathname_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/pathname_function.md",tags:[],version:"current",frontMatter:{title:"pathname"},sidebar:"tutorialSidebar",previous:{title:"pathname-match-p",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/pathname-match-p_function"},next:{title:"pathname",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/pathname_system-class"}},l={},d=[{value:"Expanded Reference: pathname",id:"expanded-reference-pathname",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"pathname",children:"pathname"}),"\n","\n","\n",(0,a.jsx)(r,{}),"\n",(0,a.jsx)(n.h2,{id:"expanded-reference-pathname",children:"Expanded Reference: pathname"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lisp",children:"(pathname )\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var a=t(67294);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);