"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[82818],{47265:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>p,toc:()=>d});var s=t(85893),a=t(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"pathname"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"pathname"})," ",(0,s.jsx)(n.em,{children:"pathspec \u2192 pathname"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"pathname"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["Returns the ",(0,s.jsx)(n.em,{children:"pathname"})," denoted by ",(0,s.jsx)(n.em,{children:"pathspec"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"pathname"})}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.em,{children:"pathspec designator"})," is a ",(0,s.jsx)(n.em,{children:"stream"}),", the ",(0,s.jsx)(n.em,{children:"stream"})," can be either open or closed; in both cases, the ",(0,s.jsx)(n.strong,{children:"pathname"})," returned corresponds to the ",(0,s.jsx)(n.em,{children:"filename"})," used to open the ",(0,s.jsx)(n.em,{children:"file"}),". ",(0,s.jsx)(n.strong,{children:"pathname"})," returns the same ",(0,s.jsx)(n.em,{children:"pathname"})," for a ",(0,s.jsx)(n.em,{children:"file stream"})," after it is closed as it did when it was open."]}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.em,{children:"pathspec designator"})," is a ",(0,s.jsx)(n.em,{children:"file stream"})," created by opening a ",(0,s.jsx)(n.em,{children:"logical pathname"}),", a ",(0,s.jsx)(n.em,{children:"logical pathname"})," is returned."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:'\n;; There is a great degree of variability permitted here. The next \n;; several examples are intended to illustrate just a few of the many \n;; possibilities. Whether the name is canonicalized to a particular \n;; case (either upper or lower) depends on both the file system and the \n;; implementation since two different implementations using the same \n;; file system might differ on many issues. How information is stored \n;; internally (and possibly presented in #S notation) might vary, \n;; possibly requiring \u2018accessors\u2019 such as PATHNAME-NAME to perform case \n;; conversion upon access. The format of a namestring is dependent both \n;; on the file system and the implementation since, for example, one \n;; implementation might include the host name in a namestring, and \n;; another might not. #S notation would generally only be used in a \n;; situation where no appropriate namestring could be constructed for use \n;; with #P. \n(setq p1 (pathname "test")) \n\u2192 #P"CHOCOLATE:TEST" ; with case canonicalization (e.g., VMS) \n<i><sup>or</sup>\u2192</i> #P"VANILLA:test" ; without case canonicalization (e.g., Unix) \n<i><sup>or</sup>\u2192</i> #P"test" \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "STRAWBERRY" :NAME "TEST") \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "BELGIAN-CHOCOLATE" :NAME "test") \n(setq p2 (pathname "test")) \n\u2192 #P"CHOCOLATE:TEST" \n<i><sup>or</sup>\u2192</i> #P"VANILLA:test" \n<i><sup>or</sup>\u2192</i> #P"test" \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "STRAWBERRY" :NAME "TEST") \n<i><sup>or</sup>\u2192</i> #S(PATHNAME :HOST "BELGIAN-CHOCOLATE" :NAME "test") \n(pathnamep p1) \u2192 true \n(eq p1 (pathname p1)) \u2192 true \n(eq p1 p2) \n\u2192 true \n<i><sup>or</sup>\u2192 false</i> \n(with-open-file (stream "test" :direction :output) \n  (pathname stream)) \n\u2192 #P"ORANGE-CHOCOLATE:>Gus>test.lisp.newest" \n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"pathname"}),", ",(0,s.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as"]}),"\n",(0,s.jsx)(n.p,{children:"Filenames)"})]})}function r(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const c={},o="pathname",p={id:"chap-19/bj-e-dictionary/pathname",title:"pathname",description:"Expanded Reference: pathname",source:"@site/docs/chap-19/bj-e-dictionary/pathname.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathname",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/pathname.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"parse-namestring",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/parsenamestring"},next:{title:"pathname-match-p",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathnamematchp"}},h={},d=[{value:"Expanded Reference: pathname",id:"expanded-reference-pathname",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"pathname",children:"pathname"}),"\n","\n","\n",(0,s.jsx)(r,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-pathname",children:"Expanded Reference: pathname"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(pathname )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var s=t(67294);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);