"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[7824],{98300:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});var c=t(85893),r=t(11151);const o={},i="generic-function-methods",s={id:"meta-object-protocol/generic-function-methods",title:"generic-function-methods",description:"Generic Function GENERIC-FUNCTION-METHODS",source:"@site/docs/meta-object-protocol/generic-function-methods.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/generic-function-methods",permalink:"/cl-language-reference/meta-object-protocol/generic-function-methods",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/generic-function-methods.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"generic-function-methods-standard-generic-function",permalink:"/cl-language-reference/meta-object-protocol/generic-function-methods-standard-generic-function"},next:{title:"generic-function-name-standard-generic-function",permalink:"/cl-language-reference/meta-object-protocol/generic-function-name-standard-generic-function"}},d={},a=[{value:"<strong>generic-function-methods</strong> (<em>generic-function</em> standard-generic-function)",id:"generic-function-methods-generic-function-standard-generic-function",level:2}];function l(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"generic-function-methods",children:"generic-function-methods"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"Generic Function"})," ",(0,c.jsx)(n.strong,{children:"GENERIC-FUNCTION-METHODS"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"generic-function-methods"})," ",(0,c.jsx)(n.em,{children:"generic-function"})," => ",(0,c.jsx)(n.em,{children:"methods"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Arguments and values:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"generic-function"})," -- A generic function metaobject."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"methods"})," -- A list of method metaobjects."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["This generic function returns the set of methods currently connected to the generic function. This is a set of method metaobjects. This value is maintained by the generic functions",(0,c.jsx)(n.a,{href:"/meta-object-protocol/add-method",children:"add-method"})," and ",(0,c.jsx)(n.a,{href:"/meta-object-protocol/remove-method",children:"remove-method"}),"."]}),"\n",(0,c.jsx)(n.p,{children:"This generic function can be called by the user or the implementation."}),"\n",(0,c.jsxs)(n.p,{children:["An error is signaled if the argument ",(0,c.jsx)(n.em,{children:"generic-function"})," is not a generic function metaobject. An error is also signaled if the generic function metaobject has not been initialized."]}),"\n",(0,c.jsx)(n.p,{children:"The list returned by this generic function will not be mutated by the implementation. The results are undefined if a portable program mutates the list returned by this generic function."}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Methods:"})}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"generic-function-methods-generic-function-standard-generic-function",children:(0,c.jsxs)(n.a,{href:"/meta-object-protocol/generic-function-methods-standard-generic-function",children:[(0,c.jsx)(n.strong,{children:"generic-function-methods"})," (",(0,c.jsx)(n.em,{children:"generic-function"})," standard-generic-function)"]})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var c=t(67294);const r={},o=c.createContext(r);function i(e){const n=c.useContext(o);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);