"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[42464],{7597:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var c=o(85893),n=o(11151);const s={},a="Metaobjects",i={id:"meta-object-protocol/metaobjects",title:"Metaobjects",description:"Metaobjects",source:"@site/docs/meta-object-protocol/metaobjects.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/metaobjects",permalink:"/cl-language-reference/meta-object-protocol/metaobjects",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/metaobjects.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Metaobject initialization protocols",permalink:"/cl-language-reference/meta-object-protocol/metaobject-initialization-protocols"},next:{title:"Method combinations",permalink:"/cl-language-reference/meta-object-protocol/method-combinations"}},r={},l=[{value:"Metaobjects",id:"metaobjects-1",level:2}];function m(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h1,{id:"metaobjects",children:"Metaobjects"}),"\n",(0,c.jsx)(t.h2,{id:"metaobjects-1",children:"Metaobjects"}),"\n",(0,c.jsxs)(t.p,{children:["For each kind of program element there is a corresponding ",(0,c.jsx)(t.em,{children:"basic metaobject class"}),". These are the classes: ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/class-class",children:"class"}),", ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/class-slot-definition",children:"slot-definition"}),", ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/class-generic-function",children:"generic-function"}),", ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/class-method",children:"method"}),", and ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/class-method-combination",children:"method-combination"}),". A ",(0,c.jsx)(t.em,{children:"metaobject class"})," is a subclass of exactly one of these classes. The results are undefined if an attempt is made to define a class that is a subclass of more than one basic metaobject class. A ",(0,c.jsx)(t.em,{children:"metaobject"})," is an instance of a metaobject class."]}),"\n",(0,c.jsxs)(t.p,{children:["Each metaobject represents one program element. Associated with each metaobject is the information required to serve its role. This includes information that might be provided directly in a user interface macro such as ",(0,c.jsx)(t.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/m_defcla.htm#defclass",children:"defclass"})," or ",(0,c.jsx)(t.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/m_defcla.htm#defmethod",children:"defmethod"}),". It also includes information computed indirectly from other metaobjects such as that computed from class inheritance or the full set of methods associated with a generic function."]}),"\n",(0,c.jsx)(t.p,{children:"Much of the information associated with a metaobject is in the form of connections to other metaobjects. This interconnection means that the role of a metaobject is always based on that of other metaobjects. As an introduction to this interconnected structure, this section presents a partial enumeration of the kinds of information associated with each kind of metaobject. More detailed information is presented later."}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/meta-object-protocol/classes",children:"Classes"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/meta-object-protocol/slot-definitions",children:"Slot definitions"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/meta-object-protocol/generic-functions",children:"Generic functions"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/meta-object-protocol/methods",children:"Methods"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/meta-object-protocol/specializers",children:"Specializers"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/meta-object-protocol/method-combinations",children:"Method combinations"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(m,{...e})}):m(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>i,a:()=>a});var c=o(67294);const n={},s=c.createContext(n);function a(e){const t=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),c.createElement(s.Provider,{value:t},e.children)}}}]);