"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23751],{22208:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var c=r(85893),i=r(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"mod"})," ",(0,c.jsx)(n.em,{children:"Type Specifier"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,c.jsx)(n.p,{children:"Abbreviating."}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:["(mod ",(0,c.jsx)(n.em,{children:"n"}),")"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"n"}),"\u2014a positive ",(0,c.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["This denotes the set of non-negative ",(0,c.jsx)(n.em,{children:"integers"})," less than ",(0,c.jsx)(n.em,{children:"n"}),". This is equivalent to (integer 0 (",(0,c.jsx)(n.em,{children:"n"}),")) or to (integer 0 ",(0,c.jsx)(n.em,{children:"m"}),"), where ",(0,c.jsx)(n.em,{children:"m"})," = ",(0,c.jsx)(n.em,{children:"n \u2212"})," 1."]}),"\n",(0,c.jsxs)(n.p,{children:["The argument is required, and cannot be ",(0,c.jsx)(n.strong,{children:"*"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["The symbol ",(0,c.jsx)(n.strong,{children:"mod"})," is not valid as a ",(0,c.jsx)(n.em,{children:"type specifier"})," ."]})]})}function t(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(s,{...e})}):s(e)}const o={},d="mod",a={id:"chap-12/bc-c-dictionary/mod",title:"mod",description:"Expanded Reference: mod",source:"@site/docs/chap-12/bc-c-dictionary/mod.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/mod",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/mod",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/mod.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"minusp, plusp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/minuspaaplusp"},next:{title:"mod, rem",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/modaarem"}},l={},p=[{value:"Expanded Reference: mod",id:"expanded-reference-mod",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"mod",children:"mod"}),"\n","\n","\n",(0,c.jsx)(t,{}),"\n",(0,c.jsx)(n.h2,{id:"expanded-reference-mod",children:"Expanded Reference: mod"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"(mod )\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>t});var c=r(67294);const i={},s=c.createContext(i);function t(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);