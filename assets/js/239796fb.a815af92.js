"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[38522],{58833:(t,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var e=i(85893),o=i(11151);const l={},s="slot-definition-allocation",a={id:"meta-object-protocol/dictionary/slot-definition-allocation",title:"slot-definition-allocation",description:"Generic Function SLOT-DEFINITION-ALLOCATION",source:"@site/docs/meta-object-protocol/dictionary/slot-definition-allocation.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/slot-definition-allocation",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-definition-allocation",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/slot-definition-allocation.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"slot-definition-allocation-standard-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-definition-allocation-standard-slot-definition"},next:{title:"slot-definition-initargs-standard-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-definition-initargs-standard-slot-definition"}},r={},c=[{value:"<strong>slot-definition-allocation</strong> (<em>slot</em> standard-slot-definition)",id:"slot-definition-allocation-slot-standard-slot-definition",level:2}];function d(t){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,o.a)(),...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:"slot-definition-allocation",children:"slot-definition-allocation"}),"\n",(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:"Generic Function"})," ",(0,e.jsx)(n.strong,{children:"SLOT-DEFINITION-ALLOCATION"})]}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:"slot-definition-allocation"})," ",(0,e.jsx)(n.em,{children:"slot"})," => ",(0,e.jsx)(n.em,{children:"allocation"})]}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Arguments and values:"})}),"\n",(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:"slot"})," -- A slot definition metaobject."]}),"\n",(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:"allocation"})," -- A symbol."]}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Description:"})}),"\n",(0,e.jsxs)(n.p,{children:["Returns the allocation of ",(0,e.jsx)(n.em,{children:"slot"}),". This is a symbol. This is the defaulted value of the ",(0,e.jsx)(n.code,{children:":allocation"})," initialization argument that was associated with the slot definition metaobject during initialization."]}),"\n",(0,e.jsx)(n.p,{children:"This generic function can be called by the user or the implementation."}),"\n",(0,e.jsxs)(n.p,{children:["An error is signaled if the argument ",(0,e.jsx)(n.em,{children:"slot"})," is not a slot definition metaobject. An error is also signaled if the slot definition metaobject has not been initialized."]}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Methods:"})}),"\n",(0,e.jsx)(n.hr,{}),"\n",(0,e.jsx)(n.h2,{id:"slot-definition-allocation-slot-standard-slot-definition",children:(0,e.jsxs)(n.a,{href:"/meta-object-protocol/slot-definition-allocation-standard-slot-definition",children:[(0,e.jsx)(n.strong,{children:"slot-definition-allocation"})," (",(0,e.jsx)(n.em,{children:"slot"})," standard-slot-definition)"]})})]})}function h(t={}){const{wrapper:n}={...(0,o.a)(),...t.components};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(d,{...t})}):d(t)}},11151:(t,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var e=i(67294);const o={},l=e.createContext(o);function s(t){const n=e.useContext(l);return e.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function a(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),e.createElement(l.Provider,{value:n},t.children)}}}]);