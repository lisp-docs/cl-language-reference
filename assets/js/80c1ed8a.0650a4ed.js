"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[74136],{23097:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=t(85893),c=t(11151);const o={},a="Generic functions",s={id:"meta-object-protocol/generic-functions",title:"Generic functions",description:"Generic functions",source:"@site/docs/meta-object-protocol/generic-functions.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/generic-functions",permalink:"/cl-language-reference/meta-object-protocol/generic-functions",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/generic-functions.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"generic-function-name",permalink:"/cl-language-reference/meta-object-protocol/generic-function-name"},next:{title:"Implementation and User Specialization",permalink:"/cl-language-reference/meta-object-protocol/implementation-and-user-specialization"}},r={},l=[{value:"Generic functions",id:"generic-functions-1",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",ul:"ul",...(0,c.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"generic-functions",children:"Generic functions"}),"\n",(0,i.jsx)(n.h3,{id:"generic-functions-1",children:"Generic functions"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.em,{children:"generic function metaobject"})," contains information about a generic function over and above the information associated with each of the generic function's methods."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The name is available as a function name."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The methods associated with the generic function are available as a list of method metaobjects."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The default class for this generic function's method metaobjects is available as a class metaobject."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The lambda list is available as a list."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The method combination is available as a method combination metaobject."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The documentation is available as a string or ",(0,i.jsx)(n.code,{children:"nil"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The argument precedence order is available as a permutation of those symbols from the lambda list which name the required arguments of the generic function."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The declarations are available as a list of declarations."}),"\n",(0,i.jsxs)(n.p,{children:["There is some ambiguity in Common Lisp about the terms used to identify the various parts of ",(0,i.jsx)(n.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/s_declar.htm#declare",children:"declare"})," special forms. In this document, the term ",(0,i.jsx)(n.em,{children:"declaration"})," is used to refer to an object that could be an argument to a ",(0,i.jsx)(n.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/s_declar.htm#declare",children:"declare"})," special form. For example, in the special form ",(0,i.jsx)(n.code,{children:"(declare       (special *g1*))"}),", the list ",(0,i.jsx)(n.code,{children:"(special *g1*)"})," is a declaration."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var i=t(67294);const c={},o=i.createContext(c);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);