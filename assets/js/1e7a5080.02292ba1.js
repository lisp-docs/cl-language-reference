"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[38367],{37511:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>x,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var t=r(85893),s=r(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"read-byte"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"read-byte"})," ",(0,t.jsx)(n.em,{children:"stream"})," &optional ",(0,t.jsx)(n.em,{children:"eof-error-p eof-value \u2192 byte"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"stream"}),"\u2014a ",(0,t.jsx)(n.em,{children:"binary input stream"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"eof-error-p"}),"\u2014a ",(0,t.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,t.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"eof-value"}),"\u2014an ",(0,t.jsx)(n.em,{children:"object"}),". The default is ",(0,t.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"byte"}),"\u2014an ",(0,t.jsx)(n.em,{children:"integer"})," , or the ",(0,t.jsx)(n.em,{children:"eof-value"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"read-byte"})," reads and returns one byte from ",(0,t.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If an ",(0,t.jsx)(n.em,{children:"end of file"}),(0,t.jsx)("sub",{children:"2"})," occurs and ",(0,t.jsx)(n.em,{children:"eof-error-p"})," is ",(0,t.jsx)(n.em,{children:"false"}),", the ",(0,t.jsx)(n.em,{children:"eof-value"})," is returned."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:'\n(with-open-file (s "temp-bytes" \n\t\t   :direction :output \n\t\t   :element-type \u2019unsigned-byte) \n  (write-byte 101 s)) \u2192 101 \n(with-open-file (s "temp-bytes" :element-type \u2019unsigned-byte) \n  (format t "~S ~S" (read-byte s) (read-byte s nil \u2019eof))) \n\u25b7 101 EOF \n\u2192 NIL \n\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,t.jsxs)(n.p,{children:["Modifies ",(0,t.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["Should signal an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"type-error"})," if ",(0,t.jsx)(n.em,{children:"stream"})," is not a ",(0,t.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Should signal an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"error"})," if ",(0,t.jsx)(n.em,{children:"stream"})," is not a ",(0,t.jsx)(n.em,{children:"binary input stream"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If there are no ",(0,t.jsx)(n.em,{children:"bytes"})," remaining in the ",(0,t.jsx)(n.em,{children:"stream"})," and ",(0,t.jsx)(n.em,{children:"eof-error-p"})," is ",(0,t.jsx)(n.em,{children:"true"}),", an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"end-of-file"})," is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"read-char"}),", ",(0,t.jsx)(n.strong,{children:"read-sequence"}),", ",(0,t.jsx)(n.strong,{children:"write-byte"})]})]})}function i(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}const d={title:"read-byte"},a="read-byte",o={id:"chap-21/cb-c-dictionary/read-byte_function",title:"read-byte",description:"Expanded Reference: read-byte",source:"@site/docs/chap-21/cb-c-dictionary/read-byte_function.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/read-byte_function",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/read-byte_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/read-byte_function.md",tags:[],version:"current",frontMatter:{title:"read-byte"},sidebar:"tutorialSidebar",previous:{title:"peek-char",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/peek-char_function"},next:{title:"read-char-no-hang",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/read-char-no-hang_function"}},l={},h=[{value:"Expanded Reference: read-byte",id:"expanded-reference-read-byte",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"read-byte",children:"read-byte"}),"\n","\n","\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-read-byte",children:"Expanded Reference: read-byte"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(read-byte )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>i});var t=r(67294);const s={},c=t.createContext(s);function i(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);