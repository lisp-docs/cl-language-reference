"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[33316],{3497:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var i=s(85893),r=s(11151);const t={title:"B",sidebar_position:98},c=void 0,l={id:"chap-26/cg-b-glossary/b",title:"B",description:"B",source:"@site/docs/chap-26/cg-b-glossary/b.md",sourceDirName:"chap-26/cg-b-glossary",slug:"/chap-26/cg-b-glossary/b",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/b",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/cg-b-glossary/b.md",tags:[],version:"current",sidebarPosition:98,frontMatter:{title:"B",sidebar_position:98},sidebar:"tutorialSidebar",previous:{title:"A",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/a"},next:{title:"C",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/c"}},d={},h=[];function a(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"B"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"backquote"})," ",(0,i.jsx)(n.em,{children:"n."})," the ",(0,i.jsx)(n.em,{children:"standard character"})," that is variously called \u201cgrave accent\u201d or"]}),"\n",(0,i.jsx)(n.p,{children:"\u201cbackquote\u201d (\u2018). See Figure 2\u20135."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"backslash"})," ",(0,i.jsx)(n.em,{children:"n."})," the ",(0,i.jsx)(n.em,{children:"standard character"})," that is variously called \u201creverse solidus\u201d or \u201cbackslash\u201d (). See Figure 2\u20135."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"base character"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"character"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"base-char"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"base string"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"string"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"base-string"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"before method"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"method"})," having the ",(0,i.jsx)(n.em,{children:"qualifier"})," ",":before","."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bidirectional"})," ",(0,i.jsx)(n.em,{children:"adj."})," (of a ",(0,i.jsx)(n.em,{children:"stream"}),") being both an ",(0,i.jsx)(n.em,{children:"input stream"})," and an ",(0,i.jsx)(n.em,{children:"output stream"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"binary"})," ",(0,i.jsx)(n.em,{children:"adj."})," 1. (of a ",(0,i.jsx)(n.em,{children:"stream"}),") being a ",(0,i.jsx)(n.em,{children:"stream"})," that has an ",(0,i.jsx)(n.em,{children:"element type"})," that is a"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"subtype"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"integer"}),". The most fundamental operation on a ",(0,i.jsx)(n.em,{children:"binary input stream"})," is ",(0,i.jsx)(n.strong,{children:"read-byte"})," and on a ",(0,i.jsx)(n.em,{children:"binary output stream"})," is ",(0,i.jsx)(n.strong,{children:"write-byte"}),". See ",(0,i.jsx)(n.em,{children:"character"})," . 2. (of a ",(0,i.jsx)(n.em,{children:"file"}),") having been created by opening a ",(0,i.jsx)(n.em,{children:"binary stream"}),". (It is ",(0,i.jsx)(n.em,{children:"implementation-dependent"})," whether this is an detectable aspect of the ",(0,i.jsx)(n.em,{children:"file"}),", or whether any given ",(0,i.jsx)(n.em,{children:"character file"})," can be treated as a ",(0,i.jsx)(n.em,{children:"binary file"}),".)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bind"})," ",(0,i.jsx)(n.em,{children:"v.t."})," (a ",(0,i.jsx)(n.em,{children:"variable"}),") to establish a ",(0,i.jsx)(n.em,{children:"binding"})," for the ",(0,i.jsx)(n.em,{children:"variable"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"binding"})," ",(0,i.jsx)(n.em,{children:"n."})," an association between a ",(0,i.jsx)(n.em,{children:"name"})," and that which the ",(0,i.jsx)(n.em,{children:"name"})," denotes. \u201cA lexical binding is a lexical association between a name and its value.\u201d When the term ",(0,i.jsx)(n.em,{children:"binding"})," is qualified by the name of a ",(0,i.jsx)(n.em,{children:"namespace"}),", such as \u201cvariable\u201d or \u201cfunction,\u201d it restricts the binding to the indicated namespace, as in: \u201c",(0,i.jsx)(n.strong,{children:"let"})," establishes variable bindings.\u201d or \u201c",(0,i.jsx)(n.strong,{children:"let"})," establishes bindings of variables.\u201d"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bit"})," ",(0,i.jsx)(n.em,{children:"n."})," an ",(0,i.jsx)(n.em,{children:"object"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"bit"}),"; that is, the ",(0,i.jsx)(n.em,{children:"integer"})," 0 or the ",(0,i.jsx)(n.em,{children:"integer"})," 1."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bit array"})," ",(0,i.jsx)(n.em,{children:"n."})," a specialized ",(0,i.jsx)(n.em,{children:"array"})," that is of ",(0,i.jsx)(n.em,{children:"type"})," (array bit), and whose elements are of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"bit"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bit vector"})," ",(0,i.jsx)(n.em,{children:"n."})," a specialized ",(0,i.jsx)(n.em,{children:"vector"})," that is of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"bit-vector"}),", and whose elements are of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"bit"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bit-wise logical operation specifier"})," ",(0,i.jsx)(n.em,{children:"n."})," an ",(0,i.jsx)(n.em,{children:"object"})," which names one of the sixteen possible bit-wise logical operations that can be performed by the ",(0,i.jsx)(n.strong,{children:"boole"})," function, and which is the ",(0,i.jsx)(n.em,{children:"value"})," of exactly one of the ",(0,i.jsx)(n.em,{children:"constant variables"})," ",(0,i.jsx)(n.strong,{children:"boole-clr"}),", ",(0,i.jsx)(n.strong,{children:"boole-set"}),", ",(0,i.jsx)(n.strong,{children:"boole-1"}),", ",(0,i.jsx)(n.strong,{children:"boole-2"}),", ",(0,i.jsx)(n.strong,{children:"boole-c1"}),", ",(0,i.jsx)(n.strong,{children:"boole-c2"}),", ",(0,i.jsx)(n.strong,{children:"boole-and"}),", ",(0,i.jsx)(n.strong,{children:"boole-ior"}),", ",(0,i.jsx)(n.strong,{children:"boole-xor"}),", ",(0,i.jsx)(n.strong,{children:"boole-eqv"}),", ",(0,i.jsx)(n.strong,{children:"boole-nand"}),", ",(0,i.jsx)(n.strong,{children:"boole-nor"}),", ",(0,i.jsx)(n.strong,{children:"boole-andc1"}),", ",(0,i.jsx)(n.strong,{children:"boole-andc2"}),", ",(0,i.jsx)(n.strong,{children:"boole-orc1"}),", or ",(0,i.jsx)(n.strong,{children:"boole-orc2"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"block"})," ",(0,i.jsx)(n.em,{children:"n."})," a named lexical ",(0,i.jsx)(n.em,{children:"exit point"}),", ",(0,i.jsx)(n.em,{children:"established"})," explicitly by ",(0,i.jsx)(n.strong,{children:"block"})," or implicitly by ",(0,i.jsx)(n.em,{children:"operators"})," such as ",(0,i.jsx)(n.strong,{children:"loop"}),", ",(0,i.jsx)(n.strong,{children:"do"})," and ",(0,i.jsx)(n.strong,{children:"prog"}),", to which control and values may be transfered by using a ",(0,i.jsx)(n.strong,{children:"return-from"})," ",(0,i.jsx)(n.em,{children:"form"})," with the name of the ",(0,i.jsx)(n.em,{children:"block"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"block tag"})," ",(0,i.jsx)(n.em,{children:"n."})," the ",(0,i.jsx)(n.em,{children:"symbol"})," that, within the ",(0,i.jsx)(n.em,{children:"lexical scope"})," of a ",(0,i.jsx)(n.strong,{children:"block"})," ",(0,i.jsx)(n.em,{children:"form"}),", names the ",(0,i.jsx)(n.em,{children:"block established"})," by that ",(0,i.jsx)(n.strong,{children:"block"})," ",(0,i.jsx)(n.em,{children:"form"}),". See ",(0,i.jsx)(n.strong,{children:"return"})," or ",(0,i.jsx)(n.strong,{children:"return-from"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"boa lambda list"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"lambda list"})," that is syntactically like an ",(0,i.jsx)(n.em,{children:"ordinary lambda list"}),", but that is processed in \u201c",(0,i.jsx)(n.strong,{children:"b"}),"y ",(0,i.jsx)(n.strong,{children:"o"}),"rder of ",(0,i.jsx)(n.strong,{children:"a"}),"rgument\u201d style. See Section 3.4.6 (Boa Lambda Lists)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"body parameter"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"parameter"})," available in certain ",(0,i.jsx)(n.em,{children:"lambda lists"})," which from the point of view of ",(0,i.jsx)(n.em,{children:"conforming programs"})," is like a ",(0,i.jsx)(n.em,{children:"rest parameter"})," in every way except that it is introduced by ",(0,i.jsx)(n.strong,{children:"&body"})," instead of ",(0,i.jsx)(n.strong,{children:"&rest"}),". (",(0,i.jsx)(n.em,{children:"Implementations"})," are permitted to provide extensions which distinguish ",(0,i.jsx)(n.em,{children:"body parameters"})," and ",(0,i.jsx)(n.em,{children:"rest parameters"}),"\u2014",(0,i.jsx)(n.em,{children:"e.g."}),", the ",(0,i.jsx)(n.em,{children:"forms"})," for ",(0,i.jsx)(n.em,{children:"operators"})," which were defined using a ",(0,i.jsx)(n.em,{children:"body parameter"})," might be pretty printed slightly differently than ",(0,i.jsx)(n.em,{children:"forms"})," for ",(0,i.jsx)(n.em,{children:"operators"})," which were defined using ",(0,i.jsx)(n.em,{children:"rest parameters"}),".)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"boolean"})," ",(0,i.jsx)(n.em,{children:"n."})," an ",(0,i.jsx)(n.em,{children:"object"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"boolean"}),"; that is, one of the following ",(0,i.jsx)(n.em,{children:"objects"}),": the"]}),"\n",(0,i.jsxs)(n.p,{children:["symbol ",(0,i.jsx)(n.strong,{children:"t"})," (representing ",(0,i.jsx)(n.em,{children:"true"}),"), or the symbol ",(0,i.jsx)(n.strong,{children:"nil"})," (representing ",(0,i.jsx)(n.em,{children:"false"}),"). See ",(0,i.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"boolean equivalent"})," ",(0,i.jsx)(n.em,{children:"n."})," (of an ",(0,i.jsx)(n.em,{children:"object O"}),(0,i.jsx)("sub",{children:"1"}),") any ",(0,i.jsx)(n.em,{children:"object O"}),(0,i.jsx)("sub",{children:"2"})," that has the same truth value as ",(0,i.jsx)(n.em,{children:"O"}),(0,i.jsx)("sub",{children:"1"})," when both ",(0,i.jsx)(n.em,{children:"O"}),(0,i.jsx)("sub",{children:"1"})," and ",(0,i.jsx)(n.em,{children:"O"}),(0,i.jsx)("sub",{children:"2"})," are viewed as ",(0,i.jsx)(n.em,{children:"generalized booleans"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bound"})," ",(0,i.jsx)(n.em,{children:"adj."}),", ",(0,i.jsx)(n.em,{children:"v.t."})," 1. ",(0,i.jsx)(n.em,{children:"adj."})," having an associated denotation in a ",(0,i.jsx)(n.em,{children:"binding"}),". \u201cThe variables named by a ",(0,i.jsx)(n.strong,{children:"let"})," are bound within its body.\u201d See ",(0,i.jsx)(n.em,{children:"unbound"}),". 2. ",(0,i.jsx)(n.em,{children:"adj."})," having a local ",(0,i.jsx)(n.em,{children:"binding"})," which ",(0,i.jsx)(n.em,{children:"shadows"}),(0,i.jsx)("sub",{children:"2"})," another. \u201cThe variable ",(0,i.jsx)(n.strong,{children:"*print-escape*"})," is bound while in the ",(0,i.jsx)(n.strong,{children:"princ"})," function.\u201d 3. ",(0,i.jsx)(n.em,{children:"v.t."})," the past tense of ",(0,i.jsx)(n.em,{children:"bind"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bound declaration"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"declaration"})," that refers to or is associated with a ",(0,i.jsx)(n.em,{children:"variable"})," or ",(0,i.jsx)(n.em,{children:"function"})," and that appears within the ",(0,i.jsx)(n.em,{children:"special form"})," that ",(0,i.jsx)(n.em,{children:"establishes"})," the ",(0,i.jsx)(n.em,{children:"variable"})," or ",(0,i.jsx)(n.em,{children:"function"}),", but before the body of that ",(0,i.jsx)(n.em,{children:"special form"})," (specifically, at the head of that ",(0,i.jsx)(n.em,{children:"form"}),"\u2019s body). (If a ",(0,i.jsx)(n.em,{children:"bound declaration"})," refers to a ",(0,i.jsx)(n.em,{children:"function binding"})," or a ",(0,i.jsx)(n.em,{children:"lexical variable binding"}),", the ",(0,i.jsx)(n.em,{children:"scope"})," of the ",(0,i.jsx)(n.em,{children:"declaration"})," is exactly the ",(0,i.jsx)(n.em,{children:"scope"})," of that ",(0,i.jsx)(n.em,{children:"binding"}),". If the"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"declaration"})," refers to a ",(0,i.jsx)(n.em,{children:"dynamic variable binding"}),", the ",(0,i.jsx)(n.em,{children:"scope"})," of the ",(0,i.jsx)(n.em,{children:"declaration"})," is what the ",(0,i.jsx)(n.em,{children:"scope"})," of the ",(0,i.jsx)(n.em,{children:"binding"})," would have been if it were lexical rather than dynamic.)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"bounded"})," ",(0,i.jsx)("i",{children:"adj."})," (of a ",(0,i.jsx)("i",{children:"sequence S"}),", by an ordered pair of ",(0,i.jsxs)("i",{children:["bounding indices i",(0,i.jsx)("sub",{children:"start"})]})," and ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"end"})]}),") restricted to a subrange of the ",(0,i.jsx)("i",{children:"elements"})," of ",(0,i.jsx)("i",{children:"S"})," that includes each ",(0,i.jsx)("i",{children:"element"})," beginning with (and including) the one indexed by ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"start"})]})," and continuing up to (but not including) the one indexed by ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"end"})]}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"bounding index"})," ",(0,i.jsx)("i",{children:"n."})," (of a ",(0,i.jsx)("i",{children:"sequence"})," with ",(0,i.jsx)("i",{children:"length n"}),") either of a conceptual pair of ",(0,i.jsx)("i",{children:"integers"}),", ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"start"})]})," and ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"end"})]}),", respectively called the \u201clower bounding index\u201d and \u201cupper"]}),"\n",(0,i.jsxs)(n.p,{children:["bounding index\u201d, such that 0 ",(0,i.jsxs)("i",{children:["\u2264 i",(0,i.jsx)("sub",{children:"start"})," \u2264 i",(0,i.jsx)("sub",{children:"end"})," \u2264 n"]}),", and which therefore delimit a subrange of the ",(0,i.jsx)("i",{children:"sequence bounded"})," by ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"start"})]})," and ",(0,i.jsxs)("i",{children:["i",(0,i.jsx)("sub",{children:"end"})]}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"bounding index designator"})," (for a ",(0,i.jsx)(n.em,{children:"sequence"}),") one of two ",(0,i.jsx)(n.em,{children:"objects"})," that, taken together as an ordered pair, behave as a ",(0,i.jsx)(n.em,{children:"designator"})," for ",(0,i.jsx)(n.em,{children:"bounding indices"})," of the ",(0,i.jsx)(n.em,{children:"sequence"}),"; that is, they denote ",(0,i.jsx)(n.em,{children:"bounding indices"})," of the ",(0,i.jsx)(n.em,{children:"sequence"}),", and are either: an ",(0,i.jsx)(n.em,{children:"integer"})," (denoting"]}),"\n",(0,i.jsxs)(n.p,{children:["itself) and ",(0,i.jsx)(n.strong,{children:"nil"})," (denoting the ",(0,i.jsx)(n.em,{children:"length"})," of the ",(0,i.jsx)(n.em,{children:"sequence"}),"), or two ",(0,i.jsx)(n.em,{children:"integers"})," (each denoting themselves)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"break loop"})," ",(0,i.jsx)(n.em,{children:"n."})," A variant of the normal ",(0,i.jsx)(n.em,{children:"Lisp read-eval-print loop"})," that is recursively entered, usually because the ongoing ",(0,i.jsx)(n.em,{children:"evaluation"})," of some other ",(0,i.jsx)(n.em,{children:"form"})," has been suspended for the purpose of debugging. Often, a ",(0,i.jsx)(n.em,{children:"break loop"})," provides the ability to exit in such a way as to continue the suspended computation. See the ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"break"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"broadcast stream"})," ",(0,i.jsx)(n.em,{children:"n."})," an ",(0,i.jsx)(n.em,{children:"output stream"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"broadcast-stream"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"built-in class"})," ",(0,i.jsx)(n.em,{children:"n."})," a ",(0,i.jsx)(n.em,{children:"class"})," that is a ",(0,i.jsx)(n.em,{children:"generalized instance"})," of ",(0,i.jsx)(n.em,{children:"class"})," ",(0,i.jsx)(n.strong,{children:"built-in-class"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"built-in type"})," ",(0,i.jsx)(n.em,{children:"n."})," one of the ",(0,i.jsx)(n.em,{children:"types"})," in Figure 4\u20132."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"byte"})," ",(0,i.jsx)(n.em,{children:"n."})," 1. adjacent bits within an ",(0,i.jsx)(n.em,{children:"integer"})," . (The specific number of bits can vary from point to point in the program; see the ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"byte"}),".) 2. an integer in a specified range. (The specific range can vary from point to point in the program; see the ",(0,i.jsx)(n.em,{children:"functions"})," ",(0,i.jsx)(n.strong,{children:"open"})," and ",(0,i.jsx)(n.strong,{children:"write-byte"}),".)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"byte specifier"})," ",(0,i.jsx)(n.em,{children:"n."})," An ",(0,i.jsx)(n.em,{children:"object"})," of ",(0,i.jsx)(n.em,{children:"implementation-dependent"})," nature that is returned by the ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"byte"})," and that specifies the range of bits in an ",(0,i.jsx)(n.em,{children:"integer"})," to be used as a ",(0,i.jsx)(n.em,{children:"byte"})," by ",(0,i.jsx)(n.em,{children:"functions"})," such as ",(0,i.jsx)(n.strong,{children:"ldb"}),"."]})]})}function o(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>c});var i=s(67294);const r={},t=i.createContext(r);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);