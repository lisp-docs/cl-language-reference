"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[51612],{38006:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>x,frontMatter:()=>p,metadata:()=>l,toc:()=>o});var r=t(85893),i=t(11151);function s(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"print-pretty"}),(0,r.jsx)(n.em,{children:"\u2217 Variable"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,r.jsxs)(n.p,{children:["a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"implementation-dependent"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["Controls whether the ",(0,r.jsx)(n.em,{children:"Lisp printer"})," calls the ",(0,r.jsx)(n.em,{children:"pretty printer"})," ."]}),"\n",(0,r.jsxs)(n.p,{children:["If it is ",(0,r.jsx)(n.em,{children:"false"}),", the ",(0,r.jsx)(n.em,{children:"pretty printer"})," is not used and a minimum of ",(0,r.jsx)(n.em,{children:"whitespace"}),(0,r.jsx)("sub",{children:"1"})," is output when printing an expression."]}),"\n",(0,r.jsxs)(n.p,{children:["If it is ",(0,r.jsx)(n.em,{children:"true"}),", the ",(0,r.jsx)(n.em,{children:"pretty printer"})," is used, and the ",(0,r.jsx)(n.em,{children:"Lisp printer"})," will endeavor to insert extra ",(0,r.jsx)(n.em,{children:"whitespace"}),(0,r.jsx)("sub",{children:"1"})," where appropriate to make ",(0,r.jsx)(n.em,{children:"expressions"})," more readable."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*print-pretty*"})," has an effect even when the ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*print-escape*"})," is ",(0,r.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:'\n\n(setq \\*print-pretty\\* \u2019nil) \u2192 NIL \n\n(progn (write \u2019(let ((a 1) (b 2) (c 3)) (+ a b c))) nil) \n\n\u25b7 (LET ((A 1) (B 2) (C 3)) (+ A B C)) \n\n\u2192 NIL \n\n(let ((\\*print-pretty\\* t)) \n\n  (progn (write \u2019(let ((a 1) (b 2) (c 3)) (+ a b c))) nil)) \n\n\u25b7 (LET ((A 1) \n\n\t\u25b7 (B 2) \n\n\t\u25b7 (C 3)) \n\n    \u25b7 (+ A B C)) \n\n\u2192 NIL \n\n;; Note that the first two expressions printed by this next form \n\n;; differ from the second two only in whether escape characters are printed. ;; In all four cases, extra whitespace is inserted by the pretty printer. \n\n(flet ((test (x) \n\n\t (let ((\\*print-pretty\\* t)) \n\n\t   (print x) \n\n\t   (format t "~%~S " x) \n\n\t   (terpri) (princ x) (princ " ") \n\n\t   (format t "~%~A " x)))) \n\n  (test \u2019#\u2019(lambda () (list "a" # \u2019c #\u2019d)))) \n\n\u25b7 #\u2019(LAMBDA () \n\n      \u25b7 (LIST "a" # \u2019C #\u2019D)) \n\n\u25b7 #\u2019(LAMBDA () \n\n      \u25b7 (LIST "a" # \u2019C #\u2019D)) \n\n\u25b7 #\u2019(LAMBDA () \n\n      \u25b7 (LIST a b \u2019C #\u2019D)) \n\n\u25b7 #\u2019(LAMBDA () \n\n      \u25b7 (LIST a b \u2019C #\u2019D)) \n\n\u2192 NIL \n\n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"write"})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}const p={},a="*print-pretty*",l={id:"chap-22/cc-e-dictionary/print-pretty_variable",title:"\\*print-pretty\\*",description:"Expanded Reference: \\print-pretty\\",source:"@site/docs/chap-22/cc-e-dictionary/print-pretty_variable.md",sourceDirName:"chap-22/cc-e-dictionary",slug:"/chap-22/cc-e-dictionary/print-pretty_variable",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-pretty_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-22/cc-e-dictionary/print-pretty_variable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\\*print-pprint-dispatch\\*",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-pprint-dispatch_variable"},next:{title:"\\*print-radix\\*",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-radix_variable"}},d={},o=[{value:"Expanded Reference: *print-pretty*",id:"expanded-reference-print-pretty",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"print-pretty",children:"*print-pretty*"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-print-pretty",children:"Expanded Reference: *print-pretty*"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"*print-pretty*\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>p,a:()=>c});var r=t(67294);const i={},s=r.createContext(i);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);