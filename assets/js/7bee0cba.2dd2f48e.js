"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[54579],{72459:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>x,frontMatter:()=>s,metadata:()=>h,toc:()=>l});var r=c(85893),t=c(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"char-int"})," ",(0,r.jsx)(n.em,{children:"Function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"char-int"})," ",(0,r.jsx)(n.em,{children:"character \u2192 integer"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"character"}),"\u2014a ",(0,r.jsx)(n.em,{children:"character"})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"integer"}),"\u2014a non-negative ",(0,r.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns a non-negative ",(0,r.jsx)(n.em,{children:"integer"})," encoding the ",(0,r.jsx)(n.em,{children:"character"})," object. The manner in which the ",(0,r.jsx)(n.em,{children:"integer"})," is computed is ",(0,r.jsx)(n.em,{children:"implementation-dependent"}),". In contrast to ",(0,r.jsx)(n.strong,{children:"sxhash"}),", the result is not guaranteed to be independent of the particular ",(0,r.jsx)(n.em,{children:"Lisp image"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.em,{children:"character"})," has no ",(0,r.jsx)(n.em,{children:"implementation-defined attributes"}),", the results of ",(0,r.jsx)(n.strong,{children:"char-int"})," and ",(0,r.jsx)(n.strong,{children:"char-code"})," are the same."]}),"\n",(0,r.jsxs)(n.p,{children:["(char= ",(0,r.jsx)(n.em,{children:"c1 c2"}),") ",(0,r.jsx)(n.em,{children:"\u2261"})," (= (char-int ",(0,r.jsx)(n.em,{children:"c1"}),") (char-int ",(0,r.jsx)(n.em,{children:"c2"}),"))"]}),"\n",(0,r.jsxs)(n.p,{children:["for characters ",(0,r.jsx)(n.em,{children:"c1"})," and ",(0,r.jsx)(n.em,{children:"c2"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"\n(char-int #\\A) \u2192 65 ; implementation A \n(char-int #\\A) \u2192 577 ; implementation B \n(char-int #\\A) \u2192 262145 ; implementation C \n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"char-code"})})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}const s={title:"char-int"},d="char-int",h={id:"chap-13/bd-c-dictionary/char-int_function",title:"char-int",description:"Expanded Reference: char-int",source:"@site/docs/chap-13/bd-c-dictionary/char-int_function.md",sourceDirName:"chap-13/bd-c-dictionary",slug:"/chap-13/bd-c-dictionary/char-int_function",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/char-int_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-13/bd-c-dictionary/char-int_function.md",tags:[],version:"current",frontMatter:{title:"char-int"},sidebar:"tutorialSidebar",previous:{title:"char-code",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/char-code_function"},next:{title:"char-name",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/char-name_function"}},o={},l=[{value:"Expanded Reference: char-int",id:"expanded-reference-char-int",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"char-int",children:"char-int"}),"\n","\n","\n",(0,r.jsx)(a,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-char-int",children:"Expanded Reference: char-int"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(char-int )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,n,c)=>{c.d(n,{Z:()=>s,a:()=>a});var r=c(67294);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);