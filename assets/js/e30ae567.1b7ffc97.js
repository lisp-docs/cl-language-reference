"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[432],{33856:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>m});var i=s(85893),r=s(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"signum"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"signum"})," ",(0,i.jsx)(n.em,{children:"number \u2192 signed-prototype"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"number"}),"\u2014a ",(0,i.jsx)(n.em,{children:"number"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"signed-prototype"}),"\u2014a ",(0,i.jsx)(n.em,{children:"number"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"signum"})," determines a numerical value that indicates whether ",(0,i.jsx)(n.em,{children:"number"})," is negative, zero, or positive."]}),"\n",(0,i.jsxs)(n.p,{children:["For a ",(0,i.jsx)(n.em,{children:"rational"}),", ",(0,i.jsx)(n.strong,{children:"signum"})," returns one of -1, 0, or 1 according to whether ",(0,i.jsx)(n.em,{children:"number"})," is negative, zero, or positive. For a ",(0,i.jsx)(n.em,{children:"float"}),", the result is a ",(0,i.jsx)(n.em,{children:"float"})," of the same format whose value is minus one, zero, or one. For a ",(0,i.jsx)(n.em,{children:"complex"})," number z, (signum ",(0,i.jsx)(n.em,{children:"z"}),") is a complex number of the same phase but with unit magnitude, unless z is a complex zero, in which case the result is z."]}),"\n",(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.em,{children:"rational arguments"}),", ",(0,i.jsx)(n.strong,{children:"signum"})," is a rational function, but it may be irrational for ",(0,i.jsx)(n.em,{children:"complex arguments"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"number"})," is a ",(0,i.jsx)(n.em,{children:"float"}),", the result is a ",(0,i.jsx)(n.em,{children:"float"}),". If ",(0,i.jsx)(n.em,{children:"number"})," is a ",(0,i.jsx)(n.em,{children:"rational"}),", the result is a ",(0,i.jsx)(n.em,{children:"rational"}),". If ",(0,i.jsx)(n.em,{children:"number"})," is a ",(0,i.jsx)(n.em,{children:"complex float"}),", the result is a ",(0,i.jsx)(n.em,{children:"complex float"}),". If ",(0,i.jsx)(n.em,{children:"number"})," is a ",(0,i.jsx)(n.em,{children:"complex rational"}),", the result is a ",(0,i.jsx)(n.em,{children:"complex"})," , but it is ",(0,i.jsx)(n.em,{children:"implementation-dependent"})," whether that result is a ",(0,i.jsx)(n.em,{children:"complex rational"})," or a ",(0,i.jsx)(n.em,{children:"complex float"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"\n(signum 0) \u2192 0 \n(signum 99) \u2192 1 \n(signum 4/5) \u2192 1 \n(signum -99/100) \u2192 -1 \n(signum 0.0) \u2192 0.0 \n(signum #c(0 33)) \u2192 #C(0.0 1.0) \n(signum #c(7.5 10.0)) \u2192 #C(0.6 0.8) \n(signum #c(0.0 -14.7)) \u2192 #C(0.0 -1.0) \n(eql (signum -0.0) -0.0) \u2192 true \n\n\n\n\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:"Section 12.1.3.3 (Rule of Float Substitutability)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(n.p,{children:["(signum x) ",(0,i.jsx)(n.em,{children:"\u2261"})," (if (zerop x) x (/ x (abs x)))"]})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}const o={},l="signum",a={id:"chap-12/bc-c-dictionary/signum",title:"signum",description:"Expanded Reference: signum",source:"@site/docs/chap-12/bc-c-dictionary/signum.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/signum",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/signum",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/signum.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"short-float-epsilon, short-float-negative-epsilon, single-float-epsilon, single-float-negative-epsilon, double-float-epsilon, double-float-negative-epsilon, long-float-epsilon, long-float-negative-epsilon",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/shortfloatepsilon"},next:{title:"sin, cos, tan",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/sin"}},d={},m=[{value:"Expanded Reference: signum",id:"expanded-reference-signum",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"signum",children:"signum"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-signum",children:"Expanded Reference: signum"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(signum )\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>c});var i=s(67294);const r={},t=i.createContext(r);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);