"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[52681],{74808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=n(85893),r=n(11151);function c(e){const t={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"\u2217"}),(0,i.jsx)(t.strong,{children:"print-pprint-dispatch"}),(0,i.jsx)(t.em,{children:"\u2217 Variable"})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Value Type:"})}),"\n",(0,i.jsxs)(t.p,{children:["a ",(0,i.jsx)(t.em,{children:"pprint dispatch table"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Initial Value:"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"implementation-dependent"}),", but the initial entries all use a special class of priorities that have the property that they are less than every priority that can be specified using ",(0,i.jsx)(t.strong,{children:"set-pprint-dispatch"}),", so that the initial contents of any entry can be overridden."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.em,{children:"pprint dispatch table"})," which currently controls the ",(0,i.jsx)(t.em,{children:"pretty printer"})," ."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"*print-pretty*"}),", Section 22.2.1.4 (Pretty Print Dispatch Tables)"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(t.p,{children:["The intent is that the initial ",(0,i.jsx)(t.em,{children:"value"})," of this ",(0,i.jsx)(t.em,{children:"variable"})," should cause \u2018traditional\u2019 ",(0,i.jsx)(t.em,{children:"pretty printing"})," of ",(0,i.jsx)(t.em,{children:"code"}),". In general, however, you can put a value in ",(0,i.jsx)(t.strong,{children:"*print-pprint-dispatch*"})," that makes pretty-printed output look exactly like non-pretty-printed output. Setting ",(0,i.jsx)(t.strong,{children:"*print-pretty*"})," to ",(0,i.jsx)(t.em,{children:"true"})," just causes the functions contained in the ",(0,i.jsx)(t.em,{children:"current pprint dispatch table"})," to have priority over normal ",(0,i.jsx)(t.strong,{children:"print-object"})," methods; it has no magic way of enforcing that those functions actually produce pretty output. For details, see Section 22.2.1.4 (Pretty Print Dispatch Tables)."]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}const s={},a="*print-pprint-dispatch*",o={id:"chap-22/cc-e-dictionary/print-pprint-dispatch_variable",title:"\\*print-pprint-dispatch\\*",description:"Expanded Reference: \\print-pprint-dispatch\\",source:"@site/docs/chap-22/cc-e-dictionary/print-pprint-dispatch_variable.md",sourceDirName:"chap-22/cc-e-dictionary",slug:"/chap-22/cc-e-dictionary/print-pprint-dispatch_variable",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-pprint-dispatch_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-22/cc-e-dictionary/print-pprint-dispatch_variable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"print-object",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-object_standard-generic-function"},next:{title:"\\*print-pretty\\*",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-pretty_variable"}},d={},l=[{value:"Expanded Reference: *print-pprint-dispatch*",id:"expanded-reference-print-pprint-dispatch",level:2}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"print-pprint-dispatch",children:"*print-pprint-dispatch*"}),"\n","\n","\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(t.h2,{id:"expanded-reference-print-pprint-dispatch",children:"Expanded Reference: *print-pprint-dispatch*"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lisp",children:"*print-pprint-dispatch*\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>p});var i=n(67294);const r={},c=i.createContext(r);function p(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:p(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);