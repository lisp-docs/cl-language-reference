"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[65241],{56143:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var i=t(85893),r=t(11151);function c(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ftype"})," ",(0,i.jsx)(n.em,{children:"Declaration"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:["(ftype ",(0,i.jsx)(n.em,{children:"type {function-name}"}),"*)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"function-name"}),"\u2014a ",(0,i.jsx)(n.em,{children:"function name"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"type"}),"\u2014a ",(0,i.jsx)(n.em,{children:"type specifier"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Valid Context:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"declaration"})," or ",(0,i.jsx)(n.em,{children:"proclamation"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Binding Types Aected:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"function"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Specifies that the ",(0,i.jsx)(n.em,{children:"functions"})," named by ",(0,i.jsx)(n.em,{children:"function-names"})," are of the functional type ",(0,i.jsx)(n.em,{children:"type"}),". For example:"]}),"\n",(0,i.jsx)(n.p,{children:"(declare (ftype (function (integer list) t) ith)"}),"\n",(0,i.jsx)(n.p,{children:"(ftype (function (number) float) sine cosine))"}),"\n",(0,i.jsxs)(n.p,{children:["If one of the ",(0,i.jsx)(n.em,{children:"functions"})," mentioned has a lexically apparent local definition (as made by ",(0,i.jsx)(n.strong,{children:"flet"})," or ",(0,i.jsx)(n.strong,{children:"labels"}),"), then the declaration applies to that local definition and not to the global function definition. ",(0,i.jsx)(n.strong,{children:"ftype"})," declarations never apply to variable ",(0,i.jsx)(n.em,{children:"bindings"})," (see type)."]}),"\n",(0,i.jsxs)(n.p,{children:["The lexically apparent bindings of ",(0,i.jsx)(n.em,{children:"function-names"})," must not be ",(0,i.jsx)(n.em,{children:"macro"})," definitions. (This is because ",(0,i.jsx)(n.strong,{children:"ftype"})," declares the functional definition of each ",(0,i.jsx)(n.em,{children:"function name"})," to be of a particular subtype of ",(0,i.jsx)(n.strong,{children:"function"}),", and ",(0,i.jsx)(n.em,{children:"macros"})," do not denote ",(0,i.jsx)(n.em,{children:"functions"}),".)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ftype"})," declarations can be ",(0,i.jsx)(n.em,{children:"free declarations"})," or ",(0,i.jsx)(n.em,{children:"bound declarations"}),". ",(0,i.jsx)(n.strong,{children:"ftype"})," declarations of functions that appear before the body of a ",(0,i.jsx)(n.strong,{children:"flet"})," or ",(0,i.jsx)(n.strong,{children:"labels"})," ",(0,i.jsx)(n.em,{children:"form"})," that defines that function are ",(0,i.jsx)(n.em,{children:"bound declarations"}),". Such declarations in other contexts are ",(0,i.jsx)(n.em,{children:"free declarations"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"declare"}),", ",(0,i.jsx)(n.strong,{children:"declaim"}),", ",(0,i.jsx)(n.strong,{children:"proclaim"})]})]})}function s(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}const o={},a="ftype",d={id:"chap-3/d-i-dictionary/ftype",title:"ftype",description:"Expanded Reference: ftype",source:"@site/docs/chap-3/d-i-dictionary/ftype.md",sourceDirName:"chap-3/d-i-dictionary",slug:"/chap-3/d-i-dictionary/ftype",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/ftype",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-3/d-i-dictionary/ftype.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"eval-when",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/evalwhen"},next:{title:"ignore, ignorable",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/ignore"}},l={},p=[{value:"Expanded Reference: ftype",id:"expanded-reference-ftype",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"ftype",children:"ftype"}),"\n","\n","\n",(0,i.jsx)(s,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-ftype",children:"Expanded Reference: ftype"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(ftype )\n"})})]})}function f(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>s});var i=t(67294);const r={},c=i.createContext(r);function s(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);