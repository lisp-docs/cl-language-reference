"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[56996],{31539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>a,toc:()=>p});var r=n(85893),s=n(11151);function i(e){const t={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:i}=t;return n||o("DictionaryLink",!0),i||o("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"compute-restarts"})," ",(0,r.jsx)(i,{styled:!0,term:"function",children:(0,r.jsx)("i",{children:"Function"})})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(n,{styled:!0,term:"compute-restarts",children:(0,r.jsx)("b",{children:"compute-restarts"})})," &optional ",(0,r.jsx)(t.em,{children:"condition \u2192 restarts"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"condition"})}),"\u2014a ",(0,r.jsx)(t.em,{children:"condition object"}),", or ",(0,r.jsx)(n,{styled:!0,term:"nil",children:(0,r.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(i,{styled:!0,term:"restart",children:(0,r.jsx)("i",{children:"restarts"})}),"\u2014a ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," of ",(0,r.jsx)(i,{styled:!0,term:"restart",children:(0,r.jsx)("i",{children:"restarts"})}),"."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(n,{styled:!0,term:"compute-restarts",children:(0,r.jsx)("b",{children:"compute-restarts"})})," uses the dynamic state of the program to compute a ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," of the ",(0,r.jsx)(i,{styled:!0,term:"restart",children:(0,r.jsx)("i",{children:"restarts"})})," which are currently active."]}),"\n",(0,r.jsxs)(t.p,{children:["The resulting ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," is ordered so that the innermost (more-recently established) restarts are nearer the head of the ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["When ",(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"condition"})})," is ",(0,r.jsx)(i,{styled:!0,term:"non-nil",children:(0,r.jsx)("i",{children:"non-nil"})}),", only those ",(0,r.jsx)(i,{styled:!0,term:"restart",children:(0,r.jsx)("i",{children:"restarts"})})," are considered that are either explicitly associated with that ",(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"condition"})}),", or not associated with any ",(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"condition"})}),"; that is, the excluded ",(0,r.jsx)(i,{styled:!0,term:"restart",children:(0,r.jsx)("i",{children:"restarts"})})," are those that are associated with a non-empty set of ",(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"conditions"})})," of which the given ",(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"condition"})})," is not an ",(0,r.jsx)(i,{styled:!0,term:"element",children:(0,r.jsx)("i",{children:"element"})}),". If ",(0,r.jsx)(i,{styled:!0,term:"condition",children:(0,r.jsx)("i",{children:"condition"})})," is ",(0,r.jsx)(n,{styled:!0,term:"nil",children:(0,r.jsx)("b",{children:"nil"})}),", all ",(0,r.jsx)(i,{styled:!0,term:"restart",children:(0,r.jsx)("i",{children:"restarts"})})," are considered."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(n,{styled:!0,term:"compute-restarts",children:(0,r.jsx)("b",{children:"compute-restarts"})})," returns all ",(0,r.jsx)(i,{styled:!0,term:"applicable restart",children:(0,r.jsx)("i",{children:"applicable restarts"})}),", including anonymous ones, even if some of them have the same name as others and would therefore not be found by ",(0,r.jsx)(n,{styled:!0,term:"find-restart",children:(0,r.jsx)("b",{children:"find-restart"})})," when given a ",(0,r.jsx)(i,{styled:!0,term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})})," argument."]}),"\n",(0,r.jsxs)(t.p,{children:["Implementations are permitted, but not required, to return ",(0,r.jsx)(t.em,{children:"distinct lists"})," from repeated calls to ",(0,r.jsx)(n,{styled:!0,term:"compute-restarts",children:(0,r.jsx)("b",{children:"compute-restarts"})})," while in the same dynamic environment. The consequences are undefined if the ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," returned by ",(0,r.jsx)(n,{styled:!0,term:"compute-restarts",children:(0,r.jsx)("b",{children:"compute-restarts"})})," is every modified."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lisp",children:';; One possible way in which an interactive debugger might present \n;; restarts to the user. \n(defun invoke-a-restart () \n  (let ((restarts (compute-restarts))) \n    (do ((i 0 (+ i 1)) (r restarts (cdr r))) ((null r)) \n      (format t "~&~D: ~A~%" i (car r))) \n    (let ((n nil) (k (length restarts))) \n      (loop (when (and (typep n \u2019integer) (>= n 0) (< n k)) \n\t      (return t)) \n       (format t "~&Option: ") \n       (setq n (read)) \n       (fresh-line)) \n      (invoke-restart-interactively (nth n restarts))))) \n\n(restart-case (invoke-a-restart) \n  (one () 1) \n  (two () 2) \n  (nil () :report "Who knows?" \u2019anonymous) \n  (one () \u2019I) \n  (two () \u2019II)) \n\u25b7 0: ONE \n\u25b7 1: TWO \n\u25b7 2: Who knows? \n\u25b7 3: ONE \n\u25b7 4: TWO \n\u25b7 5: Return to Lisp Toplevel. \n\u25b7 Option: 4 \n\u2192 II \n;; Note that in addition to user-defined restart points, COMPUTE-RESTARTS \n;; also returns information about any system-supplied restarts, such as \n;; the "Return to Lisp Toplevel" restart offered above. \n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Affected By:"})}),"\n",(0,r.jsx)(t.p,{children:"Existing restarts."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(n,{styled:!0,term:"find-restart",children:(0,r.jsx)("b",{children:"find-restart"})}),", ",(0,r.jsx)(n,{styled:!0,term:"invoke-restart",children:(0,r.jsx)("b",{children:"invoke-restart"})}),", ",(0,r.jsx)(n,{styled:!0,term:"restart-bind",children:(0,r.jsx)("b",{children:"restart-bind"})})]})]})}function c(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"compute-restarts"},l="compute-restarts",a={id:"chap-9/j-c-dictionary/compute-restarts_function",title:"compute-restarts",description:"Expanded Reference: compute-restarts",source:"@site/docs/chap-9/j-c-dictionary/compute-restarts_function.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/compute-restarts_function",permalink:"/cl-language-reference/chap-9/j-c-dictionary/compute-restarts_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/compute-restarts_function.md",tags:[],version:"current",frontMatter:{title:"compute-restarts"},sidebar:"tutorialSidebar",previous:{title:"check-type",permalink:"/cl-language-reference/chap-9/j-c-dictionary/check-type_macro"},next:{title:"condition",permalink:"/cl-language-reference/chap-9/j-c-dictionary/condition_condition-type"}},h={},p=[{value:"Expanded Reference: compute-restarts",id:"expanded-reference-compute-restarts",level:2}];function m(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"compute-restarts",children:"compute-restarts"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(t.h2,{id:"expanded-reference-compute-restarts",children:"Expanded Reference: compute-restarts"}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lisp",children:"(compute-restarts )\n"})})]})}function x(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>c});var r=n(67294);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);