"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[83836],{86598:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>j,frontMatter:()=>d,metadata:()=>a,toc:()=>p});var n=s(85893),i=s(11151);function l(e){const t={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:s,GlossaryTerm:l}=t;return s||c("DictionaryLink",!0),l||c("GlossaryTerm",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"copy-list"})," ",(0,n.jsx)(l,{styled:!0,term:"function",children:(0,n.jsx)("i",{children:"Function"})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(s,{styled:!0,term:"copy-list",children:(0,n.jsx)("b",{children:"copy-list"})})," ",(0,n.jsx)(t.em,{children:"list \u2192 copy"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Arguments and Values:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})}),"\u2014a ",(0,n.jsx)(l,{styled:!0,term:"proper list",children:(0,n.jsx)("i",{children:"proper list"})})," or a ",(0,n.jsx)(l,{styled:!0,term:"dotted list",children:(0,n.jsx)("i",{children:"dotted list"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(l,{styled:!0,term:"copy",children:(0,n.jsx)("i",{children:"copy"})}),"\u2014a ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Description:"})}),"\n",(0,n.jsxs)(t.p,{children:["Returns a ",(0,n.jsx)(l,{styled:!0,term:"copy",children:(0,n.jsx)("i",{children:"copy"})})," of ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})}),". If ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})})," is a ",(0,n.jsx)(l,{styled:!0,term:"dotted list",children:(0,n.jsx)("i",{children:"dotted list"})}),", the resulting ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})})," will also be a ",(0,n.jsx)(l,{styled:!0,term:"dotted list",children:(0,n.jsx)("i",{children:"dotted list"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Only the ",(0,n.jsx)(l,{styled:!0,term:"list structure",children:(0,n.jsx)("i",{children:"list structure"})})," of ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})})," is copied; the ",(0,n.jsx)(l,{styled:!0,term:"element",children:(0,n.jsx)("i",{children:"elements"})})," of the resulting list are the ",(0,n.jsx)(l,{styled:!0,term:"same",children:(0,n.jsx)("i",{children:"same"})})," as the corresponding ",(0,n.jsx)(l,{styled:!0,term:"element",children:(0,n.jsx)("i",{children:"elements"})})," of the given ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Examples:"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lisp",children:'(setq lst (list 1 (list 2 3))) \u2192 (1 (2 3)) \n(setq slst lst) \u2192 (1 (2 3)) \n(setq clst (copy-list lst)) \u2192 (1 (2 3)) \n(eq slst lst) \u2192 true \n(eq clst lst) \u2192 false \n(equal clst lst) \u2192 true \n(rplaca lst "one") \u2192 ("one" (2 3)) \nslst \u2192 ("one" (2 3)) \nclst \u2192 (1 (2 3)) \n(setf (caadr lst) "two") \u2192 "two" \nlst \u2192 ("one" ("two" 3)) \nslst \u2192 ("one" ("two" 3)) \nclst \u2192 (1 ("two" 3)) \n'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Exceptional Situations:"})}),"\n",(0,n.jsxs)(t.p,{children:["The consequences are undefined if ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})})," is a ",(0,n.jsx)(l,{styled:!0,term:"circular list",children:(0,n.jsx)("i",{children:"circular list"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"See Also:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(s,{styled:!0,term:"copy-alist",children:(0,n.jsx)("b",{children:"copy-alist"})}),", ",(0,n.jsx)(s,{styled:!0,term:"copy-seq",children:(0,n.jsx)("b",{children:"copy-seq"})}),", ",(0,n.jsx)(s,{styled:!0,term:"copy-tree",children:(0,n.jsx)("b",{children:"copy-tree"})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Notes:"})}),"\n",(0,n.jsxs)(t.p,{children:["The copy created is ",(0,n.jsx)(s,{styled:!0,term:"equal",children:(0,n.jsx)("b",{children:"equal"})})," to ",(0,n.jsx)(l,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})}),", but not ",(0,n.jsx)(s,{styled:!0,term:"eq",children:(0,n.jsx)("b",{children:"eq"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"list, list"}),(0,n.jsx)(t.em,{children:"\u2217"})]})]})}function r(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}function c(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"copy-list"},o="copy-list",a={id:"chap-14/be-c-dictionary/copy-list_function",title:"copy-list",description:"Expanded Reference: copy-list",source:"@site/docs/chap-14/be-c-dictionary/copy-list_function.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/copy-list_function",permalink:"/cl-language-reference/chap-14/be-c-dictionary/copy-list_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-14/be-c-dictionary/copy-list_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"copy-list"},sidebar:"tutorialSidebar",previous:{title:"copy-alist",permalink:"/cl-language-reference/chap-14/be-c-dictionary/copy-alist_function"},next:{title:"copy-tree",permalink:"/cl-language-reference/chap-14/be-c-dictionary/copy-tree_function"}},h={},p=[{value:"Expanded Reference: copy-list",id:"expanded-reference-copy-list",level:2}];function x(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"copy-list",children:"copy-list"}),"\n","\n","\n",(0,n.jsx)(r,{}),"\n",(0,n.jsx)(t.h2,{id:"expanded-reference-copy-list",children:"Expanded Reference: copy-list"}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lisp",children:"(copy-list )\n"})})]})}function j(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>r});var n=s(67294);const i={},l=n.createContext(i);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);