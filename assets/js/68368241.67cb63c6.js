"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[67122],{92082:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>p});var t=r(85893),i=r(11151);function c(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"clear-input"})," ",(0,t.jsx)(e.em,{children:"Function"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"clear-input"})," &optional ",(0,t.jsx)(e.em,{children:"input-stream \u2192"})," ",(0,t.jsx)(e.strong,{children:"nil"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"input-stream"}),"\u2014an ",(0,t.jsx)(e.em,{children:"input stream designator"})," . The default is ",(0,t.jsx)(e.em,{children:"standard input"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(e.p,{children:["Clears any available input from ",(0,t.jsx)(e.em,{children:"input-stream"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["If ",(0,t.jsx)(e.strong,{children:"clear-input"})," does not make sense for ",(0,t.jsx)(e.em,{children:"input-stream"}),", then ",(0,t.jsx)(e.strong,{children:"clear-input"})," does nothing. ",(0,t.jsx)(e.strong,{children:"Examples:"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:" \n\n;; The exact I/O behavior of this example might vary from implementation \n\n;; to implementation depending on the kind of interactive buffering that \n\n;; occurs. (The call to SLEEP here is intended to help even out the \n\n;; differences in implementations which do not do line-at-a-time buffering.) \n\n(defun read-sleepily (&amp;optional (clear-p nil) (zzz 0)) \n\n(list (progn (print \u2019>) (read)) \n\n;; Note that input typed within the first ZZZ seconds \n\n;; will be discarded. \n\n(progn (print \u2019>) \n\n(if zzz (sleep zzz)) \n\n(print \u2019\xbb) \n\n(if clear-p (clear-input)) \n\n(read)))) \n\n(read-sleepily) \n\n\u25b7 > 10 \n\n\u25b7 > \n\n\u25b7 \xbb 20 \n\n\u2192 (10 20) \n\n(read-sleepily t) \n\n\u25b7 > 10 \n\n\u25b7 > \n\n\u25b7 \xbb 20 \n\n\u2192 (10 20) \n\n(read-sleepily t 10) \n\n\u25b7 > 10 \n\n\u25b7 > 20 ; Some implementations won\u2019t echo typeahead here. \n\n\n\n \n\n \n\n\u25b7 \xbb 30 \n\n\u2192 (10 30) \n\n\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Side Effects:"})}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.em,{children:"input-stream"})," is modified."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Affected By:"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"*standard-input*"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(e.p,{children:["Should signal an error of ",(0,t.jsx)(e.em,{children:"type"})," ",(0,t.jsx)(e.strong,{children:"type-error"})," if ",(0,t.jsx)(e.em,{children:"input-stream"})," is not a ",(0,t.jsx)(e.em,{children:"stream designator"})," ."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"clear-output"})})]})}function s(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}const a={},l="clear-input",d={id:"chap-21/cb-c-dictionary/clearinput",title:"clear-input",description:"Expanded Reference: clear-input",source:"@site/docs/chap-21/cb-c-dictionary/clearinput.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/clearinput",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/clearinput",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/clearinput.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"broadcast-stream-streams",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/broadcaststreamstreams"},next:{title:"concatenated-stream",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/concatenatedstream"}},o={},p=[{value:"Expanded Reference: clear-input",id:"expanded-reference-clear-input",level:2}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"clear-input",children:"clear-input"}),"\n","\n","\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(e.h2,{id:"expanded-reference-clear-input",children:"Expanded Reference: clear-input"}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:"(clear-input )\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},11151:(n,e,r)=>{r.d(e,{Z:()=>a,a:()=>s});var t=r(67294);const i={},c=t.createContext(i);function s(n){const e=t.useContext(c);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),t.createElement(c.Provider,{value:e},n.children)}}}]);