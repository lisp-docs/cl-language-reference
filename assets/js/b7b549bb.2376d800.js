"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[10786],{32227:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=t(85893),a=t(11151);const o={},i="slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition",l={id:"meta-object-protocol/dictionary/slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition",title:"slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition",description:"Method SLOT-MAKUNBOUND-USING-CLASS",source:"@site/docs/meta-object-protocol/dictionary/slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"slot-makunbound-using-class-built-in-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-makunbound-using-class-built-in-class"},next:{title:"slot-makunbound-using-class-standard-class-standard-effective-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-makunbound-using-class-standard-class-standard-effective-slot-definition"}},c={},d=[];function r(n){const e={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition",children:"slot-makunbound-using-class-funcallable-standard-class-standard-effective-slot-definition"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"Method"})," ",(0,s.jsx)(e.strong,{children:"SLOT-MAKUNBOUND-USING-CLASS"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"slot-makunbound-using-class"})," (",(0,s.jsx)(e.em,{children:"class"})," funcallable-standard-class) ",(0,s.jsx)(e.em,{children:"object"})," (",(0,s.jsx)(e.em,{children:"slot"})," standard-effective-slot-definition)"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(e.p,{children:["This is a method on the generic function",(0,s.jsx)(e.a,{href:"/meta-object-protocol/slot-makunbound-using-class",children:"slot-makunbound-using-class"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["This method implements the full behavior of this generic function for slots with allocation ",(0,s.jsx)(e.code,{children:":instance"})," and ",(0,s.jsx)(e.code,{children:":class"}),". If the supplied slot has an allocation other than ",(0,s.jsx)(e.code,{children:":instance"})," or ",(0,s.jsx)(e.code,{children:":class"})," an error is signaled."]}),"\n",(0,s.jsx)(e.p,{children:"Overriding this method is permitted, but may require overriding other methods in the standard implementation of the slot access protocol."})]})}function u(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(r,{...n})}):r(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>l,a:()=>i});var s=t(67294);const a={},o=s.createContext(a);function i(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);