"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[59671],{47876:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=t(85893),r=t(11151);const i={slug:"/",sidebar_position:0},s="Introduction",a={id:"intro",title:"Introduction",description:"Welcome to the CL Technical Reference.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/cl-language-reference/",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/intro.md",tags:[],version:"current",lastUpdatedBy:"daninus14",sidebarPosition:0,frontMatter:{slug:"/",sidebar_position:0},sidebar:"tutorialSidebar",next:{title:"Contents and Figures",permalink:"/cl-language-reference/chap-0/intro"}},c={},d=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Welcome to the CL Technical Reference."}),"\n",(0,o.jsx)(n.p,{children:"The goal of this project is to provide a full technical reference that can be useful to anyone programming in Common Lisp."}),"\n",(0,o.jsx)(n.p,{children:"This document is comprised of both the original Common Lisp specification, and community provided explanations and examples to make it easier to understand."}),"\n",(0,o.jsx)(n.p,{children:"If you have any ideas, please help us with an issue on GitHub or better yet, make a pull request!"}),"\n",(0,o.jsx)(n.p,{children:"Thank you and we hope you find this useful."}),"\n",(0,o.jsx)(n.p,{children:"Lisp Docs"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Some ",(0,o.jsx)(n.strong,{children:"Code Blocks"})," and ",(0,o.jsx)(n.strong,{children:"Tables"})," have not yet been chanegd to ",(0,o.jsx)(n.a,{href:"https://commonmark.org/help/",children:"Markdown Syntax"}),", please help us fix the syntax whenever you notice text that needs to be fixed. Note that we use ",(0,o.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features",children:"MDX"})," instead of vanilla markdown which means ",(0,o.jsx)(n.code,{children:"<"}),", ",(0,o.jsx)(n.code,{children:">"}),", ",(0,o.jsx)(n.code,{children:"{"}),", ",(0,o.jsx)(n.code,{children:"}"})," are reserved and you can use React!"]})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var o=t(67294);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);