"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[43999],{30894:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var s=r(85893),t=r(11151);function a(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"translate-pathname"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"translate-pathname"})," ",(0,s.jsx)(n.em,{children:"source from-wildcard to-wildcard"})," &key"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"\u2192 translated-pathname"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"source"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"from-wildcard"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"to-wildcard"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"translated-pathname"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"translate-pathname"})," translates ",(0,s.jsx)(n.em,{children:"source"})," (that matches ",(0,s.jsx)(n.em,{children:"from-wildcard"}),") into a corresponding ",(0,s.jsx)(n.em,{children:"pathname"})," that matches ",(0,s.jsx)(n.em,{children:"to-wildcard"}),", and returns the corresponding ",(0,s.jsx)(n.em,{children:"pathname"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The resulting ",(0,s.jsx)(n.em,{children:"pathname"})," is ",(0,s.jsx)(n.em,{children:"to-wildcard"})," with each wildcard or missing field replaced by a portion of ",(0,s.jsx)(n.em,{children:"source"}),". A \u201cwildcard field\u201d is a ",(0,s.jsx)(n.em,{children:"pathname"})," component with a value of ",":wild",", a ",":wild"," element of a ",(0,s.jsx)(n.em,{children:"list"}),"-valued directory component, or an ",(0,s.jsx)(n.em,{children:"implementation-defined"}),' portion of a component, such as the "*" in the complex wildcard string "foo*bar" that some implementations support. An implementation that adds other wildcard features, such as regular expressions, must define how ',(0,s.jsx)(n.strong,{children:"translate-pathname"})," extends to those features. A \u201cmissing field\u201d is a ",(0,s.jsx)(n.em,{children:"pathname"})," component with a value of ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The portion of ",(0,s.jsx)(n.em,{children:"source"})," that is copied into the resulting ",(0,s.jsx)(n.em,{children:"pathname"})," is ",(0,s.jsx)(n.em,{children:"implementation-defined"}),". Typically it is determined by the user interface conventions of the file systems involved. Usually it is the portion of ",(0,s.jsx)(n.em,{children:"source"})," that matches a wildcard field of ",(0,s.jsx)(n.em,{children:"from-wildcard"})," that is in the same position as the wildcard or missing field of ",(0,s.jsx)(n.em,{children:"to-wildcard"}),". If there is no wildcard field in ",(0,s.jsx)(n.em,{children:"from-wildcard"})," at that position, then usually it is the entire corresponding ",(0,s.jsx)(n.em,{children:"pathname"})," component of ",(0,s.jsx)(n.em,{children:"source"}),", or in the case of a ",(0,s.jsx)(n.em,{children:"list"}),"-valued directory component, the entire corresponding ",(0,s.jsx)(n.em,{children:"list"})," element."]}),"\n",(0,s.jsxs)(n.p,{children:["During the copying of a portion of ",(0,s.jsx)(n.em,{children:"source"})," into the resulting ",(0,s.jsx)(n.em,{children:"pathname"}),", additional ",(0,s.jsx)(n.em,{children:"implementation defined"})," translations of ",(0,s.jsx)(n.em,{children:"case"})," or file naming conventions might occur, especially when ",(0,s.jsx)(n.em,{children:"from-wildcard"})," and ",(0,s.jsx)(n.em,{children:"to-wildcard"})," are for different hosts."]}),"\n",(0,s.jsxs)(n.p,{children:["It is valid for ",(0,s.jsx)(n.em,{children:"source"})," to be a wild ",(0,s.jsx)(n.em,{children:"pathname"}),"; in general this will produce a wild result. It is valid for ",(0,s.jsx)(n.em,{children:"from-wildcard"})," and/or ",(0,s.jsx)(n.em,{children:"to-wildcard"})," to be non-wild ",(0,s.jsx)(n.em,{children:"pathnames"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"translate-pathname"})}),"\n",(0,s.jsxs)(n.p,{children:["There are no specified keyword arguments for ",(0,s.jsx)(n.strong,{children:"translate-pathname"}),", but implementations are permitted to extend it by adding keyword arguments."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"translate-pathname"})," maps customary case in ",(0,s.jsx)(n.em,{children:"source"})," into customary case in the output ",(0,s.jsx)(n.em,{children:"pathname"}),". ",(0,s.jsx)(n.strong,{children:"Examples:"})]}),"\n",(0,s.jsx)(n.p,{children:";; The results of the following five forms are all implementation-dependent."}),"\n",(0,s.jsx)(n.p,{children:";; The second item in particular is shown with multiple results just to"}),"\n",(0,s.jsx)(n.p,{children:";; emphasize one of many particular variations which commonly occurs."}),"\n",(0,s.jsxs)(n.p,{children:['(pathname-name (translate-pathname "foobar" "foo*" "*baz")) ',(0,s.jsx)(n.em,{children:"\u2192"}),' "barbaz"']}),"\n",(0,s.jsx)(n.p,{children:'(pathname-name (translate-pathname "foobar" "foo*" "*"))'}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2192"}),' "foobar"']}),"\n",(0,s.jsx)(n.p,{children:'<i><sup>or</sup>\u2192</i> "bar"'}),"\n",(0,s.jsxs)(n.p,{children:['(pathname-name (translate-pathname "foobar" "*" "foo*")) ',(0,s.jsx)(n.em,{children:"\u2192"}),' "foofoobar"']}),"\n",(0,s.jsxs)(n.p,{children:['(pathname-name (translate-pathname "bar" "*" "foo*")) ',(0,s.jsx)(n.em,{children:"\u2192"}),' "foobar"']}),"\n",(0,s.jsxs)(n.p,{children:['(pathname-name (translate-pathname "foobar" "foo*" "baz*")) ',(0,s.jsx)(n.em,{children:"\u2192"}),' "bazbar"']}),"\n",(0,s.jsx)(n.p,{children:"(defun translate-logical-pathname-1 (pathname rules)"}),"\n",(0,s.jsxs)(n.p,{children:["(let ((rule (assoc pathname rules ",":test"," #\u2019pathname-match-p)))"]}),"\n",(0,s.jsx)(n.p,{children:'(unless rule (error "No translation rule for ~A" pathname))'}),"\n",(0,s.jsx)(n.p,{children:"(translate-pathname pathname (first rule) (second rule))))"}),"\n",(0,s.jsxs)(n.p,{children:['(translate-logical-pathname-1 "FOO',":CODE",';BASIC.LISP"']}),"\n",(0,s.jsxs)(n.p,{children:['\u2019(("FOO',":DOCUMENTATION",';" "MY-UNIX:/doc/foo/")']}),"\n",(0,s.jsxs)(n.p,{children:['("FOO',":CODE",';" "MY-UNIX:/lib/foo/")']}),"\n",(0,s.jsxs)(n.p,{children:['("FOO',":PATCHES",';*;" "MY-UNIX:/lib/foo/patch/*/")))']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2192"}),' #P"MY-UNIX:/lib/foo/basic.l"']}),"\n",(0,s.jsx)(n.p,{children:";;;This example assumes one particular set of wildcard conventions"}),"\n",(0,s.jsx)(n.p,{children:";;;Not all file systems will run this example exactly as written"}),"\n",(0,s.jsx)(n.p,{children:"(defun rename-files (from to)"}),"\n",(0,s.jsx)(n.p,{children:"(dolist (file (directory from))"}),"\n",(0,s.jsx)(n.p,{children:"(rename-file file (translate-pathname file from to))))"}),"\n",(0,s.jsx)(n.p,{children:'(rename-files "/usr/me/*.lisp" "/dev/her/*.l")'}),"\n",(0,s.jsx)(n.p,{children:";Renames /usr/me/init.lisp to /dev/her/init.l"}),"\n",(0,s.jsx)(n.p,{children:'(rename-files "/usr/me/pcl*/*" "/sys/pcl/*/")'}),"\n",(0,s.jsx)(n.p,{children:";Renames /usr/me/pcl-5-may/low.lisp to /sys/pcl/pcl-5-may/low.lisp"}),"\n",(0,s.jsx)(n.p,{children:";In some file systems the result might be /sys/pcl/5-may/low.lisp"}),"\n",(0,s.jsx)(n.p,{children:'(rename-files "/usr/me/pcl*/*" "/sys/library/*/")'}),"\n",(0,s.jsx)(n.p,{children:";Renames /usr/me/pcl-5-may/low.lisp to /sys/library/pcl-5-may/low.lisp"}),"\n",(0,s.jsx)(n.p,{children:";In some file systems the result might be /sys/library/5-may/low.lisp"}),"\n",(0,s.jsx)(n.p,{children:'(rename-files "/usr/me/foo.bar" "/usr/me2/")'}),"\n",(0,s.jsx)(n.p,{children:";Renames /usr/me/foo.bar to /usr/me2/foo.bar"}),"\n",(0,s.jsx)(n.p,{children:'(rename-files "/usr/joe/*-recipes.text" "/usr/jim/cookbook/joe\u2019s-*-rec.text") ;Renames /usr/joe/lamb-recipes.text to /usr/jim/cookbook/joe\u2019s-lamb-rec.text'}),"\n",(0,s.jsx)(n.p,{children:";Renames /usr/joe/pork-recipes.text to /usr/jim/cookbook/joe\u2019s-pork-rec.text"}),"\n",(0,s.jsx)(n.p,{children:";Renames /usr/joe/veg-recipes.text to /usr/jim/cookbook/joe\u2019s-veg-rec.text"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["If any of ",(0,s.jsx)(n.em,{children:"source"}),", ",(0,s.jsx)(n.em,{children:"from-wildcard"}),", or ",(0,s.jsx)(n.em,{children:"to-wildcard"})," is not a ",(0,s.jsx)(n.em,{children:"pathname"}),", a ",(0,s.jsx)(n.em,{children:"string"}),", or a ",(0,s.jsx)(n.em,{children:"stream associated with a file"})," an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"type-error"})," is signaled."]}),"\n",(0,s.jsxs)(n.p,{children:["(pathname-match-p ",(0,s.jsx)(n.em,{children:"source from-wildcard"}),") must be true or an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"error"})," is signaled."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"namestring"}),", ",(0,s.jsx)(n.strong,{children:"pathname-host"}),", ",(0,s.jsx)(n.strong,{children:"pathname"}),", ",(0,s.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["The exact behavior of ",(0,s.jsx)(n.strong,{children:"translate-pathname"})," cannot be dictated by the Common Lisp language and must be allowed to vary, depending on the user interface conventions of the file systems involved."]}),"\n",(0,s.jsxs)(n.p,{children:["The following is an implementation guideline. One file system performs this operation by examining each piece of the three ",(0,s.jsx)(n.em,{children:"pathnames"})," in turn, where a piece is a ",(0,s.jsx)(n.em,{children:"pathname"})," component or a ",(0,s.jsx)(n.em,{children:"list"})," element of a structured component such as a hierarchical directory. Hierarchical directory elements in ",(0,s.jsx)(n.em,{children:"from-wildcard"})," and ",(0,s.jsx)(n.em,{children:"to-wildcard"})," are matched by whether they are wildcards, not by depth in the directory hierarchy. If the piece in ",(0,s.jsx)(n.em,{children:"to-wildcard"})," is present and not wild, it is copied into the result. If the piece in ",(0,s.jsx)(n.em,{children:"to-wildcard"})," is ",":wild"," or ",(0,s.jsx)(n.strong,{children:"nil"}),", the piece in ",(0,s.jsx)(n.em,{children:"source"})," is copied into the result. Otherwise, the piece in ",(0,s.jsx)(n.em,{children:"to-wildcard"}),' might be a complex wildcard such as "foo*bar" and the piece in ',(0,s.jsx)(n.em,{children:"from-wildcard"})," should be wild; the portion of the piece in ",(0,s.jsx)(n.em,{children:"source"})," that matches the wildcard portion of the piece in ",(0,s.jsx)(n.em,{children:"from-wildcard"})," replaces the wildcard portion of the piece in ",(0,s.jsx)(n.em,{children:"to-wildcard"})," and the value produced is used in the result."]})]})}function i(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}const l={},o="translate-pathname",c={id:"chap-19/bj-e-dictionary/translatepathname",title:"translate-pathname",description:"Expanded Reference: translate-pathname",source:"@site/docs/chap-19/bj-e-dictionary/translatepathname.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/translatepathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/translatepathname",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/translatepathname.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"translate-logical-pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/translatelogicalpathname"},next:{title:"wild-pathname-p",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/wildpathnamep"}},d={},h=[{value:"Expanded Reference: translate-pathname",id:"expanded-reference-translate-pathname",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"translate-pathname",children:"translate-pathname"}),"\n","\n","\n",(0,s.jsx)(i,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-translate-pathname",children:"Expanded Reference: translate-pathname"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(translate-pathname )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>i});var s=r(67294);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);