"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[36021],{92341:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>r});var n=s(85893),a=s(11151);const o={},i="slot-value-using-class-standard-class-standard-effective-slot-definition",l={id:"meta-object-protocol/dictionary/slot-value-using-class-standard-class-standard-effective-slot-definition",title:"slot-value-using-class-standard-class-standard-effective-slot-definition",description:"Method SLOT-VALUE-USING-CLASS",source:"@site/docs/meta-object-protocol/dictionary/slot-value-using-class-standard-class-standard-effective-slot-definition.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/slot-value-using-class-standard-class-standard-effective-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-value-using-class-standard-class-standard-effective-slot-definition",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/slot-value-using-class-standard-class-standard-effective-slot-definition.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"slot-value-using-class-funcallable-standard-class-standard-effective-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-value-using-class-funcallable-standard-class-standard-effective-slot-definition"},next:{title:"slot-value-using-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-value-using-class"}},c={},r=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"slot-value-using-class-standard-class-standard-effective-slot-definition",children:"slot-value-using-class-standard-class-standard-effective-slot-definition"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Method"})," ",(0,n.jsx)(t.strong,{children:"SLOT-VALUE-USING-CLASS"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"slot-value-using-class"})," (",(0,n.jsx)(t.em,{children:"class"})," standard-class) ",(0,n.jsx)(t.em,{children:"object"})," (",(0,n.jsx)(t.em,{children:"slot"})," standard-effective-slot-definition)"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Description:"})}),"\n",(0,n.jsxs)(t.p,{children:["This is a method on the generic function",(0,n.jsx)(t.a,{href:"/meta-object-protocol/slot-value-using-class",children:"slot-value-using-class"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["This method implements the full behavior of this generic function for slots with allocation ",(0,n.jsx)(t.code,{children:":instance"})," and ",(0,n.jsx)(t.code,{children:":class"}),". If the supplied slot has an allocation other than ",(0,n.jsx)(t.code,{children:":instance"})," or ",(0,n.jsx)(t.code,{children:":class"})," an error is signaled."]}),"\n",(0,n.jsx)(t.p,{children:"Overriding this method is permitted, but may require overriding other methods in the standard implementation of the slot access protocol."})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>l,a:()=>i});var n=s(67294);const a={},o=n.createContext(a);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);