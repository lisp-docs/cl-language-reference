"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[72217],{45675:(e,t,d)=>{d.r(t),d.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>a});var r=d(85893),i=d(11151);const c={},o="add-direct-method",n={id:"meta-object-protocol/dictionary/add-direct-method",title:"add-direct-method",description:"Generic Function ADD-DIRECT-METHOD",source:"@site/docs/meta-object-protocol/dictionary/add-direct-method.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/add-direct-method",permalink:"/cl-language-reference/meta-object-protocol/dictionary/add-direct-method",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/add-direct-method.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"add-direct-method-eql-specializer",permalink:"/cl-language-reference/meta-object-protocol/dictionary/add-direct-method-eql-specializer"},next:{title:"add-direct-subclass-class-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/add-direct-subclass-class-class"}},s={},a=[{value:"<strong>add-direct-method</strong> (<em>specializer</em> class) (<em>method</em> method)\n<strong>add-direct-method</strong> (<em>specializer</em> eql-specializer) (<em>method</em> method)",id:"add-direct-method-specializer-class-method-methodadd-direct-method-specializer-eql-specializer-method-method",level:2}];function l(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"add-direct-method",children:"add-direct-method"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Generic Function"})," ",(0,r.jsx)(t.strong,{children:"ADD-DIRECT-METHOD"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"add-direct-method"})," ",(0,r.jsx)(t.em,{children:"specializer"})," ",(0,r.jsx)(t.em,{children:"method"})," => ",(0,r.jsx)(t.em,{children:"unspecified"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Arguments and values:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"specializer"})," -- A specializer metaobject."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"method"})," -- A method metaobject."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(t.p,{children:["This generic function is called to maintain a set of backpointers from a specializer to the set of methods specialized to it. If ",(0,r.jsx)(t.em,{children:"method"})," is already in the set, it is not added again (no error is signaled)."]}),"\n",(0,r.jsxs)(t.p,{children:["This set can be accessed as a list by calling the generic function",(0,r.jsx)(t.a,{href:"/meta-object-protocol/specializer-direct-methods",children:"specializer-direct-methods"}),". Methods are removed from the set by ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/remove-direct-method",children:"remove-direct-method"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The generic function ",(0,r.jsx)(t.strong,{children:"add-direct-method"})," is called by ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/add-method",children:"add-method"})," whenever a method is added to a generic function. It is called once for each of the specializers of the method. Note that in cases where a specializer appears more than once in the specializers of a method, this generic function will be called more than once with the same specializer as argument."]}),"\n",(0,r.jsxs)(t.p,{children:["The results are undefined if the ",(0,r.jsx)(t.em,{children:"specializer"})," argument is not one of the specializers of the ",(0,r.jsx)(t.em,{children:"method"})," argument."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Methods:"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.h2,{id:"add-direct-method-specializer-class-method-methodadd-direct-method-specializer-eql-specializer-method-method",children:[(0,r.jsxs)(t.a,{href:"/meta-object-protocol/add-direct-method-class",children:[(0,r.jsx)(t.strong,{children:"add-direct-method"})," (",(0,r.jsx)(t.em,{children:"specializer"})," class) (",(0,r.jsx)(t.em,{children:"method"})," method)"]}),"\n",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/add-direct-method-eql-specializer",children:[(0,r.jsx)(t.strong,{children:"add-direct-method"})," (",(0,r.jsx)(t.em,{children:"specializer"})," eql-specializer) (",(0,r.jsx)(t.em,{children:"method"})," method)"]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,t,d)=>{d.d(t,{Z:()=>n,a:()=>o});var r=d(67294);const i={},c=r.createContext(i);function o(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);