"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[11080],{43073:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>a});var r=s(85893),i=s(11151);function t(e){const n={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"eq"})," ",(0,r.jsx)(n.em,{children:"Function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"eq"})," ",(0,r.jsx)(n.em,{children:"x y \u2192 generalized-boolean"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"x"}),"\u2014an ",(0,r.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"y"}),"\u2014an ",(0,r.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.em,{children:"true"})," if its ",(0,r.jsx)(n.em,{children:"arguments"})," are the same, identical ",(0,r.jsx)(n.em,{children:"object"}),"; otherwise, returns ",(0,r.jsx)(n.em,{children:"false"}),". ",(0,r.jsx)(n.strong,{children:"Examples:"})]}),"\n",(0,r.jsxs)(n.p,{children:["(eq \u2019a \u2019b) ",(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsxs)(n.p,{children:["(eq \u2019a \u2019a) ",(0,r.jsx)(n.em,{children:"\u2192 true"})]}),"\n",(0,r.jsx)(n.p,{children:"(eq 3 3)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsxs)(n.p,{children:["(eq 3 3.0) ",(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsx)(n.p,{children:"(eq 3.0 3.0)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"eq"})}),"\n",(0,r.jsx)(n.p,{children:"(eq #c(3 -4) #c(3 -4))"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsxs)(n.p,{children:["(eq #c(3 -4.0) #c(3 -4)) ",(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsxs)(n.p,{children:["(eq (cons \u2019a \u2019b) (cons \u2019a \u2019c)) ",(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsxs)(n.p,{children:["(eq (cons \u2019a \u2019b) (cons \u2019a \u2019b)) ",(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsx)(n.p,{children:"(eq \u2019(a . b) \u2019(a . b))"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsxs)(n.p,{children:["(progn (setq x (cons \u2019a \u2019b)) (eq x x)) ",(0,r.jsx)(n.em,{children:"\u2192 true"})]}),"\n",(0,r.jsxs)(n.p,{children:["(progn (setq x \u2019(a . b)) (eq x x)) ",(0,r.jsx)(n.em,{children:"\u2192 true"})]}),"\n",(0,r.jsx)(n.p,{children:"(eq #\\A #\\A)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsxs)(n.p,{children:['(let ((x "Foo")) (eq x x)) ',(0,r.jsx)(n.em,{children:"\u2192 true"})]}),"\n",(0,r.jsx)(n.p,{children:'(eq "Foo" "Foo")'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsxs)(n.p,{children:['(eq "Foo" (copy-seq "Foo")) ',(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsxs)(n.p,{children:['(eq "FOO" "foo") ',(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsxs)(n.p,{children:['(eq "string-seq" (copy-seq "string-seq")) ',(0,r.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,r.jsx)(n.p,{children:"(let ((x 5)) (eq x x))"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2192 true"})}),"\n",(0,r.jsx)(n.p,{children:"<i><sup>or</sup>\u2192 false</i>"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"eql"}),", ",(0,r.jsx)(n.strong,{children:"equal"}),", ",(0,r.jsx)(n.strong,{children:"equalp"}),", ",(0,r.jsx)(n.strong,{children:"="}),", Section 3.2 (Compilation)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Objects"})," that appear the same when printed are not necessarily ",(0,r.jsx)(n.strong,{children:"eq"})," to each other. ",(0,r.jsx)(n.em,{children:"Symbols"})," that print the same usually are ",(0,r.jsx)(n.strong,{children:"eq"})," to each other because of the use of the ",(0,r.jsx)(n.strong,{children:"intern"})," function. However, ",(0,r.jsx)(n.em,{children:"numbers"})," with the same value need not be ",(0,r.jsx)(n.strong,{children:"eq"}),", and two similar ",(0,r.jsx)(n.em,{children:"lists"})," are usually not ",(0,r.jsx)(n.em,{children:"identical"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["An implementation is permitted to make \u201ccopies\u201d of ",(0,r.jsx)(n.em,{children:"characters"})," and ",(0,r.jsx)(n.em,{children:"numbers"})," at any time. The effect is that Common Lisp makes no guarantee that ",(0,r.jsx)(n.strong,{children:"eq"})," is true even when both its arguments are \u201cthe same thing\u201d if that thing is a ",(0,r.jsx)(n.em,{children:"character"})," or ",(0,r.jsx)(n.em,{children:"number"})," ."]}),"\n",(0,r.jsxs)(n.p,{children:["Most Common Lisp ",(0,r.jsx)(n.em,{children:"operators"})," use ",(0,r.jsx)(n.strong,{children:"eql"})," rather than ",(0,r.jsx)(n.strong,{children:"eq"})," to compare objects, or else they default to ",(0,r.jsx)(n.strong,{children:"eql"})," and only use ",(0,r.jsx)(n.strong,{children:"eq"})," if specifically requested to do so. However, the following ",(0,r.jsx)(n.em,{children:"operators"})," are defined to use ",(0,r.jsx)(n.strong,{children:"eq"})," rather than ",(0,r.jsx)(n.strong,{children:"eql"})," in a way that cannot be overridden by the ",(0,r.jsx)(n.em,{children:"code"})," which employs them:"]}),"\n",(0,r.jsx)(n.p,{children:"Data and Control"}),"\n",(0,r.jsx)(n.table,{children:(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsxs)(n.th,{style:{textAlign:"left"},children:["<p>",(0,r.jsx)(n.strong,{children:"catch getf throw"})," </p><p>",(0,r.jsx)(n.strong,{children:"get remf"})," </p><p>",(0,r.jsx)(n.strong,{children:"get-properties remprop"}),"</p>"]})})})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Figure 5\u201311. Operators that always prefer EQ over EQL"})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}const l={},d="eq",o={id:"chap-5/f-d-dictionary/eq",title:"eq",description:"Expanded Reference: eq",source:"@site/docs/chap-5/f-d-dictionary/eq.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/eq",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/eq",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/eq.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"destructuring-bind",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/destructuringbind"},next:{title:"eql",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/eql"}},h={},a=[{value:"Expanded Reference: eq",id:"expanded-reference-eq",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"eq",children:"eq"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-eq",children:"Expanded Reference: eq"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(eq )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>c});var r=s(67294);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);