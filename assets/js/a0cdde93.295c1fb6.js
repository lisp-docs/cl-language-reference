"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23313],{925:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(85893),s=r(11151);const i={title:"Q",sidebar_position:113},c=void 0,o={id:"chap-26/cg-b-glossary/q",title:"Q",description:"Q",source:"@site/docs/chap-26/cg-b-glossary/q.md",sourceDirName:"chap-26/cg-b-glossary",slug:"/chap-26/cg-b-glossary/q",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/q",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/cg-b-glossary/q.md",tags:[],version:"current",sidebarPosition:113,frontMatter:{title:"Q",sidebar_position:113},sidebar:"tutorialSidebar",previous:{title:"P",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/p"},next:{title:"R",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/r"}},a={},l=[];function d(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Q"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"qualified method"})," ",(0,t.jsx)(n.em,{children:"n."})," a ",(0,t.jsx)(n.em,{children:"method"})," that has one or more ",(0,t.jsx)(n.em,{children:"qualifiers"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"qualifier"})," ",(0,t.jsx)(n.em,{children:"n."})," (of a ",(0,t.jsx)(n.em,{children:"method"})," for a ",(0,t.jsx)(n.em,{children:"generic function"}),") one of possibly several ",(0,t.jsx)(n.em,{children:"objects"})," used to annotate the ",(0,t.jsx)(n.em,{children:"method"})," in a way that identifies its role in the ",(0,t.jsx)(n.em,{children:"method combination"}),". The ",(0,t.jsx)(n.em,{children:"method combination type"})," determines how many ",(0,t.jsx)(n.em,{children:"qualifiers"})," are permitted for each ",(0,t.jsx)(n.em,{children:"method"}),", which ",(0,t.jsx)(n.em,{children:"qualifiers"})," are permitted, and the semantics of those ",(0,t.jsx)(n.em,{children:"qualifiers"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"query I/O"})," ",(0,t.jsx)(n.em,{children:"n."})," the ",(0,t.jsx)(n.em,{children:"bidirectional stream"})," that is the ",(0,t.jsx)(n.em,{children:"value"})," of the ",(0,t.jsx)(n.em,{children:"variable"})," ",(0,t.jsx)(n.strong,{children:"*query-io*"}),". ",(0,t.jsx)(n.strong,{children:"quoted object"})," ",(0,t.jsx)(n.em,{children:"n."})," an ",(0,t.jsx)(n.em,{children:"object"})," which is the second element of a ",(0,t.jsx)(n.strong,{children:"quote"})," ",(0,t.jsx)(n.em,{children:"form"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var t=r(67294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);