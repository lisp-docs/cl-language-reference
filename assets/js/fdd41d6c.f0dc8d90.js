"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[93761],{99589:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>h,default:()=>j,frontMatter:()=>o,metadata:()=>t,toc:()=>x});var r=s(85893),i=s(11151);function l(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:s,GlossaryTerm:l}=n;return s||d("DictionaryLink",!0),l||d("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"loop"})," ",(0,r.jsx)(l,{styled:!0,term:"macro",children:(0,r.jsx)("i",{children:"Macro"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:["The \u201csimple\u201d ",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})}),":"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(n.em,{children:"{compound-form}"}),"* \u2192 {result}*"]}),"\n",(0,r.jsxs)(n.p,{children:["The \u201cextended\u201d ",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})}),":"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," [",(0,r.jsx)(n.em,{children:"\u2193name-clause"}),"] ",(0,r.jsx)(n.em,{children:"{\u2193variable-clause}"}),"* ",(0,r.jsx)(n.em,{children:"{\u2193main-clause}"}),"* \u2192 {result}*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"name-clause::"}),"=named ",(0,r.jsx)(l,{styled:!0,term:"name",children:(0,r.jsx)("i",{children:"name"})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"variable-clause::"}),"=",(0,r.jsx)(n.em,{children:"\u2193with-clause | \u2193initial-final | \u2193for-as-clause"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"with-clause::"}),"=with ",(0,r.jsx)(n.em,{children:"var1"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] [= ",(0,r.jsx)(n.em,{children:"form1"}),"] ",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["and ",(0,r.jsx)(n.em,{children:"var2"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] [= ",(0,r.jsx)(n.em,{children:"form2"}),"]"]}),"}"]}),"*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"main-clause::"}),"=",(0,r.jsx)(n.em,{children:"\u2193unconditional | \u2193accumulation | \u2193conditional | \u2193termination-test | \u2193initial-final initial-final::"}),"=initially ",(0,r.jsx)(n.em,{children:"{compound-form}"}),(0,r.jsx)("sup",{children:"+"}),(0,r.jsx)(n.em,{children:"|"})," finally ",(0,r.jsx)(n.em,{children:"{compound-form}"}),(0,r.jsx)("sup",{children:"+"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"unconditional::"}),"=",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["do ",(0,r.jsx)(n.em,{children:"|"})," doing"]}),"} {compound-form}"]}),(0,r.jsx)("sup",{children:"+"}),(0,r.jsx)(n.em,{children:"|"})," return ",(0,r.jsx)(n.em,{children:"{form |"})," it",(0,r.jsx)(l,{styled:!0,term:"t",children:(0,r.jsx)("i",{children:"}"})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"accumulation::"}),"=",(0,r.jsx)(n.em,{children:"\u2193list-accumulation | \u2193numeric-accumulation"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"list-accumulation::"}),"=",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["collect ",(0,r.jsx)(n.em,{children:"|"})," collecting ",(0,r.jsx)(n.em,{children:"|"})," append ",(0,r.jsx)(n.em,{children:"|"})," appending ",(0,r.jsx)(n.em,{children:"|"})," nconc ",(0,r.jsx)(n.em,{children:"|"})," nconcing"]}),"} {form |"]})," it",(0,r.jsx)(l,{styled:!0,term:"t",children:(0,r.jsx)("i",{children:"}"})})," [into ",(0,r.jsx)(n.em,{children:"simple-var"}),"]"]}),"\n",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"numeric-accumulation::"}),"=*{*count ",(0,r.jsx)(n.em,{children:"|"})," counting ",(0,r.jsx)(n.em,{children:"|"})," sum ",(0,r.jsx)(n.em,{children:"|"})," summing ",(0,r.jsx)(n.em,{children:"|"})]}),"\n",(0,r.jsxs)(n.p,{children:["maximize ",(0,r.jsx)(n.em,{children:"|"})," maximizing ",(0,r.jsx)(n.em,{children:"|"})," minimize ",(0,r.jsx)(n.em,{children:"|"})," minimizing*} {form |* it",(0,r.jsx)(l,{styled:!0,term:"t",children:(0,r.jsx)("i",{children:"}"})})]}),"\n",(0,r.jsxs)(n.p,{children:["[into ",(0,r.jsx)(n.em,{children:"simple-var"}),"] [",(0,r.jsx)(n.em,{children:"type-spec"}),"]"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"conditional::"}),"=*{",(0,r.jsxs)(n.em,{children:["if ",(0,r.jsx)(n.em,{children:"|"})," when ",(0,r.jsx)(n.em,{children:"|"})," unless"]}),"} form \u2193selectable-clause {*and ",(0,r.jsx)(n.em,{children:"\u2193selectable-clause}"}),"*"]}),"\n",(0,r.jsxs)(n.p,{children:["[else *\u2193selectable-clause {*and ",(0,r.jsx)(n.em,{children:"\u2193selectable-clause}"}),"*]"]}),"\n",(0,r.jsx)(n.p,{children:"[end]"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"selectable-clause::"}),"=",(0,r.jsx)(n.em,{children:"\u2193unconditional | \u2193accumulation | \u2193conditional"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"termination-test::"}),"=while ",(0,r.jsx)(n.em,{children:"form |"})," until ",(0,r.jsx)(n.em,{children:"form |"})," repeat ",(0,r.jsx)(n.em,{children:"form |"})," always ",(0,r.jsx)(n.em,{children:"form |"})," never ",(0,r.jsx)(n.em,{children:"form |"})," thereis ",(0,r.jsx)(n.em,{children:"form for-as-clause::"}),"=*{",(0,r.jsxs)(n.em,{children:["for ",(0,r.jsx)(n.em,{children:"|"})," as"]}),"} \u2193for-as-subclause {*and ",(0,r.jsx)(n.em,{children:"\u2193for-as-subclause}"}),"*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-subclause::"}),"=",(0,r.jsx)(n.em,{children:"\u2193for-as-arithmetic | \u2193for-as-in-list | \u2193for-as-on-list | \u2193for-as-equals-then | \u2193for-as-across | \u2193for-as-hash | \u2193for-as-package"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-arithmetic::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] ",(0,r.jsx)(n.em,{children:"\u2193for-as-arithmetic-subclause"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-arithmetic-subclause::"}),"=",(0,r.jsx)(n.em,{children:"\u2193arithmetic-up | \u2193arithmetic-downto | \u2193arithmetic-downfrom arithmetic-up::"}),"=[[ ",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["from ",(0,r.jsx)(n.em,{children:"|"})," upfrom"]}),"} form1 | {",(0,r.jsxs)(n.em,{children:["to ",(0,r.jsx)(n.em,{children:"|"})," upto ",(0,r.jsx)(n.em,{children:"|"})," below"]}),"} form2 |"]})," by ",(0,r.jsx)(n.em,{children:"form3"})," ]]",(0,r.jsx)("sup",{children:"+"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"arithmetic-downto::"}),"=[[ ",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["from ",(0,r.jsx)(n.em,{children:"form1}"}),(0,r.jsx)("sup",{children:"1"})]}),"| {{",(0,r.jsxs)(n.em,{children:["downto ",(0,r.jsx)(n.em,{children:"|"})," above"]}),"} form2}"]}),(0,r.jsx)("sup",{children:"1"}),(0,r.jsx)(n.em,{children:"|"})," by ",(0,r.jsx)(n.em,{children:"form3"})," ]]"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"arithmetic-downfrom::"}),"=[[ ",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["downfrom ",(0,r.jsx)(n.em,{children:"form1}"}),(0,r.jsx)("sup",{children:"1"})]}),"| {",(0,r.jsxs)(n.em,{children:["to ",(0,r.jsx)(n.em,{children:"|"})," downto ",(0,r.jsx)(n.em,{children:"|"})," above"]}),"} form2 |"]})," by ",(0,r.jsx)(n.em,{children:"form3"})," ]] ",(0,r.jsx)(n.em,{children:"for-as-in-list::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] in ",(0,r.jsx)(n.em,{children:"form1"})," [by ",(0,r.jsx)(n.em,{children:"step-fun"}),"]"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-on-list::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] on ",(0,r.jsx)(n.em,{children:"form1"})," [by ",(0,r.jsx)(n.em,{children:"step-fun"}),"]"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-equals-then::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] = ",(0,r.jsx)(n.em,{children:"form1"})," [then ",(0,r.jsx)(n.em,{children:"form2"}),"]"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-across::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] across ",(0,r.jsx)(l,{styled:!0,term:"vector",children:(0,r.jsx)("i",{children:"vector"})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-hash::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] being ",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["each ",(0,r.jsx)(n.em,{children:"|"})," the"]}),"}"]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["{{",(0,r.jsxs)(n.em,{children:["hash-key ",(0,r.jsx)(n.em,{children:"|"})," hash-keys"]}),"} {",(0,r.jsxs)(n.em,{children:["in ",(0,r.jsx)(n.em,{children:"|"})," of"]}),"} hash-table"]})}),"\n",(0,r.jsxs)(n.p,{children:["[using (hash-value ",(0,r.jsx)(n.em,{children:"other-var"}),")] ",(0,r.jsx)(n.em,{children:"|"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["hash-value ",(0,r.jsx)(n.em,{children:"|"})," hash-values"]}),"} {",(0,r.jsxs)(n.em,{children:["in ",(0,r.jsx)(n.em,{children:"|"})," of"]}),"} hash-table"]})}),"\n",(0,r.jsxs)(n.p,{children:["[using (hash-key ",(0,r.jsx)(n.em,{children:"other-var"}),")]",(0,r.jsx)(n.em,{children:"}"})]}),"\n",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"for-as-package::"}),"=",(0,r.jsx)(n.em,{children:"var"})," [",(0,r.jsx)(n.em,{children:"type-spec"}),"] being ",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["each ",(0,r.jsx)(n.em,{children:"|"})," the"]}),"}"]})]}),"\n",(0,r.jsxs)(n.p,{children:["*{*symbol ",(0,r.jsx)(n.em,{children:"|"})," symbols ",(0,r.jsx)(n.em,{children:"|"})]}),"\n",(0,r.jsxs)(n.p,{children:["present-symbol ",(0,r.jsx)(n.em,{children:"|"})," present-symbols ",(0,r.jsx)(n.em,{children:"|"})]}),"\n",(0,r.jsxs)(n.p,{children:["external-symbol ",(0,r.jsx)(n.em,{children:"|"})," external-symbols*}*"]}),"\n",(0,r.jsxs)(n.p,{children:["[",(0,r.jsxs)(n.em,{children:["{",(0,r.jsxs)(n.em,{children:["in ",(0,r.jsx)(n.em,{children:"|"})," of"]}),"} package"]}),"]"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"type-spec::"}),"=",(0,r.jsx)(n.em,{children:"\u2193simple-type-spec | \u2193destructured-type-spec"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"simple-type-spec::"}),"=",(0,r.jsx)(s,{styled:!0,term:"fixnum",children:(0,r.jsx)("b",{children:"fixnum"})})," ",(0,r.jsx)(n.em,{children:"|"})," ",(0,r.jsx)(s,{styled:!0,term:"float",children:(0,r.jsx)("b",{children:"float"})})," ",(0,r.jsx)(n.em,{children:"|"})," ",(0,r.jsx)(s,{styled:!0,term:"t",children:(0,r.jsx)("b",{children:"t"})})," ",(0,r.jsx)(n.em,{children:"|"})," ",(0,r.jsx)(s,{styled:!0,term:"nil",children:(0,r.jsx)("b",{children:"nil"})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"destructured-type-spec::"}),"=of-type ",(0,r.jsx)(n.em,{children:"d-type-spec"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"d-type-spec::"}),"=",(0,r.jsx)(n.em,{children:"type-specifier |"})," (",(0,r.jsx)(n.em,{children:"d-type-spec"})," . ",(0,r.jsx)(n.em,{children:"d-type-spec"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"var::"}),"=",(0,r.jsx)(n.em,{children:"\u2193d-var-spec"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"var1::"}),"=",(0,r.jsx)(n.em,{children:"\u2193d-var-spec"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"var2::"}),"=",(0,r.jsx)(n.em,{children:"\u2193d-var-spec"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"other-var::"}),"=",(0,r.jsx)(n.em,{children:"\u2193d-var-spec"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"d-var-spec::"}),"=",(0,r.jsx)(n.em,{children:"simple-var |"})," ",(0,r.jsx)(s,{styled:!0,term:"nil",children:(0,r.jsx)("b",{children:"nil"})})," ",(0,r.jsx)(n.em,{children:"|"})," (",(0,r.jsx)(n.em,{children:"\u2193d-var-spec"})," . ",(0,r.jsx)(n.em,{children:"\u2193d-var-spec"}),")"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"compound-form"}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"compound form",children:(0,r.jsx)("i",{children:"compound form"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{styled:!0,term:"name",children:(0,r.jsx)("i",{children:"name"})}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"simple-var"}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})})," (a ",(0,r.jsx)(l,{styled:!0,term:"variable",children:(0,r.jsx)("i",{children:"variable"})})," name)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})}),", ",(0,r.jsx)(n.em,{children:"form1"}),", ",(0,r.jsx)(n.em,{children:"form2"}),", ",(0,r.jsx)(n.em,{children:"form3"}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"step-fun"}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})})," that evaluates to a ",(0,r.jsx)(l,{styled:!0,term:"function",children:(0,r.jsx)("i",{children:"function"})})," of one ",(0,r.jsx)(l,{styled:!0,term:"argument",children:(0,r.jsx)("i",{children:"argument"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{styled:!0,term:"vector",children:(0,r.jsx)("i",{children:"vector"})}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})})," that evaluates to a ",(0,r.jsx)(l,{styled:!0,term:"vector",children:(0,r.jsx)("i",{children:"vector"})})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"hash-table"}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})})," that evaluates to a ",(0,r.jsx)(l,{styled:!0,term:"hash table",children:(0,r.jsx)("i",{children:"hash table"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{styled:!0,term:"package",children:(0,r.jsx)("i",{children:"package"})}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})})," that evaluates to a ",(0,r.jsx)(l,{styled:!0,term:"package designator",children:(0,r.jsx)("i",{children:"package designator"})})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"type-specifier"}),"\u2014a ",(0,r.jsx)(l,{styled:!0,term:"type specifier",children:(0,r.jsx)("i",{children:"type specifier"})})," . This might be either an ",(0,r.jsx)(l,{styled:!0,term:"atomic type specifier",children:(0,r.jsx)("i",{children:"atomic type specifier"})})," or a ",(0,r.jsx)(l,{styled:!0,term:"compound type specifier",children:(0,r.jsx)("i",{children:"compound type specifier"})})," , which introduces some additional complications to proper parsing in the face of destructuring; for further information, see Section 6.1.1.7 (Destructuring)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"result"}),"\u2014an ",(0,r.jsx)(l,{styled:!0,term:"object",children:(0,r.jsx)("i",{children:"object"})}),"."]}),"\n",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsx)(n.p,{children:"For details, see Section 6.1 (The LOOP Facility)."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:';; An example of the simple form of LOOP. \n(defun sqrt-advisor () \n  (loop (format t "~&Number: ") \n   (let ((n (parse-integer (read-line) :junk-allowed t))) \n     (when (not n) (return)) \n     (format t "~&The square root of ~D is ~D.~%" n (sqrt n))))) \n\u2192 SQRT-ADVISOR \n(sqrt-advisor) \n\u25b7 Number: 5\u2190 \n\u25b7 The square root of 5 is 2.236068. \n\u25b7 Number: 4\u2190 \n\u25b7 The square root of 4 is 2. \n\u25b7 Number: done\u2190 \n\u2192 NIL \n;; An example of the extended form of LOOP. \n(defun square-advisor () \n  (loop as n = (progn (format t "~&Number: ") \n\t\t      (parse-integer (read-line) :junk-allowed t)) \n\twhile n \n\tdo (format t "~&The square of ~D is ~D.~%" n (\\* n n)))) \n\u2192 SQUARE-ADVISOR \n(square-advisor) \n\u25b7 Number: 4\u2190 \n\u25b7 The square of 4 is 16. \n\u25b7 Number: 23\u2190 \n\u25b7 The square of 23 is 529. \n\u25b7 Number: done\u2190 \n\u2192 NIL \n;; Another example of the extended form of LOOP. \n(loop for n from 1 to 10 \n      when (oddp n) \n      collect n) \n\u2192 (1 3 5 7 9) \n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{styled:!0,term:"do",children:(0,r.jsx)("b",{children:"do"})}),", ",(0,r.jsx)(s,{styled:!0,term:"dolist",children:(0,r.jsx)("b",{children:"dolist"})}),", ",(0,r.jsx)(s,{styled:!0,term:"dotimes",children:(0,r.jsx)("b",{children:"dotimes"})}),", ",(0,r.jsx)(s,{styled:!0,term:"return",children:(0,r.jsx)("b",{children:"return"})}),", ",(0,r.jsx)(s,{styled:!0,term:"go",children:(0,r.jsx)("b",{children:"go"})}),", ",(0,r.jsx)(s,{styled:!0,term:"throw",children:(0,r.jsx)("b",{children:"throw"})}),", Section 6.1.1.7 (Destructuring)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["Except that ",(0,r.jsx)(s,{styled:!0,term:"loop-finish",children:(0,r.jsx)("b",{children:"loop-finish"})})," cannot be used within a simple ",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})}),", a simple ",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})})," is related to an extended ",(0,r.jsx)(s,{styled:!0,term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(l,{styled:!0,term:"form",children:(0,r.jsx)("i",{children:"form"})})," in the following way:"]}),"\n",(0,r.jsxs)(n.p,{children:["(loop ",(0,r.jsx)(n.em,{children:"{compound-form}"}),"*) ",(0,r.jsx)(n.em,{children:"\u2261"})," (loop do ",(0,r.jsx)(n.em,{children:"{compound-form}"}),"*)"]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const o={title:"loop"},h="loop",t={id:"chap-6/g-c-dictionary/loop_macro",title:"loop",description:"Expanded Reference: loop",source:"@site/docs/chap-6/g-c-dictionary/loop_macro.md",sourceDirName:"chap-6/g-c-dictionary",slug:"/chap-6/g-c-dictionary/loop_macro",permalink:"/cl-language-reference/chap-6/g-c-dictionary/loop_macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-6/g-c-dictionary/loop_macro.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"loop"},sidebar:"tutorialSidebar",previous:{title:"loop-finish",permalink:"/cl-language-reference/chap-6/g-c-dictionary/loop-finish_local-macro"},next:{title:"7.1 Object Creation and Initialization",permalink:"/cl-language-reference/chap-7/h-b-object-creation-and-initialization"}},a={},x=[{value:"Expanded Reference: loop",id:"expanded-reference-loop",level:2},{value:"Looping over a list",id:"looping-over-a-list",level:3},{value:"Looping and declaring lexical variables <code>with</code>",id:"looping-and-declaring-lexical-variables-with",level:3},{value:"Loop using <code>with</code> keyword to declare variables that depend on each other",id:"loop-using-with-keyword-to-declare-variables-that-depend-on-each-other",level:4},{value:"Loop with lexical variables and updates",id:"loop-with-lexical-variables-and-updates",level:3},{value:"Looping over a Hash Table",id:"looping-over-a-hash-table",level:3}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"loop",children:"loop"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-loop",children:"Expanded Reference: loop"}),"\n",(0,r.jsx)(n.h3,{id:"looping-over-a-list",children:"Looping over a list"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:'(let ((lst (list 5 4 3 "b" "a")))\n  (loop for el in lst\n      do (print el)))\n5 \n4 \n3 \n"b" \n"a" \nNIL\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"looping-and-declaring-lexical-variables-with",children:["Looping and declaring lexical variables ",(0,r.jsx)(n.code,{children:"with"})]}),"\n",(0,r.jsxs)(n.p,{children:["Note the usage of the word ",(0,r.jsx)(n.code,{children:"with"})," below. ",(0,r.jsx)(n.code,{children:"with"})," will be executed once at the beginning of the loop. See below the usage of ",(0,r.jsx)(n.code,{children:"for"})," which updates the binding on each run of the loop."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(loop for x below 50\n      with i = 0\n      when (and (< i 10)\n                (not (evenp x)))\n        do (print x)\n           (incf i))\n1 \n3 \n5 \n7 \n9 \n11 \n13 \n15 \n17 \n19 \nNIL\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This is similar to the alternative of wrapping the ",(0,r.jsx)(n.code,{children:"loop"})," form in a ",(0,r.jsx)(n.code,{children:"let"})," form."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(let ((i 0))\n  (loop for x below 50\n        when (and (< i 10)\n                  (not (evenp x)))\n          do (print x)\n             (incf i)))\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"loop-using-with-keyword-to-declare-variables-that-depend-on-each-other",children:["Loop using ",(0,r.jsx)(n.code,{children:"with"})," keyword to declare variables that depend on each other"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"with"})," form will not have the value of any preceeding variable bound with ",(0,r.jsx)(n.code,{children:"for"})," at the beginning of the loop. However variables bound with another ",(0,r.jsx)(n.code,{children:"with"})," will be available."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(loop for x in (list 1 2 3)\n      with a = 1\n      with b = (* 8 a)\n      do (print b))\n\n8 \n8 \n8 \nNIL\n"})}),"\n",(0,r.jsxs)(n.p,{children:["However using the ",(0,r.jsx)(n.code,{children:"x"})," variable would not work:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(loop for x in (list 1 2 3)\n      with a = 1\n      with b = (* 8 x)\n      do (print b))\n\nValue of X in (* 8 X) is NIL, not a NUMBER.\n   [Condition of type SIMPLE-TYPE-ERROR]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": The preferred style when using both the ",(0,r.jsx)(n.code,{children:"with"})," and ",(0,r.jsx)(n.code,{children:"for"})," keywords is to write the ",(0,r.jsx)(n.code,{children:"with"})," clauses first:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(loop with a = 2\n      for y in (list 1 2 3)\n      do (print y))\n"})}),"\n",(0,r.jsx)(n.h3,{id:"loop-with-lexical-variables-and-updates",children:"Loop with lexical variables and updates"}),"\n",(0,r.jsxs)(n.p,{children:["Notice the usage of the ",(0,r.jsx)(n.code,{children:"for"})," keyword which indicates the binding should be updated on each run of the loop."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(loop for x in (list 1 2 3 4)\n      for y = (* x 2)\n      do (print y))\n\n2 \n4 \n6 \n8 \nNIL\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"y"})," variable will be updated on each run based on the given form ",(0,r.jsx)(n.code,{children:"(* x 2)"})]}),"\n",(0,r.jsx)(n.h3,{id:"looping-over-a-hash-table",children:"Looping over a Hash Table"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:'(let ((given-ht (serapeum:dict "a" 1 "b" 2)))\n  (loop for key being each hash-key of given-ht\n          using (hash-value value)\n        do (format t "~A: ~A ~%" key value)))\n\na: 1 \nb: 2 \nNIL\n\n(let ((given-ht (serapeum:dict "a" 1 "b" 2)))\n  (loop for value being each hash-value of given-ht\n        do (format t "~A~%" value)))\n\n1\n2\nNIL\n\n(let ((given-ht (serapeum:dict "a" 1 "b" 2)))\n  (loop for key being each hash-key of given-ht\n        do (format t "~A~%" key)))\n\na\nb\nNIL\n'})})]})}function j(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>c});var r=s(67294);const i={},l=r.createContext(i);function c(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);