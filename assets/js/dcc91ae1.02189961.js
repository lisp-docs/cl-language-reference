"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[67687],{10685:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var r=s(85893),t=s(11151);const c={title:"K",sidebar_position:107},i=void 0,a={id:"chap-26/cg-b-glossary/k",title:"K",description:"K",source:"@site/docs/chap-26/cg-b-glossary/k.md",sourceDirName:"chap-26/cg-b-glossary",slug:"/chap-26/cg-b-glossary/k",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/k",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/cg-b-glossary/k.md",tags:[],version:"current",sidebarPosition:107,frontMatter:{title:"K",sidebar_position:107},sidebar:"tutorialSidebar",previous:{title:"I",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/i"},next:{title:"L",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/l"}},l={},o=[];function d(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"K"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"key"})," ",(0,r.jsx)(n.em,{children:"n."})," an ",(0,r.jsx)(n.em,{children:"object"})," used for selection during retrieval. See ",(0,r.jsx)(n.em,{children:"association list"}),", ",(0,r.jsx)(n.em,{children:"property list"}),", and ",(0,r.jsx)(n.em,{children:"hash table"}),". Also, see Section 17.1 (Sequence Concepts)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"keyword"})," ",(0,r.jsx)(n.em,{children:"n."})," 1. a ",(0,r.jsx)(n.em,{children:"symbol"})," the ",(0,r.jsx)(n.em,{children:"home package"})," of which is the KEYWORD ",(0,r.jsx)(n.em,{children:"package"}),". 2."]}),"\n",(0,r.jsxs)(n.p,{children:["any ",(0,r.jsx)(n.em,{children:"symbol"}),", usually but not necessarily in the KEYWORD ",(0,r.jsx)(n.em,{children:"package"}),", that is used as an identifying marker in keyword-style argument passing. See ",(0,r.jsx)(n.strong,{children:"lambda"}),". 3. ",(0,r.jsx)(n.em,{children:"Idiom."})," a ",(0,r.jsx)(n.em,{children:"lambda list keyword"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"keyword parameter"})," ",(0,r.jsx)(n.em,{children:"n."})," A ",(0,r.jsx)(n.em,{children:"parameter"})," for which a corresponding keyword ",(0,r.jsx)(n.em,{children:"argument"})," is optional. (There is no such thing as a required keyword ",(0,r.jsx)(n.em,{children:"argument"}),".) If the ",(0,r.jsx)(n.em,{children:"argument"})," is not supplied, a default value is used. See also ",(0,r.jsx)(n.em,{children:"supplied-p parameter"})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"keyword/value pair"})," ",(0,r.jsx)(n.em,{children:"n."})," two successive ",(0,r.jsx)(n.em,{children:"elements"})," (a ",(0,r.jsx)(n.em,{children:"keyword"})," and a ",(0,r.jsx)(n.em,{children:"value"}),", respectively) of a ",(0,r.jsx)(n.em,{children:"property list"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>i});var r=s(67294);const t={},c=r.createContext(t);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);