"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[78769],{91357:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var r=s(85893),i=s(11151);const t={title:"G",sidebar_position:103},c=void 0,a={id:"chap-26/g",title:"G",description:"G",source:"@site/docs/chap-26/g.md",sourceDirName:"chap-26",slug:"/chap-26/g",permalink:"/cl-language-reference/docs/chap-26/g",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/g.md",tags:[],version:"current",sidebarPosition:103,frontMatter:{title:"G",sidebar_position:103},sidebar:"tutorialSidebar",previous:{title:"F",permalink:"/cl-language-reference/docs/chap-26/f"},next:{title:"H",permalink:"/cl-language-reference/docs/chap-26/h"}},l={},o=[];function h(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"G"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"general"})," ",(0,r.jsx)(n.em,{children:"adj."})," (of an ",(0,r.jsx)(n.em,{children:"array"}),") having ",(0,r.jsx)(n.em,{children:"element type"})," ",(0,r.jsx)(n.strong,{children:"t"}),", and consequently able to have any ",(0,r.jsx)(n.em,{children:"object"})," as an ",(0,r.jsx)(n.em,{children:"element"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"generalized boolean"})," ",(0,r.jsx)(n.em,{children:"n."})," an ",(0,r.jsx)(n.em,{children:"object"})," used as a truth value, where the symbol ",(0,r.jsx)(n.strong,{children:"nil"}),"  represents ",(0,r.jsx)(n.em,{children:"false"})," and all other ",(0,r.jsx)(n.em,{children:"objects"})," represent ",(0,r.jsx)(n.em,{children:"true"}),". See ",(0,r.jsx)(n.em,{children:"boolean"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"generalized instance"})," ",(0,r.jsx)(n.em,{children:"n."})," (of a ",(0,r.jsx)(n.em,{children:"class"}),") an ",(0,r.jsx)(n.em,{children:"object"})," the ",(0,r.jsx)(n.em,{children:"class"})," of which is either that ",(0,r.jsx)(n.em,{children:"class"})," itself, or some subclass of that ",(0,r.jsx)(n.em,{children:"class"}),'. (Because of the correspondence between types and classes, the term "generalized instance of ',(0,r.jsx)(n.em,{children:"X"}),'" implies "object of type ',(0,r.jsx)(n.em,{children:"X"}),'" and in cases where ',(0,r.jsx)(n.em,{children:"X"})," is a ",(0,r.jsx)(n.em,{children:"class"})," (or ",(0,r.jsx)(n.em,{children:"class name"}),") the reverse is also true. The former terminology emphasizes the view of ",(0,r.jsx)(n.em,{children:"X"})," as a ",(0,r.jsx)(n.em,{children:"class"})," while the latter emphasizes the view of ",(0,r.jsx)(n.em,{children:"X"})," as a ",(0,r.jsx)(n.em,{children:"type specifier"})," .)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"generalized reference"})," ",(0,r.jsx)(n.em,{children:"n."})," a reference to a location storing an ",(0,r.jsx)(n.em,{children:"object"})," as if to a  ",(0,r.jsx)(n.em,{children:"variable"}),". (Such a reference can be either to ",(0,r.jsx)(n.em,{children:"read"})," or ",(0,r.jsx)(n.em,{children:"write"})," the location.) See Section 5.1 (Generalized Reference). See also ",(0,r.jsx)(n.em,{children:"place"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"generalized synonym stream"})," ",(0,r.jsx)(n.em,{children:"n."})," (with a ",(0,r.jsx)(n.em,{children:"synonym stream symbol"}),") 1. (to a ",(0,r.jsx)(n.em,{children:"stream"}),") a ",(0,r.jsx)(n.em,{children:"synonym stream"})," to the ",(0,r.jsx)(n.em,{children:"stream"}),", or a ",(0,r.jsx)(n.em,{children:"composite stream"})," which has as a target a  ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to the ",(0,r.jsx)(n.em,{children:"stream"}),". 2. (to a ",(0,r.jsx)(n.em,{children:"symbol"}),") a ",(0,r.jsx)(n.em,{children:"synonym stream"})," to the ",(0,r.jsx)(n.em,{children:"symbol"}),", or a ",(0,r.jsx)(n.em,{children:"composite stream"})," which has as a target a ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to the ",(0,r.jsx)(n.em,{children:"symbol"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"generic function"})," ",(0,r.jsx)(n.em,{children:"n."})," a ",(0,r.jsx)(n.em,{children:"function"})," whose behavior depends on the ",(0,r.jsx)(n.em,{children:"classes"})," or identities of the arguments supplied to it and whose parts include, among other things, a set of ",(0,r.jsx)(n.em,{children:"methods"}),", a ",(0,r.jsx)(n.em,{children:"lambda list"}),", and a ",(0,r.jsx)(n.em,{children:"method combination"})," type."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"generic function lambda list"})," ",(0,r.jsx)(n.em,{children:"n."})," A ",(0,r.jsx)(n.em,{children:"lambda list"})," that is used to describe data flow into a ",(0,r.jsx)(n.em,{children:"generic function"}),". See Section 3.4.2 (Generic Function Lambda Lists)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"gensym"})," ",(0,r.jsx)(n.em,{children:"n. Trad."})," an ",(0,r.jsx)(n.em,{children:"uninterned symbol"}),". See the ",(0,r.jsx)(n.em,{children:"function"})," ",(0,r.jsx)(n.strong,{children:"gensym"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"global declaration"})," ",(0,r.jsx)(n.em,{children:"n."})," a ",(0,r.jsx)(n.em,{children:"form"})," that makes certain kinds of information about code globally available; that is, a ",(0,r.jsx)(n.strong,{children:"proclaim"})," ",(0,r.jsx)(n.em,{children:"form"})," or a ",(0,r.jsx)(n.strong,{children:"declaim"})," ",(0,r.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"global environment"})," ",(0,r.jsx)(n.em,{children:"n."})," that part of an ",(0,r.jsx)(n.em,{children:"environment"})," that contains ",(0,r.jsx)(n.em,{children:"bindings"})," with ",(0,r.jsx)(n.em,{children:"indefinite scope"})," and ",(0,r.jsx)(n.em,{children:"indefinite extent"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"global variable"})," ",(0,r.jsx)(n.em,{children:"n."})," a ",(0,r.jsx)(n.em,{children:"dynamic variable"})," or a ",(0,r.jsx)(n.em,{children:"constant variable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"glyph"})," ",(0,r.jsx)(n.em,{children:"n."}),' a visual representation. "Graphic characters have associated glyphs."']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"go"})," ",(0,r.jsx)(n.em,{children:"v."})," to transfer control to a ",(0,r.jsx)(n.em,{children:"go point"}),". See the ",(0,r.jsx)(n.em,{children:"special operator"})," ",(0,r.jsx)(n.strong,{children:"go"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"go point"})," one of possibly several ",(0,r.jsx)(n.em,{children:"exit points"})," that are ",(0,r.jsx)(n.em,{children:"established"})," by ",(0,r.jsx)(n.strong,{children:"tagbody"})," (or other abstractions, such as ",(0,r.jsx)(n.strong,{children:"prog"}),", which are built from ",(0,r.jsx)(n.strong,{children:"tagbody"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"go tag"})," ",(0,r.jsx)(n.em,{children:"n."})," the ",(0,r.jsx)(n.em,{children:"symbol"})," or ",(0,r.jsx)(n.em,{children:"integer"})," that, within the ",(0,r.jsx)(n.em,{children:"lexical scope"})," of a ",(0,r.jsx)(n.strong,{children:"tagbody"})," ",(0,r.jsx)(n.em,{children:"form"}),", names an ",(0,r.jsx)(n.em,{children:"exit point established"})," by that ",(0,r.jsx)(n.strong,{children:"tagbody"})," ",(0,r.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"graphic"})," ",(0,r.jsx)(n.em,{children:"adj."})," (of a ",(0,r.jsx)(n.em,{children:"character"}),' ) being a "printing" or "displayable" ',(0,r.jsx)(n.em,{children:"character"})," that has a standard visual representation as a single ",(0,r.jsx)(n.em,{children:"glyph"}),", such as A or * or =. ",(0,r.jsx)(n.em,{children:"Space"})," is defined to be ",(0,r.jsx)(n.em,{children:"graphic"}),". Of the ",(0,r.jsx)(n.em,{children:"standard characters"}),", all but ",(0,r.jsx)(n.em,{children:"newline"})," are ",(0,r.jsx)(n.em,{children:"graphic"}),". See ",(0,r.jsx)(n.em,{children:"non-graphic"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>c});var r=s(67294);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);