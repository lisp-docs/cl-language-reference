"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[95114],{43908:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>a,toc:()=>p});var s=t(85893),i=t(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{ClLinks:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"append"})," ",(0,s.jsx)(t,{styled:!0,term:"function",children:(0,s.jsx)("i",{children:"Function"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t,{styled:!0,term:"append",children:(0,s.jsx)("b",{children:"append"})})," &rest ",(0,s.jsx)(n.em,{children:"lists \u2192 result"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"list"})}),"\u2014each must be a ",(0,s.jsx)(n.em,{children:"proper list"})," except the last, which may be any ",(0,s.jsx)(t,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"result"}),"\u2014an ",(0,s.jsx)(t,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})}),". This will be a ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"list"})})," unless the last ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"list"})})," was not a ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"list"})})," and all preceding ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"lists"})})," were ",(0,s.jsx)(t,{styled:!0,term:"null",children:(0,s.jsx)("i",{children:"null"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t,{styled:!0,term:"append",children:(0,s.jsx)("b",{children:"append"})})," returns a new ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"list"})})," that is the concatenation of the copies. ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"lists"})})," are left unchanged; the ",(0,s.jsx)(n.em,{children:"list structure"})," of each of ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"lists"})})," except the last is copied. The last argument is not copied; it becomes the ",(0,s.jsx)(t,{styled:!0,term:"cdr",children:(0,s.jsx)("i",{children:"cdr"})})," of the final ",(0,s.jsx)(n.em,{children:"dotted pair"})," of the concatenation of the preceding ",(0,s.jsx)(t,{styled:!0,term:"list",children:(0,s.jsx)("i",{children:"lists"})}),", or is returned directly if there are no preceding ",(0,s.jsx)(n.em,{children:"non-empty lists"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"\n(append \u2019(a b c) \u2019(d e f) \u2019() \u2019(g)) \u2192 (A B C D E F G) \n(append \u2019(a b c) \u2019d) \u2192 (A B C . D) \n(setq lst \u2019(a b c)) \u2192 (A B C) \n(append lst \u2019(d)) \u2192 (A B C D) \nlst \u2192 (A B C) \n(append) \u2192 NIL \n(append \u2019a) \u2192 A \n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t,{styled:!0,term:"nconc",children:(0,s.jsx)("b",{children:"nconc"})}),", ",(0,s.jsx)(t,{styled:!0,term:"concatenate",children:(0,s.jsx)("b",{children:"concatenate"})})]})]})}function r(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}const d={title:"append"},l="append",a={id:"chap-14/be-c-dictionary/append_function",title:"append",description:"Expanded Reference: append",source:"@site/docs/chap-14/be-c-dictionary/append_function.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/append_function",permalink:"/cl-language-reference/chap-14/be-c-dictionary/append_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/append_function.md",tags:[],version:"current",frontMatter:{title:"append"},sidebar:"tutorialSidebar",previous:{title:"adjoin",permalink:"/cl-language-reference/chap-14/be-c-dictionary/adjoin_function"},next:{title:"assoc, assoc-if, assoc-if-not",permalink:"/cl-language-reference/chap-14/be-c-dictionary/assoc_assoc-if_assoc-if-not_function"}},o={},p=[{value:"Expanded Reference: append",id:"expanded-reference-append",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"append",children:"append"}),"\n","\n","\n",(0,s.jsx)(r,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-append",children:"Expanded Reference: append"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(append )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var s=t(67294);const i={},c=s.createContext(i);function r(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);