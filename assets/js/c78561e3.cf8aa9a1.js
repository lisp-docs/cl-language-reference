"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[64056],{2592:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>N,contentTitle:()=>V,default:()=>B,frontMatter:()=>P,metadata:()=>_,toc:()=>O});var i=n(85893),s=n(11151);function t(e){return(0,i.jsx)(i.Fragment,{})}function a(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(t,{...e})}):t()}function l(e){const r={p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," contains a set of ",(0,i.jsx)(n,{term:"object",children:(0,i.jsx)("i",{children:"objects"})})," called ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"elements"})})," that can be referenced individually according to a rectilinear coordinate system."]})}function c(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function d(e){const r={em:"em",p:"p",...(0,s.a)(),...e.components},{ClLinks:n,GlossaryTerm:t}=r;return n||h("ClLinks",!0),t||h("GlossaryTerm",!0),(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(r.em,{children:"array element"})," is referred to by a (possibly empty) series of indices. The length of the series must equal the ",(0,i.jsx)(n,{term:"rank",children:(0,i.jsx)("i",{children:"rank"})})," of the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". Each index must be a non-negative ",(0,i.jsx)(n,{term:"fixnum",children:(0,i.jsx)("i",{children:"fixnum"})})," less than the corresponding ",(0,i.jsx)(r.em,{children:"array dimension"}),". ",(0,i.jsx)(t,{styled:!0,term:"array",children:(0,i.jsx)("i",{children:"Array"})})," indexing is zero-origin."]})}function o(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function h(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function x(e){const r={p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["An axis of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is called a ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimension"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Each ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimension"})})," is a non-negative ",(0,i.jsx)(n,{term:"fixnum",children:(0,i.jsx)("i",{children:"fixnum"})}),"; if any dimension of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is zero, the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," has no elements. It is permissible for a ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimension"})})," to be zero, in which case the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," has no elements, and any attempt to ",(0,i.jsx)(n,{term:"access",children:(0,i.jsx)("i",{children:"access"})})," an ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"element"})})," is an error. However, other properties of the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", such as the ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimensions"})})," themselves, may be used."]})]})}function m(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}function j(e){const r={p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"implementation",children:(0,i.jsx)("i",{children:"implementation"})})," may impose a limit on ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimensions"})})," of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", but there is a minimum requirement on that limit. See the ",(0,i.jsx)(n,{term:"variable",children:(0,i.jsx)("i",{children:"variable"})})," ",(0,i.jsx)(n,{term:"array-dimension-limit",children:(0,i.jsx)("b",{children:"array-dimension-limit"})}),"."]})}function p(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}function y(e){const r={p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," can have any number of ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimensions"})})," (including zero). The number of ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimensions"})})," is called the ",(0,i.jsx)(n,{term:"rank",children:(0,i.jsx)("i",{children:"rank"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["If the rank of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is zero then the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is said to have no ",(0,i.jsx)(n,{term:"dimension",children:(0,i.jsx)("i",{children:"dimensions"})}),", and the product of the dimensions (see ",(0,i.jsx)(n,{term:"array-total-size",children:(0,i.jsx)("b",{children:"array-total-size"})}),") is then 1; a zero-rank ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," therefore has a single element."]})]})}function u(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(y,{...e})}):y(e)}function f(e){const r={em:"em",p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," of ",(0,i.jsx)(n,{term:"rank",children:(0,i.jsx)("i",{children:"rank"})})," one (",(0,i.jsx)(r.em,{children:"i.e."}),", a one-dimensional ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),") is called a ",(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"vector"})}),"."]})}function g(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}function b(e){const r={em:"em",p:"p",...(0,s.a)(),...e.components},{ClLinks:n,GlossaryTerm:t}=r;return n||k("ClLinks",!0),t||k("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["A ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," is a non-negative ",(0,i.jsx)(r.em,{children:"integer"})," no larger than the total number of ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"elements"})})," in a ",(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"vector"})})," . Not all ",(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"vectors"})})," have ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointers"})}),". See the ",(0,i.jsx)(n,{term:"function",children:(0,i.jsx)("i",{children:"functions"})})," ",(0,i.jsx)(n,{term:"make-array",children:(0,i.jsx)("b",{children:"make-array"})})," and ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"element"})})," of a ",(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"vector"})})," is said to be ",(0,i.jsx)(n,{term:"active",children:(0,i.jsx)("i",{children:"active"})})," if it has an index that is greater than or equal to zero, but less than the ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," (if any). For an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that has no ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," , all ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"elements"})})," are considered ",(0,i.jsx)(n,{term:"active",children:(0,i.jsx)("i",{children:"active"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Only ",(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"vectors"})})," may have ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointers"})}),"; multidimensional ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"arrays"})})," may not. A multidimensional ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that is displaced to a ",(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"vector"})})," that has a ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," can be created."]})]})}function v(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}function k(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function w(e){return(0,i.jsx)(i.Fragment,{})}function A(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(w,{...e})}):w()}function C(e){const r={p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(r.p,{children:["Multidimensional ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"arrays"})})," store their components in row-major order; that is, internally a multidimensional ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is stored as a one-dimensional ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", with the multidimensional index sets ordered lexicographically, last index varying fastest."]})}function T(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(C,{...e})}):C(e)}function E(e){const r={p:"p",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"implementation",children:(0,i.jsx)("i",{children:"implementation"})})," may impose a limit on the ",(0,i.jsx)(n,{term:"rank",children:(0,i.jsx)("i",{children:"rank"})})," of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", but there is a minimum requirement on that limit. See the ",(0,i.jsx)(n,{term:"variable",children:(0,i.jsx)("i",{children:"variable"})})," ",(0,i.jsx)(n,{term:"array-rank-limit",children:(0,i.jsx)("b",{children:"array-rank-limit"})}),"."]})}function L(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(E,{...e})}):E(e)}function z(e){const r={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:n,GlossaryTerm:t}=r;return n||S("ClLinks",!0),t||S("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," can be a ",(0,i.jsx)(r.em,{children:"general array"}),", meaning each ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"element"})})," may be any ",(0,i.jsx)(n,{term:"object",children:(0,i.jsx)("i",{children:"object"})}),", or it may be a ",(0,i.jsx)(r.em,{children:"specialized array"}),", meaning that each ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"element"})})," must be of a restricted ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("i",{children:"type"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["The phrasing \u201can ",(0,i.jsx)(r.em,{children:"array specialized"})," to *type hhtype\u27e9\u201d is sometimes used to emphasize the ",(0,i.jsx)(r.em,{children:"element type"})," of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". This phrasing is tolerated even when the \u27e8type\u27e9 is ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("b",{children:"t"})}),", even though an ",(0,i.jsx)(r.em,{children:"array specialized"})," to ",(0,i.jsx)(r.em,{children:"type t"})," is a ",(0,i.jsx)(r.em,{children:"general array"}),", not a ",(0,i.jsx)(r.em,{children:"specialized array"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["Figure 15\u20131 lists some ",(0,i.jsx)(t,{styled:!0,term:"defined name",children:(0,i.jsx)("i",{children:"defined names"})})," that are applicable to ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," creation, ",(0,i.jsx)(n,{term:"access",children:(0,i.jsx)("i",{children:"access"})}),", and information operations."]}),"\n",(0,i.jsxs)(r.p,{children:["|",(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"adjust-array array-has-fill-pointer-p make-array"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"adjustable-array-p array-in-bounds-p svref"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"aref array-rank upgraded-array-element-type array-dimension array-rank-limit upgraded-complex-part-type array-dimension-limit array-row-major-index vector"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"array-dimensions array-total-size vector-pop"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"array-displacement array-total-size-limit vector-push"})," "]}),(0,i.jsx)("p",{children:(0,i.jsx)(r.strong,{children:"array-element-type fill-pointer vector-push-extend"})}),"|"]}),"\n",(0,i.jsx)(r.p,{children:"| :- |"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Figure 15\u20131. General Purpose Array-Related Defined Names"})})]})}function F(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(z,{...e})}):z(e)}function S(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function q(e){const r={em:"em",p:"p",...(0,s.a)(),...e.components},{ClLinks:n,GlossaryTerm:t}=r;return n||I("ClLinks",!0),t||I("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(t,{styled:!0,term:"upgraded array element type",children:(0,i.jsx)("i",{children:"upgraded array element type"})})," of a ",(0,i.jsx)(r.em,{children:"type T"}),(0,i.jsx)("sub",{children:"1"})," is a ",(0,i.jsx)(r.em,{children:"type T"}),(0,i.jsx)("sub",{children:"2"})," that is a ",(0,i.jsx)(n,{term:"supertype",children:(0,i.jsx)("i",{children:"supertype"})})," of ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("i",{children:"T"})}),(0,i.jsx)("sub",{children:"1"})," and that is used instead of ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("i",{children:"T"})}),(0,i.jsx)("sub",{children:"1"})," whenever ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("i",{children:"T"})}),(0,i.jsx)("sub",{children:"1"})," is used as an ",(0,i.jsx)(t,{styled:!0,term:"array element type",children:(0,i.jsx)("i",{children:"array element type"})})," for object creation or type discrimination."]}),"\n",(0,i.jsxs)(r.p,{children:["During creation of an ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", the ",(0,i.jsx)(t,{styled:!0,term:"element type",children:(0,i.jsx)("i",{children:"element type"})})," that was requested is called the ",(0,i.jsx)(t,{styled:!0,term:"expressed array element type",children:(0,i.jsx)("i",{children:"expressed array element type"})}),". The ",(0,i.jsx)(t,{styled:!0,term:"upgraded array element type",children:(0,i.jsx)("i",{children:"upgraded array element type"})})," of the ",(0,i.jsx)(t,{styled:!0,term:"expressed array element type",children:(0,i.jsx)("i",{children:"expressed array element type"})})," becomes the ",(0,i.jsx)(t,{styled:!0,term:"actual array element type",children:(0,i.jsx)("i",{children:"actual array element type"})})," of the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that is created."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)("i",{children:"Type upgrading"})," implies a movement upwards in the type hierarchy lattice. A ",(0,i.jsx)("i",{children:"type"})," is always a ",(0,i.jsx)("i",{children:"subtype"})," of its ",(0,i.jsx)("i",{children:"upgraded array element type"}),". Also, if a ",(0,i.jsxs)("i",{children:["type T",(0,i.jsx)("sub",{children:"x"})]})," is a ",(0,i.jsx)("i",{children:"subtype"})," of another ",(0,i.jsxs)("i",{children:["type T",(0,i.jsx)("sub",{children:"y"})]}),", then the ",(0,i.jsx)("i",{children:"upgraded array element type"})," of ",(0,i.jsxs)("i",{children:["T",(0,i.jsx)("sub",{children:"x"})]})," must be a ",(0,i.jsx)("i",{children:"subtype"})," of the ",(0,i.jsx)("i",{children:"upgraded array element type"})," of ",(0,i.jsxs)("i",{children:["T",(0,i.jsx)("sub",{children:"y"})]}),". Two ",(0,i.jsx)("i",{children:"disjoint types"})," can be ",(0,i.jsx)("i",{children:"upgraded"})," to the same ",(0,i.jsx)("i",{children:"type"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.em,{children:"upgraded array element type T"}),(0,i.jsx)("sub",{children:"2"})," of a ",(0,i.jsx)(r.em,{children:"type T"}),(0,i.jsx)("sub",{children:"1"})," is a function only of ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("i",{children:"T"})}),(0,i.jsx)("sub",{children:"1"})," itself; that is, it is independent of any other property of the ",(0,i.jsx)(n,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," for which ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("i",{children:"T"})}),(0,i.jsx)("sub",{children:"2"})," will be used, such as ",(0,i.jsx)(n,{term:"rank",children:(0,i.jsx)("i",{children:"rank"})}),", ",(0,i.jsx)(n,{term:"adjustability",children:(0,i.jsx)("i",{children:"adjustability"})}),", ",(0,i.jsx)(t,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointers"})}),", or displacement. The ",(0,i.jsx)(n,{term:"function",children:(0,i.jsx)("i",{children:"function"})})," ",(0,i.jsx)(n,{term:"upgraded-array-element-type",children:(0,i.jsx)("b",{children:"upgraded-array-element-type"})})," can be used by ",(0,i.jsx)(t,{styled:!0,term:"conforming program",children:(0,i.jsx)("i",{children:"conforming programs"})})," to predict how the ",(0,i.jsx)(n,{term:"implementation",children:(0,i.jsx)("i",{children:"implementation"})})," will ",(0,i.jsx)(n,{term:"upgrade",children:(0,i.jsx)("i",{children:"upgrade"})})," a given ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("i",{children:"type"})}),"."]})]})}function G(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(q,{...e})}):q(e)}function I(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function M(e){const r={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:n,GlossaryTerm:t}=r;return n||R("ClLinks",!0),t||R("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"Vectors"})})," whose ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"elements"})})," are restricted to ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"character",children:(0,i.jsx)("b",{children:"character"})})," or a ",(0,i.jsx)(n,{term:"subtype",children:(0,i.jsx)("i",{children:"subtype"})})," of ",(0,i.jsx)(n,{term:"character",children:(0,i.jsx)("b",{children:"character"})})," are called ",(0,i.jsx)(n,{term:"string",children:(0,i.jsx)("i",{children:"strings"})}),". ",(0,i.jsx)(n,{term:"string",children:(0,i.jsx)("i",{children:"Strings"})})," are of ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"string",children:(0,i.jsx)("b",{children:"string"})}),". Figure 15\u20132 lists some ",(0,i.jsx)(t,{styled:!0,term:"defined name",children:(0,i.jsx)("i",{children:"defined names"})})," related to ",(0,i.jsx)(n,{term:"string",children:(0,i.jsx)("i",{children:"strings"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(n,{term:"string",children:(0,i.jsx)("i",{children:"Strings"})})," are ",(0,i.jsx)(r.em,{children:"specialized arrays"})," and might logically have been included in this chapter. However, for purposes of readability most information about ",(0,i.jsx)(n,{term:"string",children:(0,i.jsx)("i",{children:"strings"})})," does not appear in this chapter; see instead Chapter 16 (Strings)."]}),"\n",(0,i.jsxs)(r.p,{children:["|",(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"char string-equal string-upcase make-string string-greaterp string"}),"/= "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"nstring-capitalize string-left-trim string"}),"< "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"nstring-downcase string-lessp string"}),"<= "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"nstring-upcase string-not-equal string"}),"= "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"schar string-not-greaterp string"}),"> "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"string string-not-lessp string"}),">= "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"string-capitalize string-right-trim"})," "]}),(0,i.jsx)("p",{children:(0,i.jsx)(r.strong,{children:"string-downcase string-trim"})}),"|"]}),"\n",(0,i.jsx)(r.p,{children:"| :- |"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Figure 15\u20132. Operators that Manipulate Strings"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(n,{term:"vector",children:(0,i.jsx)("i",{children:"Vectors"})})," whose ",(0,i.jsx)(n,{term:"element",children:(0,i.jsx)("i",{children:"elements"})})," are restricted to ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"bit",children:(0,i.jsx)("b",{children:"bit"})})," are called ",(0,i.jsx)(t,{styled:!0,term:"bit vector",children:(0,i.jsx)("i",{children:"bit vectors"})}),". ",(0,i.jsx)(t,{styled:!0,term:"bit vector",children:(0,i.jsx)("i",{children:"Bit vectors"})})," are of ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"bit-vector",children:(0,i.jsx)("b",{children:"bit-vector"})}),". Figure 15\u20133 lists some ",(0,i.jsx)(t,{styled:!0,term:"defined name",children:(0,i.jsx)("i",{children:"defined names"})})," for operations on ",(0,i.jsx)(t,{styled:!0,term:"bit array",children:(0,i.jsx)("i",{children:"bit arrays"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["|",(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"bit bit-ior bit-orc2"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"bit-and bit-nand bit-xor"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"bit-andc1 bit-nor sbit"})," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)(r.strong,{children:"bit-andc2 bit-not"})," "]}),(0,i.jsx)("p",{children:(0,i.jsx)(r.strong,{children:"bit-eqv bit-orc1"})}),"|"]}),"\n",(0,i.jsx)(r.p,{children:"| :- |"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Figure 15\u20133. Operators that Manipulate Bit Arrays"})})]})}function D(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(M,{...e})}):M(e)}function R(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const P={title:"15.1 Array Concepts"},V="15.1 Array Concepts",_={id:"chap-15/bf-b-array-concepts",title:"15.1 Array Concepts",description:"15.1.1 Array Elements",source:"@site/docs/chap-15/bf-b-array-concepts.md",sourceDirName:"chap-15",slug:"/chap-15/bf-b-array-concepts",permalink:"/cl-language-reference/chap-15/bf-b-array-concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-b-array-concepts.md",tags:[],version:"current",frontMatter:{title:"15.1 Array Concepts"},sidebar:"tutorialSidebar",previous:{title:"15. Arrays",permalink:"/cl-language-reference/category/15-arrays"},next:{title:"15.2 Arrays Dictionary",permalink:"/cl-language-reference/category/152-arrays-dictionary"}},N={},O=[{value:"15.1.1 Array Elements",id:"1511-array-elements",level:2},{value:"15.1.1.1 Array Indices",id:"15111-array-indices",level:3},{value:"15.1.1.2 Array Dimensions",id:"15112-array-dimensions",level:3},{value:"15.1.1.2.1 Implementation Limits on Individual Array Dimensions",id:"151121-implementation-limits-on-individual-array-dimensions",level:4},{value:"15.1.1.3 Array Rank",id:"15113-array-rank",level:3},{value:"15.1.1.3.1 Vectors",id:"151131-vectors",level:4},{value:"15.1.1.3.1.1 Fill Pointers",id:"1511311-fill-pointers",level:5},{value:"15.1.1.3.2 Multidimensional Arrays",id:"151132-multidimensional-arrays",level:4},{value:"15.1.1.3.2.1 Storage Layout for Multidimensional Arrays",id:"1511321-storage-layout-for-multidimensional-arrays",level:5},{value:"15.1.1.3.2.2 Implementation Limits on Array Rank",id:"1511322-implementation-limits-on-array-rank",level:5},{value:"15.1.2 Specialized Arrays",id:"1512-specialized-arrays",level:2},{value:"15.1.2.1 Array Upgrading",id:"15121-array-upgrading",level:3},{value:"15.1.2.2 Required Kinds of Specialized Arrays",id:"15122-required-kinds-of-specialized-arrays",level:3}];function U(e){const r={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"151-array-concepts",children:"15.1 Array Concepts"}),"\n","\n",(0,i.jsx)(a,{}),"\n",(0,i.jsx)(r.h2,{id:"1511-array-elements",children:"15.1.1 Array Elements"}),"\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(r.h3,{id:"15111-array-indices",children:"15.1.1.1 Array Indices"}),"\n","\n",(0,i.jsx)(o,{}),"\n",(0,i.jsx)(r.h3,{id:"15112-array-dimensions",children:"15.1.1.2 Array Dimensions"}),"\n","\n",(0,i.jsx)(m,{}),"\n",(0,i.jsx)(r.h4,{id:"151121-implementation-limits-on-individual-array-dimensions",children:"15.1.1.2.1 Implementation Limits on Individual Array Dimensions"}),"\n","\n",(0,i.jsx)(p,{}),"\n",(0,i.jsx)(r.h3,{id:"15113-array-rank",children:"15.1.1.3 Array Rank"}),"\n","\n",(0,i.jsx)(u,{}),"\n",(0,i.jsx)(r.h4,{id:"151131-vectors",children:"15.1.1.3.1 Vectors"}),"\n","\n",(0,i.jsx)(g,{}),"\n",(0,i.jsx)(r.h5,{id:"1511311-fill-pointers",children:"15.1.1.3.1.1 Fill Pointers"}),"\n","\n",(0,i.jsx)(v,{}),"\n",(0,i.jsx)(r.h4,{id:"151132-multidimensional-arrays",children:"15.1.1.3.2 Multidimensional Arrays"}),"\n","\n",(0,i.jsx)(A,{}),"\n",(0,i.jsx)(r.h5,{id:"1511321-storage-layout-for-multidimensional-arrays",children:"15.1.1.3.2.1 Storage Layout for Multidimensional Arrays"}),"\n","\n",(0,i.jsx)(T,{}),"\n",(0,i.jsx)(r.h5,{id:"1511322-implementation-limits-on-array-rank",children:"15.1.1.3.2.2 Implementation Limits on Array Rank"}),"\n","\n",(0,i.jsx)(L,{}),"\n",(0,i.jsx)(r.h2,{id:"1512-specialized-arrays",children:"15.1.2 Specialized Arrays"}),"\n","\n",(0,i.jsx)(F,{}),"\n",(0,i.jsx)(r.h3,{id:"15121-array-upgrading",children:"15.1.2.1 Array Upgrading"}),"\n","\n",(0,i.jsx)(G,{}),"\n",(0,i.jsx)(r.h3,{id:"15122-required-kinds-of-specialized-arrays",children:"15.1.2.2 Required Kinds of Specialized Arrays"}),"\n","\n","\n",(0,i.jsx)(D,{})]})}function B(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(U,{...e})}):U(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>a});var i=n(67294);const s={},t=i.createContext(s);function a(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);