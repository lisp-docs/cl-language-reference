"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[35056],{80951:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>l,toc:()=>h});var r=t(85893),a=t(11151);function s(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:s}=n;return t||i("DictionaryLink",!0),s||i("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["\u2217",(0,r.jsx)(t,{term:"*random-state*",children:(0,r.jsx)("b",{children:(0,r.jsx)(n.em,{children:"random-state"})})}),"\u2217 Variable"]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,r.jsxs)(n.p,{children:["a ",(0,r.jsx)(s,{styled:!0,term:"random state",children:(0,r.jsx)("i",{children:"random state"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{term:"implementation-dependent",children:(0,r.jsx)("i",{children:"implementation-dependent"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(s,{styled:!0,term:"current random state",children:(0,r.jsx)("i",{children:"current random state"})}),", which is used, for example, by the ",(0,r.jsx)(s,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," ",(0,r.jsx)(t,{term:"random",children:(0,r.jsx)("b",{children:"random"})})," when a ",(0,r.jsx)(s,{styled:!0,term:"random state",children:(0,r.jsx)("i",{children:"random state"})})," is not explicitly supplied."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(random-state-p \\*random-state\\*) \u2192 true \n(setq snap-shot (make-random-state)) \n;; The series from any given point is random, \n;; but if you backtrack to that point, you get the same series. \n(list (loop for i from 1 to 10 collect (random)) \n      (let ((\\*random-state\\* snap-shot)) \n\t(loop for i from 1 to 10 collect (random))) \n      (loop for i from 1 to 10 collect (random)) \n      (let ((\\*random-state\\* snap-shot)) \n\t(loop for i from 1 to 10 collect (random)))) \n\u2192 ((19 16 44 19 96 15 76 96 13 61) \n   (19 16 44 19 96 15 76 96 13 61) \n   (16 67 0 43 70 79 58 5 63 50) \n   (16 67 0 43 70 79 58 5 63 50)) \n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(s,{term:"implementation",children:(0,r.jsx)("i",{children:"implementation"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(t,{term:"random",children:(0,r.jsx)("b",{children:"random"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(t,{term:"make-random-state",children:(0,r.jsx)("b",{children:"make-random-state"})}),", ",(0,r.jsx)(t,{term:"random",children:(0,r.jsx)("b",{children:"random"})}),", ",(0,r.jsx)(t,{term:"random-state",children:(0,r.jsx)("b",{children:"random-state"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{term:"binding",children:(0,r.jsx)("i",{children:"Binding"})})," ",(0,r.jsx)(t,{term:"random-state",children:(0,r.jsx)("b",{children:"*random-state*"})})," to a different ",(0,r.jsx)(n.em,{children:"random state object"})," correctly saves and restores the old ",(0,r.jsx)(n.em,{children:"random state object"}),"."]})]})}function o(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}function i(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const c={title:"*random-state*"},d="*random-state*",l={id:"chap-12/bc-c-dictionary/random-state_variable",title:"*random-state*",description:"Expanded Reference: \\random-state\\",source:"@site/docs/chap-12/bc-c-dictionary/random-state_variable.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/random-state_variable",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/random-state_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-12/bc-c-dictionary/random-state_variable.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{title:"*random-state*"},sidebar:"tutorialSidebar",previous:{title:"random-state",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/random-state_system-class"},next:{title:"random",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/random_function"}},m={},h=[{value:"Expanded Reference: *random-state*",id:"expanded-reference-random-state",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"random-state",children:"*random-state*"}),"\n","\n","\n",(0,r.jsx)(o,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-random-state",children:"Expanded Reference: *random-state*"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"*random-state*\n"})})]})}function x(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var r=t(67294);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);