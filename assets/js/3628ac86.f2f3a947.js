"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[43060],{25871:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var i=r(85893),s=r(11151);function c(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"real"})," ",(0,i.jsx)(n.em,{children:"System Class"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"real"}),", ",(0,i.jsx)(n.strong,{children:"number"}),", ",(0,i.jsx)(n.strong,{children:"t"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"real"})," includes all ",(0,i.jsx)(n.em,{children:"numbers"})," that represent mathematical real numbers, though there are mathematical real numbers (",(0,i.jsx)(n.em,{children:"e.g."}),", irrational numbers) that do not have an exact representation in Common Lisp. Only ",(0,i.jsx)(n.em,{children:"reals"})," can be ordered using the <, >, <",(0,i.jsx)(n.strong,{children:"="}),", and >",(0,i.jsx)(n.strong,{children:"="})," functions."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"types"})," ",(0,i.jsx)(n.strong,{children:"rational"})," and ",(0,i.jsx)(n.strong,{children:"float"})," are ",(0,i.jsx)(n.em,{children:"disjoint subtypes"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"real"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,i.jsx)(n.p,{children:"Abbreviating."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:["(real [",(0,i.jsx)(n.em,{children:"lower-limit"})," [",(0,i.jsx)(n.em,{children:"upper-limit"}),"]])"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"lower-limit"}),", ",(0,i.jsx)(n.em,{children:"upper-limit"}),"\u2014",(0,i.jsx)(n.em,{children:"interval designators"})," for ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"real"}),". The defaults for each of ",(0,i.jsx)(n.em,{children:"lower-limit"})," and ",(0,i.jsx)(n.em,{children:"upper-limit"})," is the ",(0,i.jsx)(n.em,{children:"symbol"})," ",(0,i.jsx)(n.strong,{children:"*"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["This denotes the ",(0,i.jsx)(n.em,{children:"reals"})," on the interval described by ",(0,i.jsx)(n.em,{children:"lower-limit"})," and ",(0,i.jsx)(n.em,{children:"upper-limit"}),"."]})]})}function t(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}const l={},a="real",d={id:"chap-12/bc-c-dictionary/real",title:"real",description:"Expanded Reference: real",source:"@site/docs/chap-12/bc-c-dictionary/real.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/real",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/real",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/real.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rationalp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/rationalp"},next:{title:"realp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/realp"}},o={},h=[{value:"Expanded Reference: real",id:"expanded-reference-real",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"real",children:"real"}),"\n","\n","\n",(0,i.jsx)(t,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-real",children:"Expanded Reference: real"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(real )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>t});var i=r(67294);const s={},c=i.createContext(s);function t(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);