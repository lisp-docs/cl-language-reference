"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[61014],{54870:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>x,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var t=s(85893),h=s(11151);function a(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,h.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"make-hash-table"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"make-hash-table"})," &key ",(0,t.jsx)(n.em,{children:"test size rehash-size rehash-threshold \u2192 hash-table"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"test"}),"\u2014a ",(0,t.jsx)(n.em,{children:"designator"})," for one of the ",(0,t.jsx)(n.em,{children:"functions"})," ",(0,t.jsx)(n.strong,{children:"eq"}),", ",(0,t.jsx)(n.strong,{children:"eql"}),", ",(0,t.jsx)(n.strong,{children:"equal"}),", or ",(0,t.jsx)(n.strong,{children:"equalp"}),". The default is ",(0,t.jsx)(n.strong,{children:"eql"}),". ",(0,t.jsx)(n.em,{children:"size"}),"\u2014a non-negative ",(0,t.jsx)(n.em,{children:"integer"})," . The default is ",(0,t.jsx)(n.em,{children:"implementation-dependent"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"rehash-size"}),"\u2014a ",(0,t.jsx)(n.em,{children:"real"})," of ",(0,t.jsx)(n.em,{children:"type"})," (or (integer 1 *) (float (1.0) *)). The default is ",(0,t.jsx)(n.em,{children:"implementation dependent"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"rehash-threshold"}),"\u2014a ",(0,t.jsx)(n.em,{children:"real"})," of ",(0,t.jsx)(n.em,{children:"type"})," (real 0 1). The default is ",(0,t.jsx)(n.em,{children:"implementation-dependent"}),". ",(0,t.jsx)(n.em,{children:"hash-table"}),"\u2014a ",(0,t.jsx)(n.em,{children:"hash table"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Creates and returns a new ",(0,t.jsx)(n.em,{children:"hash table"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"test"})," determines how ",(0,t.jsx)(n.em,{children:"keys"})," are compared. An ",(0,t.jsx)(n.em,{children:"object"})," is said to be present in the ",(0,t.jsx)(n.em,{children:"hash-table"})," if that ",(0,t.jsx)(n.em,{children:"object"})," is the ",(0,t.jsx)(n.em,{children:"same"})," under the ",(0,t.jsx)(n.em,{children:"test"})," as the ",(0,t.jsx)(n.em,{children:"key"})," for some entry in the ",(0,t.jsx)(n.em,{children:"hash-table"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"size"})," is a hint to the ",(0,t.jsx)(n.em,{children:"implementation"})," about how much initial space to allocate in the ",(0,t.jsx)(n.em,{children:"hash-table"}),". This information, taken together with the ",(0,t.jsx)(n.em,{children:"rehash-threshold"}),", controls the approximate number of entries which it should be possible to insert before the table has to grow. The actual size might be"]}),"\n",(0,t.jsxs)(n.p,{children:["rounded up from ",(0,t.jsx)(n.em,{children:"size"})," to the next \u2018good\u2019 size; for example, some ",(0,t.jsx)(n.em,{children:"implementations"})," might round to the next prime number."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"rehash-size"})," specifies a minimum amount to increase the size of the ",(0,t.jsx)(n.em,{children:"hash-table"})," when it becomes full enough to require rehashing; see ",(0,t.jsx)(n.em,{children:"rehash-theshold"})," below. If ",(0,t.jsx)(n.em,{children:"rehash-size"})," is an ",(0,t.jsx)(n.em,{children:"integer"})," , the expected growth rate for the table is additive and the ",(0,t.jsx)(n.em,{children:"integer"})," is the number of entries to add; if it is a ",(0,t.jsx)(n.em,{children:"float"}),", the expected growth rate for the table is multiplicative and the ",(0,t.jsx)(n.em,{children:"float"})," is the ratio of the new size to the old size. As with ",(0,t.jsx)(n.em,{children:"size"}),", the actual size of the increase might be rounded up."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"rehash-threshold"})," specifies how full the ",(0,t.jsx)(n.em,{children:"hash-table"})," can get before it must grow. It specifies the maximum desired hash-table occupancy level."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.em,{children:"values"})," of ",(0,t.jsx)(n.em,{children:"rehash-size"})," and ",(0,t.jsx)(n.em,{children:"rehash-threshold"})," do not constrain the ",(0,t.jsx)(n.em,{children:"implementation"})," to use any particular method for computing when and by how much the size of ",(0,t.jsx)(n.em,{children:"hash-table"})," should be enlarged. Such decisions are ",(0,t.jsx)(n.em,{children:"implementation-dependent"}),", and these ",(0,t.jsx)(n.em,{children:"values"})," only hints from the ",(0,t.jsx)(n.em,{children:"programmer"})," to the ",(0,t.jsx)(n.em,{children:"implementation"}),", and the ",(0,t.jsx)(n.em,{children:"implementation"})," is permitted to ignore them."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:' \n\n(setq table (make-hash-table)) \u2192 #<HASH-TABLE EQL 0/120 46142754> \n\n(setf (gethash "one" table) 1) \u2192 1 \n\n(gethash "one" table) \u2192 NIL, *false* \n\n(setq table (make-hash-table :test \u2019equal)) \u2192 #<HASH-TABLE EQUAL 0/139 46145547> (setf (gethash "one" table) 1) \u2192 1 \n\n(gethash "one" table) \u2192 1, T \n\n(make-hash-table :rehash-size 1.5 :rehash-threshold 0.7) \n\n\u2192 #<HASH-TABLE EQL 0/120 46156620> \n\n\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"gethash"}),", ",(0,t.jsx)(n.strong,{children:"hash-table"})]})]})}function i(e={}){const{wrapper:n}={...(0,h.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}const r={},l="make-hash-table",c={id:"chap-18/bi-c-dictionary/makehashtable",title:"make-hash-table",description:"Expanded Reference: make-hash-table",source:"@site/docs/chap-18/bi-c-dictionary/makehashtable.md",sourceDirName:"chap-18/bi-c-dictionary",slug:"/chap-18/bi-c-dictionary/makehashtable",permalink:"/cl-language-reference/docs/chap-18/bi-c-dictionary/makehashtable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-18/bi-c-dictionary/makehashtable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"hash-table-test",permalink:"/cl-language-reference/docs/chap-18/bi-c-dictionary/hashtabletest"},next:{title:"maphash",permalink:"/cl-language-reference/docs/chap-18/bi-c-dictionary/maphash"}},d={},o=[{value:"Expanded Reference: make-hash-table",id:"expanded-reference-make-hash-table",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,h.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"make-hash-table",children:"make-hash-table"}),"\n","\n","\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-make-hash-table",children:"Expanded Reference: make-hash-table"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(make-hash-table )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,h.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>i});var t=s(67294);const h={},a=t.createContext(h);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(h):e.components||h:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);