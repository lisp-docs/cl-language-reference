"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[17449],{44482:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var s=r(85893),t=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"sqrt, isqrt"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"sqrt"})," ",(0,s.jsx)(n.em,{children:"number \u2192 root"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isqrt"})," ",(0,s.jsx)(n.em,{children:"natural \u2192 natural-root"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"number"}),", ",(0,s.jsx)(n.em,{children:"root"}),"\u2014a ",(0,s.jsx)(n.em,{children:"number"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"natural"}),", ",(0,s.jsx)(n.em,{children:"natural-root"}),"\u2014a non-negative ",(0,s.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"sqrt"})," and ",(0,s.jsx)(n.strong,{children:"isqrt"})," compute square roots."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"sqrt"})," returns the ",(0,s.jsx)(n.em,{children:"principal"})," square root of ",(0,s.jsx)(n.em,{children:"number"}),". If the ",(0,s.jsx)(n.em,{children:"number"})," is not a ",(0,s.jsx)(n.em,{children:"complex"})," but is negative, then the result is a ",(0,s.jsx)(n.em,{children:"complex"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isqrt"})," returns the greatest ",(0,s.jsx)(n.em,{children:"integer"})," less than or equal to the exact positive square root of ",(0,s.jsx)(n.em,{children:"natural"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"number"})," is a positive ",(0,s.jsx)(n.em,{children:"rational"}),", it is ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," whether ",(0,s.jsx)(n.em,{children:"root"})," is a ",(0,s.jsx)(n.em,{children:"rational"})," or a ",(0,s.jsx)(n.em,{children:"float"}),". If ",(0,s.jsx)(n.em,{children:"number"})," is a negative ",(0,s.jsx)(n.em,{children:"rational"}),", it is ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," whether ",(0,s.jsx)(n.em,{children:"root"})," is a ",(0,s.jsx)(n.em,{children:"complex rational"})," or a ",(0,s.jsx)(n.em,{children:"complex float"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The mathematical definition of complex square root (whether or not minus zero is supported) follows:"}),"\n",(0,s.jsxs)(n.p,{children:["(sqrt ",(0,s.jsx)(n.em,{children:"x"}),") = (exp (/ (log ",(0,s.jsx)(n.em,{children:"x"}),") 2))"]}),"\n",(0,s.jsx)(n.p,{children:"The branch cut for square root lies along the negative real axis, continuous with quadrant II. The range consists of the right half-plane, including the non-negative imaginary axis and excluding the negative imaginary axis."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"\n(sqrt 9.0) \u2192 3.0 \n(sqrt -9.0) \u2192 #C(0.0 3.0) \n\n\n\n(isqrt 9) \u2192 3 \n(sqrt 12) \u2192 3.4641016 \n(isqrt 12) \u2192 3 \n(isqrt 300) \u2192 17 \n(isqrt 325) \u2192 18 \n(sqrt 25) \n\u2192 5 \n<i><sup>or</sup>\u2192</i> 5.0 \n(isqrt 25) \u2192 5 \n(sqrt -1) \u2192 #C(0.0 1.0) \n(sqrt #c(0 2)) \u2192 #C(1.0 1.0) \n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"function"})," ",(0,s.jsx)(n.strong,{children:"sqrt"})," should signal ",(0,s.jsx)(n.strong,{children:"type-error"})," if its argument is not a ",(0,s.jsx)(n.em,{children:"number"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"function"})," ",(0,s.jsx)(n.strong,{children:"isqrt"})," should signal ",(0,s.jsx)(n.strong,{children:"type-error"})," if its argument is not a non-negative ",(0,s.jsx)(n.em,{children:"integer"})," . The functions ",(0,s.jsx)(n.strong,{children:"sqrt"})," and ",(0,s.jsx)(n.strong,{children:"isqrt"})," might signal ",(0,s.jsx)(n.strong,{children:"arithmetic-error"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"exp"}),", ",(0,s.jsx)(n.strong,{children:"log"}),", Section 12.1.3.3 (Rule of Float Substitutability)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["(isqrt x) ",(0,s.jsx)(n.em,{children:"\u2261"})," (values (floor (sqrt x)))"]}),"\n",(0,s.jsx)(n.p,{children:"but it is potentially more efficient."})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const o={},l="sqrt, isqrt",a={id:"chap-12/bc-c-dictionary/sqrt",title:"sqrt, isqrt",description:"Expanded Reference: sqrt, isqrt",source:"@site/docs/chap-12/bc-c-dictionary/sqrt.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/sqrt",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/sqrt",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/sqrt.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"/",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/slash_function"},next:{title:"unsigned-byte",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/unsignedbyte"}},d={},h=[{value:"Expanded Reference: sqrt, isqrt",id:"expanded-reference-sqrt-isqrt",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"sqrt-isqrt",children:"sqrt, isqrt"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-sqrt-isqrt",children:"Expanded Reference: sqrt, isqrt"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(sqrt, isqrt )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var s=r(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);