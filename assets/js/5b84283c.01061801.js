"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[69101],{27913:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>C,contentTitle:()=>g,default:()=>L,frontMatter:()=>y,metadata:()=>b,toc:()=>S});var n=i(85893),t=i(11151);function r(e){return(0,n.jsx)(n.Fragment,{})}function l(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(r,{...e})}):r()}function c(e){const s={em:"em",p:"p",...(0,t.a)(),...e.components},{ClLinks:i,GlossaryTerm:r}=s;return i||o("ClLinks",!0),r||o("GlossaryTerm",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["To ",(0,n.jsx)(i,{styled:!0,term:"load",children:(0,n.jsx)("b",{children:"load"})})," a ",(0,n.jsx)(i,{styled:!0,term:"file",children:(0,n.jsx)("i",{children:"file"})})," is to treat its contents as ",(0,n.jsx)(i,{styled:!0,term:"code",children:(0,n.jsx)("i",{children:"code"})})," and ",(0,n.jsx)(i,{styled:!0,term:"execute",children:(0,n.jsx)("i",{children:"execute"})})," that ",(0,n.jsx)(i,{styled:!0,term:"code",children:(0,n.jsx)("i",{children:"code"})}),". The ",(0,n.jsx)(i,{styled:!0,term:"file",children:(0,n.jsx)("i",{children:"file"})})," may contain ",(0,n.jsx)(r,{styled:!0,term:"source code",children:(0,n.jsx)("i",{children:"source code"})})," or ",(0,n.jsx)(r,{styled:!0,term:"compiled code",children:(0,n.jsx)("i",{children:"compiled code"})}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(i,{styled:!0,term:"file",children:(0,n.jsx)("i",{children:"file"})})," containing ",(0,n.jsx)(r,{styled:!0,term:"source code",children:(0,n.jsx)("i",{children:"source code"})})," is called a ",(0,n.jsx)(r,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),". ",(0,n.jsx)(s.em,{children:"Loading"})," a ",(0,n.jsx)(r,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})})," is accomplished essentially by sequentially ",(0,n.jsx)(s.em,{children:"reading"}),(0,n.jsx)("sub",{children:"2"})," the ",(0,n.jsx)(i,{styled:!0,term:"form",children:(0,n.jsx)("i",{children:"forms"})})," in the file, ",(0,n.jsx)(s.em,{children:"evaluating"})," each immediately after it is ",(0,n.jsx)(i,{styled:!0,term:"read",children:(0,n.jsx)("i",{children:"read"})}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(i,{styled:!0,term:"file",children:(0,n.jsx)("i",{children:"file"})})," containing ",(0,n.jsx)(r,{styled:!0,term:"compiled code",children:(0,n.jsx)("i",{children:"compiled code"})})," is called a ",(0,n.jsx)(r,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})}),". ",(0,n.jsx)(s.em,{children:"Loading"})," a ",(0,n.jsx)(r,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})})," is similar to ",(0,n.jsx)(s.em,{children:"loading"})," a ",(0,n.jsx)(r,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),", except that the ",(0,n.jsx)(i,{styled:!0,term:"file",children:(0,n.jsx)("i",{children:"file"})})," does not contain text but rather an ",(0,n.jsx)(s.em,{children:"implementation dependent"})," representation of pre-digested ",(0,n.jsx)(i,{styled:!0,term:"expression",children:(0,n.jsx)("i",{children:"expressions"})})," created by the ",(0,n.jsx)(i,{styled:!0,term:"compiler",children:(0,n.jsx)("i",{children:"compiler"})})," . Often, a ",(0,n.jsx)(r,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})})," can be ",(0,n.jsx)(s.em,{children:"loaded"})," more quickly than a ",(0,n.jsx)(r,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),". See Section 3.2 (Compilation)."]}),"\n",(0,n.jsxs)(s.p,{children:["The way in which a ",(0,n.jsx)(r,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})})," is distinguished from a ",(0,n.jsx)(r,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})})," is ",(0,n.jsx)(i,{styled:!0,term:"implementation-dependent",children:(0,n.jsx)("i",{children:"implementation-dependent"})}),"."]})]})}function d(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}function o(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function a(e){const s={em:"em",p:"p",...(0,t.a)(),...e.components},{ClLinks:i,GlossaryTerm:r}=s;return i||m("ClLinks",!0),r||m("GlossaryTerm",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})})," is an aspect or attribute of Common Lisp, of the ",(0,n.jsx)(i,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})}),", or of the ",(0,n.jsx)(i,{styled:!0,term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),". A ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})})," is identified by a ",(0,n.jsx)(i,{styled:!0,term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})})," is said to be ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})})," in a ",(0,n.jsx)(s.em,{children:"Lisp image"})," if and only if the ",(0,n.jsx)(i,{styled:!0,term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," naming it is an ",(0,n.jsx)(i,{styled:!0,term:"element",children:(0,n.jsx)("i",{children:"element"})})," of the ",(0,n.jsx)(i,{styled:!0,term:"list",children:(0,n.jsx)("i",{children:"list"})})," held by the ",(0,n.jsx)(i,{styled:!0,term:"variable",children:(0,n.jsx)("i",{children:"variable"})})," ",(0,n.jsx)(i,{styled:!0,term:"features",children:(0,n.jsx)("b",{children:"*features*"})}),", which is called the ",(0,n.jsx)(r,{styled:!0,term:"features list",children:(0,n.jsx)("i",{children:"features list"})}),"."]})]})}function p(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}function m(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function h(e){const s={em:"em",p:"p",...(0,t.a)(),...e.components},{ClLinks:i,GlossaryTerm:r}=s;return i||j("ClLinks",!0),r||j("GlossaryTerm",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["Boolean combinations of ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"features"})}),", called ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expressions"})}),", are used by the #+ and #- ",(0,n.jsx)(r,{styled:!0,term:"reader macro",children:(0,n.jsx)("i",{children:"reader macros"})})," in order to direct conditional ",(0,n.jsx)(s.em,{children:"reading"})," of ",(0,n.jsx)(i,{styled:!0,term:"expression",children:(0,n.jsx)("i",{children:"expressions"})})," by the ",(0,n.jsx)(s.em,{children:"Lisp reader"})," ."]}),"\n",(0,n.jsxs)(s.p,{children:["The rules for interpreting a ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expression"})})," are as follows:"]}),"\n",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})}),"\n",(0,n.jsxs)(s.p,{children:["If a ",(0,n.jsx)(i,{styled:!0,term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," naming a ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})})," is used as a ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expression"})}),", the ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expression"})})," succeeds if that ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})})," is ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})}),"; otherwise it fails."]}),"\n",(0,n.jsxs)(s.p,{children:["(not ",(0,n.jsx)(s.em,{children:"feature-conditional"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(i,{styled:!0,term:"not",children:(0,n.jsx)("b",{children:"not"})})," ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expression"})})," succeeds if its argument ",(0,n.jsx)(s.em,{children:"feature-conditional"})," fails; otherwise, it succeeds."]}),"\n",(0,n.jsxs)(s.p,{children:["(and ",(0,n.jsx)(s.em,{children:"{feature-conditional}"}),"*)"]}),"\n",(0,n.jsxs)(s.p,{children:["An ",(0,n.jsx)(i,{styled:!0,term:"and",children:(0,n.jsx)("b",{children:"and"})})," ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expression"})})," succeeds if all of its argument ",(0,n.jsx)(s.em,{children:"feature-conditionals"})," succeed; otherwise, it fails."]}),"\n",(0,n.jsx)(s.p,{children:"System"}),"\n",(0,n.jsxs)(s.p,{children:["(or ",(0,n.jsx)(s.em,{children:"{feature-conditional}"}),"*)"]}),"\n",(0,n.jsxs)(s.p,{children:["An ",(0,n.jsx)(i,{styled:!0,term:"or",children:(0,n.jsx)("b",{children:"or"})})," ",(0,n.jsx)(r,{styled:!0,term:"feature expression",children:(0,n.jsx)("i",{children:"feature expression"})})," succeeds if any of its argument ",(0,n.jsx)(s.em,{children:"feature-conditionals"})," succeed; otherwise, it fails."]})]})}function x(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}function j(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function u(e){const s={code:"code",em:"em",p:"p",pre:"pre",...(0,t.a)(),...e.components},{ClLinks:i}=s;return i||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["For example, suppose that in ",(0,n.jsx)(i,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," A, the ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"features"})})," spice and perq are ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})}),", but the ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"feature"})})," lispm is not ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})}),"; in ",(0,n.jsx)(i,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," B, the feature lispm is ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})}),", but the ",(0,n.jsx)(i,{styled:!0,term:"feature",children:(0,n.jsx)("i",{children:"features"})})," spice and perq are not ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})}),"; and in ",(0,n.jsx)(i,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," C, none of the features spice, ",(0,n.jsx)(s.em,{children:"lispm"}),", or perq are ",(0,n.jsx)(i,{styled:!0,term:"present",children:(0,n.jsx)("i",{children:"present"})}),". Figure 24\u20131 shows some sample ",(0,n.jsx)(i,{styled:!0,term:"expression",children:(0,n.jsx)("i",{children:"expressions"})}),", and how they would be ",(0,n.jsx)(i,{styled:!0,term:"read",children:(0,n.jsx)("i",{children:"read"})})," ",(0,n.jsx)("sub",{children:"2"})," in these ",(0,n.jsx)(i,{styled:!0,term:"implementation",children:(0,n.jsx)("i",{children:"implementations"})}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lisp",metastring:'title="Figure 24\u20131. Features examples"',children:'<p>(cons #+spice "Spice" #-spice "Lispm" x) </p><p>in *implementation* A *. . .* (CONS "Spice" X) </p><p>in *implementation* B *. . .* (CONS "Lispm" X) </p><p>in *implementation* C *. . .* (CONS "Lispm" X) </p><p>(cons #+spice "Spice" #+LispM "Lispm" x) </p><p>in *implementation* A *. . .* (CONS "Spice" X) </p><p>in *implementation* B *. . .* (CONS "Lispm" X) </p><p>in *implementation* C *. . .* (CONS X) </p><p>(setq a \u2019(1 2 #+perq 43 #+(not perq) 27)) </p><p>in *implementation* A *. . .* (SETQ A \u2019(1 2 43)) </p><p>in *implementation* B *. . .* (SETQ A \u2019(1 2 27)) </p><p>in *implementation* C *. . .* (SETQ A \u2019(1 2 27)) </p><p>(let ((a 3) #+(or spice lispm) (b 3)) (foo a)) </p><p>in *implementation* A *. . .* (LET ((A 3) (B 3)) (FOO A)) </p><p>in *implementation* B *. . .* (LET ((A 3) (B 3)) (FOO A)) </p><p>in *implementation* C *. . .* (LET ((A 3)) (FOO A)) </p><p>(cons #+Lispm "#+Spice" #+Spice "foo" #-(or Lispm Spice) 7 x) </p><p>in *implementation* A *. . .* (CONS "foo" X) </p><p>in *implementation* B *. . .* (CONS "#+Spice" X) </p><p>in *implementation* C *. . .* (CONS 7 X)</p>\n'})})]})}function f(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}const y={title:"24.1 System Construction Concepts"},g="24.1 System Construction Concepts",b={id:"chap-24/ce-b-system-construction-concepts",title:"24.1 System Construction Concepts",description:"24.1.1 Loading",source:"@site/docs/chap-24/ce-b-system-construction-concepts.md",sourceDirName:"chap-24",slug:"/chap-24/ce-b-system-construction-concepts",permalink:"/cl-language-reference/chap-24/ce-b-system-construction-concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-24/ce-b-system-construction-concepts.md",tags:[],version:"current",frontMatter:{title:"24.1 System Construction Concepts"},sidebar:"tutorialSidebar",previous:{title:"24. System Construction",permalink:"/cl-language-reference/category/24-system-construction"},next:{title:"24.2 System Construction Dictionary",permalink:"/cl-language-reference/category/242-system-construction-dictionary"}},C={},S=[{value:"24.1.1 Loading",id:"2411-loading",level:2},{value:"24.1.2 Features",id:"2412-features",level:2},{value:"24.1.2.1 Feature Expressions",id:"24121-feature-expressions",level:3},{value:"24.1.2.1.1 Examples of Feature Expressions",id:"241211-examples-of-feature-expressions",level:4}];function w(e){const s={h1:"h1",h2:"h2",h3:"h3",h4:"h4",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"241-system-construction-concepts",children:"24.1 System Construction Concepts"}),"\n","\n",(0,n.jsx)(l,{}),"\n",(0,n.jsx)(s.h2,{id:"2411-loading",children:"24.1.1 Loading"}),"\n","\n",(0,n.jsx)(d,{}),"\n",(0,n.jsx)(s.h2,{id:"2412-features",children:"24.1.2 Features"}),"\n","\n",(0,n.jsx)(p,{}),"\n",(0,n.jsx)(s.h3,{id:"24121-feature-expressions",children:"24.1.2.1 Feature Expressions"}),"\n","\n",(0,n.jsx)(x,{}),"\n",(0,n.jsx)(s.h4,{id:"241211-examples-of-feature-expressions",children:"24.1.2.1.1 Examples of Feature Expressions"}),"\n","\n","\n",(0,n.jsx)(f,{})]})}function L(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(w,{...e})}):w(e)}},11151:(e,s,i)=>{i.d(s,{Z:()=>c,a:()=>l});var n=i(67294);const t={},r=n.createContext(t);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);