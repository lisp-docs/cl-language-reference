"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[75552],{94321:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var c=r(85893),s=r(11151);function t(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"complex"})," ",(0,c.jsx)(n.em,{children:"System Class"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"complex"}),", ",(0,c.jsx)(n.strong,{children:"number"}),", ",(0,c.jsx)(n.strong,{children:"t"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.em,{children:"type"})," ",(0,c.jsx)(n.strong,{children:"complex"})," includes all mathematical complex numbers other than those included in the ",(0,c.jsx)(n.em,{children:"type"})," ",(0,c.jsx)(n.strong,{children:"rational"}),". ",(0,c.jsx)(n.em,{children:"Complexes"})," are expressed in Cartesian form with a real part and an imaginary part, each of which is a ",(0,c.jsx)(n.em,{children:"real"}),". The real part and imaginary part are either both ",(0,c.jsx)(n.em,{children:"rational"})," or both of the same ",(0,c.jsx)(n.em,{children:"float type"}),". The imaginary part can be a ",(0,c.jsx)(n.em,{children:"float"})," zero, but can never be a ",(0,c.jsx)(n.em,{children:"rational"})," zero, for such a number is always represented by Common Lisp as a ",(0,c.jsx)(n.em,{children:"rational"})," rather than a ",(0,c.jsx)(n.em,{children:"complex"})," ."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,c.jsx)(n.p,{children:"Specializing."}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:["(complex [",(0,c.jsx)(n.em,{children:"typespec |"})," ",(0,c.jsx)(n.strong,{children:"*"}),"])"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"typespec"}),"\u2014a ",(0,c.jsx)(n.em,{children:"type specifier"})," that denotes a ",(0,c.jsx)(n.em,{children:"subtype"})," of ",(0,c.jsx)(n.em,{children:"type"})," ",(0,c.jsx)(n.strong,{children:"real"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["Every element of this ",(0,c.jsx)(n.em,{children:"type"})," is a ",(0,c.jsx)(n.em,{children:"complex"})," whose real part and imaginary part are each of type (upgraded-complex-part-type ",(0,c.jsx)(n.em,{children:"typespec"}),"). This ",(0,c.jsx)(n.em,{children:"type"})," encompasses those ",(0,c.jsx)(n.em,{children:"complexes"})," that can result by giving numbers of ",(0,c.jsx)(n.em,{children:"type typespec"})," to ",(0,c.jsx)(n.strong,{children:"complex"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["(complex ",(0,c.jsx)(n.em,{children:"type-specifier"}),") refers to all ",(0,c.jsx)(n.em,{children:"complexes"})," that can result from giving ",(0,c.jsx)(n.em,{children:"numbers"})," of ",(0,c.jsx)(n.em,{children:"type type specifier"})," to the ",(0,c.jsx)(n.em,{children:"function"})," ",(0,c.jsx)(n.strong,{children:"complex"}),", plus all other ",(0,c.jsx)(n.em,{children:"complexes"})," of the same specialized representation."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,c.jsx)(n.p,{children:"Section 12.1.5.3 (Rule of Canonical Representation for Complex Rationals), Section 2.3.2 (Constructing Numbers from Tokens), Section 22.1.3.1.4 (Printing Complexes)"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,c.jsxs)(n.p,{children:["The input syntax for a ",(0,c.jsx)(n.em,{children:"complex"})," with real part ",(0,c.jsx)(n.em,{children:"r"})," and imaginary part ",(0,c.jsx)(n.em,{children:"i"})," is #C(",(0,c.jsx)(n.em,{children:"r i"}),"). For further details, see Section 2.4 (Standard Macro Characters)."]}),"\n",(0,c.jsxs)(n.p,{children:["For every ",(0,c.jsx)(n.em,{children:"float"}),", ",(0,c.jsx)(n.em,{children:"n"}),", there is a ",(0,c.jsx)(n.em,{children:"complex"})," which represents the same mathematical number and which can be obtained by (COERCE ",(0,c.jsx)(n.em,{children:"n"})," \u2019COMPLEX)."]})]})}function i(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}const l={title:"complex"},o="complex",a={id:"chap-12/bc-c-dictionary/complex_system-class",title:"complex",description:"Expanded Reference: complex",source:"@site/docs/chap-12/bc-c-dictionary/complex_system-class.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/complex_system-class",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/complex_system-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/complex_system-class.md",tags:[],version:"current",frontMatter:{title:"complex"},sidebar:"tutorialSidebar",previous:{title:"complex",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/complex_function"},next:{title:"complexp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/complexp_function"}},p={},d=[{value:"Expanded Reference: complex",id:"expanded-reference-complex",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"complex",children:"complex"}),"\n","\n","\n",(0,c.jsx)(i,{}),"\n",(0,c.jsx)(n.h2,{id:"expanded-reference-complex",children:"Expanded Reference: complex"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"(complex )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>i});var c=r(67294);const s={},t=c.createContext(s);function i(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);