"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[47185],{5434:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>j,frontMatter:()=>d,metadata:()=>h,toc:()=>m});var t=n(85893),s=n(11151);function r(e){const i={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:n,GlossaryTerm:r}=i;return n||a("ClLinks",!0),r||a("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"shared-initialize"})," ",(0,t.jsx)(r,{styled:!0,term:"standard generic function",children:(0,t.jsx)("i",{children:"Standard Generic Function"})})]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," ",(0,t.jsx)(i.em,{children:"instance slot-names"})," &rest ",(0,t.jsx)(i.em,{children:"initargs"})," &key &allow-other-keys \u2192 instance"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Method Signatures:"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," (",(0,t.jsx)(n,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," ",(0,t.jsx)(n,{term:"standard-object",children:(0,t.jsx)("b",{children:"standard-object"})}),") ",(0,t.jsx)(i.em,{children:"slot-names"})," &rest ",(0,t.jsx)(i.em,{children:"initargs"})]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(n,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})}),"\u2014an ",(0,t.jsx)(n,{term:"object",children:(0,t.jsx)("i",{children:"object"})}),"."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"slot-names"}),"\u2014a ",(0,t.jsx)(n,{term:"list",children:(0,t.jsx)("i",{children:"list"})})," or ",(0,t.jsx)(n,{term:"t",children:(0,t.jsx)("b",{children:"t"})}),"."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"initargs"}),"\u2014a ",(0,t.jsx)(n,{term:"list",children:(0,t.jsx)("i",{children:"list"})})," of ",(0,t.jsx)(r,{styled:!0,term:"keyword/value pair",children:(0,t.jsx)("i",{children:"keyword/value pairs"})})," (of initialization argument ",(0,t.jsx)(n,{term:"name",children:(0,t.jsx)("i",{children:"names"})})," and ",(0,t.jsx)(n,{term:"value",children:(0,t.jsx)("i",{children:"values"})}),")."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(i.p,{children:["The generic function ",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," is used to fill the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," of an ",(0,t.jsx)(n,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," using ",(0,t.jsx)(i.em,{children:"initargs"})," and ",":initform"," forms. It is called when an instance is created, when an instance is re-initialized, when an instance is updated to conform to a redefined ",(0,t.jsx)(n,{term:"class",children:(0,t.jsx)("i",{children:"class"})}),", and when an instance is updated to conform to a different ",(0,t.jsx)(n,{term:"class",children:(0,t.jsx)("i",{children:"class"})}),". The generic function ",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," is called by the system-supplied primary ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," for ",(0,t.jsx)(n,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})}),", ",(0,t.jsx)(n,{term:"reinitialize-instance",children:(0,t.jsx)("b",{children:"reinitialize-instance"})}),", ",(0,t.jsx)(i.strong,{children:"update-instance-for-redefined-class"}),", and ",(0,t.jsx)(i.strong,{children:"update-instance-for-different-class"}),"."]}),"\n",(0,t.jsxs)(i.p,{children:["The generic function ",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," takes the following arguments: the ",(0,t.jsx)(n,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," to be initialized, a specification of a set of ",(0,t.jsx)(i.em,{children:"slot-names accessible"})," in that ",(0,t.jsx)(n,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})}),", and any number of ",(0,t.jsx)(i.em,{children:"initargs"}),". The arguments after the first two must form an ",(0,t.jsx)(r,{styled:!0,term:"initialization argument list",children:(0,t.jsx)("i",{children:"initialization argument list"})}),". The system-supplied"]}),"\n",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})}),"\n",(0,t.jsxs)(i.p,{children:["primary ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," on ",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," initializes the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," with values according to the ",(0,t.jsx)(i.em,{children:"initargs"})," and supplied ",":initform"," forms. ",(0,t.jsx)(i.em,{children:"Slot-names"})," indicates which ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," should be initialized according to their ",":initform"," forms if no ",(0,t.jsx)(i.em,{children:"initargs"})," are provided for those ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})}),"."]}),"\n",(0,t.jsxs)(i.p,{children:["The system-supplied primary ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," behaves as follows, regardless of whether the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," are local or shared:"]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"\u2022"})," If an ",(0,t.jsx)(i.em,{children:"initarg"})," in the ",(0,t.jsx)(r,{styled:!0,term:"initialization argument list",children:(0,t.jsx)("i",{children:"initialization argument list"})})," specifies a value for that ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})}),", that value is stored into the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})}),", even if a value has already been stored in the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})})," before the ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," is run."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"\u2022"})," Any ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," indicated by ",(0,t.jsx)(i.em,{children:"slot-names"})," that are still unbound at this point are initialized according to their ",":initform"," forms. For any such ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})})," that has an ",":initform"," form, that ",(0,t.jsx)(n,{term:"form",children:(0,t.jsx)("i",{children:"form"})})," is evaluated in the lexical environment of its defining ",(0,t.jsx)(n,{term:"defclass",children:(0,t.jsx)("b",{children:"defclass"})})," ",(0,t.jsx)(n,{term:"form",children:(0,t.jsx)("i",{children:"form"})})," and the result is stored into the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})}),". For example, if a ",(0,t.jsx)(r,{styled:!0,term:"before method",children:(0,t.jsx)("i",{children:"before method"})})," stores a value in the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})}),", the ",":initform"," form will not be used to supply a value for the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"\u2022"})," The rules mentioned in Section 7.1.4 (Rules for Initialization Arguments) are obeyed."]}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.em,{children:"slots-names"})," argument specifies the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," that are to be initialized according to their ",":initform"," forms if no initialization arguments apply. It can be a ",(0,t.jsx)(n,{term:"list",children:(0,t.jsx)("i",{children:"list"})})," of slot ",(0,t.jsx)(n,{term:"name",children:(0,t.jsx)("i",{children:"names"})}),", which specifies the set of those slot ",(0,t.jsx)(n,{term:"name",children:(0,t.jsx)("i",{children:"names"})}),"; or it can be the ",(0,t.jsx)(n,{term:"symbol",children:(0,t.jsx)("i",{children:"symbol"})})," ",(0,t.jsx)(n,{term:"t",children:(0,t.jsx)("b",{children:"t"})}),", which specifies the set of all of the ",(0,t.jsx)(n,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})}),"."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(n,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})}),", ",(0,t.jsx)(n,{term:"reinitialize-instance",children:(0,t.jsx)("b",{children:"reinitialize-instance"})}),", ",(0,t.jsx)(i.strong,{children:"update-instance-for-redefined-class"}),","]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"update-instance-for-different-class"}),", ",(0,t.jsx)(n,{term:"slot-boundp",children:(0,t.jsx)("b",{children:"slot-boundp"})}),", ",(0,t.jsx)(n,{term:"slot-makunbound",children:(0,t.jsx)("b",{children:"slot-makunbound"})}),", Section 7.1 (Object Creation and Initialization), Section 7.1.4 (Rules for Initialization Arguments), Section 7.1.2 (Declaring the Validity of Initialization Arguments)"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"Initargs"})," are declared as valid by using the ",":initarg"," option to ",(0,t.jsx)(n,{term:"defclass",children:(0,t.jsx)("b",{children:"defclass"})}),", or by defining ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"methods"})})," for ",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})}),". The keyword name of each keyword parameter specifier in the ",(0,t.jsx)(r,{styled:!0,term:"lambda list",children:(0,t.jsx)("i",{children:"lambda list"})})," of any ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," defined on ",(0,t.jsx)(n,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," is declared as a valid ",(0,t.jsx)(i.em,{children:"initarg"})," name for all ",(0,t.jsx)(i.em,{children:"classes"})," for which that ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," is applicable."]}),"\n",(0,t.jsxs)(i.p,{children:["Implementations are permitted to optimize ",":initform"," forms that neither produce nor depend on side effects, by evaluating these ",(0,t.jsx)(n,{term:"form",children:(0,t.jsx)("i",{children:"forms"})})," and storing them into slots before running any ",(0,t.jsx)(n,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})})," methods, rather than by handling them in the primary ",(0,t.jsx)(n,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})})," method. (This optimization might be implemented by having the ",(0,t.jsx)(n,{term:"allocate-instance",children:(0,t.jsx)("b",{children:"allocate-instance"})})," method copy a prototype instance.)"]}),"\n",(0,t.jsxs)(i.p,{children:["Implementations are permitted to optimize default initial value forms for ",(0,t.jsx)(i.em,{children:"initargs"})," associated with slots by not actually creating the complete initialization argument ",(0,t.jsx)(n,{term:"list",children:(0,t.jsx)("i",{children:"list"})})," when the only ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," that would receive the complete ",(0,t.jsx)(n,{term:"list",children:(0,t.jsx)("i",{children:"list"})})," is the ",(0,t.jsx)(n,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," on ",(0,t.jsx)(n,{term:"standard-object",children:(0,t.jsx)("b",{children:"standard-object"})}),". In this case default initial value"]}),"\n",(0,t.jsxs)(i.p,{children:["forms can be treated like ",":initform"," forms. This optimization has no visible effects other than a performance improvement."]})]})}function l(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}function a(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"shared-initialize"},c="shared-initialize",h={id:"chap-7/h-h-dictionary/shared-initialize_standard-generic-function",title:"shared-initialize",description:"Expanded Reference: shared-initialize",source:"@site/docs/chap-7/h-h-dictionary/shared-initialize_standard-generic-function.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/shared-initialize_standard-generic-function",permalink:"/cl-language-reference/chap-7/h-h-dictionary/shared-initialize_standard-generic-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-7/h-h-dictionary/shared-initialize_standard-generic-function.md",tags:[],version:"current",frontMatter:{title:"shared-initialize"},sidebar:"tutorialSidebar",previous:{title:"remove-method",permalink:"/cl-language-reference/chap-7/h-h-dictionary/remove-method_standard-generic-function"},next:{title:"slot-boundp",permalink:"/cl-language-reference/chap-7/h-h-dictionary/slot-boundp_function"}},o={},m=[{value:"Expanded Reference: shared-initialize",id:"expanded-reference-shared-initialize",level:2}];function x(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"shared-initialize",children:"shared-initialize"}),"\n","\n","\n",(0,t.jsx)(l,{}),"\n",(0,t.jsx)(i.h2,{id:"expanded-reference-shared-initialize",children:"Expanded Reference: shared-initialize"}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsx)(i.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-lisp",children:"(shared-initialize )\n"})})]})}function j(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>a,a:()=>l});var t=n(67294);const s={},r=t.createContext(s);function l(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);