"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[37651],{67206:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var t=r(85893),s=r(11151);function i(e){const n={del:"del",em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"compute-restarts"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"compute-restarts"})," &optional ",(0,t.jsx)(n.em,{children:"condition \u2192 restarts"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"condition"}),"\u2014a ",(0,t.jsx)(n.em,{children:"condition object"}),", or ",(0,t.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"restarts"}),"\u2014a ",(0,t.jsx)(n.em,{children:"list"})," of ",(0,t.jsx)(n.em,{children:"restarts"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"compute-restarts"})," uses the dynamic state of the program to compute a ",(0,t.jsx)(n.em,{children:"list"})," of the ",(0,t.jsx)(n.em,{children:"restarts"})," which are currently active."]}),"\n",(0,t.jsxs)(n.p,{children:["The resulting ",(0,t.jsx)(n.em,{children:"list"})," is ordered so that the innermost (more-recently established) restarts are nearer the head of the ",(0,t.jsx)(n.em,{children:"list"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.em,{children:"condition"})," is ",(0,t.jsx)(n.em,{children:"non-nil"}),", only those ",(0,t.jsx)(n.em,{children:"restarts"})," are considered that are either explicitly associated with that ",(0,t.jsx)(n.em,{children:"condition"}),", or not associated with any ",(0,t.jsx)(n.em,{children:"condition"}),"; that is, the excluded ",(0,t.jsx)(n.em,{children:"restarts"})," are those that are associated with a non-empty set of ",(0,t.jsx)(n.em,{children:"conditions"})," of which the given ",(0,t.jsx)(n.em,{children:"condition"})," is not an ",(0,t.jsx)(n.em,{children:"element"}),". If ",(0,t.jsx)(n.em,{children:"condition"})," is ",(0,t.jsx)(n.strong,{children:"nil"}),", all ",(0,t.jsx)(n.em,{children:"restarts"})," are considered."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"compute-restarts"})," returns all ",(0,t.jsx)(n.em,{children:"applicable restarts"}),", including anonymous ones, even if some of them have the same name as others and would therefore not be found by ",(0,t.jsx)(n.strong,{children:"find-restart"})," when given a ",(0,t.jsx)(n.em,{children:"symbol"})," argument."]}),"\n",(0,t.jsxs)(n.p,{children:["Implementations are permitted, but not required, to return ",(0,t.jsx)(n.em,{children:"distinct lists"})," from repeated calls to ",(0,t.jsx)(n.strong,{children:"compute-restarts"})," while in the same dynamic environment. The consequences are undefined if the ",(0,t.jsx)(n.em,{children:"list"})," returned by ",(0,t.jsx)(n.strong,{children:"compute-restarts"})," is every modified."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.p,{children:";; One possible way in which an interactive debugger might present"}),"\n",(0,t.jsx)(n.p,{children:";; restarts to the user."}),"\n",(0,t.jsx)(n.p,{children:"(defun invoke-a-restart ()"}),"\n",(0,t.jsx)(n.p,{children:"(let ((restarts (compute-restarts)))"}),"\n",(0,t.jsx)(n.p,{children:"(do ((i 0 (+ i 1)) (r restarts (cdr r))) ((null r))"}),"\n",(0,t.jsxs)(n.p,{children:['(format t "~&~D: ',(0,t.jsx)(n.del,{children:"A"}),'%" i (car r)))']}),"\n",(0,t.jsx)(n.p,{children:"(let ((n nil) (k (length restarts)))"}),"\n",(0,t.jsx)(n.p,{children:"(loop (when (and (typep n \u2019integer) (>= n 0) (< n k))"}),"\n",(0,t.jsx)(n.p,{children:"(return t))"}),"\n",(0,t.jsx)(n.p,{children:'(format t "~&Option: ")'}),"\n",(0,t.jsx)(n.p,{children:"(setq n (read))"}),"\n",(0,t.jsx)(n.p,{children:"(fresh-line))"}),"\n",(0,t.jsx)(n.p,{children:"(invoke-restart-interactively (nth n restarts)))))"}),"\n",(0,t.jsx)(n.p,{children:"(restart-case (invoke-a-restart)"}),"\n",(0,t.jsx)(n.p,{children:"(one () 1)"}),"\n",(0,t.jsx)(n.p,{children:"(two () 2)"}),"\n",(0,t.jsxs)(n.p,{children:["(nil () ",":report",' "Who knows?" \u2019anonymous)']}),"\n",(0,t.jsx)(n.p,{children:"(one () \u2019I)"}),"\n",(0,t.jsx)(n.p,{children:"(two () \u2019II))"}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 0: ONE"}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 1: TWO"}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 2: Who knows?"}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 3: ONE"}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 4: TWO"}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 5: Return to Lisp Toplevel."}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 Option: 4"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"\u2192"})," II"]}),"\n",(0,t.jsx)(n.p,{children:";; Note that in addition to user-defined restart points, COMPUTE-RESTARTS"}),"\n",(0,t.jsx)(n.p,{children:";; also returns information about any system-supplied restarts, such as"}),"\n",(0,t.jsx)(n.p,{children:';; the "Return to Lisp Toplevel" restart offered above.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,t.jsx)(n.p,{children:"Existing restarts."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"find-restart"}),", ",(0,t.jsx)(n.strong,{children:"invoke-restart"}),", ",(0,t.jsx)(n.strong,{children:"restart-bind"})]})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const o={},d="compute-restarts",a={id:"chap-9/j-c-dictionary/computerestarts",title:"compute-restarts",description:"Expanded Reference: compute-restarts",source:"@site/docs/chap-9/j-c-dictionary/computerestarts.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/computerestarts",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/computerestarts",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/computerestarts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"check-type",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/checktype"},next:{title:"condition",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/condition"}},l={},h=[{value:"Expanded Reference: compute-restarts",id:"expanded-reference-compute-restarts",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"compute-restarts",children:"compute-restarts"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-compute-restarts",children:"Expanded Reference: compute-restarts"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(compute-restarts )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var t=r(67294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);