"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[29920],{56813:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>x,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var s=i(85893),r=i(11151);function o(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"function-lambda-expression"})," ",(0,s.jsx)(e.em,{children:"Function"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"function-lambda-expression"})," ",(0,s.jsx)(e.em,{children:"function"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"\u2192 lambda-expression, closure-p, name"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"function"}),"\u2014a ",(0,s.jsx)(e.em,{children:"function"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"lambda-expression"}),"\u2014a ",(0,s.jsx)(e.em,{children:"lambda expression"})," or ",(0,s.jsx)(e.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"closure-p"}),"\u2014a ",(0,s.jsx)(e.em,{children:"generalized boolean"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"name"}),"\u2014an ",(0,s.jsx)(e.em,{children:"object"}),"."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(e.p,{children:["Returns information about ",(0,s.jsx)(e.em,{children:"function"})," as follows:"]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.em,{children:"primary value"}),", ",(0,s.jsx)(e.em,{children:"lambda-expression"}),", is ",(0,s.jsx)(e.em,{children:"function"}),"\u2019s defining ",(0,s.jsx)(e.em,{children:"lambda expression"}),", or ",(0,s.jsx)(e.strong,{children:"nil"})," if the information is not available. The ",(0,s.jsx)(e.em,{children:"lambda expression"})," may have been pre-processed in some ways, but it should remain a suitable argument to ",(0,s.jsx)(e.strong,{children:"compile"})," or ",(0,s.jsx)(e.strong,{children:"function"}),". Any ",(0,s.jsx)(e.em,{children:"implementation"})," may legitimately return ",(0,s.jsx)(e.strong,{children:"nil"})," as the ",(0,s.jsx)(e.em,{children:"lambda-expression"})," of any ",(0,s.jsx)(e.em,{children:"function"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.em,{children:"secondary value"}),", ",(0,s.jsx)(e.em,{children:"closure-p"}),", is ",(0,s.jsx)(e.strong,{children:"nil"})," if ",(0,s.jsx)(e.em,{children:"function"}),"\u2019s definition was enclosed in the ",(0,s.jsx)(e.em,{children:"null lexical environment"})," or something ",(0,s.jsx)(e.em,{children:"non-nil"})," if ",(0,s.jsx)(e.em,{children:"function"}),"\u2019s definition might have been enclosed in some ",(0,s.jsx)(e.em,{children:"non-null lexical environment"}),". Any ",(0,s.jsx)(e.em,{children:"implementation"})," may legitimately return ",(0,s.jsx)(e.em,{children:"true"})," as the ",(0,s.jsx)(e.em,{children:"closure-p"})," of any ",(0,s.jsx)(e.em,{children:"function"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.em,{children:"tertiary value"}),", ",(0,s.jsx)(e.em,{children:"name"}),", is the \u201cname\u201d of ",(0,s.jsx)(e.em,{children:"function"}),". The name is intended for debugging only and is not necessarily one that would be valid for use as a name in ",(0,s.jsx)(e.strong,{children:"defun"})," or ",(0,s.jsx)(e.strong,{children:"function"}),", for example. By convention, ",(0,s.jsx)(e.strong,{children:"nil"})," is used to mean that ",(0,s.jsx)(e.em,{children:"function"})," has no name. Any ",(0,s.jsx)(e.em,{children:"implementation"})," may legitimately return ",(0,s.jsx)(e.strong,{children:"nil"})," as the ",(0,s.jsx)(e.em,{children:"name"})," of any ",(0,s.jsx)(e.em,{children:"function"}),"."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lisp",children:' \n\n\n\nThe following examples illustrate some possible return values, but are not intended to be exhaustive: \n\n\n\n(function-lambda-expression #\u2019(lambda (x) x)) \n\n\n\n*\u2192* NIL, *false*, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> NIL, <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) X), <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) X), <i>false</i>, NIL \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(function-lambda-expression \n\n\n\n(funcall #\u2019(lambda () #\u2019(lambda (x) x)))) \n\n\n\n*\u2192* NIL, *false*, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> NIL, <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) X), <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) X), <i>false</i>, NIL \n\n\n\n(function-lambda-expression \n\n\n\n(funcall #\u2019(lambda (x) #\u2019(lambda () x)) nil)) \n\n\n\n*\u2192* NIL, *true*, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA () X), <i>true</i>, NIL \n\n\n\n<i><sup>not</sup> \u2192</i> NIL, <i>false</i>, NIL \n\n\n\n<i><sup>not</sup> \u2192</i> (LAMBDA () X), <i>false</i>, NIL \n\n\n\n(flet ((foo (x) x)) \n\n\n\n(setf (symbol-function \u2019bar) #\u2019foo) \n\n\n\n(function-lambda-expression #\u2019bar)) \n\n\n\n*\u2192* NIL, *false*, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> NIL, <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) (BLOCK FOO X)), <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) (BLOCK FOO X)), <i>false</i>, FOO \n\n\n\n<i><sup>or</sup>\u2192</i> (SI::BLOCK-LAMBDA FOO (X) X), <i>false</i>, FOO \n\n\n\n(defun foo () \n\n\n\n(flet ((bar (x) x)) \n\n\n\n#\u2019bar)) \n\n\n\n(function-lambda-expression (foo)) \n\n\n\n*\u2192* NIL, *false*, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> NIL, <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) (BLOCK BAR X)), <i>true</i>, NIL \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) (BLOCK BAR X)), <i>true</i>, (:INTERNAL FOO 0 BAR) \n\n\n\n<i><sup>or</sup>\u2192</i> (LAMBDA (X) (BLOCK BAR X)), <i>false</i>, "BAR in FOO" \n\n\n\n\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(e.p,{children:["Although ",(0,s.jsx)(e.em,{children:"implementations"})," are free to return \u201c",(0,s.jsx)(e.strong,{children:"nil"}),", ",(0,s.jsx)(e.em,{children:"true"}),", ",(0,s.jsx)(e.strong,{children:"nil"}),"\u201d in all cases, they are encouraged to return a ",(0,s.jsx)(e.em,{children:"lambda expression"})," as the ",(0,s.jsx)(e.em,{children:"primary value"})," in the case where the argument was created by a call to ",(0,s.jsx)(e.strong,{children:"compile"})," or ",(0,s.jsx)(e.strong,{children:"eval"})," (as opposed to being created by ",(0,s.jsx)(e.em,{children:"loading"})," a ",(0,s.jsx)(e.em,{children:"compiled file"}),")."]}),"\n",(0,s.jsx)(e.p,{children:"Data and Control"})]})}function a(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}const l={},t="function-lambda-expression",c={id:"chap-5/f-d-dictionary/functionlambdaexpression",title:"function-lambda-expression",description:"Expanded Reference: function-lambda-expression",source:"@site/docs/chap-5/f-d-dictionary/functionlambdaexpression.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/functionlambdaexpression",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/functionlambdaexpression",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/functionlambdaexpression.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"function",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/function"},next:{title:"functionp",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/functionp"}},d={},u=[{value:"Expanded Reference: function-lambda-expression",id:"expanded-reference-function-lambda-expression",level:2}];function p(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"function-lambda-expression",children:"function-lambda-expression"}),"\n","\n","\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(e.h2,{id:"expanded-reference-function-lambda-expression",children:"Expanded Reference: function-lambda-expression"}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lisp",children:"(function-lambda-expression )\n"})})]})}function x(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},11151:(n,e,i)=>{i.d(e,{Z:()=>l,a:()=>a});var s=i(67294);const r={},o=s.createContext(r);function a(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);