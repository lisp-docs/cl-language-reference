"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[80823],{40090:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var l=n(85893),r=n(11151);function t(e){const i={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"compile-file"})," ",(0,l.jsx)(n,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"Function"})})]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Syntax:"})}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," ",(0,l.jsx)(i.em,{children:"input-file"})," &key ",(0,l.jsx)(i.em,{children:"output-file verbose"})]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.em,{children:"print external-format"})}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.em,{children:"\u2192 output-truename, warnings-p, failure-p"})}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Arguments and Values:"})}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"input-file"}),"\u2014a ",(0,l.jsx)(i.em,{children:"pathname designator"})," . (Default fillers for unspecified components are taken from ",(0,l.jsx)(n,{styled:!0,term:"default-pathname-defaults",children:(0,l.jsx)("b",{children:"*default-pathname-defaults*"})}),".)"]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"output-file"}),"\u2014a ",(0,l.jsx)(i.em,{children:"pathname designator"})," . The default is ",(0,l.jsx)(n,{styled:!0,term:"implementation-defined",children:(0,l.jsx)("i",{children:"implementation-defined"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"verbose"}),"\u2014a ",(0,l.jsx)(i.em,{children:"generalized boolean"}),". The default is the ",(0,l.jsx)(n,{styled:!0,term:"value",children:(0,l.jsx)("i",{children:"value"})})," of ",(0,l.jsx)(n,{styled:!0,term:"compile-verbose",children:(0,l.jsx)("b",{children:"*compile-verbose*"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"print"}),"\u2014a ",(0,l.jsx)(i.em,{children:"generalized boolean"}),". The default is the ",(0,l.jsx)(n,{styled:!0,term:"value",children:(0,l.jsx)("i",{children:"value"})})," of ",(0,l.jsx)(i.strong,{children:"*compile-print*"}),"."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"external-format"}),"\u2014an ",(0,l.jsx)(i.em,{children:"external file format designator"})," . The default is ",":default","."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"output-truename"}),"\u2014a ",(0,l.jsx)(n,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})})," (the ",(0,l.jsx)(n,{styled:!0,term:"truename",children:(0,l.jsx)("b",{children:"truename"})})," of the output ",(0,l.jsx)(n,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})}),"), or ",(0,l.jsx)(n,{styled:!0,term:"nil",children:(0,l.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"warnings-p"}),"\u2014a ",(0,l.jsx)(i.em,{children:"generalized boolean"}),"."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.em,{children:"failure-p"}),"\u2014a ",(0,l.jsx)(i.em,{children:"generalized boolean"}),"."]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Description:"})}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," transforms the contents of the file specified by ",(0,l.jsx)(i.em,{children:"input-file"})," into ",(0,l.jsx)(n,{styled:!0,term:"implementation-dependent",children:(0,l.jsx)("i",{children:"implementation-dependent"})})," binary data which are placed in the file specified by ",(0,l.jsx)(i.em,{children:"output-file"}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["The ",(0,l.jsx)(n,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," to which ",(0,l.jsx)(i.em,{children:"input-file"})," refers should be a ",(0,l.jsx)(i.em,{children:"source file"}),". ",(0,l.jsx)(i.em,{children:"output-file"})," can be used to specify an output ",(0,l.jsx)(n,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})}),"; the actual ",(0,l.jsx)(n,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})})," of the ",(0,l.jsx)(i.em,{children:"compiled file"})," to which ",(0,l.jsx)(i.em,{children:"compiled code"})," will be output is computed as if by calling ",(0,l.jsx)(n,{styled:!0,term:"compile-file-pathname",children:(0,l.jsx)("b",{children:"compile-file-pathname"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["If ",(0,l.jsx)(i.em,{children:"input-file"})," or ",(0,l.jsx)(i.em,{children:"output-file"})," is a ",(0,l.jsx)(i.em,{children:"logical pathname"}),", it is translated into a ",(0,l.jsx)(i.em,{children:"physical pathname"})," as if by calling ",(0,l.jsx)(n,{styled:!0,term:"translate-logical-pathname",children:(0,l.jsx)("b",{children:"translate-logical-pathname"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["If ",(0,l.jsx)(i.em,{children:"verbose"})," is ",(0,l.jsx)(n,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),", ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," prints a message in the form of a comment (",(0,l.jsx)(i.em,{children:"i.e."}),", with a leading ",(0,l.jsx)(n,{styled:!0,term:"semicolon",children:(0,l.jsx)("i",{children:"semicolon"})}),") to ",(0,l.jsx)(i.em,{children:"standard output"})," indicating what ",(0,l.jsx)(n,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," is being ",(0,l.jsx)(i.em,{children:"compiled"})," and other useful information. If ",(0,l.jsx)(i.em,{children:"verbose"})," is ",(0,l.jsx)(n,{styled:!0,term:"false",children:(0,l.jsx)("i",{children:"false"})}),", ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," does not print this information."]}),"\n",(0,l.jsxs)(i.p,{children:["If ",(0,l.jsx)(i.em,{children:"print"})," is ",(0,l.jsx)(n,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),", information about ",(0,l.jsx)(i.em,{children:"top level forms"})," in the file being compiled is printed to ",(0,l.jsx)(i.em,{children:"standard output"}),". Exactly what is printed is ",(0,l.jsx)(n,{styled:!0,term:"implementation-dependent",children:(0,l.jsx)("i",{children:"implementation-dependent"})}),", but nevertheless some information is printed. If ",(0,l.jsx)(i.em,{children:"print"})," is ",(0,l.jsx)(n,{styled:!0,term:"nil",children:(0,l.jsx)("b",{children:"nil"})}),", no information is printed."]}),"\n",(0,l.jsxs)(i.p,{children:["The ",(0,l.jsx)(i.em,{children:"external-format"})," specifies the ",(0,l.jsx)(i.em,{children:"external file format"})," to be used when opening the ",(0,l.jsx)(n,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})}),"; see the System"]}),"\n",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"function"})})," ",(0,l.jsx)(n,{styled:!0,term:"open",children:(0,l.jsx)("b",{children:"open"})}),". ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," and ",(0,l.jsx)(n,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," must cooperate in such a way that the resulting ",(0,l.jsx)(i.em,{children:"compiled file"})," can be ",(0,l.jsx)(i.em,{children:"loaded"})," without specifying an ",(0,l.jsx)(i.em,{children:"external file format"})," anew; see the ",(0,l.jsx)(n,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"function"})})," ",(0,l.jsx)(n,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," binds ",(0,l.jsx)(n,{styled:!0,term:"readtable",children:(0,l.jsx)("b",{children:"*readtable*"})})," and ",(0,l.jsx)(n,{styled:!0,term:"package",children:(0,l.jsx)("b",{children:"*package*"})})," to the values they held before processing the file."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"compile-file-truename",children:(0,l.jsx)("b",{children:"*compile-file-truename*"})})," is bound by ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," to hold the ",(0,l.jsx)(n,{styled:!0,term:"truename",children:(0,l.jsx)("i",{children:"truename"})})," of the ",(0,l.jsx)(n,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})})," of the file being compiled."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"compile-file-pathname",children:(0,l.jsx)("b",{children:"*compile-file-pathname*"})})," is bound by ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," to hold a ",(0,l.jsx)(n,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})})," denoted by the first argu ment to ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})}),", merged against the defaults; that is, (pathname (merge-pathnames ",(0,l.jsx)(i.em,{children:"input-file"}),"))."]}),"\n",(0,l.jsxs)(i.p,{children:["The compiled ",(0,l.jsx)(n,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"functions"})})," contained in the ",(0,l.jsx)(i.em,{children:"compiled file"})," become available for use when the ",(0,l.jsx)(i.em,{children:"compiled file"})," is ",(0,l.jsx)(i.em,{children:"loaded"})," into Lisp. Any function definition that is processed by the compiler, including #\u2019(lambda ...) forms and local function definitions made by ",(0,l.jsx)(n,{styled:!0,term:"flet",children:(0,l.jsx)("b",{children:"flet"})}),", ",(0,l.jsx)(n,{styled:!0,term:"labels",children:(0,l.jsx)("b",{children:"labels"})})," and ",(0,l.jsx)(n,{styled:!0,term:"defun",children:(0,l.jsx)("b",{children:"defun"})})," forms, result in an ",(0,l.jsx)(n,{styled:!0,term:"object",children:(0,l.jsx)("i",{children:"object"})})," of ",(0,l.jsx)(n,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(n,{styled:!0,term:"compiled-function",children:(0,l.jsx)("b",{children:"compiled-function"})}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["The ",(0,l.jsx)(i.em,{children:"primary value"})," returned by ",(0,l.jsx)(n,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})}),", ",(0,l.jsx)(i.em,{children:"output-truename"}),", is the ",(0,l.jsx)(n,{styled:!0,term:"truename",children:(0,l.jsx)("b",{children:"truename"})})," of the output file, or ",(0,l.jsx)(n,{styled:!0,term:"nil",children:(0,l.jsx)("b",{children:"nil"})})," if the file could not be created."]}),"\n",(0,l.jsxs)(i.p,{children:["The ",(0,l.jsx)(i.em,{children:"secondary value"}),", ",(0,l.jsx)(i.em,{children:"warnings-p"}),", is ",(0,l.jsx)(n,{styled:!0,term:"false",children:(0,l.jsx)("i",{children:"false"})})," if no ",(0,l.jsx)(n,{styled:!0,term:"condition",children:(0,l.jsx)("i",{children:"conditions"})})," of ",(0,l.jsx)(n,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(n,{styled:!0,term:"error",children:(0,l.jsx)("b",{children:"error"})})," or ",(0,l.jsx)(n,{styled:!0,term:"warning",children:(0,l.jsx)("b",{children:"warning"})})," were detected by the compiler, and ",(0,l.jsx)(n,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})})," otherwise."]}),"\n",(0,l.jsxs)(i.p,{children:["The ",(0,l.jsx)(i.em,{children:"tertiary value"}),", ",(0,l.jsx)(i.em,{children:"failure-p"}),", is ",(0,l.jsx)(n,{styled:!0,term:"false",children:(0,l.jsx)("i",{children:"false"})})," if no ",(0,l.jsx)(n,{styled:!0,term:"condition",children:(0,l.jsx)("i",{children:"conditions"})})," of ",(0,l.jsx)(n,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(n,{styled:!0,term:"error",children:(0,l.jsx)("b",{children:"error"})})," or ",(0,l.jsx)(n,{styled:!0,term:"warning",children:(0,l.jsx)("b",{children:"warning"})})," (other than ",(0,l.jsx)(n,{styled:!0,term:"style-warning",children:(0,l.jsx)("b",{children:"style-warning"})}),") were detected by the compiler, and ",(0,l.jsx)(n,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})})," otherwise."]}),"\n",(0,l.jsxs)(i.p,{children:["For general information about how ",(0,l.jsx)(n,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"files"})})," are processed by the ",(0,l.jsx)(i.em,{children:"file compiler"})," , see Section 3.2.3 (File Compilation)."]}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"program",children:(0,l.jsx)("i",{children:"Programs"})})," to be compiled by the ",(0,l.jsx)(i.em,{children:"file compiler"})," must only contain ",(0,l.jsx)(i.em,{children:"externalizable objects"}),"; for details on such ",(0,l.jsx)(n,{styled:!0,term:"object",children:(0,l.jsx)("i",{children:"objects"})}),", see Section 3.2.4 (Literal Objects in Compiled Files). For information on how to extend the set of ",(0,l.jsx)(i.em,{children:"externalizable objects"}),", see the ",(0,l.jsx)(n,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"function"})})," ",(0,l.jsx)(n,{styled:!0,term:"make-load-form",children:(0,l.jsx)("b",{children:"make-load-form"})})," and Section 3.2.4.4 (Additional Constraints on Externalizable Objects)."]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Affected By:"})}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"*error-output*"}),", ",(0,l.jsx)(i.strong,{children:"*standard-output*"}),", ",(0,l.jsx)(n,{styled:!0,term:"compile-verbose",children:(0,l.jsx)("b",{children:"*compile-verbose*"})}),", ",(0,l.jsx)(i.strong,{children:"*compile-print*"})]}),"\n",(0,l.jsx)(i.p,{children:"The computer\u2019s file system."}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Exceptional Situations:"})}),"\n",(0,l.jsx)(i.p,{children:"For information about errors detected during the compilation process, see Section 3.2.5 (Exceptional Situations in the Compiler)."}),"\n",(0,l.jsxs)(i.p,{children:["An error of ",(0,l.jsx)(n,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(n,{styled:!0,term:"file-error",children:(0,l.jsx)("b",{children:"file-error"})})," might be signaled if (wild-pathname-p ",(0,l.jsx)(i.em,{children:"input-file"}),") returns true."]}),"\n",(0,l.jsxs)(i.p,{children:["If either the attempt to open the ",(0,l.jsx)(i.em,{children:"source file"})," for input or the attempt to open the ",(0,l.jsx)(i.em,{children:"compiled file"})," for output fails, an error of ",(0,l.jsx)(n,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(n,{styled:!0,term:"file-error",children:(0,l.jsx)("b",{children:"file-error"})})," is signaled."]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"See Also:"})}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(n,{styled:!0,term:"compile",children:(0,l.jsx)("b",{children:"compile"})}),", ",(0,l.jsx)(n,{styled:!0,term:"declare",children:(0,l.jsx)("b",{children:"declare"})}),", ",(0,l.jsx)(n,{styled:!0,term:"eval-when",children:(0,l.jsx)("b",{children:"eval-when"})}),", ",(0,l.jsx)(n,{styled:!0,term:"pathname",children:(0,l.jsx)("b",{children:"pathname"})}),", ",(0,l.jsx)(n,{styled:!0,term:"logical-pathname",children:(0,l.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]})]})}function s(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}const c={title:"compile-file"},d="compile-file",o={id:"chap-24/ce-c-dictionary/compile-file_function",title:"compile-file",description:"Expanded Reference: compile-file",source:"@site/docs/chap-24/ce-c-dictionary/compile-file_function.md",sourceDirName:"chap-24/ce-c-dictionary",slug:"/chap-24/ce-c-dictionary/compile-file_function",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/compile-file_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-24/ce-c-dictionary/compile-file_function.md",tags:[],version:"current",frontMatter:{title:"compile-file"},sidebar:"tutorialSidebar",previous:{title:"compile-file-truename",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/compile-file-truename_variable"},next:{title:"compile-verbose",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/compile-verbose_variable"}},h={},a=[{value:"Expanded Reference: compile-file",id:"expanded-reference-compile-file",level:2}];function m(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.h1,{id:"compile-file",children:"compile-file"}),"\n","\n","\n",(0,l.jsx)(s,{}),"\n",(0,l.jsx)(i.h2,{id:"expanded-reference-compile-file",children:"Expanded Reference: compile-file"}),"\n",(0,l.jsx)(i.admonition,{type:"tip",children:(0,l.jsx)(i.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-lisp",children:"(compile-file )\n"})})]})}function x(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(m,{...e})}):m(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>c,a:()=>s});var l=n(67294);const r={},t=l.createContext(r);function s(e){const i=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(t.Provider,{value:i},e.children)}}}]);