"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[75480],{38093:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>x,frontMatter:()=>d,metadata:()=>h,toc:()=>m});var i=n(85893),r=n(11151);function s(e){const t={p:"p",strong:"strong",...(0,r.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:s}=t;return n||o("DictionaryLink",!0),s||o("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"method"})," ",(0,i.jsx)(s,{styled:!0,term:"system class",children:(0,i.jsx)("i",{children:"System Class"})})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Class Precedence List:"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(n,{term:"method",children:(0,i.jsx)("b",{children:"method"})}),", ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("b",{children:"t"})})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," is an ",(0,i.jsx)(s,{term:"object",children:(0,i.jsx)("i",{children:"object"})})," that represents a modular part of the behavior of a ",(0,i.jsx)(s,{styled:!0,term:"generic function",children:(0,i.jsx)("i",{children:"generic function"})}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," contains ",(0,i.jsx)(s,{term:"code",children:(0,i.jsx)("i",{children:"code"})})," to implement the ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"method"})}),"\u2019s behavior, a sequence of ",(0,i.jsx)(s,{styled:!0,term:"parameter specializer",children:(0,i.jsx)("i",{children:"parameter specializers"})})," that specify when the given ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," is applicable, and a sequence of ",(0,i.jsx)(s,{term:"qualifier",children:(0,i.jsx)("i",{children:"qualifiers"})})," that is used by the method combination facility to distinguish among ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"methods"})}),". Each required parameter of each ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," has an associated ",(0,i.jsx)(s,{styled:!0,term:"parameter specializer",children:(0,i.jsx)("i",{children:"parameter specializer"})})," , and the ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"method"})})," will be invoked only on arguments that satisfy its ",(0,i.jsx)(s,{styled:!0,term:"parameter specializer",children:(0,i.jsx)("i",{children:"parameter specializers"})}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The method combination facility controls the selection of ",(0,i.jsx)(s,{term:"method",children:(0,i.jsx)("i",{children:"methods"})}),", the order in which they are run, and the values that are returned by the generic function. The object system offers a default method combination type and provides a facility for declaring new types of method combination."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(t.p,{children:"Section 7.6 (Generic Functions and Methods)"})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"method"},a="method",h={id:"chap-4/e-e-dictionary/method_system-class",title:"method",description:"Expanded Reference: method",source:"@site/docs/chap-4/e-e-dictionary/method_system-class.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/method_system-class",permalink:"/cl-language-reference/chap-4/e-e-dictionary/method_system-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-4/e-e-dictionary/method_system-class.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"method"},sidebar:"tutorialSidebar",previous:{title:"method-combination",permalink:"/cl-language-reference/chap-4/e-e-dictionary/method-combination_system-class"},next:{title:"nil",permalink:"/cl-language-reference/chap-4/e-e-dictionary/nil_type"}},l={},m=[{value:"Expanded Reference: method",id:"expanded-reference-method",level:2}];function p(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"method",children:"method"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(t.h2,{id:"expanded-reference-method",children:"Expanded Reference: method"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lisp",children:"(method )\n"})})]})}function x(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>c});var i=n(67294);const r={},s=i.createContext(r);function c(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);