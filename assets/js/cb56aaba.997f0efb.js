"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23699],{50324:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var t=r(85893),s=r(11151);function i(e){const n={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"terpri, fresh-line"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"terpri"})," &optional ",(0,t.jsx)(n.em,{children:"output-stream \u2192"})," ",(0,t.jsx)(n.strong,{children:"nil"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"fresh-line"})," &optional ",(0,t.jsx)(n.em,{children:"output-stream \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"output-stream"})," \u2013 an ",(0,t.jsx)(n.em,{children:"output stream designator"})," . The default is ",(0,t.jsx)(n.em,{children:"standard output"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"terpri"})," outputs a ",(0,t.jsx)(n.em,{children:"newline"})," to ",(0,t.jsx)(n.em,{children:"output-stream"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"fresh-line"})," is similar to ",(0,t.jsx)(n.strong,{children:"terpri"})," but outputs a ",(0,t.jsx)(n.em,{children:"newline"})," only if the ",(0,t.jsx)(n.em,{children:"output-stream"})," is not already at the start of a line. If for some reason this cannot be determined, then a ",(0,t.jsx)(n.em,{children:"newline"})," is output anyway. ",(0,t.jsx)(n.strong,{children:"fresh-line"})," returns ",(0,t.jsx)(n.em,{children:"true"})," if it outputs a ",(0,t.jsx)(n.em,{children:"newline"}),"; otherwise it returns ",(0,t.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.p,{children:"(with-output-to-string (s)"}),"\n",(0,t.jsx)(n.p,{children:'(write-string "some text" s)'}),"\n",(0,t.jsx)(n.p,{children:"(terpri s)"}),"\n",(0,t.jsx)(n.p,{children:"(terpri s)"}),"\n",(0,t.jsx)(n.p,{children:'(write-string "more text" s))'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"\u2192"}),' "some text']}),"\n",(0,t.jsx)(n.p,{children:'more text"'}),"\n",(0,t.jsx)(n.p,{children:"(with-output-to-string (s)"}),"\n",(0,t.jsx)(n.p,{children:'(write-string "some text" s)'}),"\n",(0,t.jsx)(n.p,{children:"(fresh-line s)"}),"\n",(0,t.jsx)(n.p,{children:"(fresh-line s)"}),"\n",(0,t.jsx)(n.p,{children:'(write-string "more text" s))'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"\u2192"}),' "some text']}),"\n",(0,t.jsx)(n.p,{children:'more text"'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.em,{children:"output-stream"})," is modified."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"*standard-output*"}),", ",(0,t.jsx)(n.strong,{children:"*terminal-io*"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsx)(n.p,{children:"None."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"terpri"})," is identical in effect to"]}),"\n",(0,t.jsx)(n.p,{children:"(write-char #\\Newline output-stream)"})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const l={},o="terpri, fresh-line",d={id:"chap-21/cb-c-dictionary/terpriaafreshline",title:"terpri, fresh-line",description:"Expanded Reference: terpri, fresh-line",source:"@site/docs/chap-21/cb-c-dictionary/terpriaafreshline.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/terpriaafreshline",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/terpriaafreshline",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/terpriaafreshline.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"synonym-stream-symbol",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/synonymstreamsymbol"},next:{title:"two-way-stream",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/twowaystream"}},a={},h=[{value:"Expanded Reference: terpri, fresh-line",id:"expanded-reference-terpri-fresh-line",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"terpri-fresh-line",children:"terpri, fresh-line"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-terpri-fresh-line",children:"Expanded Reference: terpri, fresh-line"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(terpri, fresh-line )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>c});var t=r(67294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);