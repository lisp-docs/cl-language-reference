"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[53344],{73759:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(85893),i=t(11151);function o(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"method"})," ",(0,r.jsx)(n.em,{children:"System Class"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"method"}),", ",(0,r.jsx)(n.strong,{children:"t"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"method"})," is an ",(0,r.jsx)(n.em,{children:"object"})," that represents a modular part of the behavior of a ",(0,r.jsx)(n.em,{children:"generic function"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"method"})," contains ",(0,r.jsx)(n.em,{children:"code"})," to implement the ",(0,r.jsx)(n.em,{children:"method"}),"\u2019s behavior, a sequence of ",(0,r.jsx)(n.em,{children:"parameter specializers"})," that specify when the given ",(0,r.jsx)(n.em,{children:"method"})," is applicable, and a sequence of ",(0,r.jsx)(n.em,{children:"qualifiers"})," that is used by the method combination facility to distinguish among ",(0,r.jsx)(n.em,{children:"methods"}),". Each required parameter of each ",(0,r.jsx)(n.em,{children:"method"})," has an associated ",(0,r.jsx)(n.em,{children:"parameter specializer"})," , and the ",(0,r.jsx)(n.em,{children:"method"})," will be invoked only on arguments that satisfy its ",(0,r.jsx)(n.em,{children:"parameter specializers"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The method combination facility controls the selection of ",(0,r.jsx)(n.em,{children:"methods"}),", the order in which they are run, and the values that are returned by the generic function. The object system offers a default method combination type and provides a facility for declaring new types of method combination."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsx)(n.p,{children:"Section 7.6 (Generic Functions and Methods)"})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}const s={},d="method",a={id:"chap-4/e-e-dictionary/method",title:"method",description:"Expanded Reference: method",source:"@site/docs/chap-4/e-e-dictionary/method.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/method",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/method",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-4/e-e-dictionary/method.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"member",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/member"},next:{title:"method-combination",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/methodcombination"}},h={},l=[{value:"Expanded Reference: method",id:"expanded-reference-method",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"method",children:"method"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-method",children:"Expanded Reference: method"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(method )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>c});var r=t(67294);const i={},o=r.createContext(i);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);