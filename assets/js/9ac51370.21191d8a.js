"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[34337],{19205:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var t=n(85893),a=n(11151);function c(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:c}=r;return n||i("DictionaryLink",!0),c||i("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"copy-readtable"})," ",(0,t.jsx)(c,{term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{term:"copy-readtable",children:(0,t.jsx)("b",{children:"copy-readtable"})})," &optional ",(0,t.jsx)(r.em,{children:"from-readtable to-readtable \u2192 readtable"})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"from-readtable"}),"\u2014a ",(0,t.jsx)(c,{styled:!0,term:"readtable designator",children:(0,t.jsx)("i",{children:"readtable designator"})})," . The default is the ",(0,t.jsx)(c,{styled:!0,term:"current readtable",children:(0,t.jsx)("i",{children:"current readtable"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"to-readtable"}),"\u2014a ",(0,t.jsx)(c,{term:"readtable",children:(0,t.jsx)("i",{children:"readtable"})})," or ",(0,t.jsx)(n,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),". The default is ",(0,t.jsx)(n,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(c,{term:"readtable",children:(0,t.jsx)("i",{children:"readtable"})}),"\u2014the ",(0,t.jsx)(r.em,{children:"to-readtable"})," if it is ",(0,t.jsx)(c,{term:"non-nil",children:(0,t.jsx)("i",{children:"non-nil"})}),", or else a ",(0,t.jsx)(r.em,{children:"fresh readtable"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{term:"copy-readtable",children:(0,t.jsx)("b",{children:"copy-readtable"})})," copies ",(0,t.jsx)(r.em,{children:"from-readtable"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["If ",(0,t.jsx)(r.em,{children:"to-readtable"})," is ",(0,t.jsx)(n,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),", a new ",(0,t.jsx)(c,{term:"readtable",children:(0,t.jsx)("i",{children:"readtable"})})," is created and returned. Otherwise the ",(0,t.jsx)(c,{term:"readtable",children:(0,t.jsx)("i",{children:"readtable"})})," specified by ",(0,t.jsx)(r.em,{children:"to-readtable"})," is modified and returned."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{term:"copy-readtable",children:(0,t.jsx)("b",{children:"copy-readtable"})})," copies the setting of ",(0,t.jsx)(n,{term:"readtable-case",children:(0,t.jsx)("b",{children:"readtable-case"})}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:"(setq zvar 123) \u2192 123 \n(set-syntax-from-char #\\z #\\\u2019 (setq table2 (copy-readtable))) \u2192 T \nzvar \u2192 123 \n(copy-readtable table2 \\*readtable\\*) \u2192 #<READTABLE 614000277> \n\nzvar \u2192 VAR \n(setq \\*readtable\\* (copy-readtable)) \u2192 #<READTABLE 46210223> \nzvar \u2192 VAR \n(setq \\*readtable\\* (copy-readtable nil)) \u2192 #<READTABLE 46302670> \nzvar \u2192 123 \n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{term:"readtable",children:(0,t.jsx)("b",{children:"readtable"})}),", ",(0,t.jsx)(n,{term:"readtable",children:(0,t.jsx)("b",{children:"*readtable*"})})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,t.jsx)(r.p,{children:"(setq *readtable* (copy-readtable nil))"}),"\n",(0,t.jsxs)(r.p,{children:["restores the input syntax to standard Common Lisp syntax, even if the ",(0,t.jsx)(c,{styled:!0,term:"initial readtable",children:(0,t.jsx)("i",{children:"initial readtable"})})," has been clobbered (assuming it is not so badly clobbered that you cannot type in the above expression)."]}),"\n",(0,t.jsx)(r.p,{children:"On the other hand,"}),"\n",(0,t.jsx)(r.p,{children:"(setq *readtable* (copy-readtable))"}),"\n",(0,t.jsxs)(r.p,{children:["replaces the current ",(0,t.jsx)(c,{term:"readtable",children:(0,t.jsx)("i",{children:"readtable"})})," with a copy of itself. This is useful if you want to save a copy of a readtable for later use, protected from alteration in the meantime. It is also useful if you want to locally bind the readtable to a copy of itself, as in:"]}),"\n",(0,t.jsx)(r.p,{children:"(let ((*readtable* (copy-readtable))) ...)"})]})}function d(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function i(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const l={title:"copy-readtable"},s="copy-readtable",o={id:"chap-23/cd-c-dictionary/copy-readtable_function",title:"copy-readtable",description:"Expanded Reference: copy-readtable",source:"@site/docs/chap-23/cd-c-dictionary/copy-readtable_function.md",sourceDirName:"chap-23/cd-c-dictionary",slug:"/chap-23/cd-c-dictionary/copy-readtable_function",permalink:"/cl-language-reference/chap-23/cd-c-dictionary/copy-readtable_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-23/cd-c-dictionary/copy-readtable_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"copy-readtable"},sidebar:"tutorialSidebar",previous:{title:"23.2 Reader Dictionary",permalink:"/cl-language-reference/category/232-reader-dictionary"},next:{title:"make-dispatch-macro-character",permalink:"/cl-language-reference/chap-23/cd-c-dictionary/make-dispatch-macro-character_function"}},h={},p=[{value:"Expanded Reference: copy-readtable",id:"expanded-reference-copy-readtable",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"copy-readtable",children:"copy-readtable"}),"\n","\n","\n",(0,t.jsx)(d,{}),"\n",(0,t.jsx)(r.h2,{id:"expanded-reference-copy-readtable",children:"Expanded Reference: copy-readtable"}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:"(copy-readtable )\n"})})]})}function b(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>i,a:()=>d});var t=n(67294);const a={},c=t.createContext(a);function d(e){const r=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(c.Provider,{value:r},e.children)}}}]);