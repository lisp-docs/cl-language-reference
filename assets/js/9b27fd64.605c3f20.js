"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[24289],{89616:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var n=o(85893),s=o(11151);const c={},a="compute-slots-around-standard-class",r={id:"meta-object-protocol/dictionary/compute-slots-around-standard-class",title:"compute-slots-around-standard-class",description:":around Method COMPUTE-SLOTS",source:"@site/docs/meta-object-protocol/dictionary/compute-slots-around-standard-class.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/compute-slots-around-standard-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-slots-around-standard-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/compute-slots-around-standard-class.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"compute-slots-around-funcallable-standard-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-slots-around-funcallable-standard-class"},next:{title:"compute-slots-funcallable-standard-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-slots-funcallable-standard-class"}},l={},d=[];function i(e){const t={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"compute-slots-around-standard-class",children:"compute-slots-around-standard-class"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:":around"})," ",(0,n.jsx)(t.em,{children:"Method"})," ",(0,n.jsx)(t.strong,{children:"COMPUTE-SLOTS"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"compute-slots"})," ",(0,n.jsx)(t.code,{children:":around"})," ",(0,n.jsx)(t.em,{children:"(class"})," standard-class) => ",(0,n.jsx)(t.em,{children:"effective-slot-definitions"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Description:"})}),"\n",(0,n.jsxs)(t.p,{children:["This is a method on the generic function",(0,n.jsx)(t.a,{href:"/meta-object-protocol/compute-slots",children:"compute-slots"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"This method implements the specified behavior of computing and storing slot locations."}),"\n",(0,n.jsxs)(t.p,{children:["This method can ",(0,n.jsx)(t.strong,{children:"not"})," be overridden."]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>r,a:()=>a});var n=o(67294);const s={},c=n.createContext(s);function a(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);