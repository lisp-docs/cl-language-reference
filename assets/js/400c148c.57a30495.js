"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[60086],{93034:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>i});var c=t(85893),d=t(11151);const s={},o="map-dependents",a={id:"meta-object-protocol/dictionary/map-dependents",title:"map-dependents",description:"Generic Function MAP-DEPENDENTS",source:"@site/docs/meta-object-protocol/dictionary/map-dependents.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/map-dependents",permalink:"/cl-language-reference/meta-object-protocol/dictionary/map-dependents",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/map-dependents.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"map-dependents-standard-generic-function",permalink:"/cl-language-reference/meta-object-protocol/dictionary/map-dependents-standard-generic-function"},next:{title:"method-function-standard-method",permalink:"/cl-language-reference/meta-object-protocol/dictionary/method-function-standard-method"}},r={},i=[{value:"<strong>map-dependents</strong> (<em>metaobject</em> standard-class) <em>function</em>\n<strong>map-dependents</strong> (<em>metaobject</em> funcallable-standard-class) <em>function</em>\n<strong>map-dependents</strong> (<em>metaobject</em> standard-generic-function) <em>function</em>",id:"map-dependents-metaobject-standard-class-functionmap-dependents-metaobject-funcallable-standard-class-functionmap-dependents-metaobject-standard-generic-function-function",level:2}];function l(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,d.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"map-dependents",children:"map-dependents"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"Generic Function"})," ",(0,c.jsx)(n.strong,{children:"MAP-DEPENDENTS"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"map-dependents"})," ",(0,c.jsx)(n.em,{children:"metaobject"})," ",(0,c.jsx)(n.em,{children:"function"})," => ",(0,c.jsx)(n.em,{children:"unspecified"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Arguments and values:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"metaobject"})," -- A class or a generic function metaobject."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"function"})," -- A function which accepts one argument."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"unspecified"})," -- An unspecified value.."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["This generic function applies ",(0,c.jsx)(n.em,{children:"function"})," to each of the dependents of ",(0,c.jsx)(n.em,{children:"metaobject"}),". The order in which the dependents are processed is not specified, but ",(0,c.jsx)(n.em,{children:"function"})," is applied to each dependent once and only once. If, during the mapping,",(0,c.jsx)(n.a,{href:"/meta-object-protocol/add-dependent",children:"add-dependent"})," or ",(0,c.jsx)(n.a,{href:"/meta-object-protocol/remove-dependent",children:"remove-dependent"})," is called to alter the dependents of ",(0,c.jsx)(n.em,{children:"metaobject"}),", it is not specified whether the newly added or removed dependent will have ",(0,c.jsx)(n.em,{children:"function"})," applied to it."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Methods:"})}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h2,{id:"map-dependents-metaobject-standard-class-functionmap-dependents-metaobject-funcallable-standard-class-functionmap-dependents-metaobject-standard-generic-function-function",children:[(0,c.jsxs)(n.a,{href:"/meta-object-protocol/map-dependents-standard-class",children:[(0,c.jsx)(n.strong,{children:"map-dependents"})," (",(0,c.jsx)(n.em,{children:"metaobject"})," standard-class) ",(0,c.jsx)(n.em,{children:"function"})]}),"\n",(0,c.jsxs)(n.a,{href:"/meta-object-protocol/map-dependents-funcallable-standard-class",children:[(0,c.jsx)(n.strong,{children:"map-dependents"})," (",(0,c.jsx)(n.em,{children:"metaobject"})," funcallable-standard-class) ",(0,c.jsx)(n.em,{children:"function"})]}),"\n",(0,c.jsxs)(n.a,{href:"/meta-object-protocol/map-dependents-standard-generic-function",children:[(0,c.jsx)(n.strong,{children:"map-dependents"})," (",(0,c.jsx)(n.em,{children:"metaobject"})," standard-generic-function) ",(0,c.jsx)(n.em,{children:"function"})]})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Remarks:"})}),"\n",(0,c.jsxs)(n.p,{children:["See the ",(0,c.jsx)(n.a,{href:"/meta-object-protocol/dependent-maintenance-protocol",children:"``Dependent Maintenance Protocol'' section"})," for remarks about the use of this facility."]})]})}function p(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var c=t(67294);const d={},s=c.createContext(d);function o(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);