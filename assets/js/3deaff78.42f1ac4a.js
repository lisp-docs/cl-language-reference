"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[75734],{72193:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var t=r(85893),i=r(11151);function c(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"\u2217"}),(0,t.jsx)(n.strong,{children:"print-circle"}),(0,t.jsx)(n.em,{children:"\u2217 Variable"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,t.jsxs)(n.p,{children:["a ",(0,t.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Controls the attempt to detect circularity and sharing in an ",(0,t.jsx)(n.em,{children:"object"})," being printed."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"false"}),", the printing process merely proceeds by recursive descent without attempting to detect circularity and sharing."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"true"}),", the printer will endeavor to detect cycles and sharing in the structure to be printed, and to use #",(0,t.jsx)(n.em,{children:"n"}),"= and #",(0,t.jsx)(n.em,{children:"n"}),"# syntax to indicate the circularities or shared components."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"true"}),", a user-defined ",(0,t.jsx)(n.strong,{children:"print-object"})," ",(0,t.jsx)(n.em,{children:"method"})," can print ",(0,t.jsx)(n.em,{children:"objects"})," to the supplied ",(0,t.jsx)(n.em,{children:"stream"})," using ",(0,t.jsx)(n.strong,{children:"write"}),", ",(0,t.jsx)(n.strong,{children:"prin1"}),", ",(0,t.jsx)(n.strong,{children:"princ"}),", or ",(0,t.jsx)(n.strong,{children:"format"})," and expect circularities and sharing to be detected and printed using the"]}),"\n",(0,t.jsxs)(n.p,{children:["#",(0,t.jsx)(n.em,{children:"n"}),"# syntax. If a user-defined ",(0,t.jsx)(n.strong,{children:"print-object"})," ",(0,t.jsx)(n.em,{children:"method"})," prints to a ",(0,t.jsx)(n.em,{children:"stream"})," other than the one that was supplied, then circularity detection starts over for that ",(0,t.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that implementations should not use #",(0,t.jsx)(n.em,{children:"n"}),"# notation when the ",(0,t.jsx)(n.em,{children:"Lisp reader"})," would automatically assure sharing without it (",(0,t.jsx)(n.em,{children:"e.g."}),", as happens with ",(0,t.jsx)(n.em,{children:"interned symbols"}),")."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.p,{children:"(let ((a (list 1 2 3)))"}),"\n",(0,t.jsx)(n.p,{children:"(setf (cdddr a) a)"}),"\n",(0,t.jsx)(n.p,{children:"(let ((*print-circle* t))"}),"\n",(0,t.jsx)(n.p,{children:"(write a)"}),"\n",(0,t.jsxs)(n.p,{children:[":done","))"]}),"\n",(0,t.jsx)(n.p,{children:"\u25b7 #1=(1 2 3 . #1#)"}),"\n",(0,t.jsxs)(n.p,{children:["\u2192 ",":DONE"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"write"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["An attempt to print a circular structure with ",(0,t.jsx)(n.strong,{children:"*print-circle*"})," set to ",(0,t.jsx)(n.strong,{children:"nil"})," may lead to looping behavior and failure to terminate."]})]})}function s(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}const l={},a="*print-circle*",d={id:"chap-22/cc-e-dictionary/print-circle_variable",title:"\\*print-circle\\*",description:"Expanded Reference: \\print-circle\\",source:"@site/docs/chap-22/cc-e-dictionary/print-circle_variable.md",sourceDirName:"chap-22/cc-e-dictionary",slug:"/chap-22/cc-e-dictionary/print-circle_variable",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-circle_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-22/cc-e-dictionary/print-circle_variable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\\*print-case\\*",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-case_variable"},next:{title:"\\*print-escape\\*",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/print-escape_variable"}},o={},p=[{value:"Expanded Reference: *print-circle*",id:"expanded-reference-print-circle",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"print-circle",children:"*print-circle*"}),"\n","\n","\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-print-circle",children:"Expanded Reference: *print-circle*"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"*print-circle*\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>s});var t=r(67294);const i={},c=t.createContext(i);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);