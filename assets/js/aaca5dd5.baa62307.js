"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[66848],{63711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>f,frontMatter:()=>i,metadata:()=>d,toc:()=>s});var o=n(85893),c=n(11151);const i={},r="compute-effective-method-standard-generic-function",d={id:"meta-object-protocol/dictionary/compute-effective-method-standard-generic-function",title:"compute-effective-method-standard-generic-function",description:"Method COMPUTE-EFFECTIVE-METHOD",source:"@site/docs/meta-object-protocol/dictionary/compute-effective-method-standard-generic-function.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/compute-effective-method-standard-generic-function",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-effective-method-standard-generic-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/compute-effective-method-standard-generic-function.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"compute-discriminating-function",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-discriminating-function"},next:{title:"compute-effective-method",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-effective-method"}},a={},s=[];function m(e){const t={a:"a",em:"em",h1:"h1",p:"p",strong:"strong",...(0,c.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"compute-effective-method-standard-generic-function",children:"compute-effective-method-standard-generic-function"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.em,{children:"Method"})," ",(0,o.jsx)(t.strong,{children:"COMPUTE-EFFECTIVE-METHOD"})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"compute-effective-method"})," ",(0,o.jsx)(t.em,{children:"(generic-function"})," standard-generic-function) ",(0,o.jsx)(t.em,{children:"method-combination"})," ",(0,o.jsx)(t.em,{children:"methods"})," => ",(0,o.jsx)(t.em,{children:"effective-method"}),", ",(0,o.jsx)(t.em,{children:"options"})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Description:"})}),"\n",(0,o.jsxs)(t.p,{children:["This is a method on the generic function",(0,o.jsx)(t.a,{href:"/meta-object-protocol/compute-effective-method",children:"compute-effective-method"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["This method computes the effective method according to the rules of the method combination type implemented by ",(0,o.jsx)(t.em,{children:"method-combination"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"This method can be overridden."})]})}function f(e={}){const{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>d,a:()=>r});var o=n(67294);const c={},i=o.createContext(c);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);