"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[65992],{29497:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>s,metadata:()=>a,toc:()=>f});var i=r(85893),t=r(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:c}=n;return r||o("DictionaryLink",!0),c||o("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround"})," ",(0,i.jsx)(c,{term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"floor",children:(0,i.jsx)("b",{children:"floor"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"ffloor",children:(0,i.jsx)("b",{children:"ffloor"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"ceiling",children:(0,i.jsx)("b",{children:"ceiling"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"floor, ffloor, ceiling, fceiling, truncate, ftruncate,"})," ",(0,i.jsx)(n.em,{children:". . ."})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"fceiling",children:(0,i.jsx)("b",{children:"fceiling"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"truncate",children:(0,i.jsx)("b",{children:"truncate"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"ftruncate",children:(0,i.jsx)("b",{children:"ftruncate"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"round",children:(0,i.jsx)("b",{children:"round"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"fround",children:(0,i.jsx)("b",{children:"fround"})})," ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," &optional ",(0,i.jsx)(n.em,{children:"divisor \u2192 quotient, remainder"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})}),"\u2014a ",(0,i.jsx)(n.em,{children:"real"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"divisor"}),"\u2014a non-zero ",(0,i.jsx)(n.em,{children:"real"}),". The default is the ",(0,i.jsx)(n.em,{children:"integer"})," 1."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"quotient"}),"\u2014for ",(0,i.jsx)(r,{term:"floor",children:(0,i.jsx)("b",{children:"floor"})}),", ",(0,i.jsx)(r,{term:"ceiling",children:(0,i.jsx)("b",{children:"ceiling"})}),", ",(0,i.jsx)(r,{term:"truncate",children:(0,i.jsx)("b",{children:"truncate"})}),", and ",(0,i.jsx)(r,{term:"round",children:(0,i.jsx)("b",{children:"round"})}),": an ",(0,i.jsx)(n.em,{children:"integer"})," ; for ",(0,i.jsx)(r,{term:"ffloor",children:(0,i.jsx)("b",{children:"ffloor"})}),", ",(0,i.jsx)(r,{term:"fceiling",children:(0,i.jsx)("b",{children:"fceiling"})}),", ",(0,i.jsx)(r,{term:"ftruncate",children:(0,i.jsx)("b",{children:"ftruncate"})}),", and ",(0,i.jsx)(r,{term:"fround",children:(0,i.jsx)("b",{children:"fround"})}),": a ",(0,i.jsx)(c,{term:"float",children:(0,i.jsx)("i",{children:"float"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"remainder"}),"\u2014a ",(0,i.jsx)(n.em,{children:"real"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["These functions divide ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," by ",(0,i.jsx)(n.em,{children:"divisor"}),", returning a ",(0,i.jsx)(n.em,{children:"quotient"})," and ",(0,i.jsx)(n.em,{children:"remainder"}),", such that ",(0,i.jsx)(n.em,{children:"quotient\xb7divisor"}),"+",(0,i.jsx)(n.em,{children:"remainder"}),"=",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"quotient"})," always represents a mathematical integer. When more than one mathematical integer might be possible (",(0,i.jsx)(n.em,{children:"i.e."}),", when the remainder is not zero), the kind of rounding or truncation depends on the ",(0,i.jsx)(c,{term:"operator",children:(0,i.jsx)("i",{children:"operator"})})," :"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"floor",children:(0,i.jsx)("b",{children:"floor"})}),", ",(0,i.jsx)(r,{term:"ffloor",children:(0,i.jsx)("b",{children:"ffloor"})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"floor",children:(0,i.jsx)("b",{children:"floor"})})," and ",(0,i.jsx)(r,{term:"ffloor",children:(0,i.jsx)("b",{children:"ffloor"})})," produce a ",(0,i.jsx)(n.em,{children:"quotient"})," that has been truncated toward negative infinity; that is, the ",(0,i.jsx)(n.em,{children:"quotient"})," represents the largest mathematical integer that is not larger than the mathematical quotient."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"ceiling",children:(0,i.jsx)("b",{children:"ceiling"})}),", ",(0,i.jsx)(r,{term:"fceiling",children:(0,i.jsx)("b",{children:"fceiling"})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"ceiling",children:(0,i.jsx)("b",{children:"ceiling"})})," and ",(0,i.jsx)(r,{term:"fceiling",children:(0,i.jsx)("b",{children:"fceiling"})})," produce a ",(0,i.jsx)(n.em,{children:"quotient"})," that has been truncated toward positive infinity; that is, the ",(0,i.jsx)(n.em,{children:"quotient"})," represents the smallest mathematical integer that is not smaller than the mathematical result."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"truncate",children:(0,i.jsx)("b",{children:"truncate"})}),", ",(0,i.jsx)(r,{term:"ftruncate",children:(0,i.jsx)("b",{children:"ftruncate"})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"truncate",children:(0,i.jsx)("b",{children:"truncate"})})," and ",(0,i.jsx)(r,{term:"ftruncate",children:(0,i.jsx)("b",{children:"ftruncate"})})," produce a ",(0,i.jsx)(n.em,{children:"quotient"})," that has been truncated towards zero; that is, the ",(0,i.jsx)(n.em,{children:"quotient"})," represents the mathematical integer of the same sign as the mathematical quotient, and that has the greatest integral magnitude not greater than that of the mathematical quotient."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"round",children:(0,i.jsx)("b",{children:"round"})}),", ",(0,i.jsx)(r,{term:"fround",children:(0,i.jsx)("b",{children:"fround"})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"round",children:(0,i.jsx)("b",{children:"round"})})," and ",(0,i.jsx)(r,{term:"fround",children:(0,i.jsx)("b",{children:"fround"})})," produce a ",(0,i.jsx)(n.em,{children:"quotient"})," that has been rounded to the nearest mathematical integer; if the mathematical quotient is exactly halfway between two integers, (that is, it"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"floor, ffloor, ceiling, fceiling, truncate, ftruncate,"})," ",(0,i.jsx)(n.em,{children:". . ."})]}),"\n",(0,i.jsxs)(n.p,{children:["has the form ",(0,i.jsx)(n.em,{children:"integer"}),"+",(0,i.jsx)("sup",{children:"1"}),(0,i.jsx)("sub",{children:"2"}),"), then the ",(0,i.jsx)(n.em,{children:"quotient"})," has been rounded to the even (divisible by two) integer."]}),"\n",(0,i.jsxs)(n.p,{children:["All of these functions perform type conversion operations on ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"numbers"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"remainder"})," is an ",(0,i.jsx)(n.em,{children:"integer"})," if both x and y are ",(0,i.jsx)(n.em,{children:"integers"}),", is a ",(0,i.jsx)(c,{term:"rational",children:(0,i.jsx)("i",{children:"rational"})})," if both x and y are ",(0,i.jsx)(c,{term:"rational",children:(0,i.jsx)("i",{children:"rationals"})}),", and is a ",(0,i.jsx)(c,{term:"float",children:(0,i.jsx)("i",{children:"float"})})," if either x or y is a ",(0,i.jsx)(c,{term:"float",children:(0,i.jsx)("i",{children:"float"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"ffloor",children:(0,i.jsx)("b",{children:"ffloor"})}),", ",(0,i.jsx)(r,{term:"fceiling",children:(0,i.jsx)("b",{children:"fceiling"})}),", ",(0,i.jsx)(r,{term:"ftruncate",children:(0,i.jsx)("b",{children:"ftruncate"})}),", and ",(0,i.jsx)(r,{term:"fround",children:(0,i.jsx)("b",{children:"fround"})})," handle arguments of different ",(0,i.jsx)(c,{term:"type",children:(0,i.jsx)("i",{children:"types"})})," in the following way: If ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," is a ",(0,i.jsx)(c,{term:"float",children:(0,i.jsx)("i",{children:"float"})}),", and ",(0,i.jsx)(n.em,{children:"divisor"})," is not a ",(0,i.jsx)(c,{term:"float",children:(0,i.jsx)("i",{children:"float"})})," of longer format, then the first result is a ",(0,i.jsx)(c,{term:"float",children:(0,i.jsx)("i",{children:"float"})})," of the same ",(0,i.jsx)(c,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," as ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})}),". Otherwise, the first result is of the ",(0,i.jsx)(c,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," determined by ",(0,i.jsx)(c,{term:"contagion",children:(0,i.jsx)("i",{children:"contagion"})})," rules; see Section 12.1.1.2 (Contagion in Numeric Operations)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:'(floor 3/2) \u2192 1, 1/2 \n(ceiling 3 2) \u2192 2, -1 \n(ffloor 3 2) \u2192 1.0, 1 \n(ffloor -4.7) \u2192 -5.0, 0.3 \n(ffloor 3.5d0) \u2192 3.0d0, 0.5d0 \n(fceiling 3/2) \u2192 2.0, -1/2 \n(truncate 1) \u2192 1, 0 \n(truncate .5) \u2192 0, 0.5 \n(round .5) \u2192 0, 0.5 \n(ftruncate -7 2) \u2192 -3.0, -1 \n(fround -7 2) \u2192 -4.0, 1 \n(dolist (n \u2019(2.6 2.5 2.4 0.7 0.3 -0.3 -0.7 -2.4 -2.5 -2.6)) \n  (format t "~&~4,1@F ~2,\u2019 D ~2,\u2019 D ~2,\u2019 D ~2,\u2019 D" \n\t  n (floor n) (ceiling n) (truncate n) (round n))) \n\u25b7 +2.6 2 3 2 3 \n\u25b7 +2.5 2 3 2 2 \n\u25b7 +2.4 2 3 2 2 \n\u25b7 +0.7 0 1 0 1 \n\u25b7 +0.3 0 1 0 0 \n\u25b7 -0.3 -1 0 0 0 \n\u25b7 -0.7 -1 0 0 -1 \n\u25b7 -2.4 -3 -2 -2 -2 \n\u25b7 -2.5 -3 -2 -2 -2 \n\u25b7 -2.6 -3 -2 -2 -3 \n\u2192 NIL \n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(n.p,{children:["When only ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})})," is given, the two results are exact; the mathematical sum of the two results is always equal to the mathematical value of ",(0,i.jsx)(c,{term:"number",children:(0,i.jsx)("i",{children:"number"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["(",(0,i.jsx)(n.em,{children:"function number divisor"}),") and (",(0,i.jsx)(c,{term:"function",children:(0,i.jsx)("i",{children:"function"})})," (/ ",(0,i.jsx)(n.em,{children:"number divisor"}),")) (where ",(0,i.jsx)(c,{term:"function",children:(0,i.jsx)("i",{children:"function"})})," is any of one of ",(0,i.jsx)(r,{term:"floor",children:(0,i.jsx)("b",{children:"floor"})}),", ",(0,i.jsx)(r,{term:"ceiling",children:(0,i.jsx)("b",{children:"ceiling"})}),", ",(0,i.jsx)(r,{term:"ffloor",children:(0,i.jsx)("b",{children:"ffloor"})}),", ",(0,i.jsx)(r,{term:"fceiling",children:(0,i.jsx)("b",{children:"fceiling"})}),", ",(0,i.jsx)(r,{term:"truncate",children:(0,i.jsx)("b",{children:"truncate"})}),", ",(0,i.jsx)(r,{term:"round",children:(0,i.jsx)("b",{children:"round"})}),", ",(0,i.jsx)(r,{term:"ftruncate",children:(0,i.jsx)("b",{children:"ftruncate"})}),", and ",(0,i.jsx)(r,{term:"fround",children:(0,i.jsx)("b",{children:"fround"})}),") return the same first value,"]}),"\n",(0,i.jsx)(n.p,{children:"but they return different remainders as the second value. For example:"}),"\n",(0,i.jsx)(n.p,{children:"(floor 5 2) \u2192 2, 1"}),"\n",(0,i.jsx)(n.p,{children:"(floor (/ 5 2)) \u2192 2, 1/2"}),"\n",(0,i.jsxs)(n.p,{children:["If an effect is desired that is similar to ",(0,i.jsx)(r,{term:"round",children:(0,i.jsx)("b",{children:"round"})}),", but that always rounds up or down (rather than toward the nearest even integer) if the mathematical quotient is exactly halfway between two integers, the programmer should consider a construction such as (floor (+ x 1/2)) or (ceiling (- x 1/2))."]})]})}function l(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const s={title:"floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround"},d="floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround",a={id:"chap-12/bc-c-dictionary/floor_ffloor_ceiling_fceiling_truncate_ftruncate_round_fround_function",title:"floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround",description:"Expanded Reference: floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround",source:"@site/docs/chap-12/bc-c-dictionary/floor_ffloor_ceiling_fceiling_truncate_ftruncate_round_fround_function.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/floor_ffloor_ceiling_fceiling_truncate_ftruncate_round_fround_function",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/floor_ffloor_ceiling_fceiling_truncate_ftruncate_round_fround_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-12/bc-c-dictionary/floor_ffloor_ceiling_fceiling_truncate_ftruncate_round_fround_function.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{title:"floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround"},sidebar:"tutorialSidebar",previous:{title:"floatp",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/floatp_function"},next:{title:"gcd",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/gcd_function"}},h={},f=[{value:"Expanded Reference: floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround",id:"expanded-reference-floor-ffloor-ceiling-fceiling-truncate-ftruncate-round-fround",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"floor-ffloor-ceiling-fceiling-truncate-ftruncate-round-fround",children:"floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround"}),"\n","\n","\n",(0,i.jsx)(l,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-floor-ffloor-ceiling-fceiling-truncate-ftruncate-round-fround",children:"Expanded Reference: floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(floor, ffloor, ceiling, fceiling, truncate, ftruncate, round, fround )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>l});var i=r(67294);const t={},c=i.createContext(t);function l(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);