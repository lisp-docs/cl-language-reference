"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[5928],{32306:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>h,toc:()=>d});var c=r(85893),a=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"alphanumericp"})," ",(0,c.jsx)(n.em,{children:"Function"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"alphanumericp"})," ",(0,c.jsx)(n.em,{children:"character \u2192 generalized-boolean"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"character"}),"\u2014a ",(0,c.jsx)(n.em,{children:"character"})," ."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,c.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["Returns ",(0,c.jsx)(n.em,{children:"true"})," if ",(0,c.jsx)(n.em,{children:"character"})," is an ",(0,c.jsx)(n.em,{children:"alphabetic"}),(0,c.jsx)("sub",{children:"1"})," ",(0,c.jsx)(n.em,{children:"character"})," or a ",(0,c.jsx)(n.em,{children:"numeric character"})," ; otherwise, returns ",(0,c.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"\n(alphanumericp #\\Z) \u2192 true \n(alphanumericp #\\9) \u2192 true \n(alphanumericp #\\Newline) \u2192 false \n(alphanumericp #\\#) \u2192 false \n\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,c.jsxs)(n.p,{children:["None. (In particular, the results of this predicate are independent of any special syntax which might have been enabled in the ",(0,c.jsx)(n.em,{children:"current readtable"}),".)"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,c.jsxs)(n.p,{children:["Should signal an error of ",(0,c.jsx)(n.em,{children:"type"})," ",(0,c.jsx)(n.strong,{children:"type-error"})," if ",(0,c.jsx)(n.em,{children:"character"})," is not a ",(0,c.jsx)(n.em,{children:"character"})," ."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"alpha-char-p"}),", ",(0,c.jsx)(n.strong,{children:"graphic-char-p"}),", ",(0,c.jsx)(n.strong,{children:"digit-char-p"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,c.jsxs)(n.p,{children:["Alphanumeric characters are graphic as defined by ",(0,c.jsx)(n.strong,{children:"graphic-char-p"}),". The alphanumeric characters are a subset of the graphic characters. The standard characters A through Z, a through z, and 0 through 9 are alphanumeric characters."]}),"\n",(0,c.jsx)(n.p,{children:"(alphanumericp x)"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"\u2261"})," (or (alpha-char-p x) (not (null (digit-char-p x))))"]})]})}function s(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}const t={title:"alphanumericp"},l="alphanumericp",h={id:"chap-13/bd-c-dictionary/alphanumericp_function",title:"alphanumericp",description:"Expanded Reference: alphanumericp",source:"@site/docs/chap-13/bd-c-dictionary/alphanumericp_function.md",sourceDirName:"chap-13/bd-c-dictionary",slug:"/chap-13/bd-c-dictionary/alphanumericp_function",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/alphanumericp_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-13/bd-c-dictionary/alphanumericp_function.md",tags:[],version:"current",frontMatter:{title:"alphanumericp"},sidebar:"tutorialSidebar",previous:{title:"alpha-char-p",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/alpha-char-p_function"},next:{title:"base-char",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/base-char_type"}},p={},d=[{value:"Expanded Reference: alphanumericp",id:"expanded-reference-alphanumericp",level:2}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"alphanumericp",children:"alphanumericp"}),"\n","\n","\n",(0,c.jsx)(s,{}),"\n",(0,c.jsx)(n.h2,{id:"expanded-reference-alphanumericp",children:"Expanded Reference: alphanumericp"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"(alphanumericp )\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>t,a:()=>s});var c=r(67294);const a={},i=c.createContext(a);function s(e){const n=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);