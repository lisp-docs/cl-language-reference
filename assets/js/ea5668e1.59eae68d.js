"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[45784],{93960:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var c=s(85893),a=s(11151);function r(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"symbol-package"})," ",(0,c.jsx)(n.em,{children:"Function"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"symbol-package"})," ",(0,c.jsx)(n.em,{children:"symbol \u2192 contents"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"symbol"}),"\u2014a ",(0,c.jsx)(n.em,{children:"symbol"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"contents"}),"\u2014a ",(0,c.jsx)(n.em,{children:"package object"})," or ",(0,c.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["Returns the ",(0,c.jsx)(n.em,{children:"home package"})," of ",(0,c.jsx)(n.em,{children:"symbol"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:'\n(in-package "CL-USER") \u2192 #<PACKAGE "COMMON-LISP-USER"> \n(symbol-package \u2019car) \u2192 #<PACKAGE "COMMON-LISP"> \n(symbol-package \u2019bus) \u2192 #<PACKAGE "COMMON-LISP-USER"> \n(symbol-package :optional) \u2192 #<PACKAGE "KEYWORD"> \n;; Gensyms are uninterned, so have no home package. \n(symbol-package (gensym)) \u2192 NIL \n(make-package \u2019pk1) \u2192 #<PACKAGE "PK1"> \n(intern "SAMPLE1" "PK1") \u2192 PK1::SAMPLE1, NIL \n(export (find-symbol "SAMPLE1" "PK1") "PK1") \u2192 T \n(make-package \u2019pk2 :use \u2019(pk1)) \u2192 #<PACKAGE "PK2"> \n(find-symbol "SAMPLE1" "PK2") \u2192 PK1:SAMPLE1, :INHERITED \n(symbol-package \u2019pk1::sample1) \u2192 #<PACKAGE "PK1"> \n(symbol-package \u2019pk2::sample1) \u2192 #<PACKAGE "PK1"> \n(symbol-package \u2019pk1::sample2) \u2192 #<PACKAGE "PK1"> \n(symbol-package \u2019pk2::sample2) \u2192 #<PACKAGE "PK2"> \n;; The next several forms create a scenario in which a symbol \n;; is not really uninterned, but is "apparently uninterned", \n;; and so SYMBOL-PACKAGE still returns NIL. \n(setq s3 \u2019pk1::sample3) \u2192 PK1::SAMPLE3 \n(import s3 \u2019pk2) \u2192 T \n(unintern s3 \u2019pk1) \u2192 T \n(symbol-package s3) \u2192 NIL \n(eq s3 \u2019pk2::sample3) \u2192 T \n\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"import"}),", ",(0,c.jsx)(n.strong,{children:"intern"}),", ",(0,c.jsx)(n.strong,{children:"unintern"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,c.jsxs)(n.p,{children:["Should signal an error of ",(0,c.jsx)(n.em,{children:"type"})," ",(0,c.jsx)(n.strong,{children:"type-error"})," if ",(0,c.jsx)(n.em,{children:"symbol"})," is not a ",(0,c.jsx)(n.em,{children:"symbol"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"intern"})})]})}function o(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(r,{...e})}):r(e)}const t={title:"symbol-package"},l="symbol-package",i={id:"chap-10/ba-c-dictionary/symbol-package_function",title:"symbol-package",description:"Expanded Reference: symbol-package",source:"@site/docs/chap-10/ba-c-dictionary/symbol-package_function.md",sourceDirName:"chap-10/ba-c-dictionary",slug:"/chap-10/ba-c-dictionary/symbol-package_function",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbol-package_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-10/ba-c-dictionary/symbol-package_function.md",tags:[],version:"current",frontMatter:{title:"symbol-package"},sidebar:"tutorialSidebar",previous:{title:"symbol-name",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbol-name_function"},next:{title:"symbol-plist",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbol-plist_accessor"}},p={},d=[{value:"Expanded Reference: symbol-package",id:"expanded-reference-symbol-package",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"symbol-package",children:"symbol-package"}),"\n","\n","\n",(0,c.jsx)(o,{}),"\n",(0,c.jsx)(n.h2,{id:"expanded-reference-symbol-package",children:"Expanded Reference: symbol-package"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"(symbol-package )\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(m,{...e})}):m(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>t,a:()=>o});var c=s(67294);const a={},r=c.createContext(a);function o(e){const n=c.useContext(r);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),c.createElement(r.Provider,{value:n},e.children)}}}]);