"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[56716],{20955:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>x});var t=i(85893),r=i(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components},{DictionaryLink:i,GlossaryTerm:s}=n;return i||c("DictionaryLink",!0),s||c("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"initialize-instance"})," ",(0,t.jsx)(s,{styled:!0,term:"standard generic function",children:(0,t.jsx)("i",{children:"Standard Generic Function"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})})," ",(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," &rest ",(0,t.jsx)(n.em,{children:"initargs"})," &key &allow-other-keys ",(0,t.jsx)(n.em,{children:"! instance"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Method Signatures:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})})," (",(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," ",(0,t.jsx)(i,{term:"standard-object",children:(0,t.jsx)("b",{children:"standard-object"})}),") &rest ",(0,t.jsx)(n.em,{children:"initargs"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})}),"\u2014an ",(0,t.jsx)(s,{term:"object",children:(0,t.jsx)("i",{children:"object"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"initargs"}),"\u2014a ",(0,t.jsx)(n.em,{children:"defaulted initialization argument list"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Called by ",(0,t.jsx)(i,{term:"make-instance",children:(0,t.jsx)("b",{children:"make-instance"})})," to initialize a newly created ",(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})}),". The generic function is called with the new ",(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," and the ",(0,t.jsx)(n.em,{children:"defaulted initialization argument list"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The system-supplied primary ",(0,t.jsx)(s,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," on ",(0,t.jsx)(i,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})})," initializes the ",(0,t.jsx)(s,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," of the ",(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})})," with values according to the ",(0,t.jsx)(n.em,{children:"initargs"})," and the ",":initform"," forms of the ",(0,t.jsx)(s,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})}),". It does this by calling the generic function ",(0,t.jsx)(i,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})})," with the following arguments: the ",(0,t.jsx)(s,{term:"instance",children:(0,t.jsx)("i",{children:"instance"})}),", ",(0,t.jsx)(i,{term:"t",children:(0,t.jsx)("b",{children:"t"})})," (this indicates that all ",(0,t.jsx)(s,{term:"slot",children:(0,t.jsx)("i",{children:"slots"})})," for which no initialization arguments are provided should be initialized according to their ",":initform"," forms), and the ",(0,t.jsx)(n.em,{children:"initargs"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Programmers can define ",(0,t.jsx)(s,{term:"method",children:(0,t.jsx)("i",{children:"methods"})})," for ",(0,t.jsx)(i,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})})," to specify actions to be taken when an instance is initialized. If only ",(0,t.jsx)(s,{styled:!0,term:"after method",children:(0,t.jsx)("i",{children:"after methods"})})," are defined, they will be run after the system-supplied primary ",(0,t.jsx)(s,{term:"method",children:(0,t.jsx)("i",{children:"method"})})," for initialization and therefore will not interfere with the default behavior of ",(0,t.jsx)(i,{term:"initialize-instance",children:(0,t.jsx)("b",{children:"initialize-instance"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{term:"shared-initialize",children:(0,t.jsx)("b",{children:"shared-initialize"})}),", ",(0,t.jsx)(i,{term:"make-instance",children:(0,t.jsx)("b",{children:"make-instance"})}),", ",(0,t.jsx)(i,{term:"slot-boundp",children:(0,t.jsx)("b",{children:"slot-boundp"})}),", ",(0,t.jsx)(i,{term:"slot-makunbound",children:(0,t.jsx)("b",{children:"slot-makunbound"})}),", Section 7.1 (Object Creation and Initialization), Section 7.1.4 (Rules for Initialization Arguments), Section 7.1.2 (Declaring the Validity of Initialization Arguments)"]})]})}function a(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const l={title:"initialize-instance"},d="initialize-instance",o={id:"chap-7/h-h-dictionary/initialize-instance_standard-generic-function",title:"initialize-instance",description:"Expanded Reference: initialize-instance",source:"@site/docs/chap-7/h-h-dictionary/initialize-instance_standard-generic-function.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/initialize-instance_standard-generic-function",permalink:"/cl-language-reference/chap-7/h-h-dictionary/initialize-instance_standard-generic-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-7/h-h-dictionary/initialize-instance_standard-generic-function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"initialize-instance"},sidebar:"tutorialSidebar",previous:{title:"function-keywords",permalink:"/cl-language-reference/chap-7/h-h-dictionary/function-keywords_standard-generic-function"},next:{title:"make-instance",permalink:"/cl-language-reference/chap-7/h-h-dictionary/make-instance_standard-generic-function"}},h={},x=[{value:"Expanded Reference: initialize-instance",id:"expanded-reference-initialize-instance",level:2}];function j(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"initialize-instance",children:"initialize-instance"}),"\n","\n","\n",(0,t.jsx)(a,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-initialize-instance",children:"Expanded Reference: initialize-instance"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(initialize-instance )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>a});var t=i(67294);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);