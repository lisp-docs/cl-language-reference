"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[18892],{74548:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var t=r(85893),s=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"invoke-restart"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"invoke-restart"})," ",(0,t.jsx)(n.em,{children:"restart"})," &rest ",(0,t.jsx)(n.em,{children:"arguments \u2192 {result}"}),"*"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"restart"}),"\u2014a ",(0,t.jsx)(n.em,{children:"restart designator"})," ."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"argument"}),"\u2014an ",(0,t.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"results"}),"\u2014the ",(0,t.jsx)(n.em,{children:"values"})," returned by the ",(0,t.jsx)(n.em,{children:"function"})," associated with ",(0,t.jsx)(n.em,{children:"restart"}),", if that ",(0,t.jsx)(n.em,{children:"function"})," returns."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Calls the ",(0,t.jsx)(n.em,{children:"function"})," associated with ",(0,t.jsx)(n.em,{children:"restart"}),", passing ",(0,t.jsx)(n.em,{children:"arguments"})," to it. ",(0,t.jsx)(n.em,{children:"Restart"})," must be valid in the current ",(0,t.jsx)(n.em,{children:"dynamic environment"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"\n(defun add3 (x) (check-type x number) (+ x 3)) \n(foo \u2019seven) \n\u25b7 Error: The value SEVEN was not of type NUMBER. \n\u25b7 To continue, type :CONTINUE followed by an option number: \n\u25b7 1: Specify a different value to use. \n\u25b7 2: Return to Lisp Toplevel. \n\u25b7 Debug> (invoke-restart \u2019store-value 7) \n\u2192 10 \n\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,t.jsx)(n.p,{children:"A non-local transfer of control might be done by the restart."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,t.jsx)(n.p,{children:"Existing restarts."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"restart"})," is not valid, an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"control-error"})," is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"find-restart"}),", ",(0,t.jsx)(n.strong,{children:"restart-bind"}),", ",(0,t.jsx)(n.strong,{children:"restart-case"}),", ",(0,t.jsx)(n.strong,{children:"invoke-restart-interactively"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["The most common use for ",(0,t.jsx)(n.strong,{children:"invoke-restart"})," is in a ",(0,t.jsx)(n.em,{children:"handler"})," . It might be used explicitly, or implicitly through ",(0,t.jsx)(n.strong,{children:"invoke-restart-interactively"})," or a ",(0,t.jsx)(n.em,{children:"restart function"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Restart functions"})," call ",(0,t.jsx)(n.strong,{children:"invoke-restart"}),", not vice versa. That is, ",(0,t.jsx)(n.em,{children:"invoke-restart"})," provides primitive functionality, and ",(0,t.jsx)(n.em,{children:"restart functions"})," are non-essential \u201csyntactic sugar.\u201d"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"invoke-restart-interactively"})})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const o={},a="invoke-restart",l={id:"chap-9/j-c-dictionary/invokerestart",title:"invoke-restart",description:"Expanded Reference: invoke-restart",source:"@site/docs/chap-9/j-c-dictionary/invokerestart.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/invokerestart",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/invokerestart",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/invokerestart.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"invoke-debugger",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/invokedebugger"},next:{title:"invoke-restart-interactively",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/invokerestartinteractively"}},d={},h=[{value:"Expanded Reference: invoke-restart",id:"expanded-reference-invoke-restart",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"invoke-restart",children:"invoke-restart"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-invoke-restart",children:"Expanded Reference: invoke-restart"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(invoke-restart )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var t=r(67294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);