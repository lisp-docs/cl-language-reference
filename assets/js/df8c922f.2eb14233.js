"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[86417],{79433:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>x});var c=s(85893),i=s(11151);function t(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:s,GlossaryTerm:t}=n;return s||r("DictionaryLink",!0),t||r("GlossaryTerm",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"allocate-instance"})," ",(0,c.jsx)(t,{styled:!0,term:"standard generic function",children:(0,c.jsx)("i",{children:"Standard Generic Function"})})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})})," &rest ",(0,c.jsx)(n.em,{children:"initargs"})," &key &allow-other-keys \u2192 new-instance"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Method Signatures:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," (",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})})," ",(0,c.jsx)(s,{term:"standard-class",children:(0,c.jsx)("b",{children:"standard-class"})}),") &rest ",(0,c.jsx)(n.em,{children:"initargs"})]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," (",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})})," ",(0,c.jsx)(s,{term:"structure-class",children:(0,c.jsx)("b",{children:"structure-class"})}),") &rest ",(0,c.jsx)(n.em,{children:"initargs"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})}),"\u2014a ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})}),"."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"initargs"}),"\u2014a ",(0,c.jsx)(t,{term:"list",children:(0,c.jsx)("i",{children:"list"})})," of ",(0,c.jsx)(t,{styled:!0,term:"keyword/value pair",children:(0,c.jsx)("i",{children:"keyword/value pairs"})})," (initialization argument ",(0,c.jsx)(t,{term:"name",children:(0,c.jsx)("i",{children:"names"})})," and ",(0,c.jsx)(t,{term:"value",children:(0,c.jsx)("i",{children:"values"})}),"). ",(0,c.jsx)(n.em,{children:"new-instance"}),"\u2014an ",(0,c.jsx)(t,{term:"object",children:(0,c.jsx)("i",{children:"object"})})," whose ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})})," is ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["The generic function ",(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," creates and returns a new instance of the ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})}),", without initializing it. When the ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})})," is a ",(0,c.jsx)(t,{styled:!0,term:"standard class",children:(0,c.jsx)("i",{children:"standard class"})}),", this means that the ",(0,c.jsx)(t,{term:"slot",children:(0,c.jsx)("i",{children:"slots"})})," are ",(0,c.jsx)(t,{term:"unbound",children:(0,c.jsx)("i",{children:"unbound"})}),"; when the ",(0,c.jsx)(t,{term:"class",children:(0,c.jsx)("i",{children:"class"})})," is a ",(0,c.jsx)(t,{styled:!0,term:"structure class",children:(0,c.jsx)("i",{children:"structure class"})}),", this means the ",(0,c.jsx)(t,{term:"slot",children:(0,c.jsx)("i",{children:"slots"})}),"\u2019 ",(0,c.jsx)(t,{term:"value",children:(0,c.jsx)("i",{children:"values"})})," are unspecified."]}),"\n",(0,c.jsxs)(n.p,{children:["The caller of ",(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," is expected to have already checked the initialization arguments."]}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(t,{styled:!0,term:"generic function",children:(0,c.jsx)("i",{children:"generic function"})})," ",(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," is called by ",(0,c.jsx)(s,{term:"make-instance",children:(0,c.jsx)("b",{children:"make-instance"})}),", as described in Section 7.1 (Object Creation and Initialization)."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(s,{term:"defclass",children:(0,c.jsx)("b",{children:"defclass"})}),", ",(0,c.jsx)(s,{term:"make-instance",children:(0,c.jsx)("b",{children:"make-instance"})}),", ",(0,c.jsx)(s,{term:"class-of",children:(0,c.jsx)("b",{children:"class-of"})}),", Section 7.1 (Object Creation and Initialization)"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,c.jsxs)(n.p,{children:["The consequences of adding ",(0,c.jsx)(t,{term:"method",children:(0,c.jsx)("i",{children:"methods"})})," to ",(0,c.jsx)(s,{term:"allocate-instance",children:(0,c.jsx)("b",{children:"allocate-instance"})})," is unspecified. This capability might be added by the ",(0,c.jsx)(n.em,{children:"Metaobject Protocol"}),"."]})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}function r(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const l={title:"allocate-instance"},d="allocate-instance",o={id:"chap-7/h-h-dictionary/allocate-instance_standard-generic-function",title:"allocate-instance",description:"Expanded Reference: allocate-instance",source:"@site/docs/chap-7/h-h-dictionary/allocate-instance_standard-generic-function.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/allocate-instance_standard-generic-function",permalink:"/cl-language-reference/chap-7/h-h-dictionary/allocate-instance_standard-generic-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-7/h-h-dictionary/allocate-instance_standard-generic-function.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{title:"allocate-instance"},sidebar:"tutorialSidebar",previous:{title:"add-method",permalink:"/cl-language-reference/chap-7/h-h-dictionary/add-method_standard-generic-function"},next:{title:"call-method, make-method",permalink:"/cl-language-reference/chap-7/h-h-dictionary/call-method_make-method_local-macro"}},h={},x=[{value:"Expanded Reference: allocate-instance",id:"expanded-reference-allocate-instance",level:2}];function j(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"allocate-instance",children:"allocate-instance"}),"\n","\n","\n",(0,c.jsx)(a,{}),"\n",(0,c.jsx)(n.h2,{id:"expanded-reference-allocate-instance",children:"Expanded Reference: allocate-instance"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"(allocate-instance )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(j,{...e})}):j(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>a});var c=s(67294);const i={},t=c.createContext(i);function a(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);