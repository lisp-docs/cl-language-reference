"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[86141],{52479:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var i=r(85893),s=r(11151);function a(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"adjust-array"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"adjust-array"})," ",(0,i.jsx)(n.em,{children:"array new-dimensions"})," &key ",(0,i.jsx)(n.em,{children:"element-type"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"initial-element"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"initial-contents"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"fill-pointer"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"displaced-to"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"displaced-index-offset"})}),"\n",(0,i.jsx)(n.p,{children:"\u2192 adjusted-array"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"array"}),"\u2014an ",(0,i.jsx)(n.em,{children:"array"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"new-dimensions"}),"\u2014a ",(0,i.jsx)(n.em,{children:"valid array dimension"})," or a ",(0,i.jsx)(n.em,{children:"list"})," of ",(0,i.jsx)(n.em,{children:"valid array dimensions"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"element-type"}),"\u2014a ",(0,i.jsx)(n.em,{children:"type specifier"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"initial-element"}),"\u2014an ",(0,i.jsx)(n.em,{children:"object"}),". ",(0,i.jsx)(n.em,{children:"Initial-element"})," must not be supplied if either ",(0,i.jsx)(n.em,{children:"initial-contents"})," or ",(0,i.jsx)(n.em,{children:"displaced-to"})," is supplied."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"initial-contents"}),"\u2014an ",(0,i.jsx)(n.em,{children:"object"}),". If ",(0,i.jsx)(n.em,{children:"array"})," has rank greater than zero, then ",(0,i.jsx)(n.em,{children:"initial-contents"})," is composed of nested ",(0,i.jsx)(n.em,{children:"sequences"}),", the depth of which must equal the rank of ",(0,i.jsx)(n.em,{children:"array"}),". Otherwise, ",(0,i.jsx)(n.em,{children:"array"})," is zero-dimensional and ",(0,i.jsx)(n.em,{children:"initial-contents"})," supplies the single element. ",(0,i.jsx)(n.em,{children:"initial-contents"})," must not be supplied if either ",(0,i.jsx)(n.em,{children:"initial-element"})," or ",(0,i.jsx)(n.em,{children:"displaced-to"})," is given."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"fill-pointer"}),"\u2014a ",(0,i.jsx)(n.em,{children:"valid fill pointer"})," for the ",(0,i.jsx)(n.em,{children:"array"})," to be created, or ",(0,i.jsx)(n.strong,{children:"t"}),", or ",(0,i.jsx)(n.strong,{children:"nil"}),". The default is ",(0,i.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"displaced-to"}),"\u2014an ",(0,i.jsx)(n.em,{children:"array"})," or ",(0,i.jsx)(n.strong,{children:"nil"}),". ",(0,i.jsx)(n.em,{children:"initial-elements"})," and ",(0,i.jsx)(n.em,{children:"initial-contents"})," must not be supplied if ",(0,i.jsx)(n.em,{children:"displaced-to"})," is supplied."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"displaced-index-offset"}),"\u2014an ",(0,i.jsx)(n.em,{children:"object"})," of ",(0,i.jsx)(n.em,{children:"type"})," (fixnum 0 ",(0,i.jsx)(n.em,{children:"n"}),") where ",(0,i.jsx)(n.em,{children:"n"})," is (array-total-size ",(0,i.jsx)(n.em,{children:"displaced-to"}),"). ",(0,i.jsx)(n.em,{children:"displaced-index-offset"})," may be supplied only if ",(0,i.jsx)(n.em,{children:"displaced-to"})," is supplied."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"adjusted-array"}),"\u2014an ",(0,i.jsx)(n.em,{children:"array"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"adjust-array"})," changes the dimensions or elements of ",(0,i.jsx)(n.em,{children:"array"}),". The result is an ",(0,i.jsx)(n.em,{children:"array"})," of the same ",(0,i.jsx)(n.em,{children:"type"})," and rank as ",(0,i.jsx)(n.em,{children:"array"}),", that is either the modified ",(0,i.jsx)(n.em,{children:"array"}),", or a newly created ",(0,i.jsx)(n.em,{children:"array"})," to which ",(0,i.jsx)(n.em,{children:"array"})," can be displaced, and that has the given ",(0,i.jsx)(n.em,{children:"new-dimensions"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"New-dimensions"})," specify the size of each ",(0,i.jsx)(n.em,{children:"dimension"})," of ",(0,i.jsx)(n.em,{children:"array"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Element-type"})," specifies the ",(0,i.jsx)(n.em,{children:"type"})," of the ",(0,i.jsx)(n.em,{children:"elements"})," of the resulting ",(0,i.jsx)(n.em,{children:"array"}),". If ",(0,i.jsx)(n.em,{children:"element-type"})," is supplied, the consequences are unspecified if the ",(0,i.jsx)(n.em,{children:"upgraded array element type"})," of ",(0,i.jsx)(n.em,{children:"element-type"})," is not the same as the ",(0,i.jsx)(n.em,{children:"actual array element type"})," of ",(0,i.jsx)(n.em,{children:"array"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"adjust-array"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"initial-contents"})," is supplied, it is treated as for ",(0,i.jsx)(n.strong,{children:"make-array"}),". In this case none of the original contents of ",(0,i.jsx)(n.em,{children:"array"})," appears in the resulting ",(0,i.jsx)(n.em,{children:"array"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"fill-pointer"})," is an ",(0,i.jsx)(n.em,{children:"integer"})," , it becomes the ",(0,i.jsx)(n.em,{children:"fill pointer"})," for the resulting ",(0,i.jsx)(n.em,{children:"array"}),". If ",(0,i.jsx)(n.em,{children:"fill-pointer"})," is the symbol ",(0,i.jsx)(n.strong,{children:"t"}),", it indicates that the size of the resulting ",(0,i.jsx)(n.em,{children:"array"})," should be used as the ",(0,i.jsx)(n.em,{children:"fill pointer"})," . If ",(0,i.jsx)(n.em,{children:"fill-pointer"})," is ",(0,i.jsx)(n.strong,{children:"nil"}),", it indicates that the ",(0,i.jsx)(n.em,{children:"fill pointer"})," should be left as it is."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"displaced-to non-nil"}),", a ",(0,i.jsx)(n.em,{children:"displaced array"})," is created. The resulting ",(0,i.jsx)(n.em,{children:"array"})," shares its contents with the ",(0,i.jsx)(n.em,{children:"array"})," given by ",(0,i.jsx)(n.em,{children:"displaced-to"}),". The resulting ",(0,i.jsx)(n.em,{children:"array"})," cannot contain more elements than the ",(0,i.jsx)(n.em,{children:"array"})," it is displaced to. If ",(0,i.jsx)(n.em,{children:"displaced-to"})," is not supplied or ",(0,i.jsx)(n.strong,{children:"nil"}),", the resulting ",(0,i.jsx)(n.em,{children:"array"})," is not a ",(0,i.jsx)(n.em,{children:"displaced array"}),". If array ",(0,i.jsx)(n.em,{children:"A"})," is created displaced to array ",(0,i.jsx)(n.em,{children:"B"})," and subsequently array ",(0,i.jsx)(n.em,{children:"B"})," is given to ",(0,i.jsx)(n.strong,{children:"adjust-array"}),", array ",(0,i.jsx)(n.em,{children:"A"})," will still be displaced to array ",(0,i.jsx)(n.em,{children:"B"}),". Although ",(0,i.jsx)(n.em,{children:"array"})," might be a ",(0,i.jsx)(n.em,{children:"displaced array"}),", the resulting ",(0,i.jsx)(n.em,{children:"array"})," is not a ",(0,i.jsx)(n.em,{children:"displaced array"})," unless ",(0,i.jsx)(n.em,{children:"displaced-to"})," is supplied and not ",(0,i.jsx)(n.strong,{children:"nil"}),". The interaction between ",(0,i.jsx)(n.strong,{children:"adjust-array"})," and displaced ",(0,i.jsx)(n.em,{children:"arrays"})," is as follows given three ",(0,i.jsx)(n.em,{children:"arrays"}),", A, B, and C:"]}),"\n",(0,i.jsx)(n.p,{children:"A is not displaced before or after the call"}),"\n",(0,i.jsx)(n.p,{children:"(adjust-array A ...)"}),"\n",(0,i.jsxs)(n.p,{children:["The dimensions of A are altered, and the contents rearranged as appropriate. Additional elements of A are taken from ",(0,i.jsx)(n.em,{children:"initial-element"}),". The use of ",(0,i.jsx)(n.em,{children:"initial-contents"})," causes all old contents to be discarded."]}),"\n",(0,i.jsx)(n.p,{children:"A is not displaced before, but is displaced to C after the call"}),"\n",(0,i.jsxs)(n.p,{children:["(adjust-array A ... ",":displaced-to"," C)"]}),"\n",(0,i.jsx)(n.p,{children:"None of the original contents of A appears in A afterwards; A now contains the contents of C, without any rearrangement of C."}),"\n",(0,i.jsx)(n.p,{children:"A is displaced to B before the call, and is displaced to C after the call"}),"\n",(0,i.jsxs)(n.p,{children:["(adjust-array A ... ",":displaced-to"," B)"]}),"\n",(0,i.jsxs)(n.p,{children:["(adjust-array A ... ",":displaced-to"," C)"]}),"\n",(0,i.jsxs)(n.p,{children:["B and C might be the same. The contents of B do not appear in A afterward unless such contents also happen to be in C If ",(0,i.jsx)(n.em,{children:"displaced-index-offset"})," is not supplied in the ",(0,i.jsx)(n.strong,{children:"adjust-array"})," call, it defaults to zero; the old offset into B is not retained."]}),"\n",(0,i.jsx)(n.p,{children:"A is displaced to B before the call, but not displaced afterward."}),"\n",(0,i.jsxs)(n.p,{children:["(adjust-array A ... ",":displaced-to"," B)"]}),"\n",(0,i.jsxs)(n.p,{children:["(adjust-array A ... ",":displaced-to"," nil)"]}),"\n",(0,i.jsxs)(n.p,{children:["A gets a new \u201cdata region,\u201d and contents of B are copied into it as appropriate to maintain the existing old contents; additional elements of A are taken from ",(0,i.jsx)(n.em,{children:"initial-element"})," if supplied. However, the use of ",(0,i.jsx)(n.em,{children:"initial-contents"})," causes all old contents to be discarded."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"adjust-array"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"displaced-index-offset"})," is supplied, it specifies the offset of the resulting ",(0,i.jsx)(n.em,{children:"array"})," from the beginning of the ",(0,i.jsx)(n.em,{children:"array"})," that it is displaced to. If ",(0,i.jsx)(n.em,{children:"displaced-index-offset"})," is not supplied, the offset is 0. The size of the resulting ",(0,i.jsx)(n.em,{children:"array"})," plus the offset value cannot exceed the size of the ",(0,i.jsx)(n.em,{children:"array"})," that it is displaced to."]}),"\n",(0,i.jsxs)(n.p,{children:["If only ",(0,i.jsx)(n.em,{children:"new-dimensions"})," and an ",(0,i.jsx)(n.em,{children:"initial-element"})," argument are supplied, those elements of ",(0,i.jsx)(n.em,{children:"array"})," that are still in bounds appear in the resulting ",(0,i.jsx)(n.em,{children:"array"}),". The elements of the resulting ",(0,i.jsx)(n.em,{children:"array"})," that are not in the bounds of ",(0,i.jsx)(n.em,{children:"array"})," are initialized to ",(0,i.jsx)(n.em,{children:"initial-element"}),"; if ",(0,i.jsx)(n.em,{children:"initial-element"})," is not provided, the consequences of later reading any such new ",(0,i.jsx)(n.em,{children:"element"})," of ",(0,i.jsx)(n.em,{children:"new-array"})," before it has been initialized are undefined."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"initial-contents"})," or ",(0,i.jsx)(n.em,{children:"displaced-to"})," is supplied, then none of the original contents of ",(0,i.jsx)(n.em,{children:"array"})," appears in the new ",(0,i.jsx)(n.em,{children:"array"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The consequences are unspecified if ",(0,i.jsx)(n.em,{children:"array"})," is adjusted to a size smaller than its ",(0,i.jsx)(n.em,{children:"fill pointer"})," without supplying the ",(0,i.jsx)(n.em,{children:"fill-pointer"})," argument so that its ",(0,i.jsx)(n.em,{children:"fill-pointer"})," is properly adjusted in the process."]}),"\n",(0,i.jsx)(n.p,{children:"If A is displaced to B, the consequences are unspecified if B is adjusted in such a way that it no longer has enough elements to satisfy A."}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.strong,{children:"adjust-array"})," is applied to an ",(0,i.jsx)(n.em,{children:"array"})," that is ",(0,i.jsx)(n.em,{children:"actually adjustable"}),", the ",(0,i.jsx)(n.em,{children:"array"})," returned is ",(0,i.jsx)(n.em,{children:"identical"})," to ",(0,i.jsx)(n.em,{children:"array"}),". If the ",(0,i.jsx)(n.em,{children:"array"})," returned by ",(0,i.jsx)(n.strong,{children:"adjust-array"})," is ",(0,i.jsx)(n.em,{children:"distinct"})," from ",(0,i.jsx)(n.em,{children:"array"}),", then the argument ",(0,i.jsx)(n.em,{children:"array"})," is unchanged."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that if an ",(0,i.jsx)(n.em,{children:"array A"})," is displaced to another ",(0,i.jsx)(n.em,{children:"array B"}),", and ",(0,i.jsx)(n.em,{children:"B"})," is displaced to another ",(0,i.jsx)(n.em,{children:"array C"}),", and ",(0,i.jsx)(n.em,{children:"B"})," is altered by ",(0,i.jsx)(n.strong,{children:"adjust-array"}),", ",(0,i.jsx)(n.em,{children:"A"})," must now refer to the adjust contents of ",(0,i.jsx)(n.em,{children:"B"}),". This means that an implementation cannot collapse the chain to make ",(0,i.jsx)(n.em,{children:"A"})," refer to ",(0,i.jsx)(n.em,{children:"C"})," directly and forget that the chain of reference passes through ",(0,i.jsx)(n.em,{children:"B"}),". However, caching techniques are permitted as long as they preserve the semantics specified here."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:" \n\n(adjustable-array-p \n\n(setq ada (adjust-array \n\n(make-array \u2019(2 3) \n\n:adjustable t \n\n:initial-contents \u2019((a b c) (1 2 3))) \n\n\u2019(4 6)))) \u2192 T \n\n(array-dimensions ada) \u2192 (4 6) \n\n(aref ada 1 1) \u2192 2 \n\n(setq beta (make-array \u2019(2 3) :adjustable t)) \n\n\u2192 #2A((NIL NIL NIL) (NIL NIL NIL)) \n\n(adjust-array beta \u2019(4 6) :displaced-to ada) \n\n\u2192 #2A((A B C NIL NIL NIL) \n\n(1 2 3 NIL NIL NIL) \n\n(NIL NIL NIL NIL NIL NIL) \n\n(NIL NIL NIL NIL NIL NIL)) \n\n\n\n \n\n \n\n(array-dimensions beta) \u2192 (4 6) \n\n(aref beta 1 1) \u2192 2 \n\nSuppose that the 4-by-4 array in m looks like this: \n\n#2A(( alpha beta gamma delta ) \n\n( epsilon zeta eta theta ) \n\n( iota kappa lambda mu ) \n\n( nu xi omicron pi )) \n\nThen the result of \n\n(adjust-array m \u2019(3 5) :initial-element \u2019baz) \n\nis a 3-by-5 array with contents \n\n#2A(( alpha beta gamma delta baz ) \n\n( epsilon zeta eta theta baz ) \n\n( iota kappa lambda mu baz )) \n\n\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"error"})," is signaled if ",(0,i.jsx)(n.em,{children:"fill-pointer"})," is supplied and ",(0,i.jsx)(n.em,{children:"non-nil"})," but ",(0,i.jsx)(n.em,{children:"array"})," has no ",(0,i.jsx)(n.em,{children:"fill pointer"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})})]})}function t(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}const d={},l="adjust-array",c={id:"chap-15/bf-c-dictionary/adjustarray",title:"adjust-array",description:"Expanded Reference: adjust-array",source:"@site/docs/chap-15/bf-c-dictionary/adjustarray.md",sourceDirName:"chap-15/bf-c-dictionary",slug:"/chap-15/bf-c-dictionary/adjustarray",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/adjustarray",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-c-dictionary/adjustarray.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"adjustable-array-p**, **make-array**, **array-dimension-limit**, **array-total-size-limit**, **array adjustable-array-p",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/adjustablearraypaa"},next:{title:"aref",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/aref"}},h={},o=[{value:"Expanded Reference: adjust-array",id:"expanded-reference-adjust-array",level:2}];function j(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"adjust-array",children:"adjust-array"}),"\n","\n","\n",(0,i.jsx)(t,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-adjust-array",children:"Expanded Reference: adjust-array"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(adjust-array )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>t});var i=r(67294);const s={},a=i.createContext(s);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);