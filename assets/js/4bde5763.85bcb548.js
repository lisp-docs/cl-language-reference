"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[7640],{80721:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>p,default:()=>x,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var t=i(85893),r=i(11151);function s(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pprint-fill, pprint-linear, pprint-tabular"})," ",(0,t.jsx)(e.em,{children:"Function"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pprint-fill"})," ",(0,t.jsx)(e.em,{children:"stream object"})," &optional ",(0,t.jsx)(e.em,{children:"colon-p at-sign-p \u2192"})," ",(0,t.jsx)(e.strong,{children:"nil"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pprint-linear"})," ",(0,t.jsx)(e.em,{children:"stream object"})," &optional ",(0,t.jsx)(e.em,{children:"colon-p at-sign-p \u2192"})," ",(0,t.jsx)(e.strong,{children:"nil"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pprint-tabular"})," ",(0,t.jsx)(e.em,{children:"stream object"})," &optional ",(0,t.jsx)(e.em,{children:"colon-p at-sign-p tabsize \u2192"})," ",(0,t.jsx)(e.strong,{children:"nil"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"stream"}),"\u2014an ",(0,t.jsx)(e.em,{children:"output stream designator"})," ."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"object"}),"\u2014an ",(0,t.jsx)(e.em,{children:"object"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"colon-p"}),"\u2014a ",(0,t.jsx)(e.em,{children:"generalized boolean"}),". The default is ",(0,t.jsx)(e.em,{children:"true"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"at-sign-p"}),"\u2014a ",(0,t.jsx)(e.em,{children:"generalized boolean"}),". The default is ",(0,t.jsx)(e.em,{children:"implementation-dependent"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"tabsize"}),"\u2014a non-negative ",(0,t.jsx)(e.em,{children:"integer"})," . The default is 16."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(e.p,{children:["The functions ",(0,t.jsx)(e.strong,{children:"pprint-fill"}),", ",(0,t.jsx)(e.strong,{children:"pprint-linear"}),", and ",(0,t.jsx)(e.strong,{children:"pprint-tabular"})," specify particular ways of ",(0,t.jsx)(e.em,{children:"pretty printing"})," a ",(0,t.jsx)(e.em,{children:"list"})," to ",(0,t.jsx)(e.em,{children:"stream"}),". Each function prints parentheses around the output if and only if ",(0,t.jsx)(e.em,{children:"colon-p"})," is ",(0,t.jsx)(e.em,{children:"true"}),". Each function ignores its ",(0,t.jsx)(e.em,{children:"at-sign-p"})," argument. (Both arguments are included even though only one is needed so that these functions can be used via ~/.../ and as ",(0,t.jsx)(e.strong,{children:"set-pprint-dispatch"})," functions, as well as directly.) Each function handles abbreviation and the detection of circularity and sharing correctly, and uses ",(0,t.jsx)(e.strong,{children:"write"})," to print ",(0,t.jsx)(e.em,{children:"object"})," when it is a ",(0,t.jsx)(e.em,{children:"non-list"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["If ",(0,t.jsx)(e.em,{children:"object"})," is a ",(0,t.jsx)(e.em,{children:"list"})," and if the ",(0,t.jsx)(e.em,{children:"value"})," of ",(0,t.jsx)(e.strong,{children:"*print-pretty*"})," is ",(0,t.jsx)(e.em,{children:"false"}),", each of these functions prints ",(0,t.jsx)(e.em,{children:"object"})," using a minimum of ",(0,t.jsx)(e.em,{children:"whitespace"}),", as described in Section 22.1.3.5 (Printing Lists and Conses). Otherwise (if ",(0,t.jsx)(e.em,{children:"object"})," is a ",(0,t.jsx)(e.em,{children:"list"})," and if the ",(0,t.jsx)(e.em,{children:"value"})," of ",(0,t.jsx)(e.strong,{children:"*print-pretty*"})," is ",(0,t.jsx)(e.em,{children:"true"}),"):"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"\u2022"})," The ",(0,t.jsx)(e.em,{children:"function"})," ",(0,t.jsx)(e.strong,{children:"pprint-linear"})," prints a ",(0,t.jsx)(e.em,{children:"list"})," either all on one line, or with each ",(0,t.jsx)(e.em,{children:"element"})," on a separate line."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"\u2022"})," The ",(0,t.jsx)(e.em,{children:"function"})," ",(0,t.jsx)(e.strong,{children:"pprint-fill"})," prints a ",(0,t.jsx)(e.em,{children:"list"})," with as many ",(0,t.jsx)(e.em,{children:"elements"})," as possible on each line."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"\u2022"})," The ",(0,t.jsx)(e.em,{children:"function"})," ",(0,t.jsx)(e.strong,{children:"pprint-tabular"})," is the same as ",(0,t.jsx)(e.strong,{children:"pprint-fill"})," except that it prints the ",(0,t.jsx)(e.em,{children:"elements"})," so that they line up in columns. The ",(0,t.jsx)(e.em,{children:"tabsize"})," specifies the column spacing in ",(0,t.jsx)(e.em,{children:"ems"}),", which is the total spacing from the leading edge of one column to the leading edge of the next."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:'\nEvaluating the following with a line length of 25 produces the output shown. \n(progn (princ "Roads ") \n\n       \n       \n       (pprint-tabular \\*standard-output\\* \u2019(elm main maple center) nil nil 8)) \nRoads ELM MAIN \nMAPLE CENTER \n\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Side Effects:"})}),"\n",(0,t.jsxs)(e.p,{children:["Performs output to the indicated ",(0,t.jsx)(e.em,{children:"stream"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Affected By:"})}),"\n",(0,t.jsxs)(e.p,{children:["The cursor position on the indicated ",(0,t.jsx)(e.em,{children:"stream"}),", if it can be determined."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.em,{children:"function"})," ",(0,t.jsx)(e.strong,{children:"pprint-tabular"})," could be defined as follows:"]}),"\n",(0,t.jsx)(e.p,{children:"(defun pprint-tabular (s list &optional (colon-p t) at-sign-p (tabsize nil))"}),"\n",(0,t.jsx)(e.p,{children:"(declare (ignore at-sign-p))"}),"\n",(0,t.jsx)(e.p,{children:"(when (null tabsize) (setq tabsize 16))"}),"\n",(0,t.jsxs)(e.p,{children:["(pprint-logical-block (s list ",":prefix",' (if colon-p "(" "")']}),"\n",(0,t.jsxs)(e.p,{children:[":suffix",' (if colon-p ")" ""))']}),"\n",(0,t.jsx)(e.p,{children:"(pprint-exit-if-list-exhausted)"}),"\n",(0,t.jsxs)(e.p,{children:["(loop (write (pprint-pop) ",":stream"," s)"]}),"\n",(0,t.jsx)(e.p,{children:"(pprint-exit-if-list-exhausted)"}),"\n",(0,t.jsx)(e.p,{children:"(write-char #\\Space s)"}),"\n",(0,t.jsxs)(e.p,{children:["(pprint-tab ",":section-relative"," 0 tabsize s)"]}),"\n",(0,t.jsxs)(e.p,{children:["(pprint-newline ",":fill"," s))))"]}),"\n",(0,t.jsxs)(e.p,{children:["Note that it would have been inconvenient to specify this function using ",(0,t.jsx)(e.strong,{children:"format"}),", because of the need to pass its ",(0,t.jsx)(e.em,{children:"tabsize"})," argument through to a ~",":T"," format directive nested within an iteration over a list."]})]})}function l(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(s,{...n})}):s(n)}const c={title:"pprint-fill, pprint-linear, pprint-tabular"},p="pprint-fill, pprint-linear, pprint-tabular",a={id:"chap-22/cc-e-dictionary/pprint-fill_pprint-linear_pprint-tabular_function",title:"pprint-fill, pprint-linear, pprint-tabular",description:"Expanded Reference: pprint-fill, pprint-linear, pprint-tabular",source:"@site/docs/chap-22/cc-e-dictionary/pprint-fill_pprint-linear_pprint-tabular_function.md",sourceDirName:"chap-22/cc-e-dictionary",slug:"/chap-22/cc-e-dictionary/pprint-fill_pprint-linear_pprint-tabular_function",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/pprint-fill_pprint-linear_pprint-tabular_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-22/cc-e-dictionary/pprint-fill_pprint-linear_pprint-tabular_function.md",tags:[],version:"current",frontMatter:{title:"pprint-fill, pprint-linear, pprint-tabular"},sidebar:"tutorialSidebar",previous:{title:"pprint-exit-if-list-exhausted",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/pprint-exit-if-list-exhausted_local-macro"},next:{title:"pprint-indent",permalink:"/cl-language-reference/docs/chap-22/cc-e-dictionary/pprint-indent_function"}},o={},d=[{value:"Expanded Reference: pprint-fill, pprint-linear, pprint-tabular",id:"expanded-reference-pprint-fill-pprint-linear-pprint-tabular",level:2}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"pprint-fill-pprint-linear-pprint-tabular",children:"pprint-fill, pprint-linear, pprint-tabular"}),"\n","\n","\n",(0,t.jsx)(l,{}),"\n",(0,t.jsx)(e.h2,{id:"expanded-reference-pprint-fill-pprint-linear-pprint-tabular",children:"Expanded Reference: pprint-fill, pprint-linear, pprint-tabular"}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:"(pprint-fill, pprint-linear, pprint-tabular )\n"})})]})}function x(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},11151:(n,e,i)=>{i.d(e,{Z:()=>c,a:()=>l});var t=i(67294);const r={},s=t.createContext(r);function l(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);