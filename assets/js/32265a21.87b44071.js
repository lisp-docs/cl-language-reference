"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[82547],{74233:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>m});var r=a(85893),i=a(11151);function o(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"defmacro"})," ",(0,r.jsx)(e.em,{children:"Macro"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"defmacro"})," ",(0,r.jsx)(e.em,{children:"name lambda-list"})," [[ ",(0,r.jsx)(e.em,{children:"{declaration}"}),"* ",(0,r.jsx)(e.em,{children:"| documentation"})," ]] ",(0,r.jsx)(e.em,{children:"{form}"}),"*"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"\u2192 name"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"name"}),"\u2014a ",(0,r.jsx)(e.em,{children:"symbol"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"lambda-list"}),"\u2014a ",(0,r.jsx)(e.em,{children:"macro lambda list"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"declaration"}),"\u2014a ",(0,r.jsx)(e.strong,{children:"declare"})," ",(0,r.jsx)(e.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"documentation"}),"\u2014a ",(0,r.jsx)(e.em,{children:"string"}),"; not evaluated."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"form"}),"\u2014a ",(0,r.jsx)(e.em,{children:"form"}),"."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"defmacro"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(e.p,{children:["Defines ",(0,r.jsx)(e.em,{children:"name"})," as a ",(0,r.jsx)(e.em,{children:"macro"})," by associating a ",(0,r.jsx)(e.em,{children:"macro function"})," with that ",(0,r.jsx)(e.em,{children:"name"})," in the global environment. The ",(0,r.jsx)(e.em,{children:"macro function"})," is defined in the same ",(0,r.jsx)(e.em,{children:"lexical environment"})," in which the ",(0,r.jsx)(e.strong,{children:"defmacro"})," ",(0,r.jsx)(e.em,{children:"form"})," appears."]}),"\n",(0,r.jsxs)(e.p,{children:["The parameter variables in ",(0,r.jsx)(e.em,{children:"lambda-list"})," are bound to destructured portions of the macro call."]}),"\n",(0,r.jsxs)(e.p,{children:["The expansion function accepts two arguments, a ",(0,r.jsx)(e.em,{children:"form"})," and an ",(0,r.jsx)(e.em,{children:"environment"}),". The expansion function returns a ",(0,r.jsx)(e.em,{children:"form"}),". The body of the expansion function is specified by ",(0,r.jsx)(e.em,{children:"forms"}),". ",(0,r.jsx)(e.em,{children:"Forms"})," are executed in order. The value of the last ",(0,r.jsx)(e.em,{children:"form"})," executed is returned as the expansion of the ",(0,r.jsx)(e.em,{children:"macro"}),". The body ",(0,r.jsx)(e.em,{children:"forms"})," of the expansion function (but not the ",(0,r.jsx)(e.em,{children:"lambda-list"}),") are implicitly enclosed in a ",(0,r.jsx)(e.em,{children:"block"})," whose name is ",(0,r.jsx)(e.em,{children:"name"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.em,{children:"lambda-list"})," conforms to the requirements described in Section 3.4.4 (Macro Lambda Lists)."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"Documentation"})," is attached as a ",(0,r.jsx)(e.em,{children:"documentation string"})," to ",(0,r.jsx)(e.em,{children:"name"})," (as kind ",(0,r.jsx)(e.strong,{children:"function"}),") and to the ",(0,r.jsx)(e.em,{children:"macro function"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"defmacro"})," can be used to redefine a ",(0,r.jsx)(e.em,{children:"macro"})," or to replace a ",(0,r.jsx)(e.em,{children:"function"})," definition with a ",(0,r.jsx)(e.em,{children:"macro"})," definition."]}),"\n",(0,r.jsxs)(e.p,{children:["Recursive expansion of the ",(0,r.jsx)(e.em,{children:"form"})," returned must terminate, including the expansion of other ",(0,r.jsx)(e.em,{children:"macros"})," which are ",(0,r.jsx)(e.em,{children:"subforms"})," of other ",(0,r.jsx)(e.em,{children:"forms"})," returned."]}),"\n",(0,r.jsxs)(e.p,{children:["The consequences are undefined if the result of fully macroexpanding a ",(0,r.jsx)(e.em,{children:"form"})," contains any ",(0,r.jsx)(e.em,{children:"circular list structure"})," except in ",(0,r.jsx)(e.em,{children:"literal objects"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["If a ",(0,r.jsx)(e.strong,{children:"defmacro"})," ",(0,r.jsx)(e.em,{children:"form"})," appears as a ",(0,r.jsx)(e.em,{children:"top level form"}),", the ",(0,r.jsx)(e.em,{children:"compiler"})," must store the ",(0,r.jsx)(e.em,{children:"macro"})," definition at compile time, so that occurrences of the macro later on in the file can be expanded correctly. Users must ensure that the body of the ",(0,r.jsx)(e.em,{children:"macro"})," can be evaluated at compile time if it is referenced within the ",(0,r.jsx)(e.em,{children:"file"})," being ",(0,r.jsx)(e.em,{children:"compiled"}),"."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-lisp",children:' \n\n\n\n(defmacro mac1 (a b) "Mac1 multiplies and adds" \n\n\n\n\u2018(+ ,a (\\* ,b 3))) *\u2192* MAC1 \n\n\n\n(mac1 4 5) *\u2192* 19 \n\n\n\n(documentation \u2019mac1 \u2019function) *\u2192* "Mac1 multiplies and adds" \n\n\n\n(defmacro mac2 (&amp;optional (a 2 b) (c 3 d) &amp;rest x) \u2018\u2019(,a ,b ,c ,d ,x)) *\u2192* MAC2 (mac2 6) *\u2192* (6 T 3 NIL NIL) \n\n\n\n(mac2 6 3 8) *\u2192* (6 T 3 T (8)) \n\n\n\n(defmacro mac3 (&amp;whole r a &amp;optional (b 3) &amp;rest x &amp;key c (d a)) \n\n\n\n\u2018\u2019(,r ,a ,b ,c ,d ,x)) *\u2192* MAC3 \n\n\n\n(mac3 1 6 :d 8 :c 9 :d 10) *\u2192* ((MAC3 1 6 :D 8 :C 9 :D 10) 1 6 9 8 (:D 8 :C 9 :D 10)) \n\n\n\nThe stipulation that an embedded *destructuring lambda list* is permitted only where *ordinary lambda list* syntax would permit a parameter name but not a *list* is made to prevent ambiguity. For example, the following is not valid:  \n\n\n\n\n\n\n\n**defmacro** \n\n\n\n(defmacro loser (x &amp;optional (a b &amp;rest c) &amp;rest z) \n\n\n\n...) \n\n\n\nbecause *ordinary lambda list* syntax does permit a *list* following &amp;optional; the list (a b &amp;rest c) would be interpreted as describing an optional parameter named a whose default value is that of the form b, with a supplied-p parameter named **&amp;rest** (not valid), and an extraneous symbol c in the list (also not valid). An almost correct way to express this is \n\n\n\n(defmacro loser (x &amp;optional ((a b &amp;rest c)) &amp;rest z) \n\n\n\n...) \n\n\n\nThe extra set of parentheses removes the ambiguity. However, the definition is now incorrect because a macro call such as (loser (car pool)) would not provide any argument form for the lambda list (a b &amp;rest c), and so the default value against which to match the *lambda list* would be **nil** because no explicit default value was specified. The consequences of this are unspecified since the empty list, **nil**, does not have *forms* to satisfy the parameters a and b. The fully correct definition would be either \n\n\n\n(defmacro loser (x &amp;optional ((a b &amp;rest c) \u2019(nil nil)) &amp;rest z) \n\n\n\n...) \n\n\n\nor \n\n\n\n(defmacro loser (x &amp;optional ((&amp;optional a b &amp;rest c)) &amp;rest z) \n\n\n\n...) \n\n\n\nThese differ slightly: the first requires that if the macro call specifies a explicitly then it must also specify b explicitly, whereas the second does not have this requirement. For example, \n\n\n\n(loser (car pool) ((+ x 1))) \n\n\n\nwould be a valid call for the second definition but not for the first. \n\n\n\n(defmacro dm1a (&amp;whole x) \u2018\u2019,x) \n\n\n\n(macroexpand \u2019(dm1a)) *\u2192* (QUOTE (DM1A)) \n\n\n\n(macroexpand \u2019(dm1a a)) is an error. \n\n\n\n(defmacro dm1b (&amp;whole x a &amp;optional b) \u2018\u2019(,x ,a ,b)) \n\n\n\n(macroexpand \u2019(dm1b)) is an error. \n\n\n\n(macroexpand \u2019(dm1b q)) *\u2192* (QUOTE ((DM1B Q) Q NIL)) \n\n\n\n(macroexpand \u2019(dm1b q r)) *\u2192* (QUOTE ((DM1B Q R) Q R)) \n\n\n\n(macroexpand \u2019(dm1b q r s)) is an error. \n\n\n\n(defmacro dm2a (&amp;whole form a b) \u2018\u2019(form ,form a ,a b ,b)) \n\n\n\n(macroexpand \u2019(dm2a x y)) *\u2192* (QUOTE (FORM (DM2A X Y) A X B Y)) \n\n\n\n(dm2a x y) *\u2192* (FORM (DM2A X Y) A X B Y) \n\n\n\n(defmacro dm2b (&amp;whole form a (&amp;whole b (c . d) &amp;optional (e 5)) \n\n\n\n&amp;body f &amp;environment env)  \n\n\n\n\n\n\n\n\u201c(,\u2019,form \u201ea ,\u2019,b ,\u2019,(macroexpand c env) ,\u2019,d ,\u2019,e ,\u2019,f)) \n\n\n\n;Note that because backquote is involved, implementations may differ \n\n\n\n;slightly in the nature (though not the functionality) of the expansion. \n\n\n\n(macroexpand \u2019(dm2b x1 (((incf x2) x3 x4)) x5 x6)) \n\n\n\n*\u2192* (LIST\\* \u2019(DM2B X1 (((INCF X2) X3 X4)) \n\n\n\nX5 X6) \n\n\n\nX1 \n\n\n\n\u2019((((INCF X2) X3 X4)) (SETQ X2 (+ X2 1)) (X3 X4) 5 (X5 X6))), \n\n\n\nT \n\n\n\n(let ((x1 5)) \n\n\n\n(macrolet ((segundo (x) \u2018(cadr ,x))) \n\n\n\n(dm2b x1 (((segundo x2) x3 x4)) x5 x6))) \n\n\n\n*\u2192* ((DM2B X1 (((SEGUNDO X2) X3 X4)) X5 X6) \n\n\n\n5 (((SEGUNDO X2) X3 X4)) (CADR X2) (X3 X4) 5 (X5 X6)) \n\n\n\n\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"define-compiler-macro"}),", ",(0,r.jsx)(e.strong,{children:"destructuring-bind"}),", ",(0,r.jsx)(e.strong,{children:"documentation"}),", ",(0,r.jsx)(e.strong,{children:"macroexpand"}),","]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"*macroexpand-hook*"}),", ",(0,r.jsx)(e.strong,{children:"macrolet"}),", ",(0,r.jsx)(e.strong,{children:"macro-function"}),", Section 3.1 (Evaluation), Section 3.2 (Compilation), Section 3.4.11 (Syntactic Interaction of Documentation Strings and Declarations)"]})]})}function t(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}const c={},s="defmacro",d={id:"chap-3/d-i-dictionary/defmacro",title:"defmacro",description:"Expanded Reference: defmacro",source:"@site/docs/chap-3/d-i-dictionary/defmacro.md",sourceDirName:"chap-3/d-i-dictionary",slug:"/chap-3/d-i-dictionary/defmacro",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/defmacro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-3/d-i-dictionary/defmacro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"define-symbol-macro",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/definesymbolmacro"},next:{title:"dynamic-extent",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/dynamicextent"}},l={},m=[{value:"Expanded Reference: defmacro",id:"expanded-reference-defmacro",level:2}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"defmacro",children:"defmacro"}),"\n","\n","\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(e.h2,{id:"expanded-reference-defmacro",children:"Expanded Reference: defmacro"}),"\n",(0,r.jsx)(e.admonition,{type:"tip",children:(0,r.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-lisp",children:"(defmacro )\n"})})]})}function x(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},11151:(n,e,a)=>{a.d(e,{Z:()=>c,a:()=>t});var r=a(67294);const i={},o=r.createContext(i);function t(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);