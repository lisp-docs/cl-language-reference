"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[69158],{97393:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>l,metadata:()=>a,toc:()=>x});var t=n(85893),i=n(11151);function s(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:s}=r;return n||c("DictionaryLink",!0),s||c("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"break"})," ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," &optional ",(0,t.jsx)(r.em,{children:"format-control"})," &rest ",(0,t.jsx)(r.em,{children:"format-arguments \u2192"})," ",(0,t.jsx)(n,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"format-control"}),"\u2014a ",(0,t.jsx)(s,{styled:!0,term:"format control",children:(0,t.jsx)("i",{children:"format control"})}),". The default is ",(0,t.jsx)(s,{styled:!0,term:"implementation-dependent",children:(0,t.jsx)("i",{children:"implementation-dependent"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"format-arguments"}),"\u2014",(0,t.jsx)(s,{styled:!0,term:"format argument",children:(0,t.jsx)("i",{children:"format arguments"})})," for the ",(0,t.jsx)(r.em,{children:"format-control"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," ",(0,t.jsx)(r.em,{children:"formats format-control"})," and ",(0,t.jsx)(r.em,{children:"format-arguments"})," and then goes directly into the debugger without allowing any possibility of interception by programmed error-handling facilities."]}),"\n",(0,t.jsxs)(r.p,{children:["If the ",(0,t.jsx)(r.strong,{children:"continue"})," ",(0,t.jsx)(s,{styled:!0,term:"restart",children:(0,t.jsx)("i",{children:"restart"})})," is used while in the debugger, ",(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," immediately returns ",(0,t.jsx)(n,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," without taking any unusual recovery action."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," binds ",(0,t.jsx)(n,{styled:!0,term:"debugger-hook",children:(0,t.jsx)("b",{children:"*debugger-hook*"})})," to ",(0,t.jsx)(n,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," before attempting to enter the debugger."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:'(break "You got here with arguments: ~:S." \u2019(FOO 37 A)) \n\u25b7 BREAK: You got here with these arguments: FOO, 37, A. \n\u25b7 To continue, type :CONTINUE followed by an option number: \n\u25b7 1: Return from BREAK. \n\u25b7 2: Top level. \n\u25b7 Debug> :CONTINUE 1 \n\u25b7 Return from BREAK. \n\u2192 NIL \n'})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Side Effects:"})}),"\n",(0,t.jsx)(r.p,{children:"The debugger is entered."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Affected By:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"*debug-io*"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"error",children:(0,t.jsx)("b",{children:"error"})}),", ",(0,t.jsx)(n,{styled:!0,term:"invoke-debugger",children:(0,t.jsx)("b",{children:"invoke-debugger"})}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," is used as a way of inserting temporary debugging \u201cbreakpoints\u201d in a program, not as a way of signaling errors. For this reason, ",(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," does not take the ",(0,t.jsx)(r.em,{children:"continue-format-control argument"})," that ",(0,t.jsx)(n,{styled:!0,term:"cerror",children:(0,t.jsx)("b",{children:"cerror"})})," takes. This and the lack of any possibility of interception by ",(0,t.jsx)(r.em,{children:"condition handling"})," are the only program-visible differences between ",(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," and ",(0,t.jsx)(n,{styled:!0,term:"cerror",children:(0,t.jsx)("b",{children:"cerror"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["The user interface aspects of ",(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," and ",(0,t.jsx)(n,{styled:!0,term:"cerror",children:(0,t.jsx)("b",{children:"cerror"})})," are permitted to vary more widely, in order to accomodate the interface needs of the ",(0,t.jsx)(s,{styled:!0,term:"implementation",children:(0,t.jsx)("i",{children:"implementation"})}),". For example, it is permissible for a ",(0,t.jsx)(r.em,{children:"Lisp read-eval-print loop"})," to be entered by ",(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," rather than the conventional debugger."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"break",children:(0,t.jsx)("b",{children:"break"})})," could be defined by:"]}),"\n",(0,t.jsx)(r.p,{children:'(defun break (&optional (format-control "Break") &rest format-arguments)'}),"\n",(0,t.jsx)(r.p,{children:'(with-simple-restart (continue "Return from BREAK.")'}),"\n",(0,t.jsx)(r.p,{children:"(let ((*debugger-hook* nil))"}),"\n",(0,t.jsx)(r.p,{children:"(invoke-debugger"}),"\n",(0,t.jsx)(r.p,{children:"(make-condition \u2019simple-condition"}),"\n",(0,t.jsxs)(r.p,{children:[":format-control"," format-control"]}),"\n",(0,t.jsxs)(r.p,{children:[":format-arguments"," format-arguments))))"]}),"\n",(0,t.jsx)(r.p,{children:"nil)"})]})}function o(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}function c(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const l={title:"break"},d="break",a={id:"chap-9/j-c-dictionary/break_function",title:"break",description:"Expanded Reference: break",source:"@site/docs/chap-9/j-c-dictionary/break_function.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/break_function",permalink:"/cl-language-reference/chap-9/j-c-dictionary/break_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/break_function.md",tags:[],version:"current",frontMatter:{title:"break"},sidebar:"tutorialSidebar",previous:{title:"break-on-signals",permalink:"/cl-language-reference/chap-9/j-c-dictionary/break-on-signals_variable"},next:{title:"cell-error-name",permalink:"/cl-language-reference/chap-9/j-c-dictionary/cell-error-name_function"}},h={},x=[{value:"Expanded Reference: break",id:"expanded-reference-break",level:2}];function m(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"break",children:"break"}),"\n","\n","\n",(0,t.jsx)(o,{}),"\n",(0,t.jsx)(r.h2,{id:"expanded-reference-break",children:"Expanded Reference: break"}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:"(break )\n"})})]})}function j(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>o});var t=n(67294);const i={},s=t.createContext(i);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);