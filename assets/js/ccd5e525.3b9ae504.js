"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[13633],{22106:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>d,contentTitle:()=>g,default:()=>x,frontMatter:()=>c,metadata:()=>t,toc:()=>h});var r=o(85893),l=o(11151);function s(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor"})," ",(0,r.jsx)(e.em,{children:"Function"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logand"})," &rest ",(0,r.jsx)(e.em,{children:"integers \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logandc1"})," ",(0,r.jsx)(e.em,{children:"integer-1 integer-2 \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logandc2"})," ",(0,r.jsx)(e.em,{children:"integer-1 integer-2 \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logeqv"})," &rest ",(0,r.jsx)(e.em,{children:"integers \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logior"})," &rest ",(0,r.jsx)(e.em,{children:"integers \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"lognand"})," ",(0,r.jsx)(e.em,{children:"integer-1 integer-2 \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"lognor"})," ",(0,r.jsx)(e.em,{children:"integer-1 integer-2 \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"lognot"})," ",(0,r.jsx)(e.em,{children:"integer \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logorc1"})," ",(0,r.jsx)(e.em,{children:"integer-1 integer-2 \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logorc2"})," ",(0,r.jsx)(e.em,{children:"integer-1 integer-2 \u2192 result-integer"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logxor"})," &rest ",(0,r.jsx)(e.em,{children:"integers \u2192 result-integer"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"integers"}),"\u2014",(0,r.jsx)(e.em,{children:"integers"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"integer"}),"\u2014an ",(0,r.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"integer-1"}),"\u2014an ",(0,r.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"integer-2"}),"\u2014an ",(0,r.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.em,{children:"result-integer"}),"\u2014an ",(0,r.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.em,{children:"functions"})," ",(0,r.jsx)(e.strong,{children:"logandc1"}),", ",(0,r.jsx)(e.strong,{children:"logandc2"}),", ",(0,r.jsx)(e.strong,{children:"logand"}),", ",(0,r.jsx)(e.strong,{children:"logeqv"}),", ",(0,r.jsx)(e.strong,{children:"logior"}),", ",(0,r.jsx)(e.strong,{children:"lognand"}),", ",(0,r.jsx)(e.strong,{children:"lognor"}),", ",(0,r.jsx)(e.strong,{children:"lognot"}),", ",(0,r.jsx)(e.strong,{children:"logorc1"}),", ",(0,r.jsx)(e.strong,{children:"logorc2"}),", and ",(0,r.jsx)(e.strong,{children:"logxor"})," perform bit-wise logical operations on their ",(0,r.jsx)(e.em,{children:"arguments"}),", that are treated as if they were binary."]}),"\n",(0,r.jsxs)(e.p,{children:["Figure 12\u201318 lists the meaning of each of the ",(0,r.jsx)(e.em,{children:"functions"}),". Where an \u2018identity\u2019 is shown, it indicates the ",(0,r.jsx)(e.em,{children:"value yielded"})," by the ",(0,r.jsx)(e.em,{children:"function"})," when no ",(0,r.jsx)(e.em,{children:"arguments"})," are supplied."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"logand, logandc1, logandc2, logeqv, logior, lognand,"})," ",(0,r.jsx)(e.em,{children:". . ."})]}),"\n",(0,r.jsxs)(e.p,{children:["|",(0,r.jsx)(e.strong,{children:"Function Identity Operation performed"}),"|"]}),"\n",(0,r.jsx)(e.p,{children:"| :- |"}),"\n",(0,r.jsxs)(e.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(e.strong,{children:"logandc1"})," \u2014 and complement of ",(0,r.jsx)(e.em,{children:"integer-1"})," with ",(0,r.jsx)(e.em,{children:"integer-2"})," ",(0,r.jsx)(e.strong,{children:"logandc2"})," \u2014 and ",(0,r.jsx)(e.em,{children:"integer-1"})," with complement of ",(0,r.jsx)(e.em,{children:"integer-2"})," ",(0,r.jsx)(e.strong,{children:"logand"})," -1 and "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(e.strong,{children:"logeqv"})," -1 equivalence (exclusive nor) "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(e.strong,{children:"logior"})," 0 inclusive or "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(e.strong,{children:"lognand"})," \u2014 complement of ",(0,r.jsx)(e.em,{children:"integer-1"})," and ",(0,r.jsx)(e.em,{children:"integer-2"})," ",(0,r.jsx)(e.strong,{children:"lognor"})," \u2014 complement of ",(0,r.jsx)(e.em,{children:"integer-1"})," or ",(0,r.jsx)(e.em,{children:"integer-2"})," ",(0,r.jsx)(e.strong,{children:"lognot"})," \u2014 complement "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(e.strong,{children:"logorc1"})," \u2014 or complement of ",(0,r.jsx)(e.em,{children:"integer-1"})," with ",(0,r.jsx)(e.em,{children:"integer-2"})," ",(0,r.jsx)(e.strong,{children:"logorc2"})," \u2014 or ",(0,r.jsx)(e.em,{children:"integer-1"})," with complement of ",(0,r.jsx)(e.em,{children:"integer-2"})," ",(0,r.jsx)(e.strong,{children:"logxor"})," 0 exclusive or"]}),"|"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Figure 12\u201318. Bit-wise Logical Operations on Integers"})}),"\n",(0,r.jsxs)(e.p,{children:["Negative ",(0,r.jsx)(e.em,{children:"integers"})," are treated as if they were in two\u2019s-complement notation."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-lisp",children:' \n\n\n\n(logior 1 2 4 8) *\u2192* 15 \n\n\n\n(logxor 1 3 7 15) *\u2192* 10 \n\n\n\n(logeqv) *\u2192* -1 \n\n\n\n(logand 16 31) *\u2192* 16 \n\n\n\n(lognot 0) *\u2192* -1 \n\n\n\n(lognot 1) *\u2192* -2 \n\n\n\n(lognot -1) *\u2192* 0 \n\n\n\n(lognot (1+ (lognot 1000))) *\u2192* 999 \n\n\n\n;;; In the following example, m is a mask. For each bit in \n\n\n\n;;; the mask that is a 1, the corresponding bits in x and y are \n\n\n\n;;; exchanged. For each bit in the mask that is a 0, the \n\n\n\n;;; corresponding bits of x and y are left unchanged. \n\n\n\n(flet ((show (m x y) \n\n\n\n(format t "~%m = #o~6,\u20190O~%x = #o~6,\u20190O~%y = #o~6,\u20190O~%" \n\n\n\nm x y))) \n\n\n\n(let ((m #o007750) \n\n\n\n(x #o452576) \n\n\n\n(y #o317407)) \n\n\n\n(show m x y) \n\n\n\n(let ((z (logand (logxor x y) m))) \n\n\n\n(setq x (logxor z x)) \n\n\n\n(setq y (logxor z y)) \n\n\n\n(show m x y)))) \n\n\n\n\u25b7 m = #o007750 \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\u25b7 x = #o452576 \n\n\n\n\u25b7 y = #o317407 \n\n\n\n\u25b7 \n\n\n\n\u25b7 m = #o007750 \n\n\n\n\u25b7 x = #o457426 \n\n\n\n\u25b7 y = #o312557 \n\n\n\n*\u2192* NIL \n\n\n\n\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsxs)(e.p,{children:["Should signal ",(0,r.jsx)(e.strong,{children:"type-error"})," if any argument is not an ",(0,r.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"boole"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(e.p,{children:["(logbitp ",(0,r.jsx)(e.em,{children:"k"})," -1) returns ",(0,r.jsx)(e.em,{children:"true"})," for all values of ",(0,r.jsx)(e.em,{children:"k"}),"."]}),"\n",(0,r.jsx)(e.p,{children:"Because the following functions are not associative, they take exactly two arguments rather than any number of arguments."}),"\n",(0,r.jsxs)(e.p,{children:["(lognand ",(0,r.jsx)(e.em,{children:"n1 n2"}),") ",(0,r.jsx)(e.em,{children:"\u2261"})," (lognot (logand ",(0,r.jsx)(e.em,{children:"n1 n2"}),"))"]}),"\n",(0,r.jsxs)(e.p,{children:["(lognor ",(0,r.jsx)(e.em,{children:"n1 n2"}),") ",(0,r.jsx)(e.em,{children:"\u2261"})," (lognot (logior ",(0,r.jsx)(e.em,{children:"n1 n2"}),"))"]}),"\n",(0,r.jsxs)(e.p,{children:["(logandc1 ",(0,r.jsx)(e.em,{children:"n1 n2"}),") ",(0,r.jsx)(e.em,{children:"\u2261"})," (logand (lognot ",(0,r.jsx)(e.em,{children:"n1"}),") ",(0,r.jsx)(e.em,{children:"n2"}),")"]}),"\n",(0,r.jsxs)(e.p,{children:["(logandc2 ",(0,r.jsx)(e.em,{children:"n1 n2"}),") ",(0,r.jsx)(e.em,{children:"\u2261"})," (logand ",(0,r.jsx)(e.em,{children:"n1"})," (lognot ",(0,r.jsx)(e.em,{children:"n2"}),"))"]}),"\n",(0,r.jsxs)(e.p,{children:["(logiorc1 ",(0,r.jsx)(e.em,{children:"n1 n2"}),") ",(0,r.jsx)(e.em,{children:"\u2261"})," (logior (lognot ",(0,r.jsx)(e.em,{children:"n1"}),") ",(0,r.jsx)(e.em,{children:"n2"}),")"]}),"\n",(0,r.jsxs)(e.p,{children:["(logiorc2 ",(0,r.jsx)(e.em,{children:"n1 n2"}),") ",(0,r.jsx)(e.em,{children:"\u2261"})," (logior ",(0,r.jsx)(e.em,{children:"n1"})," (lognot ",(0,r.jsx)(e.em,{children:"n2"}),"))"]}),"\n",(0,r.jsxs)(e.p,{children:["(logbitp ",(0,r.jsx)(e.em,{children:"j"})," (lognot ",(0,r.jsx)(e.em,{children:"x"}),")) ",(0,r.jsx)(e.em,{children:"\u2261"})," (not (logbitp ",(0,r.jsx)(e.em,{children:"j x"}),"))"]})]})}function i(n={}){const{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(s,{...n})}):s(n)}const c={},g="logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor",t={id:"chap-12/bc-c-dictionary/logand",title:"logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor",description:"Expanded Reference: logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor",source:"@site/docs/chap-12/bc-c-dictionary/logand.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/logand",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/logand",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/logand.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"log",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/log"},next:{title:"logbitp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/logbitp"}},d={},h=[{value:"Expanded Reference: logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor",id:"expanded-reference-logand-logandc1-logandc2-logeqv-logior-lognand-lognor-lognot-logorc1-logorc2-logxor",level:2}];function a(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"logand-logandc1-logandc2-logeqv-logior-lognand-lognor-lognot-logorc1-logorc2-logxor",children:"logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor"}),"\n","\n","\n",(0,r.jsx)(i,{}),"\n",(0,r.jsx)(e.h2,{id:"expanded-reference-logand-logandc1-logandc2-logeqv-logior-lognand-lognor-lognot-logorc1-logorc2-logxor",children:"Expanded Reference: logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor"}),"\n",(0,r.jsx)(e.admonition,{type:"tip",children:(0,r.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-lisp",children:"(logand, logandc1, logandc2, logeqv, logior, lognand, lognor, lognot, logorc1, logorc2, logxor )\n"})})]})}function x(n={}){const{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},11151:(n,e,o)=>{o.d(e,{Z:()=>c,a:()=>i});var r=o(67294);const l={},s=r.createContext(l);function i(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:i(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);