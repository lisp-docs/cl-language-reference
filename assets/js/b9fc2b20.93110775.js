"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[61437],{78328:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var r=l(85893),i=l(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{ClLinks:l}=n;return l||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"flet, labels, macrolet"})," ",(0,r.jsx)(n.em,{children:"Special Operator"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," (",(0,r.jsx)(n.em,{children:"{"}),"(",(0,r.jsx)(n.em,{children:"function-name lambda-list"})," [[ ",(0,r.jsx)(n.em,{children:"{local-declaration}"}),"* ",(0,r.jsx)(n.em,{children:"| local-documentation"})," ]] ",(0,r.jsx)(n.em,{children:"{local-form}"}),"*)",(0,r.jsx)(n.em,{children:"}"}),"*) ",(0,r.jsx)(l,{term:"declaration",children:(0,r.jsx)("i",{children:"{declaration}"})}),"* ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"{form}"})}),"*"]}),"\n",(0,r.jsx)(n.p,{children:"\u2192 {result}*"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})})," (",(0,r.jsx)(n.em,{children:"{"}),"(",(0,r.jsx)(n.em,{children:"function-name lambda-list"})," [[ ",(0,r.jsx)(n.em,{children:"{local-declaration}"}),"* ",(0,r.jsx)(n.em,{children:"| local-documentation"})," ]] ",(0,r.jsx)(n.em,{children:"{local-form}"}),"*)",(0,r.jsx)(n.em,{children:"}"}),"*) ",(0,r.jsx)(l,{term:"declaration",children:(0,r.jsx)("i",{children:"{declaration}"})}),"* ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"{form}"})}),"*"]}),"\n",(0,r.jsx)(n.p,{children:"\u2192 {result}*"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," (",(0,r.jsx)(n.em,{children:"{"}),"(",(0,r.jsx)(n.em,{children:"name lambda-list"})," [[ ",(0,r.jsx)(n.em,{children:"{local-declaration}"}),"* ",(0,r.jsx)(n.em,{children:"| local-documentation"})," ]] ",(0,r.jsx)(n.em,{children:"{local-form}"}),"*)",(0,r.jsx)(n.em,{children:"}"}),"*) ",(0,r.jsx)(l,{term:"declaration",children:(0,r.jsx)("i",{children:"{declaration}"})}),"* ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"{form}"})}),"*"]}),"\n",(0,r.jsx)(n.p,{children:"\u2192 {result}*"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"function-name"}),"\u2014a ",(0,r.jsx)(n.em,{children:"function name"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"name",children:(0,r.jsx)("i",{children:"name"})}),"\u2014a ",(0,r.jsx)(l,{term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"lambda-list"}),"\u2014a ",(0,r.jsx)(n.em,{children:"lambda list"}),"; for ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," and ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})}),", it is an ",(0,r.jsx)(n.em,{children:"ordinary lambda list"}),"; for ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})}),", it is a ",(0,r.jsx)(n.em,{children:"macro lambda list"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"local-declaration"}),"\u2014a ",(0,r.jsx)(l,{term:"declare",children:(0,r.jsx)("b",{children:"declare"})})," ",(0,r.jsx)(l,{term:"expression",children:(0,r.jsx)("i",{children:"expression"})}),"; not evaluated."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"declaration",children:(0,r.jsx)("i",{children:"declaration"})}),"\u2014a ",(0,r.jsx)(l,{term:"declare",children:(0,r.jsx)("b",{children:"declare"})})," ",(0,r.jsx)(l,{term:"expression",children:(0,r.jsx)("i",{children:"expression"})}),"; not evaluated."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"local-documentation"}),"\u2014a ",(0,r.jsx)(l,{term:"string",children:(0,r.jsx)("i",{children:"string"})}),"; not evaluated."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"local-forms"}),", ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"forms"})}),"\u2014an ",(0,r.jsx)(n.em,{children:"implicit progn"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"results"}),"\u2014the ",(0,r.jsx)(l,{term:"value",children:(0,r.jsx)("i",{children:"values"})})," of the ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"forms"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),", ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})}),", and ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," define local ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," and ",(0,r.jsx)(l,{term:"macro",children:(0,r.jsx)("i",{children:"macros"})}),", and execute ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"forms"})})," using the local definitions. ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"Forms"})})," are executed in order of occurrence."]}),"\n",(0,r.jsxs)(n.p,{children:["The body forms (but not the ",(0,r.jsx)(n.em,{children:"lambda list"}),") of each ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," created by ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," and ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})})," and each ",(0,r.jsx)(l,{term:"macro",children:(0,r.jsx)("i",{children:"macro"})})," created by ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," are enclosed in an ",(0,r.jsx)(n.em,{children:"implicit block"})," whose name is the ",(0,r.jsx)(n.em,{children:"function block name"})," of the ",(0,r.jsx)(n.em,{children:"function-name"})," or ",(0,r.jsx)(l,{term:"name",children:(0,r.jsx)("i",{children:"name"})}),", as appropriate."]}),"\n",(0,r.jsxs)(n.p,{children:["The scope of the ",(0,r.jsx)(l,{term:"declaration",children:(0,r.jsx)("i",{children:"declarations"})})," between the list of local function/macro definitions and the body ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"forms"})})," in ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," and ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})})," does not include the bodies of the locally defined ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})}),", except that"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flet, labels, macrolet"})}),"\n",(0,r.jsxs)(n.p,{children:["for ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})}),", any ",(0,r.jsx)(l,{term:"inline",children:(0,r.jsx)("b",{children:"inline"})}),", ",(0,r.jsx)(l,{term:"notinline",children:(0,r.jsx)("b",{children:"notinline"})}),", or ",(0,r.jsx)(l,{term:"ftype",children:(0,r.jsx)("b",{children:"ftype"})})," declarations that refer to the locally defined functions do apply to the local function bodies. That is, their ",(0,r.jsx)(l,{term:"scope",children:(0,r.jsx)("i",{children:"scope"})})," is the same as the function name that they affect. The scope of these ",(0,r.jsx)(l,{term:"declaration",children:(0,r.jsx)("i",{children:"declarations"})})," does not include the bodies of the macro expander functions defined by ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})}),"."]}),"\n",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," defines locally named ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," and executes a series of ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"forms"})})," with these definition ",(0,r.jsx)(l,{term:"binding",children:(0,r.jsx)("i",{children:"bindings"})}),". Any number of such local ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," can be defined."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(l,{term:"scope",children:(0,r.jsx)("i",{children:"scope"})})," of the name ",(0,r.jsx)(l,{term:"binding",children:(0,r.jsx)("i",{children:"binding"})})," encompasses only the body. Within the body of ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),", ",(0,r.jsx)(n.em,{children:"function-names"})," matching those defined by ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," refer to the locally defined ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," rather than to the global function definitions of the same name. Also, within the scope of ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),", global ",(0,r.jsx)(n.em,{children:"setf expander"})," definitions of the ",(0,r.jsx)(n.em,{children:"function-name"})," defined by ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," do not apply. Note that this applies to (defsetf ",(0,r.jsx)(n.em,{children:"f"})," ...), not (defmethod (setf ",(0,r.jsx)(n.em,{children:"f"}),") ...)."]}),"\n",(0,r.jsxs)(n.p,{children:["The names of ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," defined by ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," are in the ",(0,r.jsx)(n.em,{children:"lexical environment"}),"; they retain their local definitions only within the body of ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),". The function definition bindings are visible only in the body of ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),", not the definitions themselves. Within the function definitions,"]}),"\n",(0,r.jsxs)(n.p,{children:["local function names that match those being defined refer to ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," or ",(0,r.jsx)(l,{term:"macro",children:(0,r.jsx)("i",{children:"macros"})})," defined outside the ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),". ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," can locally ",(0,r.jsx)(l,{term:"shadow",children:(0,r.jsx)("i",{children:"shadow"})})," a global function name, and the new definition can refer to the global definition."]}),"\n",(0,r.jsxs)(n.p,{children:["Any ",(0,r.jsx)(n.em,{children:"local-documentation"})," is attached to the corresponding local ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," (if one is actually created) as a ",(0,r.jsx)(n.em,{children:"documentation string"}),"."]}),"\n",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})})," is equivalent to ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})})," except that the scope of the defined function names for ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})})," encompasses the function definitions themselves as well as the body."]}),"\n",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," establishes local ",(0,r.jsx)(l,{term:"macro",children:(0,r.jsx)("i",{children:"macro"})})," definitions, using the same format used by ",(0,r.jsx)(l,{term:"defmacro",children:(0,r.jsx)("b",{children:"defmacro"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Within the body of ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})}),", global ",(0,r.jsx)(n.em,{children:"setf expander"})," definitions of the ",(0,r.jsx)(l,{term:"name",children:(0,r.jsx)("i",{children:"names"})})," defined by the ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," do not apply; rather, ",(0,r.jsx)(l,{term:"setf",children:(0,r.jsx)("b",{children:"setf"})})," expands the ",(0,r.jsx)(n.em,{children:"macro form"})," and recursively process the resulting ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The macro-expansion functions defined by ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," are defined in the ",(0,r.jsx)(n.em,{children:"lexical environment"})," in which the ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," form appears. Declarations and ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," and ",(0,r.jsx)(l,{term:"symbol-macrolet",children:(0,r.jsx)("b",{children:"symbol-macrolet"})})," definitions affect the local macro definitions in a ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})}),", but the consequences are undefined if the local macro definitions reference any local ",(0,r.jsx)(l,{term:"variable",children:(0,r.jsx)("i",{children:"variable"})})," or ",(0,r.jsx)(n.em,{children:"function bindings"})," that are visible in that ",(0,r.jsx)(n.em,{children:"lexical environment"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Any ",(0,r.jsx)(n.em,{children:"local-documentation"})," is attached to the corresponding local ",(0,r.jsx)(n.em,{children:"macro function"})," as a ",(0,r.jsx)(n.em,{children:"documentation string"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Data and Control"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flet, labels, macrolet"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(defun foo (x flag) \n  (macrolet ((fudge (z) \n\t\t\t\t\t;The parameters x and flag are not accessible \n\t\t\t\t\t; at this point; a reference to flag would be to \n\t\t\t\t\t; the global variable of that name. \n\t       \u2018(if flag (\\* ,z ,z) ,z))) \n\t\t\t\t\t;The parameters x and flag are accessible here. \n    (+ x \n       (fudge x) \n       (fudge (+ x 1))))) \n*\u2261* \n(defun foo (x flag) \n  (+ x \n     (if flag (\\* x x) x) \n     (if flag (\\* (+ x 1) (+ x 1)) (+ x 1)))) \nafter macro expansion. The occurrences of x and flag legitimately refer to the parameters of the function foo because those parameters are visible at the site of the macro call which produced the expansion. \n(flet ((flet1 (n) (+ n n))) \n  (flet ((flet1 (n) (+ 2 (flet1 n)))) \n    (flet1 2))) \u2192 6 \n(defun dummy-function () \u2019top-level) \u2192 DUMMY-FUNCTION \n(funcall #\u2019dummy-function) \u2192 TOP-LEVEL \n(flet ((dummy-function () \u2019shadow)) \n  (funcall #\u2019dummy-function)) \u2192 SHADOW \n(eq (funcall #\u2019dummy-function) (funcall \u2019dummy-function)) \n\u2192 true \n(flet ((dummy-function () \u2019shadow)) \n  (eq (funcall #\u2019dummy-function) \n      (funcall \u2019dummy-function))) \n\u2192 false \n(defun recursive-times (k n) \n  (labels ((temp (n) \n\t     (if (zerop n) 0 (+ k (temp (1- n)))))) \n    (temp n))) \u2192 RECURSIVE-TIMES \n(recursive-times 2 3) \u2192 6 \n(defmacro mlets (x &environment env) \n  (let ((form \u2018(babbit ,x))) \n    (macroexpand form env))) \u2192 MLETS \n\n**flet, labels, macrolet** \n(macrolet ((babbit (z) \u2018(+ ,z ,z))) (mlets 5)) \u2192 10 \n(flet ((safesqrt (x) (sqrt (abs x)))) \n  ;; The safesqrt function is used in two places. \n  (safesqrt (apply #\u2019+ (map \u2019list #\u2019safesqrt \u2019(1 2 3 4 5 6))))) \n\u2192 3.291173 \n(defun integer-power (n k) \n  (declare (integer n)) \n  (declare (type (integer 0 \\*) k)) \n  (labels ((expt0 (x k a) \n\t     (declare (integer x a) (type (integer 0 \\*) k)) \n\t     (cond ((zerop k) a) \n\t\t   ((evenp k) (expt1 (\\* x x) (floor k 2) a)) \n\t\t   (t (expt0 (\\* x x) (floor k 2) (\\* x a))))) \n\t   (expt1 (x k a) \n\t     (declare (integer x a) (type (integer 0 \\*) k)) \n\t     (cond ((evenp k) (expt1 (\\* x x) (floor k 2) a)) \n\t\t   (t (expt0 (\\* x x) (floor k 2) (\\* x a)))))) \n    (expt0 n k 1))) \u2192 INTEGER-POWER \n(defun example (y l) \n  (flet ((attach (x) \n\t   (setq l (append l (list x))))) \n    (declare (inline attach)) \n    (dolist (x y) \n      (unless (null (cdr x)) \n\t(attach x))) \n    l)) \n(example \u2019((a apple apricot) (b banana) (c cherry) (d) (e)) \n\t  \u2019((1) (2) (3) (4 2) (5) (6 3 2))) \n\u2192 ((1) (2) (3) (4 2) (5) (6 3 2) (A APPLE APRICOT) (B BANANA) (C CHERRY)) \n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(l,{term:"declare",children:(0,r.jsx)("b",{children:"declare"})}),", ",(0,r.jsx)(l,{term:"defmacro",children:(0,r.jsx)("b",{children:"defmacro"})}),", ",(0,r.jsx)(l,{term:"defun",children:(0,r.jsx)("b",{children:"defun"})}),", ",(0,r.jsx)(n.strong,{children:"documentation"}),", ",(0,r.jsx)(l,{term:"let",children:(0,r.jsx)("b",{children:"let"})}),", Section 3.1 (Evaluation), Section 3.4.11 (Syntactic Interaction of Documentation Strings and Declarations)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["It is not possible to define recursive ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})})," with ",(0,r.jsx)(l,{term:"flet",children:(0,r.jsx)("b",{children:"flet"})}),". ",(0,r.jsx)(l,{term:"labels",children:(0,r.jsx)("b",{children:"labels"})})," can be used to define mutually recursive ",(0,r.jsx)(l,{term:"function",children:(0,r.jsx)("i",{children:"functions"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If a ",(0,r.jsx)(l,{term:"macrolet",children:(0,r.jsx)("b",{children:"macrolet"})})," ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"form"})})," is a ",(0,r.jsx)(n.em,{children:"top level form"}),", the body ",(0,r.jsx)(l,{term:"form",children:(0,r.jsx)("i",{children:"forms"})})," are also processed as ",(0,r.jsx)(n.em,{children:"top level forms"}),". See Section 3.2.3 (File Compilation)."]}),"\n",(0,r.jsx)(n.p,{children:"Data and Control"})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}const s={title:"flet, labels, macrolet"},d="flet, labels, macrolet",a={id:"chap-5/f-d-dictionary/flet_labels_macrolet_special-operator",title:"flet, labels, macrolet",description:"Expanded Reference: flet, labels, macrolet",source:"@site/docs/chap-5/f-d-dictionary/flet_labels_macrolet_special-operator.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/flet_labels_macrolet_special-operator",permalink:"/cl-language-reference/chap-5/f-d-dictionary/flet_labels_macrolet_special-operator",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/flet_labels_macrolet_special-operator.md",tags:[],version:"current",frontMatter:{title:"flet, labels, macrolet"},sidebar:"tutorialSidebar",previous:{title:"fdefinition",permalink:"/cl-language-reference/chap-5/f-d-dictionary/fdefinition_accessor"},next:{title:"fmakunbound",permalink:"/cl-language-reference/chap-5/f-d-dictionary/fmakunbound_function"}},o={},h=[{value:"Expanded Reference: flet, labels, macrolet",id:"expanded-reference-flet-labels-macrolet",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"flet-labels-macrolet",children:"flet, labels, macrolet"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-flet-labels-macrolet",children:"Expanded Reference: flet, labels, macrolet"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(flet, labels, macrolet )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,l)=>{l.d(n,{Z:()=>s,a:()=>c});var r=l(67294);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);