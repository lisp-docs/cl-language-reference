"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[68720],{14676:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>d,toc:()=>m});var s=r(85893),i=r(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rename-file"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rename-file"})," ",(0,s.jsx)(n.em,{children:"filespec new-name \u2192 defaulted-new-name, old-truename, new-truename"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"filespec"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"new-name"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname designator"})," other than a ",(0,s.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"defaulted-new-name"}),"\u2014a ",(0,s.jsx)(n.em,{children:"pathname"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"old-truename"}),"\u2014a ",(0,s.jsx)(n.em,{children:"physical pathname"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"new-truename"}),"\u2014a ",(0,s.jsx)(n.em,{children:"physical pathname"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rename-file"})," modifies the file system in such a way that the file indicated by ",(0,s.jsx)(n.em,{children:"filespec"})," is renamed to ",(0,s.jsx)(n.em,{children:"defaulted-new-name"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["It is an error to specify a filename containing a ",(0,s.jsx)(n.em,{children:"wild"})," component, for ",(0,s.jsx)(n.em,{children:"filespec"})," to contain a ",(0,s.jsx)(n.strong,{children:"nil"})," component where the file system does not permit a ",(0,s.jsx)(n.strong,{children:"nil"})," component, or for the result of defaulting missing components of ",(0,s.jsx)(n.em,{children:"new-name"})," from ",(0,s.jsx)(n.em,{children:"filespec"})," to contain a ",(0,s.jsx)(n.strong,{children:"nil"})," component where the file system does not permit a ",(0,s.jsx)(n.strong,{children:"nil"})," component."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"new-name"})," is a ",(0,s.jsx)(n.em,{children:"logical pathname"}),", ",(0,s.jsx)(n.strong,{children:"rename-file"})," returns a ",(0,s.jsx)(n.em,{children:"logical pathname"})," as its ",(0,s.jsx)(n.em,{children:"primary value"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rename-file"})," returns three values if successful. The ",(0,s.jsx)(n.em,{children:"primary value"}),", ",(0,s.jsx)(n.em,{children:"defaulted-new-name"}),", is the resulting name which is composed of ",(0,s.jsx)(n.em,{children:"new-name"})," with any missing components filled in by performing a ",(0,s.jsx)(n.strong,{children:"merge-pathnames"})," operation using ",(0,s.jsx)(n.em,{children:"filespec"})," as the defaults. The ",(0,s.jsx)(n.em,{children:"secondary value"}),", ",(0,s.jsx)(n.em,{children:"old-truename"}),", is the ",(0,s.jsx)(n.em,{children:"truename"})," of the ",(0,s.jsx)(n.em,{children:"file"})," before it was renamed. The ",(0,s.jsx)(n.em,{children:"tertiary value"}),", ",(0,s.jsx)(n.em,{children:"new-truename"}),", is the ",(0,s.jsx)(n.em,{children:"truename"})," of the ",(0,s.jsx)(n.em,{children:"file"})," after it was renamed."]}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.em,{children:"filespec designator"})," is an open ",(0,s.jsx)(n.em,{children:"stream"}),", then the ",(0,s.jsx)(n.em,{children:"stream"})," itself and the file associated with it are affected (if the ",(0,s.jsx)(n.em,{children:"file system"})," permits)."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:';; An example involving logical pathnames. \n(with-open-file (stream "sys:chemistry;lead.text" \n\t\t\t:direction :output :if-exists :error) \n  (princ "eureka" stream) \n  (values (pathname stream) (truename stream))) \n\u2192 #P"SYS:CHEMISTRY;LEAD.TEXT.NEWEST", #P"Q:>sys>chem>lead.text.1" \n(rename-file "sys:chemistry;lead.text" "gold.text") \n\u2192 #P"SYS:CHEMISTRY;GOLD.TEXT.NEWEST", \n#P"Q:>sys>chem>lead.text.1", \n#P"Q:>sys>chem>gold.text.1" \n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["If the renaming operation is not successful, an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"file-error"})," is signaled."]}),"\n",(0,s.jsxs)(n.p,{children:["An error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"file-error"})," might be signaled if ",(0,s.jsx)(n.em,{children:"filespec"})," is ",(0,s.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"truename"}),", ",(0,s.jsx)(n.strong,{children:"pathname"}),", ",(0,s.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}const c={},l="rename-file",d={id:"chap-20/ca-c-dictionary/renamefile",title:"rename-file",description:"Expanded Reference: rename-file",source:"@site/docs/chap-20/ca-c-dictionary/renamefile.md",sourceDirName:"chap-20/ca-c-dictionary",slug:"/chap-20/ca-c-dictionary/renamefile",permalink:"/cl-language-reference/docs/chap-20/ca-c-dictionary/renamefile",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-20/ca-c-dictionary/renamefile.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"probe-file",permalink:"/cl-language-reference/docs/chap-20/ca-c-dictionary/probefile"},next:{title:"truename",permalink:"/cl-language-reference/docs/chap-20/ca-c-dictionary/truename"}},o={},m=[{value:"Expanded Reference: rename-file",id:"expanded-reference-rename-file",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"rename-file",children:"rename-file"}),"\n","\n","\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-rename-file",children:"Expanded Reference: rename-file"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(rename-file )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>a});var s=r(67294);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);