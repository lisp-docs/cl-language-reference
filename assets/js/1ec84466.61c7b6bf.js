"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[26919],{59766:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>h});var s=r(85893),i=r(11151);const t={title:"E",sidebar_position:101},a=void 0,c={id:"chap-26/cg-b-glossary/e",title:"E",description:"E",source:"@site/docs/chap-26/cg-b-glossary/e.md",sourceDirName:"chap-26/cg-b-glossary",slug:"/chap-26/cg-b-glossary/e",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/e",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/cg-b-glossary/e.md",tags:[],version:"current",sidebarPosition:101,frontMatter:{title:"E",sidebar_position:101},sidebar:"tutorialSidebar",previous:{title:"D",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/d"},next:{title:"F",permalink:"/cl-language-reference/docs/chap-26/cg-b-glossary/f"}},l={},h=[];function o(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"E"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"echo stream"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"stream"})," of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"echo-stream"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"effective method"})," ",(0,s.jsx)(n.em,{children:"n."})," the combination of ",(0,s.jsx)(n.em,{children:"applicable methods"})," that are executed when a ",(0,s.jsx)(n.em,{children:"generic function"})," is invoked with a particular sequence of ",(0,s.jsx)(n.em,{children:"arguments"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"element"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. (of a ",(0,s.jsx)(n.em,{children:"list"}),") an ",(0,s.jsx)(n.em,{children:"object"})," that is the ",(0,s.jsx)(n.em,{children:"car"})," of one of the ",(0,s.jsx)(n.em,{children:"conses"})," that comprise the ",(0,s.jsx)(n.em,{children:"list"}),". 2. (of an ",(0,s.jsx)(n.em,{children:"array"}),") an ",(0,s.jsx)(n.em,{children:"object"})," that is stored in the ",(0,s.jsx)(n.em,{children:"array"}),". 3. (of a ",(0,s.jsx)(n.em,{children:"sequence"}),") an ",(0,s.jsx)(n.em,{children:"object"})," that is an ",(0,s.jsx)(n.em,{children:"element"})," of the ",(0,s.jsx)(n.em,{children:"list"})," or ",(0,s.jsx)(n.em,{children:"array"})," that is the ",(0,s.jsx)(n.em,{children:"sequence"}),". 4. (of a ",(0,s.jsx)(n.em,{children:"type"}),") an ",(0,s.jsx)(n.em,{children:"object"})," that is a member of the set of ",(0,s.jsx)(n.em,{children:"objects"})," designated by the ",(0,s.jsx)(n.em,{children:"type"}),". 5. (of an ",(0,s.jsx)(n.em,{children:"input"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"stream"}),") a ",(0,s.jsx)(n.em,{children:"character"})," or ",(0,s.jsx)(n.em,{children:"number"})," (as appropriate to the ",(0,s.jsx)(n.em,{children:"element type"})," of the ",(0,s.jsx)(n.em,{children:"stream"}),") that is among the ordered series of ",(0,s.jsx)(n.em,{children:"objects"})," that can be read from the ",(0,s.jsx)(n.em,{children:"stream"})," (using ",(0,s.jsx)(n.strong,{children:"read-char"})," or ",(0,s.jsx)(n.strong,{children:"read-byte"}),", as appropriate to the ",(0,s.jsx)(n.em,{children:"stream"}),"). 6. (of an ",(0,s.jsx)(n.em,{children:"output stream"}),") a"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"character"})," or ",(0,s.jsx)(n.em,{children:"number"})," (as appropriate to the ",(0,s.jsx)(n.em,{children:"element type"})," of the ",(0,s.jsx)(n.em,{children:"stream"}),") that is among the ordered series of ",(0,s.jsx)(n.em,{children:"objects"})," that has been or will be written to the ",(0,s.jsx)(n.em,{children:"stream"})," (using ",(0,s.jsx)(n.strong,{children:"write-char"})," or ",(0,s.jsx)(n.strong,{children:"write-byte"}),", as appropriate to the ",(0,s.jsx)(n.em,{children:"stream"}),"). 7. (of a ",(0,s.jsx)(n.em,{children:"class"}),") a ",(0,s.jsx)(n.em,{children:"generalized instance"})," of the ",(0,s.jsx)(n.em,{children:"class"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"element type"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. (of an ",(0,s.jsx)(n.em,{children:"array"}),") the ",(0,s.jsx)(n.em,{children:"array element type"})," of the ",(0,s.jsx)(n.em,{children:"array"}),". 2. (of a ",(0,s.jsx)(n.em,{children:"stream"}),") the ",(0,s.jsx)(n.em,{children:"stream element type"})," of the ",(0,s.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"em"})," ",(0,s.jsx)(n.em,{children:"n. Trad."})," a context-dependent unit of measure commonly used in typesetting, equal to the displayed width of of a letter \u201cM\u201d in the current font. (The letter \u201cM\u201d is traditionally chosen because it is typically represented by the widest ",(0,s.jsx)(n.em,{children:"glyph"})," in the font, and other characters\u2019 widths are typically fractions of an ",(0,s.jsx)(n.em,{children:"em"}),". In implementations providing non-Roman characters with wider characters than \u201cM,\u201d it is permissible for another character to be the ",(0,s.jsx)(n.em,{children:"implementation-defined"})," reference character for this measure, and for \u201cM\u201d to be only a fraction of an ",(0,s.jsx)(n.em,{children:"em"})," wide.) In a fixed width font, a line with ",(0,s.jsx)(n.em,{children:"n"})," characters is ",(0,s.jsx)(n.em,{children:"n ems"})," wide; in a variable width font, ",(0,s.jsx)(n.em,{children:"n ems"})," is the expected upper bound on the width of such a line."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"empty list"})," ",(0,s.jsx)(n.em,{children:"n."})," the ",(0,s.jsx)(n.em,{children:"list"})," containing no ",(0,s.jsx)(n.em,{children:"elements"}),". See ",(0,s.jsx)(n.em,{children:"()"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"empty type"})," ",(0,s.jsx)(n.em,{children:"n."})," the ",(0,s.jsx)(n.em,{children:"type"})," that contains no ",(0,s.jsx)(n.em,{children:"elements"}),", and that is a ",(0,s.jsx)(n.em,{children:"subtype"})," of all ",(0,s.jsx)(n.em,{children:"types"})," (including itself). See ",(0,s.jsx)(n.em,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"end of file"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. the point in an ",(0,s.jsx)(n.em,{children:"input stream"})," beyond which there is no further data. Whether or not there is such a point on an ",(0,s.jsx)(n.em,{children:"interactive stream"})," is ",(0,s.jsx)(n.em,{children:"implementation defined"}),". 2. a ",(0,s.jsx)(n.em,{children:"situation"})," that occurs upon an attempt to obtain data from an ",(0,s.jsx)(n.em,{children:"input stream"})," that is at the ",(0,s.jsx)(n.em,{children:"end of file"}),(0,s.jsx)("sub",{children:"1"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"environment"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. a set of ",(0,s.jsx)(n.em,{children:"bindings"}),". See Section 3.1.1 (Introduction to Environments). 2. an ",(0,s.jsx)(n.em,{children:"environment object"}),". \u201c",(0,s.jsx)(n.strong,{children:"macroexpand"})," takes an optional environment argument.\u201d"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"environment object"})," ",(0,s.jsx)(n.em,{children:"n."})," an ",(0,s.jsx)(n.em,{children:"object"})," representing a set of ",(0,s.jsx)(n.em,{children:"lexical bindings"}),", used in the processing of a ",(0,s.jsx)(n.em,{children:"form"})," to provide meanings for ",(0,s.jsx)(n.em,{children:"names"})," within that ",(0,s.jsx)(n.em,{children:"form"}),". \u201c",(0,s.jsx)(n.strong,{children:"macroexpand"})," takes an optional environment argument.\u201d (The ",(0,s.jsx)(n.em,{children:"object"})," ",(0,s.jsx)(n.strong,{children:"nil"})," when used as an ",(0,s.jsx)(n.em,{children:"environment object"})," denotes the ",(0,s.jsx)(n.em,{children:"null lexical environment"}),"; the ",(0,s.jsx)(n.em,{children:"values"})," of ",(0,s.jsx)(n.em,{children:"environment parameters"})," to ",(0,s.jsx)(n.em,{children:"macro functions"})," are ",(0,s.jsx)(n.em,{children:"objects"})," of ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," nature which represent the ",(0,s.jsx)(n.em,{children:"environment"}),(0,s.jsx)("sub",{children:"1"})," in which the corresponding ",(0,s.jsx)(n.em,{children:"macro form"})," is to be expanded.) See Section 3.1.1.4 (Environment Objects)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"environment parameter"})," ",(0,s.jsx)(n.em,{children:"n."})," A ",(0,s.jsx)(n.em,{children:"parameter"})," in a ",(0,s.jsx)(n.em,{children:"defining form f"})," for which there is no corresponding ",(0,s.jsx)(n.em,{children:"argument"}),"; instead, this ",(0,s.jsx)(n.em,{children:"parameter"})," receives as its value an ",(0,s.jsx)(n.em,{children:"environment object"})," which corresponds to the ",(0,s.jsx)(n.em,{children:"lexical environment"})," in which the ",(0,s.jsx)(n.em,{children:"defining form f"})," appeared."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"error"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. (only in the phrase \u201cis an error\u201d) a ",(0,s.jsx)(n.em,{children:"situation"})," in which the semantics of a program are not specified, and in which the consequences are undefined. 2. a ",(0,s.jsx)(n.em,{children:"condition"})," which represents an ",(0,s.jsx)(n.em,{children:"error situation"}),". See Section 1.4.2 (Error Terminology). 3. an ",(0,s.jsx)(n.em,{children:"object"})," of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"error"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"error output"})," ",(0,s.jsx)(n.em,{children:"n."})," the ",(0,s.jsx)(n.em,{children:"output stream"})," which is the ",(0,s.jsx)(n.em,{children:"value"})," of the ",(0,s.jsx)(n.em,{children:"dynamic variable"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"*error-output*"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"escape"})," ",(0,s.jsx)(n.em,{children:"n."}),", ",(0,s.jsx)(n.em,{children:"adj."})," 1. ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"single escape"})," or a ",(0,s.jsx)(n.em,{children:"multiple escape"}),". 2. ",(0,s.jsx)(n.em,{children:"adj. single escape"})," or ",(0,s.jsx)(n.em,{children:"multiple escape"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"establish"})," ",(0,s.jsx)(n.em,{children:"v.t."})," to build or bring into being a ",(0,s.jsx)(n.em,{children:"binding"}),", a ",(0,s.jsx)(n.em,{children:"declaration"}),", an ",(0,s.jsx)(n.em,{children:"exit point"}),", a ",(0,s.jsx)(n.em,{children:"tag"}),", a ",(0,s.jsx)(n.em,{children:"handler"})," , a ",(0,s.jsx)(n.em,{children:"restart"}),", or an ",(0,s.jsx)(n.em,{children:"environment"}),". \u201c",(0,s.jsx)(n.strong,{children:"let"})," establishes lexical bindings.\u201d"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"evaluate"})," ",(0,s.jsx)(n.em,{children:"v.t."})," (a ",(0,s.jsx)(n.em,{children:"form"})," or an ",(0,s.jsx)(n.em,{children:"implicit progn"}),") to ",(0,s.jsx)(n.em,{children:"execute"})," the ",(0,s.jsx)(n.em,{children:"code"})," represented by the ",(0,s.jsx)(n.em,{children:"form"})," (or the series of ",(0,s.jsx)(n.em,{children:"forms"})," making up the ",(0,s.jsx)(n.em,{children:"implicit progn"}),") by applying the rules of ",(0,s.jsx)(n.em,{children:"evaluation"}),", returning zero or more values."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"evaluation"})," ",(0,s.jsx)(n.em,{children:"n."})," a model whereby ",(0,s.jsx)(n.em,{children:"forms"})," are ",(0,s.jsx)(n.em,{children:"executed"}),", returning zero or more values. Such execution might be implemented directly in one step by an interpreter or in two steps by first ",(0,s.jsx)(n.em,{children:"compiling"})," the ",(0,s.jsx)(n.em,{children:"form"})," and then ",(0,s.jsx)(n.em,{children:"executing"})," the ",(0,s.jsx)(n.em,{children:"compiled code"}),"; this choice is dependent both on context and the nature of the ",(0,s.jsx)(n.em,{children:"implementation"}),", but in any case is not in general detectable by any program. The evaluation model is designed in such a way that a ",(0,s.jsx)(n.em,{children:"conforming implementation"})," might legitimately have only a compiler and no interpreter, or vice versa. See Section 3.1.2 (The Evaluation Model)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"evaluation environment"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"run-time environment"})," in which macro expanders and code specified by ",(0,s.jsx)(n.strong,{children:"eval-when"})," to be evaluated are evaluated. All evaluations initiated by the ",(0,s.jsx)(n.em,{children:"compiler"})," take place in the ",(0,s.jsx)(n.em,{children:"evaluation environment"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"execute"})," ",(0,s.jsx)(n.em,{children:"v.t. Trad."})," (",(0,s.jsx)(n.em,{children:"code"}),") to perform the imperative actions represented by the ",(0,s.jsx)(n.em,{children:"code"}),". ",(0,s.jsx)(n.strong,{children:"execution time"})," ",(0,s.jsx)(n.em,{children:"n."})," the duration of time that ",(0,s.jsx)(n.em,{children:"compiled code"})," is being ",(0,s.jsx)(n.em,{children:"executed"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"exhaustive partition"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"type"}),") a set of ",(0,s.jsx)(n.em,{children:"pairwise disjoint types"})," that form an ",(0,s.jsx)(n.em,{children:"exhaustive union"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"exhaustive union"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"type"}),") a set of ",(0,s.jsx)(n.em,{children:"subtypes"})," of the ",(0,s.jsx)(n.em,{children:"type"}),", whose union contains all ",(0,s.jsx)(n.em,{children:"elements"})," of that ",(0,s.jsx)(n.em,{children:"type"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"exit point"})," ",(0,s.jsx)(n.em,{children:"n."})," a point in a ",(0,s.jsx)(n.em,{children:"control form"})," from which (",(0,s.jsx)(n.em,{children:"e.g."}),", ",(0,s.jsx)(n.strong,{children:"block"}),"), through which (",(0,s.jsx)(n.em,{children:"e.g."}),", ",(0,s.jsx)(n.strong,{children:"unwind-protect"}),"), or to which (",(0,s.jsx)(n.em,{children:"e.g."}),", ",(0,s.jsx)(n.strong,{children:"tagbody"}),") control and possibly ",(0,s.jsx)(n.em,{children:"values"})," can be transferred both actively by using another ",(0,s.jsx)(n.em,{children:"control form"})," and passively through the normal control and data flow of ",(0,s.jsx)(n.em,{children:"evaluation"}),". \u201c",(0,s.jsx)(n.strong,{children:"catch"})," and ",(0,s.jsx)(n.strong,{children:"block"})," establish bindings for exit points to which ",(0,s.jsx)(n.strong,{children:"throw"})," and ",(0,s.jsx)(n.strong,{children:"return-from"}),", respectively, can transfer control and values; ",(0,s.jsx)(n.strong,{children:"tagbody"})," establishes a binding for an exit point with lexical extent to which ",(0,s.jsx)(n.strong,{children:"go"})," can transfer control; and ",(0,s.jsx)(n.strong,{children:"unwind-protect"})," establishes an exit point through which control might be transferred by operators such as ",(0,s.jsx)(n.strong,{children:"throw"}),", ",(0,s.jsx)(n.strong,{children:"return-from"}),", and ",(0,s.jsx)(n.strong,{children:"go"}),".\u201d"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"explicit return"})," ",(0,s.jsx)(n.em,{children:"n."})," the act of transferring control (and possibly ",(0,s.jsx)(n.em,{children:"values"}),") to a ",(0,s.jsx)(n.em,{children:"block"})," by using ",(0,s.jsx)(n.strong,{children:"return-from"})," (or ",(0,s.jsx)(n.strong,{children:"return"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"explicit use"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"variable V"})," in a ",(0,s.jsx)(n.em,{children:"form F"}),") a reference to ",(0,s.jsx)(n.em,{children:"V"})," that is directly apparent in the normal semantics of ",(0,s.jsx)(n.em,{children:"F"}),"; ",(0,s.jsx)(n.em,{children:"i.e."}),", that does not expose any undocumented details of the ",(0,s.jsx)(n.em,{children:"macro expansion"})," of the ",(0,s.jsx)(n.em,{children:"form"})," itself. References to ",(0,s.jsx)(n.em,{children:"V"})," exposed by expanding ",(0,s.jsx)(n.em,{children:"subforms"})," of ",(0,s.jsx)(n.em,{children:"F"})," are, however, considered to be ",(0,s.jsx)(n.em,{children:"explicit uses"})," of ",(0,s.jsx)(n.em,{children:"V"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"exponent marker"})," ",(0,s.jsx)(n.em,{children:"n."})," a character that is used in the textual notation for a ",(0,s.jsx)(n.em,{children:"float"})," to separate the mantissa from the exponent. The characters defined as ",(0,s.jsx)(n.em,{children:"exponent markers"})," in the ",(0,s.jsx)(n.em,{children:"standard readtable"})," are shown in Figure 26\u20131. For more information, see Section 2.1 (Character Syntax). \u201cThe exponent marker \u2018d\u2019 in \u20183.0d7\u2019 indicates that this"]}),"\n",(0,s.jsx)(n.p,{children:"number is to be represented as a double float.\u201d"}),"\n",(0,s.jsxs)(n.p,{children:["|",(0,s.jsx)(n.strong,{children:"Marker Meaning"}),"|"]}),"\n",(0,s.jsx)(n.p,{children:"| :- |"}),"\n",(0,s.jsxs)(n.p,{children:["|",(0,s.jsxs)("p",{children:["D or d ",(0,s.jsx)(n.strong,{children:"double-float"})," "]}),(0,s.jsxs)("p",{children:["E or e ",(0,s.jsx)(n.strong,{children:"float"})," (see ",(0,s.jsx)(n.strong,{children:"*read-default-float-format*"}),") "]}),(0,s.jsxs)("p",{children:["F or f ",(0,s.jsx)(n.strong,{children:"single-float"})," "]}),(0,s.jsxs)("p",{children:["L or l ",(0,s.jsx)(n.strong,{children:"long-float"})," "]}),(0,s.jsxs)("p",{children:["S or s ",(0,s.jsx)(n.strong,{children:"short-float"})]}),"|"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Figure 26\u20131. Exponent Markers"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"export"})," ",(0,s.jsx)(n.em,{children:"v.t."})," (a ",(0,s.jsx)(n.em,{children:"symbol"})," in a ",(0,s.jsx)(n.em,{children:"package"}),") to add the ",(0,s.jsx)(n.em,{children:"symbol"})," to the list of ",(0,s.jsx)(n.em,{children:"external symbols"})," of the ",(0,s.jsx)(n.em,{children:"package"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"exported"})," ",(0,s.jsx)(n.em,{children:"adj."})," (of a ",(0,s.jsx)(n.em,{children:"symbol"})," in a ",(0,s.jsx)(n.em,{children:"package"}),") being an ",(0,s.jsx)(n.em,{children:"external symbol"})," of the ",(0,s.jsx)(n.em,{children:"package"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"expressed adjustability"})," ",(0,s.jsx)(n.em,{children:"n."})," (of an ",(0,s.jsx)(n.em,{children:"array"}),") a ",(0,s.jsx)(n.em,{children:"generalized boolean"})," that is conceptually (but not necessarily actually) associated with the ",(0,s.jsx)(n.em,{children:"array"}),", representing whether the ",(0,s.jsx)(n.em,{children:"array"})," is ",(0,s.jsx)(n.em,{children:"expressly adjustable"}),". See also ",(0,s.jsx)(n.em,{children:"actual adjustability"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"expressed array element type"})," ",(0,s.jsx)(n.em,{children:"n."})," (of an ",(0,s.jsx)(n.em,{children:"array"}),") the ",(0,s.jsx)(n.em,{children:"type"})," which is the ",(0,s.jsx)(n.em,{children:"array element type"})," implied by a ",(0,s.jsx)(n.em,{children:"type declaration"})," for the ",(0,s.jsx)(n.em,{children:"array"}),", or which is the requested ",(0,s.jsx)(n.em,{children:"array"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"element type"})," at its time of creation, prior to any selection of an ",(0,s.jsx)(n.em,{children:"upgraded array element type"}),". (Common Lisp does not provide a way of detecting this ",(0,s.jsx)(n.em,{children:"type"})," directly at run time, but an ",(0,s.jsx)(n.em,{children:"implementation"})," is permitted to make assumptions about the ",(0,s.jsx)(n.em,{children:"array"}),"\u2019s contents and the operations which may be performed on the ",(0,s.jsx)(n.em,{children:"array"})," when this ",(0,s.jsx)(n.em,{children:"type"})," is noted during code analysis, even if those assumptions would not be valid in general for the ",(0,s.jsx)(n.em,{children:"upgraded array element type"})," of the ",(0,s.jsx)(n.em,{children:"expressed array element type"}),".)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"expressed complex part type"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"complex"})," ) the ",(0,s.jsx)(n.em,{children:"type"})," which is implied as the ",(0,s.jsx)(n.em,{children:"complex part type"})," by a ",(0,s.jsx)(n.em,{children:"type declaration"})," for the ",(0,s.jsx)(n.em,{children:"complex"})," , or which is the requested ",(0,s.jsx)(n.em,{children:"complex part type"})," at its time of creation, prior to any selection of an ",(0,s.jsx)(n.em,{children:"upgraded complex part type"}),". (Common Lisp does not provide a way of detecting this ",(0,s.jsx)(n.em,{children:"type"})," directly at run time, but an ",(0,s.jsx)(n.em,{children:"implementation"})," is permitted to make assumptions about the operations which may be performed on the ",(0,s.jsx)(n.em,{children:"complex"})," when this ",(0,s.jsx)(n.em,{children:"type"})," is noted during code analysis, even if those assumptions would not be valid in general for the ",(0,s.jsx)(n.em,{children:"upgraded complex part type"})," of the ",(0,s.jsx)(n.em,{children:"expressed complex part type"}),".)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"expression"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. an ",(0,s.jsx)(n.em,{children:"object"}),", often used to emphasize the use of the ",(0,s.jsx)(n.em,{children:"object"})," to encode or represent information in a specialized format, such as program text. \u201cThe second expression in a ",(0,s.jsx)(n.strong,{children:"let"})," form is a list of bindings.\u201d 2. the textual notation used to notate an ",(0,s.jsx)(n.em,{children:"object"})," in a source file. \u201cThe expression \u2019sample is equivalent to (quote sample).\u201d"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"expressly adjustable"})," ",(0,s.jsx)(n.em,{children:"adj."})," (of an ",(0,s.jsx)(n.em,{children:"array"}),") being ",(0,s.jsx)(n.em,{children:"actually adjustable"})," by virtue of an explicit request for this characteristic having been made at the time of its creation. All ",(0,s.jsx)(n.em,{children:"arrays"})," that are ",(0,s.jsx)(n.em,{children:"expressly adjustable"})," are ",(0,s.jsx)(n.em,{children:"actually adjustable"}),", but not necessarily vice versa."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"extended character"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"character"})," of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"extended-char"}),": a ",(0,s.jsx)(n.em,{children:"character"})," that is not a ",(0,s.jsx)(n.em,{children:"base character"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"extended function designator"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"designator"})," for a ",(0,s.jsx)(n.em,{children:"function"}),"; that is, an ",(0,s.jsx)(n.em,{children:"object"})," that denotes a ",(0,s.jsx)(n.em,{children:"function"})," and that is one of: a ",(0,s.jsx)(n.em,{children:"function name"})," (denoting the ",(0,s.jsx)(n.em,{children:"function"})," it names in the ",(0,s.jsx)(n.em,{children:"global environment"}),"), or a ",(0,s.jsx)(n.em,{children:"function"})," (denoting itself). The consequences are undefined if a ",(0,s.jsx)(n.em,{children:"function name"})," is used as an ",(0,s.jsx)(n.em,{children:"extended function designator"})," but it does not have a global definition as a ",(0,s.jsx)(n.em,{children:"function"}),", or if it is a ",(0,s.jsx)(n.em,{children:"symbol"})," that has a global definition as a ",(0,s.jsx)(n.em,{children:"macro"})," or a ",(0,s.jsx)(n.em,{children:"special form"}),". See also ",(0,s.jsx)(n.em,{children:"function designator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"extended lambda list"})," ",(0,s.jsx)(n.em,{children:"n."})," a list resembling an ",(0,s.jsx)(n.em,{children:"ordinary lambda list"})," in form and"]}),"\n",(0,s.jsxs)(n.p,{children:["purpose, but offering additional syntax or functionality not available in an ",(0,s.jsx)(n.em,{children:"ordinary lambda list"}),". \u201c",(0,s.jsx)(n.strong,{children:"defmacro"})," uses extended lambda lists.\u201d"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"extension"})," ",(0,s.jsx)(n.em,{children:"n."})," a facility in an ",(0,s.jsx)(n.em,{children:"implementation"})," of Common Lisp that is not specified by this standard."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"extent"})," ",(0,s.jsx)(n.em,{children:"n."})," the interval of time during which a ",(0,s.jsx)(n.em,{children:"reference"})," to an ",(0,s.jsx)(n.em,{children:"object"}),", a ",(0,s.jsx)(n.em,{children:"binding"}),", an ",(0,s.jsx)(n.em,{children:"exit point"}),", a ",(0,s.jsx)(n.em,{children:"tag"}),", a ",(0,s.jsx)(n.em,{children:"handler"})," , a ",(0,s.jsx)(n.em,{children:"restart"}),", or an ",(0,s.jsx)(n.em,{children:"environment"})," is defined."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"external file format"})," ",(0,s.jsx)(n.em,{children:"n."})," an ",(0,s.jsx)(n.em,{children:"object"})," of ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," nature which"]}),"\n",(0,s.jsxs)(n.p,{children:["determines one of possibly several ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," ways in which ",(0,s.jsx)(n.em,{children:"characters"})," are encoded externally in a ",(0,s.jsx)(n.em,{children:"character file"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"external file format designator"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"designator"})," for an ",(0,s.jsx)(n.em,{children:"external file format"}),"; that is, an ",(0,s.jsx)(n.em,{children:"object"})," that denotes an ",(0,s.jsx)(n.em,{children:"external file format"})," and that is one of: the ",(0,s.jsx)(n.em,{children:"symbol"})]}),"\n",(0,s.jsxs)(n.p,{children:[":default"," (denoting an ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," default ",(0,s.jsx)(n.em,{children:"external file format"})," that can accomodate at least the ",(0,s.jsx)(n.em,{children:"base characters"}),"), some other ",(0,s.jsx)(n.em,{children:"object"})," defined by the"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"implementation"})," to be an ",(0,s.jsx)(n.em,{children:"external file format designator"})," (denoting an ",(0,s.jsx)(n.em,{children:"implementation defined external file format"}),"), or some other ",(0,s.jsx)(n.em,{children:"object"})," defined by the ",(0,s.jsx)(n.em,{children:"implementation"})," to be an ",(0,s.jsx)(n.em,{children:"external file format"})," (denoting itself)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"external symbol"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"package"}),") a ",(0,s.jsx)(n.em,{children:"symbol"})," that is part of the \u2018external interface\u2019 to the ",(0,s.jsx)(n.em,{children:"package"})," and that are ",(0,s.jsx)(n.em,{children:"inherited"})," ",(0,s.jsx)("sub",{children:"3"})," by any other ",(0,s.jsx)(n.em,{children:"package"})," that ",(0,s.jsx)(n.em,{children:"uses"})," the ",(0,s.jsx)(n.em,{children:"package"}),". When using the ",(0,s.jsx)(n.em,{children:"Lisp reader"})," , if a ",(0,s.jsx)(n.em,{children:"package prefix"})," is used, the ",(0,s.jsx)(n.em,{children:"name"})," of an ",(0,s.jsx)(n.em,{children:"external symbol"})," is separated from the ",(0,s.jsx)(n.em,{children:"package name"})," by a single ",(0,s.jsx)(n.em,{children:"package marker"})," while the ",(0,s.jsx)(n.em,{children:"name"})," of an ",(0,s.jsx)(n.em,{children:"internal symbol"})," is separated from the ",(0,s.jsx)(n.em,{children:"package name"})," by a double ",(0,s.jsx)(n.em,{children:"package marker"})," ; see Section 2.3.4 (Symbols as Tokens)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"externalizable object"})," ",(0,s.jsx)(n.em,{children:"n."})," an ",(0,s.jsx)(n.em,{children:"object"})," that can be used as a ",(0,s.jsx)(n.em,{children:"literal object"})," in ",(0,s.jsx)(n.em,{children:"code"})," to be processed by the ",(0,s.jsx)(n.em,{children:"file compiler"})," ."]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>a});var s=r(67294);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);