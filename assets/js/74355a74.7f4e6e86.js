"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[39432],{50298:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var t=a(85893),i=a(11151);function r(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"wild-pathname-p"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"wild-pathname-p"})," ",(0,t.jsx)(n.em,{children:"pathname"})," &optional ",(0,t.jsx)(n.em,{children:"field-key \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"pathname"}),"\u2014a ",(0,t.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Field-key"}),"\u2014one of ",":host",", ",":device"," ",":directory",", ",":name",", ",":type",", ",":version",", or ",(0,t.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"wild-pathname-p"})," tests ",(0,t.jsx)(n.em,{children:"pathname"})," for the presence of wildcard components."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"pathname"})," is a ",(0,t.jsx)(n.em,{children:"pathname"})," (as returned by ",(0,t.jsx)(n.strong,{children:"pathname"}),") it represents the name used to open the file. This may be, but is not required to be, the actual name of the file."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"field-key"})," is not supplied or ",(0,t.jsx)(n.strong,{children:"nil"}),", ",(0,t.jsx)(n.strong,{children:"wild-pathname-p"})," returns true if ",(0,t.jsx)(n.em,{children:"pathname"})," has any wildcard components, ",(0,t.jsx)(n.strong,{children:"nil"})," if ",(0,t.jsx)(n.em,{children:"pathname"})," has none. If ",(0,t.jsx)(n.em,{children:"field-key"})," is ",(0,t.jsx)(n.em,{children:"non-nil"}),", ",(0,t.jsx)(n.strong,{children:"wild-pathname-p"})," returns true if the indicated component of ",(0,t.jsx)(n.em,{children:"pathname"})," is a wildcard, ",(0,t.jsx)(n.strong,{children:"nil"})," if the component is not a wildcard."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:';;;The following examples are not portable. They are written to run \n;;;with particular file systems and particular wildcard conventions. \n;;;Other implementations will behave differently. These examples are \n;;;intended to be illustrative, not to be prescriptive. \n(wild-pathname-p (make-pathname :name :wild)) \u2192 true \n(wild-pathname-p (make-pathname :name :wild) :name) \u2192 true \n(wild-pathname-p (make-pathname :name :wild) :type) \u2192 false \n(wild-pathname-p (pathname "s:>foo>\\*\\*>")) \u2192 true ;Lispm \n(wild-pathname-p (pathname :name "F\\*O")) \u2192 true ;Most places \n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"pathname"})," is not a ",(0,t.jsx)(n.em,{children:"pathname"}),", a ",(0,t.jsx)(n.em,{children:"string"}),", or a ",(0,t.jsx)(n.em,{children:"stream associated with a file"})," an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"type-error"})," is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"pathname"}),", ",(0,t.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["Not all implementations support wildcards in all fields. See Section 19.2.2.2.2 (",":WILD"," as a"]}),"\n",(0,t.jsx)(n.p,{children:"Component Value) and Section 19.2.2.3 (Restrictions on Wildcard Pathnames)."})]})}function s(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}const l={},d="wild-pathname-p",c={id:"chap-19/bj-e-dictionary/wildpathnamep",title:"wild-pathname-p",description:"Expanded Reference: wild-pathname-p",source:"@site/docs/chap-19/bj-e-dictionary/wildpathnamep.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/wildpathnamep",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/wildpathnamep",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/wildpathnamep.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"translate-pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/translatepathname"},next:{title:"20. Files",permalink:"/cl-language-reference/docs/category/20-files"}},o={},p=[{value:"Expanded Reference: wild-pathname-p",id:"expanded-reference-wild-pathname-p",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"wild-pathname-p",children:"wild-pathname-p"}),"\n","\n","\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-wild-pathname-p",children:"Expanded Reference: wild-pathname-p"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(wild-pathname-p )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>s});var t=a(67294);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);