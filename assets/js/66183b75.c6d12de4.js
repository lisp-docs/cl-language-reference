"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[37143],{13144:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>h,contentTitle:()=>c,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var n=i(85893),s=i(11151);const t={title:"C",sidebar_position:99},c=void 0,l={id:"chap-26/c",title:"C",description:"C",source:"@site/docs/chap-26/c.md",sourceDirName:"chap-26",slug:"/chap-26/c",permalink:"/cl-language-reference/chap-26/c",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-26/c.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",sidebarPosition:99,frontMatter:{title:"C",sidebar_position:99},sidebar:"tutorialSidebar",previous:{title:"B",permalink:"/cl-language-reference/chap-26/b"},next:{title:"D",permalink:"/cl-language-reference/chap-26/d"}},h={},d=[];function o(e){const r={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components},{DictionaryLink:i,GlossaryTerm:t}=r;return i||j("DictionaryLink",!0),t||j("GlossaryTerm",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"C"})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"cadr",children:(0,n.jsx)("b",{children:"cadr"})})," [ ",(0,n.jsx)(r.strong,{children:"ka d"}),"* ",(0,n.jsx)(r.strong,{children:"r"})," ], ",(0,n.jsx)(r.em,{children:"n."})," (of an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),") the ",(0,n.jsx)(t,{term:"car",children:(0,n.jsx)("i",{children:"car"})})," of the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," of that ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"call"})," ",(0,n.jsx)(r.em,{children:"v.t."}),", ",(0,n.jsx)(r.em,{children:"n."})," 1. ",(0,n.jsx)(r.em,{children:"v.t."})," (a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," with ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"arguments"})}),") to cause the ",(0,n.jsx)(t,{term:"code",children:(0,n.jsx)("i",{children:"code"})})," represented by that ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," to be ",(0,n.jsx)(r.em,{children:"executed"})," in an ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})})," where ",(0,n.jsx)(t,{term:"binding",children:(0,n.jsx)("i",{children:"bindings"})})," for the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"values"})})," of its ",(0,n.jsx)(t,{term:"parameter",children:(0,n.jsx)("i",{children:"parameters"})})," have been ",(0,n.jsx)(r.em,{children:"established"})," based on the ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"arguments"})}),". \u201cCalling the function ",(0,n.jsx)(i,{term:"+",children:(0,n.jsx)("b",{children:"+"})})," with the arguments 5 and 1 yields a value of 6.\u201d 2. ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"situation",children:(0,n.jsx)("i",{children:"situation"})})," in which a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," is called."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"captured initialization form"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{styled:!0,term:"initialization form",children:(0,n.jsx)("i",{children:"initialization form"})})," along with the ",(0,n.jsx)(r.em,{children:"lexical"})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})})," in which the ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," that defined the ",(0,n.jsx)(t,{styled:!0,term:"initialization form",children:(0,n.jsx)("i",{children:"initialization form"})})," was ",(0,n.jsx)(r.em,{children:"evaluated"}),". \u201cEach newly added shared slot is set to the result of evaluating the captured"]}),"\n",(0,n.jsxs)(r.p,{children:["initialization form for the slot that was specified in the ",(0,n.jsx)(i,{term:"defclass",children:(0,n.jsx)("b",{children:"defclass"})})," form for the new class.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"car",children:(0,n.jsx)("b",{children:"car"})})," ",(0,n.jsx)(r.em,{children:"n."})," 1. a. (of a ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})}),") the component of a ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})})," corresponding to the first ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"argument"})})," to ",(0,n.jsx)(i,{term:"cons",children:(0,n.jsx)("b",{children:"cons"})}),"; the other component is the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," . \u201cThe function ",(0,n.jsx)(i,{term:"rplaca",children:(0,n.jsx)("b",{children:"rplaca"})})," modifies the car of a cons.\u201d b. (of a ",(0,n.jsx)(t,{term:"list",children:(0,n.jsx)("i",{children:"list"})}),") the first ",(0,n.jsx)(t,{term:"element",children:(0,n.jsx)("i",{children:"element"})})," of the ",(0,n.jsx)(t,{term:"list",children:(0,n.jsx)("i",{children:"list"})}),", or ",(0,n.jsx)(i,{term:"nil",children:(0,n.jsx)("b",{children:"nil"})})," if the ",(0,n.jsx)(t,{term:"list",children:(0,n.jsx)("i",{children:"list"})})," is the ",(0,n.jsx)(t,{styled:!0,term:"empty list",children:(0,n.jsx)("i",{children:"empty list"})}),". 2. the ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that is held in the ",(0,n.jsx)(t,{term:"car",children:(0,n.jsx)("i",{children:"car"})})," ",(0,n.jsx)("sub",{children:"1"}),". \u201cThe function ",(0,n.jsx)(i,{term:"car",children:(0,n.jsx)("b",{children:"car"})})," returns the car of a cons.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"case",children:(0,n.jsx)("b",{children:"case"})})," ",(0,n.jsx)(r.em,{children:"n."})," (of a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," ) the property of being either ",(0,n.jsx)(t,{term:"uppercase",children:(0,n.jsx)("i",{children:"uppercase"})})," or ",(0,n.jsx)(t,{term:"lowercase",children:(0,n.jsx)("i",{children:"lowercase"})}),". Not all ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"characters"})})," have ",(0,n.jsx)(t,{term:"case",children:(0,n.jsx)("i",{children:"case"})}),". \u201cThe characters #\\A and #\\a have case, but the character #$ has no case.\u201d See Section 13.1.4.3 (Characters With Case) and the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"both-case-p",children:(0,n.jsx)("b",{children:"both-case-p"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"case sensitivity mode"})," ",(0,n.jsx)(r.em,{children:"n."})," one of the ",(0,n.jsx)(t,{term:"symbol",children:(0,n.jsx)("i",{children:"symbols"})})," ",":upcase",", ",":downcase",", ",":preserve",", or"]}),"\n",(0,n.jsxs)(r.p,{children:[":invert","."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"catch",children:(0,n.jsx)("b",{children:"catch"})})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{styled:!0,term:"exit point",children:(0,n.jsx)("i",{children:"exit point"})})," which is ",(0,n.jsx)(r.em,{children:"established"})," by a ",(0,n.jsx)(i,{term:"catch",children:(0,n.jsx)("b",{children:"catch"})})," ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," within the ",(0,n.jsx)(t,{styled:!0,term:"dynamic scope",children:(0,n.jsx)("i",{children:"dynamic scope"})})," of its body, which is named by a ",(0,n.jsx)(t,{styled:!0,term:"catch tag",children:(0,n.jsx)("i",{children:"catch tag"})}),", and to which control and ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"values"})})," may be ",(0,n.jsx)(r.em,{children:"thrown"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"catch tag"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," which names an ",(0,n.jsx)(r.em,{children:"active catch"}),". (If more than one ",(0,n.jsx)(t,{term:"catch",children:(0,n.jsx)("i",{children:"catch"})})," is active with the same ",(0,n.jsx)(t,{styled:!0,term:"catch tag",children:(0,n.jsx)("i",{children:"catch tag"})}),", it is only possible to ",(0,n.jsx)(t,{term:"throw",children:(0,n.jsx)("i",{children:"throw"})})," to the innermost such ",(0,n.jsx)(t,{term:"catch",children:(0,n.jsx)("i",{children:"catch"})})," because the outer one is ",(0,n.jsx)(r.em,{children:"shadowed"})," ",(0,n.jsx)("sub",{children:"2"}),".)"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"cddr",children:(0,n.jsx)("b",{children:"cddr"})})," [ ",(0,n.jsx)(r.strong,{children:"k_ud"}),"*  ",(0,n.jsx)(r.strong,{children:"d"}),"* ",(0,n.jsx)(r.strong,{children:"r"})," ] or [ ",(0,n.jsx)(r.strong,{children:"k"}),"*  ",(0,n.jsx)(r.strong,{children:"d_ud"}),"* ",(0,n.jsx)(r.strong,{children:"r"})," ], ",(0,n.jsx)(r.em,{children:"n."})," (of an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),") the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," of the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," of that ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"cdr",children:(0,n.jsx)("b",{children:"cdr"})})," [ ",(0,n.jsx)(r.strong,{children:"k_u d"}),"* ",(0,n.jsx)(r.strong,{children:"r"})," ], ",(0,n.jsx)(r.em,{children:"n."})," 1. a. (of a ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})}),") the component of a ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})})," corresponding to the second ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"argument"})})," to ",(0,n.jsx)(i,{term:"cons",children:(0,n.jsx)("b",{children:"cons"})}),"; the other component is the ",(0,n.jsx)(t,{term:"car",children:(0,n.jsx)("i",{children:"car"})})," . \u201cThe function ",(0,n.jsx)(i,{term:"rplacd",children:(0,n.jsx)("b",{children:"rplacd"})})," modifies the cdr of a cons.\u201d b. (of a ",(0,n.jsx)(r.em,{children:"list L"}),(0,n.jsx)("sub",{children:"1"}),") either the ",(0,n.jsx)(r.em,{children:"list L"}),(0,n.jsx)("sub",{children:"2"})," that contains the ",(0,n.jsx)(t,{term:"element",children:(0,n.jsx)("i",{children:"elements"})})," of ",(0,n.jsx)(r.em,{children:"L"}),(0,n.jsx)("sub",{children:"1"})," that follow after the first, or else ",(0,n.jsx)(i,{term:"nil",children:(0,n.jsx)("b",{children:"nil"})})," if ",(0,n.jsx)(r.em,{children:"L"}),(0,n.jsx)("sub",{children:"1"})," is the ",(0,n.jsx)(t,{styled:!0,term:"empty list",children:(0,n.jsx)("i",{children:"empty list"})}),". 2. the ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that is held in the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," ",(0,n.jsx)("sub",{children:"1"}),". \u201cThe function ",(0,n.jsx)(i,{term:"cdr",children:(0,n.jsx)("b",{children:"cdr"})})," returns the cdr of a cons.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"cell"})," ",(0,n.jsx)(r.em,{children:"n. Trad."})," (of an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),") a conceptual ",(0,n.jsx)(t,{term:"slot",children:(0,n.jsx)("i",{children:"slot"})})," of that ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),". The ",(0,n.jsx)(t,{styled:!0,term:"dynamic variable",children:(0,n.jsx)("i",{children:"dynamic variable"})})," and global ",(0,n.jsx)(r.em,{children:"function bindings"})," of a ",(0,n.jsx)(t,{term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," are sometimes referred to as its ",(0,n.jsx)(t,{styled:!0,term:"value cell",children:(0,n.jsx)("i",{children:"value cell"})})," and ",(0,n.jsx)(t,{styled:!0,term:"function cell",children:(0,n.jsx)("i",{children:"function cell"})}),", respectively."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"character",children:(0,n.jsx)("b",{children:"character"})})," ",(0,n.jsx)(r.em,{children:"n."}),", ",(0,n.jsx)(r.em,{children:"adj."})," 1. ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"character",children:(0,n.jsx)("b",{children:"character"})}),"; that is, an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that represents a unitary token in an aggregate quantity of text; see Section 13.1 (Character Concepts). 2. ",(0,n.jsx)(r.em,{children:"adj."})," a. (of a ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),") having an ",(0,n.jsx)(t,{styled:!0,term:"element type",children:(0,n.jsx)("i",{children:"element type"})})," that is a ",(0,n.jsx)(t,{term:"subtype",children:(0,n.jsx)("i",{children:"subtype"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"character",children:(0,n.jsx)("b",{children:"character"})}),". The most fundamental operation on a ",(0,n.jsx)(r.em,{children:"character input stream"})," is ",(0,n.jsx)(i,{term:"read-char",children:(0,n.jsx)("b",{children:"read-char"})})," and on a ",(0,n.jsx)(r.em,{children:"character output stream"})," is ",(0,n.jsx)(i,{term:"write-char",children:(0,n.jsx)("b",{children:"write-char"})}),". See ",(0,n.jsx)(t,{term:"binary",children:(0,n.jsx)("i",{children:"binary"})}),". b. (of a ",(0,n.jsx)(t,{term:"file",children:(0,n.jsx)("i",{children:"file"})}),") having been created by opening a ",(0,n.jsx)(r.em,{children:"character stream"}),". (It is ",(0,n.jsx)(t,{term:"implementation-dependent",children:(0,n.jsx)("i",{children:"implementation-dependent"})})," whether this is an inspectable aspect of the ",(0,n.jsx)(t,{term:"file",children:(0,n.jsx)("i",{children:"file"})}),", or whether any given ",(0,n.jsx)(r.em,{children:"binary file"})," can be treated as a ",(0,n.jsx)(r.em,{children:"character file"}),".)"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"character code"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. one of possibly several ",(0,n.jsx)(t,{term:"attribute",children:(0,n.jsx)("i",{children:"attributes"})})," of a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," . 2. a"]}),"\n",(0,n.jsxs)(r.p,{children:["non-negative ",(0,n.jsx)(r.em,{children:"integer"})," less than the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(i,{term:"char-code-limit",children:(0,n.jsx)("b",{children:"char-code-limit"})})," that is suitable for use as a ",(0,n.jsx)(t,{styled:!0,term:"character code",children:(0,n.jsx)("i",{children:"character code"})}),(0,n.jsx)("sub",{children:"1"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"character designator"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"designator",children:(0,n.jsx)("i",{children:"designator"})})," for a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," ; that is, an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that denotes a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," and that is one of: a ",(0,n.jsx)(t,{term:"designator",children:(0,n.jsx)("i",{children:"designator"})})," for a ",(0,n.jsx)(t,{term:"string",children:(0,n.jsx)("i",{children:"string"})})," of ",(0,n.jsx)(t,{term:"length",children:(0,n.jsx)("i",{children:"length"})})," one (denoting the ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," that is its only ",(0,n.jsx)(t,{term:"element",children:(0,n.jsx)("i",{children:"element"})}),"), or a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," (denoting itself)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"circular"})," ",(0,n.jsx)(r.em,{children:"adj."})," 1. (of a ",(0,n.jsx)(t,{term:"list",children:(0,n.jsx)("i",{children:"list"})}),") a ",(0,n.jsx)(t,{styled:!0,term:"circular list",children:(0,n.jsx)("i",{children:"circular list"})}),". 2. (of an arbitrary ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),") having a"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.em,{children:"component"}),", ",(0,n.jsx)(t,{term:"element",children:(0,n.jsx)("i",{children:"element"})}),", ",(0,n.jsx)(t,{term:"constituent",children:(0,n.jsx)("i",{children:"constituent"})}),(0,n.jsx)("sub",{children:"2"}),", or ",(0,n.jsx)(t,{term:"subexpression",children:(0,n.jsx)("i",{children:"subexpression"})})," (as appropriate to the context) that is the ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," itself."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"circular list"})," ",(0,n.jsx)(r.em,{children:"n."})," a chain of ",(0,n.jsx)(r.em,{children:"conses"})," that has no termination because some ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})})," in the chain is the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," of a later ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"class",children:(0,n.jsx)("b",{children:"class"})})," ",(0,n.jsx)(r.em,{children:"n."})," 1. an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that uniquely determines the structure and behavior of a set of other ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," called its ",(0,n.jsx)(t,{styled:!0,term:"direct instance",children:(0,n.jsx)("i",{children:"direct instances"})}),", that contributes structure and behavior to a set of other ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," called its ",(0,n.jsx)(t,{styled:!0,term:"indirect instance",children:(0,n.jsx)("i",{children:"indirect instances"})}),", and that acts as a ",(0,n.jsx)(t,{styled:!0,term:"type specifier",children:(0,n.jsx)("i",{children:"type specifier"})})," for a set of objects called its ",(0,n.jsx)(t,{styled:!0,term:"generalized instance",children:(0,n.jsx)("i",{children:"generalized instances"})}),". \u201cThe class ",(0,n.jsx)(i,{term:"integer",children:(0,n.jsx)("b",{children:"integer"})})," is a subclass of the"]}),"\n",(0,n.jsxs)(r.p,{children:["class ",(0,n.jsx)(i,{term:"number",children:(0,n.jsx)("b",{children:"number"})}),".\u201d (Note that the phrase \u201cthe ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," foo\u201d is often substituted for the more precise phrase \u201cthe ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," named foo\u201d\u2014in both cases, a ",(0,n.jsx)(r.em,{children:"class object"})," (not a ",(0,n.jsx)(t,{term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})}),") is denoted.) 2. (of an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),") the uniquely determined ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," of which the ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," is a ",(0,n.jsx)(t,{styled:!0,term:"direct instance",children:(0,n.jsx)("i",{children:"direct instance"})}),". See the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"class-of",children:(0,n.jsx)("b",{children:"class-of"})}),". \u201cThe class of the object returned by ",(0,n.jsx)(i,{term:"gensym",children:(0,n.jsx)("b",{children:"gensym"})})," is ",(0,n.jsx)(i,{term:"symbol",children:(0,n.jsx)("b",{children:"symbol"})}),".\u201d (Note that with this usage a phrase such as \u201cits ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," is foo\u201d is often substituted for the more precise phrase \u201cits ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," is the ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," named foo\u201d\u2014in both cases, a ",(0,n.jsx)(r.em,{children:"class object"})," (not a ",(0,n.jsx)(t,{term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})}),") is denoted.)"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"class designator"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"designator",children:(0,n.jsx)("i",{children:"designator"})})," for a ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})}),"; that is, an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that denotes a ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," and that is one of: a ",(0,n.jsx)(t,{term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," (denoting the ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," named by that ",(0,n.jsx)(t,{term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})}),"; see the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"find-class",children:(0,n.jsx)("b",{children:"find-class"})}),") or a ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," (denoting itself)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"class precedence list"})," ",(0,n.jsx)(r.em,{children:"n."})," a unique total ordering on a ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," and its ",(0,n.jsx)(r.em,{children:"superclasses"})," that is consistent with the ",(0,n.jsx)(t,{styled:!0,term:"local precedence order",children:(0,n.jsx)("i",{children:"local precedence orders"})})," for the ",(0,n.jsx)(t,{term:"class",children:(0,n.jsx)("i",{children:"class"})})," and its ",(0,n.jsx)(r.em,{children:"superclasses"}),". For detailed information, see Section 4.3.5 (Determining the Class Precedence List)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"close",children:(0,n.jsx)("b",{children:"close"})})," ",(0,n.jsx)(r.em,{children:"v.t."})," (a ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),") to terminate usage of the ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," as a source or sink of data, permitting the ",(0,n.jsx)(t,{term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," to reclaim its internal data structures, and to free any external resources which might have been locked by the ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," when it was opened."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"closed"})," ",(0,n.jsx)(r.em,{children:"adj."})," (of a ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})}),") having been ",(0,n.jsx)(t,{term:"closed",children:(0,n.jsx)("i",{children:"closed"})})," (see close). Some (but not all) operations that are valid on ",(0,n.jsx)(r.em,{children:"open streams"})," are not valid on ",(0,n.jsx)(r.em,{children:"closed streams"}),". See Section 21.1.1.1.2 (Open and Closed Streams)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"closure"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{styled:!0,term:"lexical closure",children:(0,n.jsx)("i",{children:"lexical closure"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"coalesce"})," ",(0,n.jsx)(r.em,{children:"v.t."})," (",(0,n.jsx)(r.em,{children:"literal objects"})," that are ",(0,n.jsx)(t,{term:"similar",children:(0,n.jsx)("i",{children:"similar"})})," ) to consolidate the identity of those ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})}),", such that they become the ",(0,n.jsx)(r.em,{children:"same object"}),". See Section 3.2.1 (Compiler"]}),"\n",(0,n.jsx)(r.p,{children:"Terminology)."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"code"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. ",(0,n.jsx)(r.em,{children:"Trad."})," any representation of actions to be performed, whether conceptual or as an actual ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),", such as ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"forms"})}),", ",(0,n.jsx)(t,{styled:!0,term:"lambda expression",children:(0,n.jsx)("i",{children:"lambda expressions"})}),", ",(0,n.jsx)(t,{styled:!0,term:"object",children:(0,n.jsx)("i",{children:"objects"})})," of ",(0,n.jsx)(r.em,{children:"type function"}),", text in a ",(0,n.jsx)(t,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),", or instruction sequences in a ",(0,n.jsx)(t,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})}),". This is a generic term; the specific nature of the representation depends on its context. 2. (of a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," ) a ",(0,n.jsx)(t,{styled:!0,term:"character code",children:(0,n.jsx)("i",{children:"character code"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"coerce",children:(0,n.jsx)("b",{children:"coerce"})})," ",(0,n.jsx)(r.em,{children:"v.t."})," (an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," to a ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})}),") to produce an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," from the given ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),", without modifying that ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),", by following some set of coercion rules that must be specifically stated for any context in which this term is used. The resulting ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," is necessarily of the indicated ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})}),", except when that type is a ",(0,n.jsx)(t,{term:"subtype",children:(0,n.jsx)("i",{children:"subtype"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"complex",children:(0,n.jsx)("b",{children:"complex"})}),"; in that case, if a ",(0,n.jsx)(t,{styled:!0,term:"complex rational",children:(0,n.jsx)("i",{children:"complex rational"})})," with an imaginary part of zero would result, the result is a ",(0,n.jsx)(t,{term:"rational",children:(0,n.jsx)("i",{children:"rational"})})]}),"\n",(0,n.jsxs)(r.p,{children:["rather than a ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})}),"\u2014see Section 12.1.5.3 (Rule of Canonical Representation for Complex Rationals)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"colon"})," ",(0,n.jsx)(r.em,{children:"n."})," the ",(0,n.jsx)(t,{styled:!0,term:"standard character",children:(0,n.jsx)("i",{children:"standard character"})})," that is called \u201ccolon\u201d (:). See Figure 2\u20135."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"comma"})," ",(0,n.jsx)(r.em,{children:"n."})," the ",(0,n.jsx)(t,{styled:!0,term:"standard character",children:(0,n.jsx)("i",{children:"standard character"})})," that is called \u201ccomma\u201d (,). See Figure 2\u20135."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compilation"})," ",(0,n.jsx)(r.em,{children:"n."})," the process of ",(0,n.jsx)(r.em,{children:"compiling code"})," by the ",(0,n.jsx)(t,{term:"compiler",children:(0,n.jsx)("i",{children:"compiler"})})," ."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compilation environment"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. An ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})})," that represents information known by the ",(0,n.jsx)(t,{term:"compiler",children:(0,n.jsx)("i",{children:"compiler"})})," about a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," that is being ",(0,n.jsx)(r.em,{children:"compiled"}),". See Section 3.2.1 (Compiler Terminology). 2. An ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that represents the ",(0,n.jsx)(t,{styled:!0,term:"compilation environment",children:(0,n.jsx)("i",{children:"compilation environment"})})," ",(0,n.jsx)("sub",{children:"1"})," and that is used as a second argument to a ",(0,n.jsx)(t,{styled:!0,term:"macro function",children:(0,n.jsx)("i",{children:"macro function"})})," (which supplies a ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," for any ",(0,n.jsx)(r.strong,{children:"&environment"})," ",(0,n.jsx)(t,{term:"parameter",children:(0,n.jsx)("i",{children:"parameter"})})," in the ",(0,n.jsx)(t,{styled:!0,term:"macro function",children:(0,n.jsx)("i",{children:"macro function"})}),"\u2019s definition)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compilation unit"})," ",(0,n.jsx)(r.em,{children:"n."})," an interval during which a single unit of compilation is occurring. See the ",(0,n.jsx)(t,{term:"macro",children:(0,n.jsx)("i",{children:"macro"})})," ",(0,n.jsx)(i,{term:"with-compilation-unit",children:(0,n.jsx)("b",{children:"with-compilation-unit"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"compile",children:(0,n.jsx)("b",{children:"compile"})})," ",(0,n.jsx)(r.em,{children:"v.t."})," 1. (",(0,n.jsx)(t,{term:"code",children:(0,n.jsx)("i",{children:"code"})}),") to perform semantic preprocessing of the ",(0,n.jsx)(t,{term:"code",children:(0,n.jsx)("i",{children:"code"})}),", usually"]}),"\n",(0,n.jsxs)(r.p,{children:["optimizing one or more qualities of the code, such as run-time speed of ",(0,n.jsx)(r.em,{children:"execution"})," or run-time storage usage. The minimum semantic requirements of compilation are that it must remove all macro calls and arrange for all ",(0,n.jsx)(t,{styled:!0,term:"load time value",children:(0,n.jsx)("i",{children:"load time values"})})," to be resolved prior to run time. 2. (a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})}),") to produce a new ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"compiled-function",children:(0,n.jsx)("b",{children:"compiled-function"})})," which represents the result of ",(0,n.jsx)(r.em,{children:"compiling"})," the ",(0,n.jsx)(t,{term:"code",children:(0,n.jsx)("i",{children:"code"})})," represented by the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})}),". See the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"compile",children:(0,n.jsx)("b",{children:"compile"})}),". 3. (a ",(0,n.jsx)(t,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),") to produce a ",(0,n.jsx)(t,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})})," from a ",(0,n.jsx)(t,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),". See the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"compile-file",children:(0,n.jsx)("b",{children:"compile-file"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compile time"})," ",(0,n.jsx)(r.em,{children:"n."})," the duration of time that the ",(0,n.jsx)(t,{term:"compiler",children:(0,n.jsx)("i",{children:"compiler"})})," is processing ",(0,n.jsx)(t,{styled:!0,term:"source code",children:(0,n.jsx)("i",{children:"source code"})}),". ",(0,n.jsx)(r.strong,{children:"compile-time definition"})," ",(0,n.jsx)(r.em,{children:"n."})," a definition in the ",(0,n.jsx)(t,{styled:!0,term:"compilation environment",children:(0,n.jsx)("i",{children:"compilation environment"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiled code"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. ",(0,n.jsx)(t,{styled:!0,term:"compiled function",children:(0,n.jsx)("i",{children:"compiled functions"})}),". 2. ",(0,n.jsx)(t,{term:"code",children:(0,n.jsx)("i",{children:"code"})})," that represents ",(0,n.jsx)(t,{styled:!0,term:"compiled function",children:(0,n.jsx)("i",{children:"compiled functions"})}),", such as the contents of a ",(0,n.jsx)(t,{styled:!0,term:"compiled file",children:(0,n.jsx)("i",{children:"compiled file"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiled file"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"file",children:(0,n.jsx)("i",{children:"file"})})," which represents the results of ",(0,n.jsx)(r.em,{children:"compiling"})," the ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"forms"})})," which appeared in a corresponding ",(0,n.jsx)(t,{styled:!0,term:"source file",children:(0,n.jsx)("i",{children:"source file"})}),", and which can be ",(0,n.jsx)(r.em,{children:"loaded"}),". See the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"compile-file",children:(0,n.jsx)("b",{children:"compile-file"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiled function"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"compiled-function",children:(0,n.jsx)("b",{children:"compiled-function"})}),", which is a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," that has been ",(0,n.jsx)(r.em,{children:"compiled"}),", which contains no references to ",(0,n.jsx)(t,{term:"macro",children:(0,n.jsx)("i",{children:"macros"})})," that must be expanded at run time, and which contains no unresolved references to ",(0,n.jsx)(t,{styled:!0,term:"load time value",children:(0,n.jsx)("i",{children:"load time values"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiler"})," ",(0,n.jsx)(r.em,{children:"n."})," a facility that is part of Lisp and that translates ",(0,n.jsx)(t,{term:"code",children:(0,n.jsx)("i",{children:"code"})})," into an"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(t,{term:"implementation-dependent",children:(0,n.jsx)("i",{children:"implementation-dependent"})})," form that might be represented or ",(0,n.jsx)(r.em,{children:"executed"})," efficiently. The functions ",(0,n.jsx)(i,{term:"compile",children:(0,n.jsx)("b",{children:"compile"})})," and ",(0,n.jsx)(i,{term:"compile-file",children:(0,n.jsx)("b",{children:"compile-file"})})," permit programs to invoke the ",(0,n.jsx)(t,{term:"compiler",children:(0,n.jsx)("i",{children:"compiler"})})," ."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiler macro"})," ",(0,n.jsx)(r.em,{children:"n."})," an auxiliary macro definition for a globally defined ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," or ",(0,n.jsx)(t,{term:"macro",children:(0,n.jsx)("i",{children:"macro"})})," which might or might not be called by any given ",(0,n.jsx)(t,{styled:!0,term:"conforming implementation",children:(0,n.jsx)("i",{children:"conforming implementation"})})," and which must preserve the semantics of the globally defined ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," or ",(0,n.jsx)(t,{term:"macro",children:(0,n.jsx)("i",{children:"macro"})})," but"]}),"\n",(0,n.jsxs)(r.p,{children:["which might perform some additional optimizations. (Unlike a ",(0,n.jsx)(t,{term:"macro",children:(0,n.jsx)("i",{children:"macro"})}),", a ",(0,n.jsx)(t,{styled:!0,term:"compiler macro",children:(0,n.jsx)("i",{children:"compiler macro"})})," does not extend the syntax of Common Lisp; rather, it provides an alternate implementation strategy for some existing syntax or functionality.)"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiler macro expansion"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. the process of translating a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," into another ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," by a ",(0,n.jsx)(t,{styled:!0,term:"compiler macro",children:(0,n.jsx)("i",{children:"compiler macro"})}),". 2. the ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," resulting from this process."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiler macro form"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{styled:!0,term:"function form",children:(0,n.jsx)("i",{children:"function form"})})," or ",(0,n.jsx)(t,{styled:!0,term:"macro form",children:(0,n.jsx)("i",{children:"macro form"})})," whose ",(0,n.jsx)(t,{term:"operator",children:(0,n.jsx)("i",{children:"operator"})})," has a definition as a ",(0,n.jsx)(t,{styled:!0,term:"compiler macro",children:(0,n.jsx)("i",{children:"compiler macro"})}),", or a ",(0,n.jsx)(i,{term:"funcall",children:(0,n.jsx)("b",{children:"funcall"})})," ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," whose first ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"argument"})})," is a ",(0,n.jsx)(i,{term:"function",children:(0,n.jsx)("b",{children:"function"})})," ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," whose ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"argument"})})," is the ",(0,n.jsx)(t,{term:"name",children:(0,n.jsx)("i",{children:"name"})})," of a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," that has a definition as a ",(0,n.jsx)(t,{styled:!0,term:"compiler macro",children:(0,n.jsx)("i",{children:"compiler macro"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compiler macro function"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," of two arguments, a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," and an"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", that implements ",(0,n.jsx)(t,{styled:!0,term:"compiler macro expansion",children:(0,n.jsx)("i",{children:"compiler macro expansion"})})," by producing either a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," to be used in place of the original argument ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," or else ",(0,n.jsx)(i,{term:"nil",children:(0,n.jsx)("b",{children:"nil"})}),", indicating that the original ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," should not be replaced. See Section 3.2.2.1 (Compiler Macros)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"complex",children:(0,n.jsx)("b",{children:"complex"})})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"complex",children:(0,n.jsx)("b",{children:"complex"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"complex float"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"complex",children:(0,n.jsx)("b",{children:"complex"})})," which has a ",(0,n.jsx)(t,{styled:!0,term:"complex part type",children:(0,n.jsx)("i",{children:"complex part type"})})," that is a ",(0,n.jsx)(t,{term:"subtype",children:(0,n.jsx)("i",{children:"subtype"})})," of ",(0,n.jsx)(i,{term:"float",children:(0,n.jsx)("b",{children:"float"})}),". A ",(0,n.jsx)(t,{styled:!0,term:"complex float",children:(0,n.jsx)("i",{children:"complex float"})})," is a ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," , but it is not a ",(0,n.jsx)(t,{term:"float",children:(0,n.jsx)("i",{children:"float"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"complex part type"})," ",(0,n.jsx)(r.em,{children:"n."})," (of a ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," ) 1. the ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," which is used to represent both the real part and the imaginary part of the ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," . 2. the ",(0,n.jsx)(t,{styled:!0,term:"actual complex part type",children:(0,n.jsx)("i",{children:"actual complex part type"})})," of the ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," . 3. the ",(0,n.jsx)(t,{styled:!0,term:"expressed complex part type",children:(0,n.jsx)("i",{children:"expressed complex part type"})})," of the ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," ."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"complex rational"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"complex",children:(0,n.jsx)("b",{children:"complex"})})," which has a ",(0,n.jsx)(t,{styled:!0,term:"complex part type",children:(0,n.jsx)("i",{children:"complex part type"})})," that is a ",(0,n.jsx)(t,{term:"subtype",children:(0,n.jsx)("i",{children:"subtype"})})," of ",(0,n.jsx)(i,{term:"rational",children:(0,n.jsx)("b",{children:"rational"})}),". A ",(0,n.jsx)(t,{styled:!0,term:"complex rational",children:(0,n.jsx)("i",{children:"complex rational"})})," is a ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," , but it is not a ",(0,n.jsx)(t,{term:"rational",children:(0,n.jsx)("i",{children:"rational"})}),". No ",(0,n.jsx)(t,{styled:!0,term:"complex rational",children:(0,n.jsx)("i",{children:"complex rational"})})," has an imaginary part of zero because such a number is always represented by Common Lisp as an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"rational",children:(0,n.jsx)("b",{children:"rational"})}),"; see Section 12.1.5.3 (Rule of Canonical Representation for Complex Rationals)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"complex single float"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"complex",children:(0,n.jsx)("b",{children:"complex"})})," which has a ",(0,n.jsx)(t,{styled:!0,term:"complex part type",children:(0,n.jsx)("i",{children:"complex part type"})})," that is a ",(0,n.jsx)(t,{term:"subtype",children:(0,n.jsx)("i",{children:"subtype"})})," of ",(0,n.jsx)(i,{term:"single-float",children:(0,n.jsx)("b",{children:"single-float"})}),". A ",(0,n.jsx)(t,{styled:!0,term:"complex single float",children:(0,n.jsx)("i",{children:"complex single float"})})," is a ",(0,n.jsx)(t,{term:"complex",children:(0,n.jsx)("i",{children:"complex"})})," , but it is not a ",(0,n.jsx)(t,{styled:!0,term:"single float",children:(0,n.jsx)("i",{children:"single float"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"composite stream"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," that is composed of one or more other ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"streams"})}),". \u201c",(0,n.jsx)(i,{term:"make-synonym-stream",children:(0,n.jsx)("b",{children:"make-synonym-stream"})})," creates a composite stream.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compound form"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(r.em,{children:"non-empty list"})," which is a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})}),": a ",(0,n.jsx)(t,{styled:!0,term:"special form",children:(0,n.jsx)("i",{children:"special form"})}),", a ",(0,n.jsx)(t,{styled:!0,term:"lambda form",children:(0,n.jsx)("i",{children:"lambda form"})}),", a ",(0,n.jsx)(t,{styled:!0,term:"macro form",children:(0,n.jsx)("i",{children:"macro form"})}),", or a ",(0,n.jsx)(t,{styled:!0,term:"function form",children:(0,n.jsx)("i",{children:"function form"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"compound type specifier"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{styled:!0,term:"type specifier",children:(0,n.jsx)("i",{children:"type specifier"})})," that is a ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})}),"; ",(0,n.jsx)(r.em,{children:"i.e."}),", a ",(0,n.jsx)(t,{styled:!0,term:"type specifier",children:(0,n.jsx)("i",{children:"type specifier"})})," that is not an ",(0,n.jsx)(t,{styled:!0,term:"atomic type specifier",children:(0,n.jsx)("i",{children:"atomic type specifier"})})," . \u201c(vector single-float) is a compound type specifier.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"concatenated stream"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(r.em,{children:"input stream"})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"concatenated-stream",children:(0,n.jsx)("b",{children:"concatenated-stream"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"condition",children:(0,n.jsx)("b",{children:"condition"})})," ",(0,n.jsx)(r.em,{children:"n."})," 1. an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," which represents a ",(0,n.jsx)(t,{term:"situation",children:(0,n.jsx)("i",{children:"situation"})}),"\u2014usually, but not necessarily, during ",(0,n.jsx)(r.em,{children:"signaling"}),". 2. an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"condition",children:(0,n.jsx)("b",{children:"condition"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"condition designator"})," ",(0,n.jsx)(r.em,{children:"n."})," one or more ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," that, taken together, denote either an existing ",(0,n.jsx)(r.em,{children:"condition object"})," or a ",(0,n.jsx)(r.em,{children:"condition object"})," to be implicitly created. For details, see Section 9.1.2.1 (Condition Designators)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"condition handler"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," that might be invoked by the act of ",(0,n.jsx)(r.em,{children:"signaling"}),", that receives the ",(0,n.jsx)(t,{term:"condition",children:(0,n.jsx)("i",{children:"condition"})})," being signaled as its only argument, and that is permitted to ",(0,n.jsx)(t,{term:"handle",children:(0,n.jsx)("i",{children:"handle"})})," the ",(0,n.jsx)(t,{term:"condition",children:(0,n.jsx)("i",{children:"condition"})})," or to ",(0,n.jsx)(t,{term:"decline",children:(0,n.jsx)("i",{children:"decline"})}),". See Section 9.1.4.1 (Signaling)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"condition reporter"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," that describes how a ",(0,n.jsx)(t,{term:"condition",children:(0,n.jsx)("i",{children:"condition"})})," is to be printed when the ",(0,n.jsx)(r.em,{children:"Lisp printer"})," is invoked while ",(0,n.jsx)(i,{term:"print-escape",children:(0,n.jsx)("b",{children:"*print-escape*"})})," is ",(0,n.jsx)(t,{term:"false",children:(0,n.jsx)("i",{children:"false"})}),". See Section 9.1.3 (Printing Conditions)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"conditional newline"})," ",(0,n.jsx)(r.em,{children:"n."})," a point in output where a ",(0,n.jsx)(t,{term:"newline",children:(0,n.jsx)("i",{children:"newline"})})," might be inserted at the discretion of the ",(0,n.jsx)(t,{styled:!0,term:"pretty printer",children:(0,n.jsx)("i",{children:"pretty printer"})})," . There are four kinds of ",(0,n.jsx)(t,{styled:!0,term:"conditional newline",children:(0,n.jsx)("i",{children:"conditional newlines"})}),", called \u201clinear-style,\u201d \u201cfill-style,\u201d \u201cmiser-style,\u201d and \u201cmandatory-style.\u201d See the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"pprint-newline",children:(0,n.jsx)("b",{children:"pprint-newline"})})," and Section 22.2.1.1 (Dynamic Control of the Arrangement of Output)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"conformance"})," ",(0,n.jsx)(r.em,{children:"n."})," a state achieved by proper and complete adherence to the"]}),"\n",(0,n.jsx)(r.p,{children:"requirements of this specification. See Section 1.5 (Conformance)."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"conforming code"})," ",(0,n.jsx)(r.em,{children:"n. code"})," that is all of part of a ",(0,n.jsx)(t,{styled:!0,term:"conforming program",children:(0,n.jsx)("i",{children:"conforming program"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"conforming implementation"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})}),", used to emphasize complete and correct adherance to all conformance criteria. A ",(0,n.jsx)(t,{styled:!0,term:"conforming implementation",children:(0,n.jsx)("i",{children:"conforming implementation"})})," is capable of accepting a ",(0,n.jsx)(t,{styled:!0,term:"conforming program",children:(0,n.jsx)("i",{children:"conforming program"})})," as input, preparing that ",(0,n.jsx)(t,{term:"program",children:(0,n.jsx)("i",{children:"program"})})," for ",(0,n.jsx)(r.em,{children:"execution"}),", and executing the prepared ",(0,n.jsx)(t,{term:"program",children:(0,n.jsx)("i",{children:"program"})})," in accordance with this specification. An ",(0,n.jsx)(t,{term:"implementation",children:(0,n.jsx)("i",{children:"implementation"})})," which has been extended may still be a ",(0,n.jsx)(t,{styled:!0,term:"conforming implementation",children:(0,n.jsx)("i",{children:"conforming implementation"})})]}),"\n",(0,n.jsxs)(r.p,{children:["provided that no extension interferes with the correct function of any ",(0,n.jsx)(t,{styled:!0,term:"conforming program",children:(0,n.jsx)("i",{children:"conforming program"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"conforming processor"})," ",(0,n.jsx)(r.em,{children:"n. ANSI"})," a ",(0,n.jsx)(t,{styled:!0,term:"conforming implementation",children:(0,n.jsx)("i",{children:"conforming implementation"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"conforming program"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"program",children:(0,n.jsx)("i",{children:"program"})}),", used to emphasize the fact that the ",(0,n.jsx)(t,{term:"program",children:(0,n.jsx)("i",{children:"program"})})," depends for its correctness only upon documented aspects of Common Lisp, and can therefore be expected to run correctly in any ",(0,n.jsx)(t,{styled:!0,term:"conforming implementation",children:(0,n.jsx)("i",{children:"conforming implementation"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"congruent"})," ",(0,n.jsx)(r.em,{children:"n."})," conforming to the rules of ",(0,n.jsx)(t,{styled:!0,term:"lambda list",children:(0,n.jsx)("i",{children:"lambda list"})})," congruency, as detailed in Section 7.6.4 (Congruent Lambda-lists for all Methods of a Generic Function)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"cons",children:(0,n.jsx)("b",{children:"cons"})})," ",(0,n.jsx)(r.em,{children:"n.v."})," 1. ",(0,n.jsx)(r.em,{children:"n."})," a compound data ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," having two components called the ",(0,n.jsx)(t,{term:"car",children:(0,n.jsx)("i",{children:"car"})})," and the ",(0,n.jsx)(t,{term:"cdr",children:(0,n.jsx)("i",{children:"cdr"})})," . 2. ",(0,n.jsx)(r.em,{children:"v."})," to create such an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),". 3. ",(0,n.jsx)(r.em,{children:"v. Idiom."})," to create any ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),", or to allocate storage."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"constant"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. a ",(0,n.jsx)(t,{styled:!0,term:"constant form",children:(0,n.jsx)("i",{children:"constant form"})}),". 2. a ",(0,n.jsx)(t,{styled:!0,term:"constant variable",children:(0,n.jsx)("i",{children:"constant variable"})}),". 3. a ",(0,n.jsx)(t,{styled:!0,term:"constant object",children:(0,n.jsx)("i",{children:"constant object"})}),". 4. a ",(0,n.jsx)(t,{styled:!0,term:"self-evaluating object",children:(0,n.jsx)("i",{children:"self-evaluating object"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"constant form"})," ",(0,n.jsx)(r.em,{children:"n."})," any ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," for which ",(0,n.jsx)(t,{term:"evaluation",children:(0,n.jsx)("i",{children:"evaluation"})})," always ",(0,n.jsx)(t,{term:"yield",children:(0,n.jsx)("i",{children:"yields"})})," the same ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})}),", that neither affects nor is affected by the ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})})," in which it is ",(0,n.jsx)(r.em,{children:"evaluated"})," (except that it is permitted to refer to the names of ",(0,n.jsx)(t,{styled:!0,term:"constant variable",children:(0,n.jsx)("i",{children:"constant variables"})})," defined in the ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),"), and that neither affects nor is affected by the state of any ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," except those ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," that are ",(0,n.jsx)(t,{styled:!0,term:"otherwise inaccessible part",children:(0,n.jsx)("i",{children:"otherwise inaccessible parts"})})," of ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," created by the ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," itself. \u201cA ",(0,n.jsx)(i,{term:"car",children:(0,n.jsx)("b",{children:"car"})})," form in which the argument is a ",(0,n.jsx)(i,{term:"quote",children:(0,n.jsx)("b",{children:"quote"})})," form is a constant form.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"constant object"})," ",(0,n.jsx)(r.em,{children:"n."})," an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})})," that is constrained (",(0,n.jsx)(r.em,{children:"e.g."}),", by its context in a ",(0,n.jsx)(t,{term:"program",children:(0,n.jsx)("i",{children:"program"})})," or by the source from which it was obtained) to be ",(0,n.jsx)(t,{term:"immutable",children:(0,n.jsx)("i",{children:"immutable"})}),". \u201cA literal object that has been processed by ",(0,n.jsx)(i,{term:"compile-file",children:(0,n.jsx)("b",{children:"compile-file"})})," is a constant object.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"constant variable"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"variable",children:(0,n.jsx)("i",{children:"variable"})}),", the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of which can never change; that"]}),"\n",(0,n.jsxs)(r.p,{children:["is, a ",(0,n.jsx)(t,{term:"keyword",children:(0,n.jsx)("i",{children:"keyword"})})," ",(0,n.jsx)("sub",{children:"1"})," or a ",(0,n.jsx)(t,{styled:!0,term:"named constant",children:(0,n.jsx)("i",{children:"named constant"})}),". \u201cThe symbols ",(0,n.jsx)(i,{term:"t",children:(0,n.jsx)("b",{children:"t"})}),", ",(0,n.jsx)(i,{term:"nil",children:(0,n.jsx)("b",{children:"nil"})}),", ",":direction",", and"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(i,{term:"most-positive-fixnum",children:(0,n.jsx)("b",{children:"most-positive-fixnum"})})," are constant variables.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)("b",{children:"constituent"})," ",(0,n.jsx)("i",{children:"n."}),", ",(0,n.jsx)("i",{children:"adj."})," 1. a. ",(0,n.jsx)("i",{children:"n."})," the ",(0,n.jsx)("i",{children:"syntax type"})," of a ",(0,n.jsx)("i",{children:"character"})," that is part of a ",(0,n.jsx)("i",{children:"token"}),". For details, see Section 2.1.4.1 (Constituent Characters). b. ",(0,n.jsx)("i",{children:"adj."})," (of a ",(0,n.jsx)("i",{children:"character"})," ) having the ",(0,n.jsx)("i",{children:"constituent"}),(0,n.jsxs)("sub",{children:["1",(0,n.jsx)("i",{children:"a"})]})," syntax type",(0,n.jsx)("sub",{children:"2"}),". c. ",(0,n.jsx)("i",{children:"n."})," a ",(0,n.jsx)("i",{children:"constituent"}),(0,n.jsxs)("sub",{children:["1",(0,n.jsx)("i",{children:"b"})]})," character . 2. ",(0,n.jsx)("i",{children:"n."})," (of a ",(0,n.jsx)("i",{children:"composite stream"}),") one of possibly several ",(0,n.jsx)("i",{children:"objects"})," that collectively comprise the source or sink of that ",(0,n.jsx)("i",{children:"stream"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"constituent trait"})," ",(0,n.jsx)(r.em,{children:"n."})," (of a ",(0,n.jsx)(t,{term:"character",children:(0,n.jsx)("i",{children:"character"})})," ) one of several classifications of a ",(0,n.jsx)(r.em,{children:"constituent character"})," in a ",(0,n.jsx)(t,{term:"readtable",children:(0,n.jsx)("i",{children:"readtable"})}),". See Section 2.1.4.1 (Constituent Characters)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"constructed stream"})," ",(0,n.jsx)(r.em,{children:"n."})," a ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," whose source or sink is a Lisp ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),". Note that since a ",(0,n.jsx)(t,{term:"stream",children:(0,n.jsx)("i",{children:"stream"})})," is another Lisp ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),", ",(0,n.jsx)(t,{styled:!0,term:"composite stream",children:(0,n.jsx)("i",{children:"composite streams"})})," are considered ",(0,n.jsx)(t,{styled:!0,term:"constructed stream",children:(0,n.jsx)("i",{children:"constructed streams"})}),". \u201cA string stream is a constructed stream.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"contagion"})," ",(0,n.jsx)(r.em,{children:"n."})," a process whereby operations on ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," of differing ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"types"})})," (",(0,n.jsx)(r.em,{children:"e.g."}),","]}),"\n",(0,n.jsxs)(r.p,{children:["arithmetic on mixed ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"types"})})," of ",(0,n.jsx)(t,{term:"number",children:(0,n.jsx)("i",{children:"numbers"})}),") produce a result whose ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," is controlled by the dominance of one ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"argument"})}),"\u2019s ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," over the ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"types"})})," of the other ",(0,n.jsx)(t,{term:"argument",children:(0,n.jsx)("i",{children:"arguments"})}),". See Section 12.1.1.2 (Contagion in Numeric Operations)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"continuable"})," ",(0,n.jsx)(r.em,{children:"n."})," (of an ",(0,n.jsx)(t,{term:"error",children:(0,n.jsx)("i",{children:"error"})})," ) an ",(0,n.jsx)(t,{term:"error",children:(0,n.jsx)("i",{children:"error"})})," that is ",(0,n.jsx)(t,{term:"correctable",children:(0,n.jsx)("i",{children:"correctable"})})," by the continue restart."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"control form"})," ",(0,n.jsx)(r.em,{children:"n."})," 1. a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," that establishes one or more places to which control can be transferred. 2. a ",(0,n.jsx)(t,{term:"form",children:(0,n.jsx)("i",{children:"form"})})," that transfers control."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)("b",{children:"copy"})," ",(0,n.jsx)("i",{children:"n."})," 1. (of a ",(0,n.jsx)("i",{children:"cons C"}),") a ",(0,n.jsx)("i",{children:"fresh cons"})," with the ",(0,n.jsx)("i",{children:"same car"})," and ",(0,n.jsx)("i",{children:"cdr"})," as ",(0,n.jsx)("i",{children:"C"}),". 2. (of a ",(0,n.jsx)("i",{children:"list L"}),") a ",(0,n.jsx)("i",{children:"fresh list"})," with the ",(0,n.jsx)("i",{children:"same elements"})," as ",(0,n.jsx)("i",{children:"L"}),". (Only the ",(0,n.jsx)("i",{children:"list structure"})," is ",(0,n.jsx)("i",{children:"fresh"}),"; the ",(0,n.jsx)("i",{children:"elements"})," are the ",(0,n.jsx)("i",{children:"same"}),".) See the ",(0,n.jsx)("i",{children:"function"})," ",(0,n.jsx)("b",{children:"copy-list"}),". 3. (of an ",(0,n.jsx)("i",{children:"association list A"})," with ",(0,n.jsxs)("i",{children:["elements A",(0,n.jsx)("sub",{children:"i"})]}),") a ",(0,n.jsx)("i",{children:"fresh list B"})," with ",(0,n.jsxs)("i",{children:["elements B",(0,n.jsx)("sub",{children:"i"})]}),", each of which is ",(0,n.jsx)("b",{children:"nil"})," if ",(0,n.jsxs)("i",{children:["A",(0,n.jsx)("sub",{children:"i"})]}),"is ",(0,n.jsx)("b",{children:"nil"}),", or else a ",(0,n.jsx)("i",{children:"copy"})," of the ",(0,n.jsxs)("i",{children:["cons A",(0,n.jsx)("sub",{children:"i"})]}),". See the ",(0,n.jsx)("i",{children:"function"})," ",(0,n.jsx)("b",{children:"copy-alist"}),". 4. (of a ",(0,n.jsx)("i",{children:"tree T"}),") a ",(0,n.jsx)("i",{children:"fresh tree"})," with the ",(0,n.jsx)("i",{children:"same"})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.em,{children:"leaves"})," as ",(0,n.jsx)(t,{term:"t",children:(0,n.jsx)("i",{children:"T"})}),". See the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"copy-tree",children:(0,n.jsx)("b",{children:"copy-tree"})}),". 5. (of a ",(0,n.jsx)(r.em,{children:"random state R"}),") a ",(0,n.jsx)(r.em,{children:"fresh random state"})," that, if used as an argument to to the ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," ",(0,n.jsx)(i,{term:"random",children:(0,n.jsx)("b",{children:"random"})})," would produce the same series of \u201crandom\u201d values as ",(0,n.jsx)(r.em,{children:"R"})," would produce. 6. (of a ",(0,n.jsx)(r.em,{children:"structure S"}),") a ",(0,n.jsx)(r.em,{children:"fresh structure"})," that has the same ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," as ",(0,n.jsx)(r.em,{children:"S"}),", and that has slot values, each of which is the ",(0,n.jsx)(t,{term:"same",children:(0,n.jsx)("i",{children:"same"})})," as the corresponding slot value of ",(0,n.jsx)(r.em,{children:"S"}),". (Note that since the difference between a ",(0,n.jsx)(t,{term:"cons",children:(0,n.jsx)("i",{children:"cons"})}),", a ",(0,n.jsx)(t,{term:"list",children:(0,n.jsx)("i",{children:"list"})}),", and a ",(0,n.jsx)(t,{term:"tree",children:(0,n.jsx)("i",{children:"tree"})})," is a matter of \u201cview\u201d or \u201cintention,\u201d there can be no general-purpose ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"function"})})," which, based solely on the ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," of an ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"object"})}),", can determine which of these distinct meanings is intended. The distinction rests solely on the basis of the text description within this document. For example, phrases like \u201ca ",(0,n.jsx)(t,{term:"copy",children:(0,n.jsx)("i",{children:"copy"})})," of the given ",(0,n.jsx)(t,{term:"list",children:(0,n.jsx)("i",{children:"list"})}),"\u201d or \u201ccopy of the ",(0,n.jsx)(r.em,{children:"list x"}),"\u201d imply the second definition.)"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"correctable"})," ",(0,n.jsx)(r.em,{children:"adj."})," (of an ",(0,n.jsx)(t,{term:"error",children:(0,n.jsx)("i",{children:"error"})})," ) 1. (by a ",(0,n.jsx)(t,{term:"restart",children:(0,n.jsx)("i",{children:"restart"})})," other than ",(0,n.jsx)(r.strong,{children:"abort"})," that has been"]}),"\n",(0,n.jsxs)(r.p,{children:["associated with the ",(0,n.jsx)(t,{term:"error",children:(0,n.jsx)("i",{children:"error"})})," ) capable of being corrected by invoking that ",(0,n.jsx)(t,{term:"restart",children:(0,n.jsx)("i",{children:"restart"})}),". \u201cThe function ",(0,n.jsx)(i,{term:"cerror",children:(0,n.jsx)("b",{children:"cerror"})})," signals an error that is correctable by the ",(0,n.jsx)(r.strong,{children:"continue"})," ",(0,n.jsx)(t,{term:"restart",children:(0,n.jsx)("i",{children:"restart"})}),".\u201d (Note that correctability is not a property of an ",(0,n.jsx)(r.em,{children:"error object"}),", but rather a property of the ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})})," that is in effect when the ",(0,n.jsx)(t,{term:"error",children:(0,n.jsx)("i",{children:"error"})})," is ",(0,n.jsx)(r.em,{children:"signaled"}),". Specifically, the ",(0,n.jsx)(t,{term:"restart",children:(0,n.jsx)("i",{children:"restart"})})," is \u201cassociated with\u201d the ",(0,n.jsx)(r.em,{children:"error condition object"}),". See Section 9.1.4.2.4 (Associating a Restart with a Condition).) 2. (when no specific ",(0,n.jsx)(t,{term:"restart",children:(0,n.jsx)("i",{children:"restart"})})," is mentioned) ",(0,n.jsx)(t,{term:"correctable",children:(0,n.jsx)("i",{children:"correctable"})}),(0,n.jsx)("sub",{children:"1"})," by at least one ",(0,n.jsx)(t,{term:"restart",children:(0,n.jsx)("i",{children:"restart"})}),". \u201c",(0,n.jsx)(i,{term:"import",children:(0,n.jsx)("b",{children:"import"})})," signals a correctable error of ",(0,n.jsx)(t,{term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{term:"package-error",children:(0,n.jsx)("b",{children:"package-error"})})," if any of the imported symbols has the same name as some distinct symbol already accessible in the package.\u201d"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current input base"})," ",(0,n.jsx)(r.em,{children:"n."})," (in a ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})}),") the ",(0,n.jsx)(t,{term:"radix",children:(0,n.jsx)("i",{children:"radix"})})," that is the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(r.strong,{children:"*read-base*"})," in that ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", and that is the default ",(0,n.jsx)(t,{term:"radix",children:(0,n.jsx)("i",{children:"radix"})})," employed by the ",(0,n.jsx)(r.em,{children:"Lisp reader"})," and its related ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"functions"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current logical block"})," ",(0,n.jsx)(r.em,{children:"n."})," the context of the innermost lexically enclosing use of ",(0,n.jsx)(i,{term:"pprint-logical-block",children:(0,n.jsx)("b",{children:"pprint-logical-block"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current output base"})," ",(0,n.jsx)(r.em,{children:"n."})," (in a ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})}),") the ",(0,n.jsx)(t,{term:"radix",children:(0,n.jsx)("i",{children:"radix"})})," that is the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"*print-base*"})," in that ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", and that is the default ",(0,n.jsx)(t,{term:"radix",children:(0,n.jsx)("i",{children:"radix"})})," employed by the ",(0,n.jsx)(r.em,{children:"Lisp printer"})," and its related ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"functions"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current package"})," ",(0,n.jsx)(r.em,{children:"n."})," (in a ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})}),") the ",(0,n.jsx)(t,{term:"package",children:(0,n.jsx)("i",{children:"package"})})," that is the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(i,{term:"package",children:(0,n.jsx)("b",{children:"*package*"})})," in that ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", and that is the default ",(0,n.jsx)(t,{term:"package",children:(0,n.jsx)("i",{children:"package"})})," employed by the ",(0,n.jsx)(r.em,{children:"Lisp reader"})," and ",(0,n.jsx)(r.em,{children:"Lisp printer"})," , and their related ",(0,n.jsx)(t,{term:"function",children:(0,n.jsx)("i",{children:"functions"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current pprint dispatch table"})," ",(0,n.jsx)(r.em,{children:"n."})," (in a ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})}),") the ",(0,n.jsx)(t,{styled:!0,term:"pprint dispatch table",children:(0,n.jsx)("i",{children:"pprint dispatch table"})})," that is the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(i,{term:"print-pprint-dispatch",children:(0,n.jsx)("b",{children:"*print-pprint-dispatch*"})})," in that ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", and that is the default ",(0,n.jsx)(t,{styled:!0,term:"pprint dispatch table",children:(0,n.jsx)("i",{children:"pprint dispatch table"})})," employed by the ",(0,n.jsx)(t,{styled:!0,term:"pretty printer",children:(0,n.jsx)("i",{children:"pretty printer"})})," ."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current random state"})," ",(0,n.jsx)(r.em,{children:"n."})," (in a ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})}),") the ",(0,n.jsx)(t,{styled:!0,term:"random state",children:(0,n.jsx)("i",{children:"random state"})})," that is the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(i,{term:"random-state",children:(0,n.jsx)("b",{children:"*random-state*"})})," in that ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", and that is the default ",(0,n.jsx)(t,{styled:!0,term:"random state",children:(0,n.jsx)("i",{children:"random state"})})," employed by ",(0,n.jsx)(i,{term:"random",children:(0,n.jsx)("b",{children:"random"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"current readtable"})," ",(0,n.jsx)(r.em,{children:"n."})," (in a ",(0,n.jsx)(t,{styled:!0,term:"dynamic environment",children:(0,n.jsx)("i",{children:"dynamic environment"})}),") the ",(0,n.jsx)(t,{term:"readtable",children:(0,n.jsx)("i",{children:"readtable"})})," that is the ",(0,n.jsx)(t,{term:"value",children:(0,n.jsx)("i",{children:"value"})})," of ",(0,n.jsx)(i,{term:"readtable",children:(0,n.jsx)("b",{children:"*readtable*"})})," in that ",(0,n.jsx)(t,{term:"environment",children:(0,n.jsx)("i",{children:"environment"})}),", and that affects the way in which ",(0,n.jsx)(t,{term:"expression",children:(0,n.jsx)("i",{children:"expressions"})}),(0,n.jsx)("sub",{children:"2"})," are parsed into ",(0,n.jsx)(t,{term:"object",children:(0,n.jsx)("i",{children:"objects"})})," by the ",(0,n.jsx)(r.em,{children:"Lisp reader"})," ."]})]})}function a(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}function j(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,r,i)=>{i.d(r,{Z:()=>l,a:()=>c});var n=i(67294);const s={},t=n.createContext(s);function c(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);