"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[41604],{41781:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var t=r(85893),o=r(11151);function a(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"numerator, denominator"})," ",(0,t.jsx)(e.em,{children:"Function"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"numerator"})," ",(0,t.jsx)(e.em,{children:"rational \u2192 numerator"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"denominator"})," ",(0,t.jsx)(e.em,{children:"rational \u2192 denominator"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"rational"}),"\u2014a ",(0,t.jsx)(e.em,{children:"rational"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"numerator"}),"\u2014an ",(0,t.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"denominator"}),"\u2014a positive ",(0,t.jsx)(e.em,{children:"integer"})," ."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"numerator"})," and ",(0,t.jsx)(e.strong,{children:"denominator"})," reduce ",(0,t.jsx)(e.em,{children:"rational"})," to canonical form and compute the numerator or denominator of that number."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"numerator"})," and ",(0,t.jsx)(e.strong,{children:"denominator"})," return the numerator or denominator of the canonical form of ",(0,t.jsx)(e.em,{children:"rational"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["If ",(0,t.jsx)(e.em,{children:"rational"})," is an ",(0,t.jsx)(e.em,{children:"integer"})," , ",(0,t.jsx)(e.strong,{children:"numerator"})," returns ",(0,t.jsx)(e.em,{children:"rational"})," and ",(0,t.jsx)(e.strong,{children:"denominator"})," returns 1."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:"(numerator 1/2) \u2192 1 \n(denominator 12/36) \u2192 3 \n(numerator -1) \u2192 -1 \n(denominator (/ -33)) \u2192 33 \n(numerator (/ 8 -6)) \u2192 -4 \n(denominator (/ 8 -6)) \u2192 3 \n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"/"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,t.jsx)(e.p,{children:"(gcd (numerator x) (denominator x)) \u2192 1"})]})}function c(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}const i={},s="numerator, denominator",d={id:"chap-12/bc-c-dictionary/numerator",title:"numerator, denominator",description:"Expanded Reference: numerator, denominator",source:"@site/docs/chap-12/bc-c-dictionary/numerator.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/numerator",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/numerator",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/numerator.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"numberp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/numberp"},next:{title:"parse-integer",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/parseinteger"}},l={},m=[{value:"Expanded Reference: numerator, denominator",id:"expanded-reference-numerator-denominator",level:2}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"numerator-denominator",children:"numerator, denominator"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(e.h2,{id:"expanded-reference-numerator-denominator",children:"Expanded Reference: numerator, denominator"}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:"(numerator, denominator )\n"})})]})}function p(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},11151:(n,e,r)=>{r.d(e,{Z:()=>i,a:()=>c});var t=r(67294);const o={},a=t.createContext(o);function c(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:c(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);