"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[97367],{91719:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=t(85893),c=t(11151);const o={},a="make-instance-symbol",r={id:"meta-object-protocol/make-instance-symbol",title:"make-instance-symbol",description:"Method MAKE-INSTANCE",source:"@site/docs/meta-object-protocol/make-instance-symbol.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/make-instance-symbol",permalink:"/cl-language-reference/meta-object-protocol/make-instance-symbol",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/make-instance-symbol.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"make-instance-standard-class",permalink:"/cl-language-reference/meta-object-protocol/make-instance-standard-class"},next:{title:"make-instance",permalink:"/cl-language-reference/meta-object-protocol/make-instance"}},i={},l=[];function m(e){const n={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"make-instance-symbol",children:"make-instance-symbol"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Method"})," ",(0,s.jsx)(n.strong,{children:"MAKE-INSTANCE"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"make-instance"})," ",(0,s.jsx)(n.em,{children:"(class"})," symbol) ",(0,s.jsx)(n.code,{children:"&rest"})," ",(0,s.jsx)(n.em,{children:"initargs"})," => ",(0,s.jsx)(n.em,{children:"instance"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["This is a method on the generic function",(0,s.jsx)(n.a,{href:"/meta-object-protocol/make-instance",children:"make-instance"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This method simply invokes ",(0,s.jsx)(n.a,{href:"/meta-object-protocol/make-instance",children:"make-instance"})," recursively on the arguments (",(0,s.jsx)(n.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/f_find_c.htm#find-class",children:"find-class"})," ",(0,s.jsx)(n.em,{children:"class"}),") and ",(0,s.jsx)(n.em,{children:"initargs"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var s=t(67294);const c={},o=s.createContext(c);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);