"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[41713],{25747:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>j,frontMatter:()=>h,metadata:()=>c,toc:()=>m});var s=i(85893),r=i(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{DictionaryLink:i,GlossaryTerm:t}=n;return i||l("DictionaryLink",!0),t||l("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"parse-namestring"})," ",(0,s.jsx)(t,{term:"function",children:(0,s.jsx)("i",{children:"Function"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(i,{term:"parse-namestring",children:(0,s.jsx)("b",{children:"parse-namestring"})})," ",(0,s.jsx)(n.em,{children:"thing"})," &optional ",(0,s.jsx)(n.em,{children:"host default-pathname"})," &key ",(0,s.jsx)(n.em,{children:"start end junk-allowed \u2192 pathname, position"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"thing"}),"\u2014a ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})}),", a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),", or a ",(0,s.jsx)(t,{styled:!0,term:"stream associated with a file",children:(0,s.jsx)("i",{children:"stream associated with a file"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"host"}),"\u2014a ",(0,s.jsx)(t,{styled:!0,term:"valid pathname host",children:(0,s.jsx)("i",{children:"valid pathname host"})}),", a ",(0,s.jsx)(t,{styled:!0,term:"logical host",children:(0,s.jsx)("i",{children:"logical host"})}),", or ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"default-pathname"}),"\u2014a ",(0,s.jsx)(t,{styled:!0,term:"pathname designator",children:(0,s.jsx)("i",{children:"pathname designator"})})," . The default is the ",(0,s.jsx)(t,{term:"value",children:(0,s.jsx)("i",{children:"value"})})," of"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(i,{term:"default-pathname-defaults",children:(0,s.jsx)("b",{children:"*default-pathname-defaults*"})}),"."]}),"\n",(0,s.jsx)(i,{term:"parse-namestring",children:(0,s.jsx)("b",{children:"parse-namestring"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"start"}),", ",(0,s.jsx)(n.em,{children:"end"}),"\u2014",(0,s.jsx)(t,{styled:!0,term:"bounding index designator",children:(0,s.jsx)("i",{children:"bounding index designators"})})," of ",(0,s.jsx)(n.em,{children:"thing"}),". The defaults for ",(0,s.jsx)(n.em,{children:"start"})," and ",(0,s.jsx)(n.em,{children:"end"})," are 0 and ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),", respectively."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"junk-allowed"}),"\u2014a ",(0,s.jsx)(t,{styled:!0,term:"generalized boolean",children:(0,s.jsx)("i",{children:"generalized boolean"})}),". The default is ",(0,s.jsx)(t,{term:"false",children:(0,s.jsx)("i",{children:"false"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),"\u2014a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),", or ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"position"}),"\u2014a ",(0,s.jsx)(t,{styled:!0,term:"bounding index designator",children:(0,s.jsx)("i",{children:"bounding index designator"})})," for ",(0,s.jsx)(n.em,{children:"thing"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["Converts ",(0,s.jsx)(n.em,{children:"thing"})," into a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"host"})," supplies a host name with respect to which the parsing occurs."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"thing"})," is a ",(0,s.jsx)(t,{styled:!0,term:"stream associated with a file",children:(0,s.jsx)("i",{children:"stream associated with a file"})}),", processing proceeds as if the ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," used to open that ",(0,s.jsx)(t,{term:"file",children:(0,s.jsx)("i",{children:"file"})})," had been supplied instead."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"thing"})," is a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),", the ",(0,s.jsx)(n.em,{children:"host"})," and the host component of ",(0,s.jsx)(n.em,{children:"thing"})," are compared. If they match, two values are immediately returned: ",(0,s.jsx)(n.em,{children:"thing"})," and ",(0,s.jsx)(n.em,{children:"start"}),"; otherwise (if they do not match), an error is signaled."]}),"\n",(0,s.jsxs)(n.p,{children:["Otherwise (if ",(0,s.jsx)(n.em,{children:"thing"})," is a ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})}),"), ",(0,s.jsx)(i,{term:"parse-namestring",children:(0,s.jsx)("b",{children:"parse-namestring"})})," parses the name of a ",(0,s.jsx)(t,{term:"file",children:(0,s.jsx)("i",{children:"file"})})," within the substring of ",(0,s.jsx)(n.em,{children:"thing"})," bounded by ",(0,s.jsx)(n.em,{children:"start"})," and ",(0,s.jsx)(n.em,{children:"end"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"thing"})," is a ",(0,s.jsx)(t,{term:"string",children:(0,s.jsx)("i",{children:"string"})})," then the substring of ",(0,s.jsx)(n.em,{children:"thing bounded"})," by ",(0,s.jsx)(n.em,{children:"start"})," and ",(0,s.jsx)(n.em,{children:"end"})," is parsed into a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," as follows:"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2022"})," If ",(0,s.jsx)(n.em,{children:"host"})," is a ",(0,s.jsx)(t,{styled:!0,term:"logical host",children:(0,s.jsx)("i",{children:"logical host"})})," then ",(0,s.jsx)(n.em,{children:"thing"})," is parsed as a ",(0,s.jsx)(n.em,{children:"logical pathname namestring"})," on the ",(0,s.jsx)(n.em,{children:"host"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2022"})," If ",(0,s.jsx)(n.em,{children:"host"})," is ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})})," and ",(0,s.jsx)(n.em,{children:"thing"})," is a syntactically valid ",(0,s.jsx)(n.em,{children:"logical pathname namestring"})," containing an explicit host, then it is parsed as a ",(0,s.jsx)(n.em,{children:"logical pathname namestring"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2022"})," If ",(0,s.jsx)(n.em,{children:"host"})," is ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),", ",(0,s.jsx)(n.em,{children:"default-pathname"})," is a ",(0,s.jsx)(t,{styled:!0,term:"logical pathname",children:(0,s.jsx)("i",{children:"logical pathname"})}),", and ",(0,s.jsx)(n.em,{children:"thing"})," is a syntactically valid ",(0,s.jsx)(n.em,{children:"logical pathname namestring"})," without an explicit host, then it is parsed as a ",(0,s.jsx)(n.em,{children:"logical pathname namestring"})," on the host that is the host component of ",(0,s.jsx)(n.em,{children:"default-pathname"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2022"})," Otherwise, the parsing of ",(0,s.jsx)(n.em,{children:"thing"})," is ",(0,s.jsx)(t,{term:"implementation-defined",children:(0,s.jsx)("i",{children:"implementation-defined"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In the first of these cases, the host portion of the ",(0,s.jsx)(t,{styled:!0,term:"logical pathname",children:(0,s.jsx)("i",{children:"logical pathname"})})," namestring and its following ",(0,s.jsx)(t,{term:"colon",children:(0,s.jsx)("i",{children:"colon"})})," are optional."]}),"\n",(0,s.jsxs)(n.p,{children:["If the host portion of the namestring and ",(0,s.jsx)(n.em,{children:"host"})," are both present and do not match, an error is signaled."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"junk-allowed"})," is ",(0,s.jsx)(t,{term:"true",children:(0,s.jsx)("i",{children:"true"})}),", then the ",(0,s.jsx)(t,{styled:!0,term:"primary value",children:(0,s.jsx)("i",{children:"primary value"})})," is the ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," parsed or, if no syntactically correct ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," was seen, ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),". If ",(0,s.jsx)(n.em,{children:"junk-allowed"})," is ",(0,s.jsx)(t,{term:"false",children:(0,s.jsx)("i",{children:"false"})}),", then the entire substring is scanned, and the ",(0,s.jsx)(t,{styled:!0,term:"primary value",children:(0,s.jsx)("i",{children:"primary value"})})," is the ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," parsed."]}),"\n",(0,s.jsxs)(n.p,{children:["In either case, the ",(0,s.jsx)(t,{styled:!0,term:"secondary value",children:(0,s.jsx)("i",{children:"secondary value"})})," is the index into ",(0,s.jsx)(n.em,{children:"thing"})," of the delimiter that terminated the"]}),"\n",(0,s.jsxs)(n.p,{children:["parse, or the index beyond the substring if the parse terminated at the end of the substring (as will always be the case if ",(0,s.jsx)(n.em,{children:"junk-allowed"})," is ",(0,s.jsx)(t,{term:"false",children:(0,s.jsx)("i",{children:"false"})}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["Parsing a ",(0,s.jsx)(n.em,{children:"null string"})," always succeeds, producing a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," with all components (except the host) equal to ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"thing"})," contains an explicit host name and no explicit device name, then it is ",(0,s.jsx)(n.em,{children:"implementation defined"})," whether ",(0,s.jsx)(i,{term:"parse-namestring",children:(0,s.jsx)("b",{children:"parse-namestring"})})," will supply the standard default device for that host as the device component of the resulting ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:'(setq q (parse-namestring "test")) \n\u2192 #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME "test" \n\t      :TYPE NIL :VERSION NIL) \n(pathnamep q) \u2192 true \n(parse-namestring "test") \n\u2192 #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME "test" \n\t      :TYPE NIL :VERSION NIL), 4 \n(setq s (open *xxx*)) \u2192 #<Input File Stream...> \n(parse-namestring s) \n\u2192 #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME *xxx* \n\t      :TYPE NIL :VERSION NIL), 0 \n(parse-namestring "test" nil nil :start 2 :end 4 ) \n\u2192 #S(PATHNAME ...), 15 \n(parse-namestring "foo.lisp") \n\u2192 #P"foo.lisp" \n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"junk-allowed"})," is ",(0,s.jsx)(t,{term:"false",children:(0,s.jsx)("i",{children:"false"})}),", an error of ",(0,s.jsx)(t,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(i,{term:"parse-error",children:(0,s.jsx)("b",{children:"parse-error"})})," is signaled if ",(0,s.jsx)(n.em,{children:"thing"})," does not consist entirely of the representation of a ",(0,s.jsx)(t,{term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})}),", possibly surrounded on either side by ",(0,s.jsx)(t,{term:"whitespace",children:(0,s.jsx)("i",{children:"whitespace"})}),(0,s.jsx)("sub",{children:"1"})," characters if that is appropriate to the cultural conventions of the implementation."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"host"})," is supplied and not ",(0,s.jsx)(i,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),", and ",(0,s.jsx)(n.em,{children:"thing"})," contains a manifest host name, an error of ",(0,s.jsx)(t,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(i,{term:"error",children:(0,s.jsx)("b",{children:"error"})})," is signaled if the hosts do not match."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"thing"})," is a ",(0,s.jsx)(t,{styled:!0,term:"logical pathname",children:(0,s.jsx)("i",{children:"logical pathname"})})," namestring and if the host portion of the namestring and ",(0,s.jsx)(n.em,{children:"host"})," are both present and do not match, an error of ",(0,s.jsx)(t,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(i,{term:"error",children:(0,s.jsx)("b",{children:"error"})})," is signaled."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(i,{term:"pathname",children:(0,s.jsx)("b",{children:"pathname"})}),", ",(0,s.jsx)(i,{term:"logical-pathname",children:(0,s.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.2.2.2.3 (",":UNSPE"," CIFIC as a Component Value), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,s.jsx)(i,{term:"wild-pathname-p",children:(0,s.jsx)("b",{children:"wild-pathname-p"})})]})}function a(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const h={title:"parse-namestring"},d="parse-namestring",c={id:"chap-19/bj-e-dictionary/parse-namestring_function",title:"parse-namestring",description:"Expanded Reference: parse-namestring",source:"@site/docs/chap-19/bj-e-dictionary/parse-namestring_function.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/parse-namestring_function",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/parse-namestring_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-19/bj-e-dictionary/parse-namestring_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"parse-namestring"},sidebar:"tutorialSidebar",previous:{title:"namestring, file-namestring, directory-namestring, host-namestring, enough-namestring",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/namestring_file-namestring_directory-namestring_host-namestring_enough-namestring_function"},next:{title:"pathname-match-p",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/pathname-match-p_function"}},o={},m=[{value:"Expanded Reference: parse-namestring",id:"expanded-reference-parse-namestring",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"parse-namestring",children:"parse-namestring"}),"\n","\n","\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-parse-namestring",children:"Expanded Reference: parse-namestring"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(parse-namestring )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>a});var s=i(67294);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);