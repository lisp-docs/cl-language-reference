"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[35515],{85561:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>h});var r=i(85893),t=i(11151);function a(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2217"}),(0,r.jsx)(n.strong,{children:"terminal-io"}),(0,r.jsx)(n.em,{children:"\u2217 Variable"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,r.jsxs)(n.p,{children:["a ",(0,r.jsx)(n.em,{children:"bidirectional stream"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"implementation-dependent"}),", but it must be an ",(0,r.jsx)(n.em,{children:"open stream"})," that is not a ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to an ",(0,r.jsx)(n.em,{children:"I/O customization variables"})," but that might be a ",(0,r.jsx)(n.em,{children:"generalized synonym stream"})," to the ",(0,r.jsx)(n.em,{children:"value"})," of some ",(0,r.jsx)(n.em,{children:"I/O customization variable"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*terminal-io*"}),", called ",(0,r.jsx)(n.em,{children:"terminal I/O"}),", is ordinarily a ",(0,r.jsx)(n.em,{children:"bidirectional stream"})," that connects to the user\u2019s console. Typically, writing to this ",(0,r.jsx)(n.em,{children:"stream"})," would cause the output to appear on a display screen, for example, and reading from the ",(0,r.jsx)(n.em,{children:"stream"})," would accept input from a keyboard. It is intended that standard input functions such as ",(0,r.jsx)(n.strong,{children:"read"})," and ",(0,r.jsx)(n.strong,{children:"read-char"}),", when used with this ",(0,r.jsx)(n.em,{children:"stream"}),", cause echoing of the input into the output side of the ",(0,r.jsx)(n.em,{children:"stream"}),". The means by which this is accomplished are ",(0,r.jsx)(n.em,{children:"implementation-dependent"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The effect of changing the ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.strong,{children:"*terminal-io*"}),", either by ",(0,r.jsx)(n.em,{children:"binding"})," or ",(0,r.jsx)(n.em,{children:"assignment"}),", is ",(0,r.jsx)(n.em,{children:"implementation-defined"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:'\n(progn (prin1 \u2019foo) (prin1 \u2019bar \\*terminal-io\\*)) \n\n\n\n\u25b7 FOOBAR \n\u2192 BAR \n(with-output-to-string (\\*standard-output\\*) \n  (prin1 \u2019foo) \n  (prin1 \u2019bar \\*terminal-io\\*)) \n\u25b7 BAR \n\u2192 "FOO" \n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})})]})}function s(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}const c={},o="*terminal-io*",l={id:"chap-21/cb-c-dictionary/terminal-io_variable",title:"\\*terminal-io\\*",description:"Expanded Reference: \\terminal-io\\",source:"@site/docs/chap-21/cb-c-dictionary/terminal-io_variable.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/terminal-io_variable",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/terminal-io_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/terminal-io_variable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"synonym-stream-symbol",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/synonymstreamsymbol"},next:{title:"terpri, fresh-line",permalink:"/cl-language-reference/docs/chap-21/cb-c-dictionary/terpri"}},d={},h=[{value:"Expanded Reference: *terminal-io*",id:"expanded-reference-terminal-io",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"terminal-io",children:"*terminal-io*"}),"\n","\n","\n",(0,r.jsx)(s,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-terminal-io",children:"Expanded Reference: *terminal-io*"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"*terminal-io*\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>s});var r=i(67294);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);