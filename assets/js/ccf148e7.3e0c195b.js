"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23906],{62635:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>x,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var c=r(85893),t=r(11151);function i(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"eql"})," ",(0,c.jsx)(n.em,{children:"Type Specifier"})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,c.jsx)(n.p,{children:"Combining."}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,c.jsxs)(n.p,{children:["(eql ",(0,c.jsx)(n.em,{children:"object"}),")"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"object"}),"\u2014an ",(0,c.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,c.jsxs)(n.p,{children:["Represents the ",(0,c.jsx)(n.em,{children:"type"})," of all ",(0,c.jsx)(n.em,{children:"x"})," for which (eql ",(0,c.jsx)(n.em,{children:"object x"}),") is true."]}),"\n",(0,c.jsxs)(n.p,{children:["The argument ",(0,c.jsx)(n.em,{children:"object"})," is required. The ",(0,c.jsx)(n.em,{children:"object"})," can be ",(0,c.jsx)(n.strong,{children:"*"}),", but if so it denotes itself (the symbol ",(0,c.jsx)(n.strong,{children:"*"}),") and does not represent an unspecified value. The ",(0,c.jsx)(n.em,{children:"symbol"})," ",(0,c.jsx)(n.strong,{children:"eql"})," is not valid as an ",(0,c.jsx)(n.em,{children:"atomic type specifier"})," ."]})]})}function s(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}const o={},l="eql",d={id:"chap-4/e-e-dictionary/eql",title:"eql",description:"Expanded Reference: eql",source:"@site/docs/chap-4/e-e-dictionary/eql.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/eql",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/eql",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-4/e-e-dictionary/eql.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"deftype",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/deftype"},next:{title:"function",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/function"}},a={},p=[{value:"Expanded Reference: eql",id:"expanded-reference-eql",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"eql",children:"eql"}),"\n","\n","\n",(0,c.jsx)(s,{}),"\n",(0,c.jsx)(n.h2,{id:"expanded-reference-eql",children:"Expanded Reference: eql"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lisp",children:"(eql )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>s});var c=r(67294);const t={},i=c.createContext(t);function s(e){const n=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);