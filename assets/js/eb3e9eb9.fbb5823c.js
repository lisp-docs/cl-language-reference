"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[96337],{45028:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>c,toc:()=>h});var r=n(85893),s=n(11151);const t={title:"L",sidebar_position:108},l=void 0,c={id:"chap-26/l",title:"L",description:"L",source:"@site/docs/chap-26/l.md",sourceDirName:"chap-26",slug:"/chap-26/l",permalink:"/cl-language-reference/chap-26/l",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-26/l.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",sidebarPosition:108,frontMatter:{title:"L",sidebar_position:108},sidebar:"tutorialSidebar",previous:{title:"K",permalink:"/cl-language-reference/chap-26/k"},next:{title:"M",permalink:"/cl-language-reference/chap-26/m"}},d={},h=[];function a(e){const i={em:"em",p:"p",strong:"strong",...(0,s.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:t}=i;return n||x("DictionaryLink",!0),t||x("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"L"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lambda combination"})," ",(0,r.jsx)(i.em,{children:"n. Trad."})," a ",(0,r.jsx)(t,{styled:!0,term:"lambda form",children:(0,r.jsx)("i",{children:"lambda form"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lambda expression"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})})," which can be used in place of a ",(0,r.jsx)(t,{styled:!0,term:"function name",children:(0,r.jsx)("i",{children:"function name"})})," in certain contexts to denote a ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," by directly describing its behavior rather than indirectly by referring to the name of an ",(0,r.jsx)(i.em,{children:"established function"}),"; its name derives from the fact that its first element is the ",(0,r.jsx)(t,{term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})})," lambda. See ",(0,r.jsx)(n,{term:"lambda",children:(0,r.jsx)("b",{children:"lambda"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lambda form"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})})," that is a ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})})," and that has a first element which is a ",(0,r.jsx)(t,{styled:!0,term:"lambda expression",children:(0,r.jsx)("i",{children:"lambda expression"})})," representing a ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," to be called on ",(0,r.jsx)(t,{term:"argument",children:(0,r.jsx)("i",{children:"arguments"})})," which are the result of ",(0,r.jsx)(i.em,{children:"evaluating"})," subsequent elements of the ",(0,r.jsx)(t,{styled:!0,term:"lambda form",children:(0,r.jsx)("i",{children:"lambda form"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lambda list"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})})," that specifies a set of ",(0,r.jsx)(t,{term:"parameter",children:(0,r.jsx)("i",{children:"parameters"})})," (sometimes called ",(0,r.jsx)(t,{styled:!0,term:"lambda variable",children:(0,r.jsx)("i",{children:"lambda variables"})}),") and a protocol for receiving ",(0,r.jsx)(t,{term:"value",children:(0,r.jsx)("i",{children:"values"})})," for those ",(0,r.jsx)(t,{term:"parameter",children:(0,r.jsx)("i",{children:"parameters"})}),"; that is, an ",(0,r.jsx)(t,{styled:!0,term:"ordinary lambda list",children:(0,r.jsx)("i",{children:"ordinary lambda list"})}),", an ",(0,r.jsx)(t,{styled:!0,term:"extended lambda list",children:(0,r.jsx)("i",{children:"extended lambda list"})}),", or a ",(0,r.jsx)(t,{styled:!0,term:"modified lambda list",children:(0,r.jsx)("i",{children:"modified lambda list"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lambda list keyword"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"symbol",children:(0,r.jsx)("i",{children:"symbol"})})," whose ",(0,r.jsx)(t,{term:"name",children:(0,r.jsx)("i",{children:"name"})})," begins with ",(0,r.jsx)(t,{term:"ampersand",children:(0,r.jsx)("i",{children:"ampersand"})})," and that is specially recognized in a ",(0,r.jsx)(t,{styled:!0,term:"lambda list",children:(0,r.jsx)("i",{children:"lambda list"})}),". Note that no ",(0,r.jsx)(i.em,{children:"standardized lambda list keyword"})," is in the KEYWORD ",(0,r.jsx)(t,{term:"package",children:(0,r.jsx)("i",{children:"package"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lambda variable"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{styled:!0,term:"formal parameter",children:(0,r.jsx)("i",{children:"formal parameter"})})," , used to emphasize the ",(0,r.jsx)(t,{term:"variable",children:(0,r.jsx)("i",{children:"variable"})}),"\u2019s relation to the ",(0,r.jsx)(t,{styled:!0,term:"lambda list",children:(0,r.jsx)("i",{children:"lambda list"})})," that ",(0,r.jsx)(i.em,{children:"established"})," it."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"leaf"})," ",(0,r.jsx)(i.em,{children:"n."})," 1. an ",(0,r.jsx)(t,{term:"atom",children:(0,r.jsx)("i",{children:"atom"})})," in a ",(0,r.jsx)(t,{term:"tree",children:(0,r.jsx)("i",{children:"tree"})}),(0,r.jsx)("sub",{children:"1"}),". 2. a terminal node of a ",(0,r.jsx)(t,{term:"tree",children:(0,r.jsx)("i",{children:"tree"})}),(0,r.jsx)("sub",{children:"2"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"leap seconds"})," ",(0,r.jsx)(i.em,{children:"n."})," additional one-second intervals of time that are occasionally inserted into the true calendar by official timekeepers as a correction similar to \u201cleap years.\u201d All Common Lisp ",(0,r.jsx)(t,{term:"time",children:(0,r.jsx)("i",{children:"time"})})," representations ignore ",(0,r.jsx)(t,{styled:!0,term:"leap seconds",children:(0,r.jsx)("i",{children:"leap seconds"})}),"; every day is assumed to be exactly 86400 seconds long."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"left-parenthesis"})," ",(0,r.jsx)(i.em,{children:"n."})," the ",(0,r.jsx)(t,{styled:!0,term:"standard character",children:(0,r.jsx)("i",{children:"standard character"})})," \u201c(\u201d, that is variously called \u201cleft"]}),"\n",(0,r.jsx)(i.p,{children:"parenthesis\u201d or \u201copen parenthesis\u201d See Figure 2\u20135."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(n,{term:"length",children:(0,r.jsx)("b",{children:"length"})})," ",(0,r.jsx)(i.em,{children:"n."})," (of a ",(0,r.jsx)(i.em,{children:"sequence"}),") the number of ",(0,r.jsx)(t,{term:"element",children:(0,r.jsx)("i",{children:"elements"})})," in the ",(0,r.jsx)(i.em,{children:"sequence"}),". (Note that if the ",(0,r.jsx)(i.em,{children:"sequence"})," is a ",(0,r.jsx)(t,{term:"vector",children:(0,r.jsx)("i",{children:"vector"})})," with a ",(0,r.jsx)(t,{styled:!0,term:"fill pointer",children:(0,r.jsx)("i",{children:"fill pointer"})})," , its ",(0,r.jsx)(t,{term:"length",children:(0,r.jsx)("i",{children:"length"})})," is the same as the ",(0,r.jsx)(t,{styled:!0,term:"fill pointer",children:(0,r.jsx)("i",{children:"fill pointer"})})," even though the total allocated size of the ",(0,r.jsx)(t,{term:"vector",children:(0,r.jsx)("i",{children:"vector"})})," might be larger.)"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lexical binding"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"binding",children:(0,r.jsx)("i",{children:"binding"})})," in a ",(0,r.jsx)(t,{styled:!0,term:"lexical environment",children:(0,r.jsx)("i",{children:"lexical environment"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lexical closure"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," that, when invoked on ",(0,r.jsx)(t,{term:"argument",children:(0,r.jsx)("i",{children:"arguments"})}),", executes the body of a ",(0,r.jsx)(t,{styled:!0,term:"lambda expression",children:(0,r.jsx)("i",{children:"lambda expression"})})," in the ",(0,r.jsx)(t,{styled:!0,term:"lexical environment",children:(0,r.jsx)("i",{children:"lexical environment"})})," that was captured at the time of the creation of the ",(0,r.jsx)(t,{styled:!0,term:"lexical closure",children:(0,r.jsx)("i",{children:"lexical closure"})}),", augmented by ",(0,r.jsx)(t,{term:"binding",children:(0,r.jsx)("i",{children:"bindings"})})," of the ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})}),"\u2019s ",(0,r.jsx)(t,{term:"parameter",children:(0,r.jsx)("i",{children:"parameters"})})," to the corresponding ",(0,r.jsx)(t,{term:"argument",children:(0,r.jsx)("i",{children:"arguments"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lexical environment"})," ",(0,r.jsx)(i.em,{children:"n."})," that part of the ",(0,r.jsx)(t,{term:"environment",children:(0,r.jsx)("i",{children:"environment"})})," that contains ",(0,r.jsx)(t,{term:"binding",children:(0,r.jsx)("i",{children:"bindings"})})," whose names have ",(0,r.jsx)(t,{styled:!0,term:"lexical scope",children:(0,r.jsx)("i",{children:"lexical scope"})}),". A ",(0,r.jsx)(t,{styled:!0,term:"lexical environment",children:(0,r.jsx)("i",{children:"lexical environment"})})," contains, among other things:"]}),"\n",(0,r.jsxs)(i.p,{children:["ordinary ",(0,r.jsx)(t,{term:"binding",children:(0,r.jsx)("i",{children:"bindings"})})," of ",(0,r.jsx)(i.em,{children:"variable names"})," to ",(0,r.jsx)(t,{term:"value",children:(0,r.jsx)("i",{children:"values"})}),", lexically ",(0,r.jsx)(i.em,{children:"established bindings"})," of ",(0,r.jsx)(t,{styled:!0,term:"function name",children:(0,r.jsx)("i",{children:"function names"})})," to ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"functions"})}),", ",(0,r.jsx)(t,{term:"macro",children:(0,r.jsx)("i",{children:"macros"})}),", ",(0,r.jsx)(t,{styled:!0,term:"symbol macro",children:(0,r.jsx)("i",{children:"symbol macros"})}),", ",(0,r.jsx)(t,{styled:!0,term:"block",children:(0,r.jsx)("i",{children:"blocks"})}),", ",(0,r.jsx)(t,{styled:!0,term:"tag",children:(0,r.jsx)("i",{children:"tags"})}),", and ",(0,r.jsx)(t,{styled:!0,term:"local declaration",children:(0,r.jsx)("i",{children:"local declarations"})})," (see ",(0,r.jsx)(n,{term:"declare",children:(0,r.jsx)("b",{children:"declare"})}),")."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lexical scope"})," ",(0,r.jsx)(i.em,{children:"n. scope"})," that is limited to a spatial or textual region within the"]}),"\n",(0,r.jsxs)(i.p,{children:["establishing ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),". \u201cThe names of parameters to a function normally are lexically scoped.\u201d"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lexical variable"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"variable",children:(0,r.jsx)("i",{children:"variable"})})," the ",(0,r.jsx)(t,{term:"binding",children:(0,r.jsx)("i",{children:"binding"})})," for which is in the ",(0,r.jsx)(t,{styled:!0,term:"lexical environment",children:(0,r.jsx)("i",{children:"lexical environment"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Lisp image"})," ",(0,r.jsx)(i.em,{children:"n."})," a running instantiation of a Common Lisp ",(0,r.jsx)(t,{term:"implementation",children:(0,r.jsx)("i",{children:"implementation"})}),". A ",(0,r.jsx)(i.em,{children:"Lisp image"})," is characterized by a single address space in which any ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," can directly refer to any another in conformance with this specification, and by a single, common, ",(0,r.jsx)(t,{styled:!0,term:"global environment",children:(0,r.jsx)("i",{children:"global environment"})}),". (External operating systems sometimes call this a \u201ccore image,\u201d \u201cfork,\u201d \u201cincarnation,\u201d \u201cjob,\u201d or \u201cprocess.\u201d Note however, that the issue of a \u201cprocess\u201d in such"]}),"\n",(0,r.jsxs)(i.p,{children:["an operating system is technically orthogonal to the issue of a ",(0,r.jsx)(i.em,{children:"Lisp image"})," being defined here. Depending on the operating system, a single \u201cprocess\u201d might have multiple ",(0,r.jsx)(i.em,{children:"Lisp images"}),", and multiple \u201cprocesses\u201d might reside in a single ",(0,r.jsx)(i.em,{children:"Lisp image"}),". Hence, it is the idea of a fully shared address space for direct reference among all ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"objects"})})," which is the defining characteristic. Note, too, that two \u201cprocesses\u201d which have a communication"]}),"\n",(0,r.jsxs)(i.p,{children:["area that permits the sharing of some but not all ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"objects"})})," are considered to be distinct ",(0,r.jsx)(i.em,{children:"Lisp images"}),".)"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Lisp printer"})," ",(0,r.jsx)(i.em,{children:"n. Trad."})," the procedure that prints the character representation of an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," onto a ",(0,r.jsx)(t,{term:"stream",children:(0,r.jsx)("i",{children:"stream"})}),". (This procedure is implemented by the ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," ",(0,r.jsx)(n,{term:"write",children:(0,r.jsx)("b",{children:"write"})}),".)"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Lisp read-eval-print loop"})," ",(0,r.jsx)(i.em,{children:"n. Trad."})," an endless loop that ",(0,r.jsx)(t,{term:"read",children:(0,r.jsx)("i",{children:"reads"})}),(0,r.jsx)("sub",{children:"2"})," a ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),", ",(0,r.jsx)(t,{term:"evaluate",children:(0,r.jsx)("i",{children:"evaluates"})})," it, and prints (",(0,r.jsx)(i.em,{children:"i.e."}),", ",(0,r.jsx)(t,{term:"write",children:(0,r.jsx)("i",{children:"writes"})}),(0,r.jsx)("sub",{children:"2"}),") the results. In many ",(0,r.jsx)(t,{term:"implementation",children:(0,r.jsx)("i",{children:"implementations"})}),", the default mode of interaction with Common Lisp during program development is through such a loop."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Lisp reader"})," ",(0,r.jsx)(i.em,{children:"n. Trad."})," the procedure that parses character representations of ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"objects"})})," from a ",(0,r.jsx)(t,{term:"stream",children:(0,r.jsx)("i",{children:"stream"})}),", producing ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"objects"})}),". (This procedure is implemented by the ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," ",(0,r.jsx)(n,{term:"read",children:(0,r.jsx)("b",{children:"read"})}),".)"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(n,{term:"list",children:(0,r.jsx)("b",{children:"list"})})," ",(0,r.jsx)(i.em,{children:"n."})," 1. a chain of ",(0,r.jsx)(i.em,{children:"conses"})," in which the ",(0,r.jsx)(t,{term:"car",children:(0,r.jsx)("i",{children:"car"})})," of each ",(0,r.jsx)(t,{term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," is an ",(0,r.jsx)(t,{term:"element",children:(0,r.jsx)("i",{children:"element"})})," of the ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})}),", and the ",(0,r.jsx)(t,{term:"cdr",children:(0,r.jsx)("i",{children:"cdr"})})," of each ",(0,r.jsx)(t,{term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," is either the next link in the chain or a terminating ",(0,r.jsx)(t,{term:"atom",children:(0,r.jsx)("i",{children:"atom"})}),". See also ",(0,r.jsxs)(i.em,{children:["proper list",(0,r.jsx)(t,{term:"t",children:(0,r.jsx)("i",{children:", "})}),"dotted list"]}),", or ",(0,r.jsx)(t,{styled:!0,term:"circular list",children:(0,r.jsx)("i",{children:"circular list"})}),". 2. the ",(0,r.jsx)(t,{term:"type",children:(0,r.jsx)("i",{children:"type"})})," that is the union of ",(0,r.jsx)(n,{term:"null",children:(0,r.jsx)("b",{children:"null"})})," and ",(0,r.jsx)(n,{term:"cons",children:(0,r.jsx)("b",{children:"cons"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"list designator"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"designator",children:(0,r.jsx)("i",{children:"designator"})})," for a ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})})," of ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"objects"})}),"; that is, an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," that denotes a ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})})," and that is one of: a ",(0,r.jsx)(i.em,{children:"non-nil atom"})," (denoting a ",(0,r.jsx)(i.em,{children:"singleton list"})," whose ",(0,r.jsx)(t,{term:"element",children:(0,r.jsx)("i",{children:"element"})})," is that ",(0,r.jsx)(i.em,{children:"non-nil atom"}),") or a ",(0,r.jsx)(t,{styled:!0,term:"proper list",children:(0,r.jsx)("i",{children:"proper list"})})," (denoting itself)."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)("b",{children:"list structure"})," ",(0,r.jsx)("i",{children:"n."})," (of a ",(0,r.jsx)("i",{children:"list"}),") the set of ",(0,r.jsx)("i",{children:"conses"})," that make up the ",(0,r.jsx)("i",{children:"list"}),". Note that while the ",(0,r.jsx)("i",{children:"car"})," ",(0,r.jsxs)("sub",{children:["1",(0,r.jsx)("i",{children:"b"})]})," component of each such ",(0,r.jsx)("i",{children:"cons"})," is part of the ",(0,r.jsx)("i",{children:"list structure"}),", the ",(0,r.jsx)("i",{children:"objects"})," that are ",(0,r.jsx)("i",{children:"elements"})," of the ",(0,r.jsx)("i",{children:"list"})," (",(0,r.jsx)("i",{children:"i.e."}),", the ",(0,r.jsx)("i",{children:"objects"})," that are the ",(0,r.jsx)("i",{children:"cars"}),(0,r.jsx)("sub",{children:"2"})," of each ",(0,r.jsx)("i",{children:"cons"})," in the ",(0,r.jsx)("i",{children:"list"}),") are not themselves part of its ",(0,r.jsx)("i",{children:"list structure"}),", even if they are ",(0,r.jsx)("i",{children:"conses"}),", except in the (",(0,r.jsx)("i",{children:"circular"})," ",(0,r.jsx)("sub",{children:"2"}),") case where the ",(0,r.jsx)("i",{children:"list"})," actually contains one of its ",(0,r.jsx)("i",{children:"tails"})," as an ",(0,r.jsx)("i",{children:"element"}),". (The ",(0,r.jsx)("i",{children:"list structure"})," of a ",(0,r.jsx)("i",{children:"list"})," is sometimes redundantly referred to as its \u201ctop-level list structure\u201d in order to emphasize that any ",(0,r.jsx)("i",{children:"conses"})," that are ",(0,r.jsx)("i",{children:"elements"})," of the ",(0,r.jsx)("i",{children:"list"})," are not involved.)"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"literal"})," ",(0,r.jsx)(i.em,{children:"adj."})," (of an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})}),") referenced directly in a program rather than being computed by the program; that is, appearing as data in a ",(0,r.jsx)(n,{term:"quote",children:(0,r.jsx)("b",{children:"quote"})})," ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),", or, if the ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," is a ",(0,r.jsx)(i.em,{children:"self evaluating object"}),', appearing as unquoted data. \u201cIn the form (cons "one" \u2019("two")), the expressions "one", ("two"), and "two" are literal objects.\u201d']}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(n,{term:"load",children:(0,r.jsx)("b",{children:"load"})})," ",(0,r.jsx)(i.em,{children:"v.t."})," (a ",(0,r.jsx)(t,{term:"file",children:(0,r.jsx)("i",{children:"file"})}),") to cause the ",(0,r.jsx)(t,{term:"code",children:(0,r.jsx)("i",{children:"code"})})," contained in the ",(0,r.jsx)(t,{term:"file",children:(0,r.jsx)("i",{children:"file"})})," to be ",(0,r.jsx)(i.em,{children:"executed"}),". See the ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," ",(0,r.jsx)(n,{term:"load",children:(0,r.jsx)("b",{children:"load"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"load time"})," ",(0,r.jsx)(i.em,{children:"n."})," the duration of time that the loader is ",(0,r.jsx)(i.em,{children:"loading compiled code"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"load time value"})," ",(0,r.jsx)(i.em,{children:"n."})," an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," referred to in ",(0,r.jsx)(t,{term:"code",children:(0,r.jsx)("i",{children:"code"})})," by a ",(0,r.jsx)(n,{term:"load-time-value",children:(0,r.jsx)("b",{children:"load-time-value"})})," ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),". The ",(0,r.jsx)(t,{term:"value",children:(0,r.jsx)("i",{children:"value"})})," of such a ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})})," is some specific ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," which can only be computed in the"]}),"\n",(0,r.jsxs)(i.p,{children:["run-time ",(0,r.jsx)(t,{term:"environment",children:(0,r.jsx)("i",{children:"environment"})}),". In the case of ",(0,r.jsx)(i.em,{children:"file compilation"}),", the ",(0,r.jsx)(t,{term:"value",children:(0,r.jsx)("i",{children:"value"})})," is computed once as part of the process of ",(0,r.jsx)(i.em,{children:"loading"})," the ",(0,r.jsx)(t,{styled:!0,term:"compiled file",children:(0,r.jsx)("i",{children:"compiled file"})}),", and not again. See the ",(0,r.jsx)(t,{styled:!0,term:"special operator",children:(0,r.jsx)("i",{children:"special operator"})})," ",(0,r.jsx)(n,{term:"load-time-value",children:(0,r.jsx)("b",{children:"load-time-value"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"loader"})," ",(0,r.jsx)(i.em,{children:"n."})," a facility that is part of Lisp and that ",(0,r.jsx)(t,{term:"load",children:(0,r.jsx)("i",{children:"loads"})})," a ",(0,r.jsx)(t,{term:"file",children:(0,r.jsx)("i",{children:"file"})}),". See the ",(0,r.jsx)(t,{term:"function",children:(0,r.jsx)("i",{children:"function"})})," ",(0,r.jsx)(n,{term:"load",children:(0,r.jsx)("b",{children:"load"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"local declaration"})," ",(0,r.jsx)(i.em,{children:"n."})," an ",(0,r.jsx)(t,{term:"expression",children:(0,r.jsx)("i",{children:"expression"})})," which may appear only in specially designated positions of certain ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"forms"})}),", and which provides information about the code contained within the containing ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),"; that is, a ",(0,r.jsx)(n,{term:"declare",children:(0,r.jsx)("b",{children:"declare"})})," ",(0,r.jsx)(t,{term:"expression",children:(0,r.jsx)("i",{children:"expression"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"local precedence order"})," ",(0,r.jsx)(i.em,{children:"n."})," (of a ",(0,r.jsx)(t,{term:"class",children:(0,r.jsx)("i",{children:"class"})}),") a ",(0,r.jsx)(t,{term:"list",children:(0,r.jsx)("i",{children:"list"})})," consisting of the ",(0,r.jsx)(t,{term:"class",children:(0,r.jsx)("i",{children:"class"})})," followed by its ",(0,r.jsx)(i.em,{children:"direct superclasses"})," in the order mentioned in the defining ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})})," for the ",(0,r.jsx)(t,{term:"class",children:(0,r.jsx)("i",{children:"class"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"local slot"})," ",(0,r.jsx)(i.em,{children:"n."})," (of a ",(0,r.jsx)(t,{term:"class",children:(0,r.jsx)("i",{children:"class"})}),") a ",(0,r.jsx)(i.em,{children:"slot accessible"})," in only one ",(0,r.jsx)(t,{term:"instance",children:(0,r.jsx)("i",{children:"instance"})}),", namely the ",(0,r.jsx)(t,{term:"instance",children:(0,r.jsx)("i",{children:"instance"})})," in which the ",(0,r.jsx)(t,{term:"slot",children:(0,r.jsx)("i",{children:"slot"})})," is allocated."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"logical block"})," ",(0,r.jsx)(i.em,{children:"n."})," a conceptual grouping of related output used by the ",(0,r.jsx)(t,{styled:!0,term:"pretty printer",children:(0,r.jsx)("i",{children:"pretty printer"})})," . See the ",(0,r.jsx)(t,{term:"macro",children:(0,r.jsx)("i",{children:"macro"})})," ",(0,r.jsx)(n,{term:"pprint-logical-block",children:(0,r.jsx)("b",{children:"pprint-logical-block"})})," and Section 22.2.1.1 (Dynamic Control of the Arrangement of Output)."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"logical host"})," ",(0,r.jsx)(i.em,{children:"n."})," an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," of ",(0,r.jsx)(t,{term:"implementation-dependent",children:(0,r.jsx)("i",{children:"implementation-dependent"})})," nature that is used as the representation of a \u201chost\u201d in a ",(0,r.jsx)(t,{styled:!0,term:"logical pathname",children:(0,r.jsx)("i",{children:"logical pathname"})}),", and that has an associated set of translation rules for converting ",(0,r.jsx)(t,{styled:!0,term:"logical pathname",children:(0,r.jsx)("i",{children:"logical pathnames"})})," belonging to that host into ",(0,r.jsx)(t,{styled:!0,term:"physical pathname",children:(0,r.jsx)("i",{children:"physical pathnames"})}),". See Section 19.3 (Logical Pathnames)."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"logical host designator"})," ",(0,r.jsx)(i.em,{children:"n."})," a ",(0,r.jsx)(t,{term:"designator",children:(0,r.jsx)("i",{children:"designator"})})," for a ",(0,r.jsx)(t,{styled:!0,term:"logical host",children:(0,r.jsx)("i",{children:"logical host"})}),"; that is, an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," that denotes a ",(0,r.jsx)(t,{styled:!0,term:"logical host",children:(0,r.jsx)("i",{children:"logical host"})})," and that is one of: a ",(0,r.jsx)(t,{term:"string",children:(0,r.jsx)("i",{children:"string"})})," (denoting the ",(0,r.jsx)(t,{styled:!0,term:"logical host",children:(0,r.jsx)("i",{children:"logical host"})})," that it names), or a ",(0,r.jsx)(t,{styled:!0,term:"logical host",children:(0,r.jsx)("i",{children:"logical host"})})," (denoting itself). (Note that because the representation of a ",(0,r.jsx)(t,{styled:!0,term:"logical host",children:(0,r.jsx)("i",{children:"logical host"})})," is ",(0,r.jsx)(t,{term:"implementation-dependent",children:(0,r.jsx)("i",{children:"implementation-dependent"})}),", it is possible that an ",(0,r.jsx)(t,{term:"implementation",children:(0,r.jsx)("i",{children:"implementation"})})," might represent a ",(0,r.jsx)(t,{styled:!0,term:"logical host",children:(0,r.jsx)("i",{children:"logical host"})})," as the ",(0,r.jsx)(t,{term:"string",children:(0,r.jsx)("i",{children:"string"})})," that names it.)"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"logical pathname"})," ",(0,r.jsx)(i.em,{children:"n."})," an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," of ",(0,r.jsx)(t,{term:"type",children:(0,r.jsx)("i",{children:"type"})})," ",(0,r.jsx)(n,{term:"logical-pathname",children:(0,r.jsx)("b",{children:"logical-pathname"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"long float"})," ",(0,r.jsx)(i.em,{children:"n."})," an ",(0,r.jsx)(t,{term:"object",children:(0,r.jsx)("i",{children:"object"})})," of ",(0,r.jsx)(t,{term:"type",children:(0,r.jsx)("i",{children:"type"})})," ",(0,r.jsx)(n,{term:"long-float",children:(0,r.jsx)("b",{children:"long-float"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"loop keyword"})," ",(0,r.jsx)(i.em,{children:"n. Trad."})," a symbol that is a specially recognized part of the syntax of an extended ",(0,r.jsx)(n,{term:"loop",children:(0,r.jsx)("b",{children:"loop"})})," ",(0,r.jsx)(t,{term:"form",children:(0,r.jsx)("i",{children:"form"})}),". Such symbols are recognized by their ",(0,r.jsx)(t,{term:"name",children:(0,r.jsx)("i",{children:"name"})})," (using ",(0,r.jsx)(n,{term:"string",children:(0,r.jsx)("b",{children:"string="})}),"), not by their identity; as such, they may be in any package. A ",(0,r.jsx)(t,{styled:!0,term:"loop keyword",children:(0,r.jsx)("i",{children:"loop keyword"})})," is not a ",(0,r.jsx)(t,{term:"keyword",children:(0,r.jsx)("i",{children:"keyword"})}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"lowercase"})," ",(0,r.jsx)(i.em,{children:"adj."})," (of a ",(0,r.jsx)(t,{term:"character",children:(0,r.jsx)("i",{children:"character"})})," ) being among ",(0,r.jsx)(t,{styled:!0,term:"standard character",children:(0,r.jsx)("i",{children:"standard characters"})})," corresponding to the small letters a through z, or being some other ",(0,r.jsx)(i.em,{children:"implementation-defined character"})," that"]}),"\n",(0,r.jsxs)(i.p,{children:["is defined by the ",(0,r.jsx)(t,{term:"implementation",children:(0,r.jsx)("i",{children:"implementation"})})," to be ",(0,r.jsx)(t,{term:"lowercase",children:(0,r.jsx)("i",{children:"lowercase"})}),". See Section 13.1.4.3 (Characters With Case)."]})]})}function o(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}function x(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,i,n)=>{n.d(i,{Z:()=>c,a:()=>l});var r=n(67294);const s={},t=r.createContext(s);function l(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);