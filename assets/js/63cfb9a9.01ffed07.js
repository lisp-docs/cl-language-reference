"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[84185],{64772:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>x,frontMatter:()=>c,metadata:()=>h,toc:()=>a});var i=r(85893),d=r(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components},{ClLinks:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"find-method"})," ",(0,i.jsx)(n.em,{children:"Standard Generic Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})})," ",(0,i.jsx)(n.em,{children:"generic-function method-qualifiers specializers"})," &optional ",(0,i.jsx)(n.em,{children:"errorp"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"! method"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Method Signatures:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})})," (",(0,i.jsx)(n.em,{children:"generic-function"})," ",(0,i.jsx)(r,{styled:!0,term:"standard-generic-function",children:(0,i.jsx)("b",{children:"standard-generic-function"})}),")"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"method-qualifiers specializers"})," &optional ",(0,i.jsx)(n.em,{children:"errorp"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"generic-function"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generic function"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"method-qualifiers"}),"\u2014a ",(0,i.jsx)(r,{styled:!0,term:"list",children:(0,i.jsx)("i",{children:"list"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"specializers"}),"\u2014a ",(0,i.jsx)(r,{styled:!0,term:"list",children:(0,i.jsx)("i",{children:"list"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"errorp"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,i.jsx)(r,{styled:!0,term:"true",children:(0,i.jsx)("i",{children:"true"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})}),"\u2014a ",(0,i.jsx)(n.em,{children:"method object"}),", or ",(0,i.jsx)(r,{styled:!0,term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"generic function"})," ",(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})})," takes a ",(0,i.jsx)(n.em,{children:"generic function"})," and returns the ",(0,i.jsx)(n.em,{children:"method object"})," that agrees on ",(0,i.jsx)(r,{styled:!0,term:"qualifier",children:(0,i.jsx)("i",{children:"qualifiers"})})," and ",(0,i.jsx)(n.em,{children:"parameter specializers"})," with the ",(0,i.jsx)(n.em,{children:"method-qualifiers"})," and ",(0,i.jsx)(n.em,{children:"specializers"})," arguments of ",(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})}),". ",(0,i.jsx)(n.em,{children:"Method-qualifiers"})," contains the method ",(0,i.jsx)(r,{styled:!0,term:"qualifier",children:(0,i.jsx)("i",{children:"qualifiers"})})," for the ",(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})}),". The order of the method ",(0,i.jsx)(r,{styled:!0,term:"qualifier",children:(0,i.jsx)("i",{children:"qualifiers"})})," is significant. For a definition of agreement in this context, see Section 7.6.3 (Agreement on Parameter Specializers and Qualifiers)."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"specializers"})," argument contains the parameter specializers for the ",(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})}),". It must correspond in length to the number of required arguments of the ",(0,i.jsx)(n.em,{children:"generic function"}),", or an error is signaled. This means that to obtain the default ",(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})})," on a given ",(0,i.jsx)(n.em,{children:"generic-function"}),", a ",(0,i.jsx)(r,{styled:!0,term:"list",children:(0,i.jsx)("i",{children:"list"})})," whose elements are the ",(0,i.jsx)(r,{styled:!0,term:"class",children:(0,i.jsx)("i",{children:"class"})})," ",(0,i.jsx)(r,{styled:!0,term:"t",children:(0,i.jsx)("b",{children:"t"})})," must be given."]}),"\n",(0,i.jsxs)(n.p,{children:["If there is no such ",(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})})," and ",(0,i.jsx)(n.em,{children:"errorp"})," is ",(0,i.jsx)(r,{styled:!0,term:"true",children:(0,i.jsx)("i",{children:"true"})}),", ",(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})})," signals an error. If there is no such ",(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})})," and ",(0,i.jsx)(n.em,{children:"errorp"})," is ",(0,i.jsx)(r,{styled:!0,term:"false",children:(0,i.jsx)("i",{children:"false"})}),", ",(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})})," returns ",(0,i.jsx)(r,{styled:!0,term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"\n(defmethod some-operation ((a integer) (b float)) (list a b)) \n*!* #<STANDARD-METHOD SOME-OPERATION (INTEGER FLOAT) 26723357> \n(find-method #\u2019some-operation \u2019() (mapcar #\u2019find-class \u2019(integer float))) \n*!* #<STANDARD-METHOD SOME-OPERATION (INTEGER FLOAT) 26723357> \n(find-method #\u2019some-operation \u2019() (mapcar #\u2019find-class \u2019(integer integer))) \n\u25b7 Error: No matching method \n(find-method #\u2019some-operation \u2019() (mapcar #\u2019find-class \u2019(integer integer)) nil) *!* NIL \n\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Aected By:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{styled:!0,term:"add-method",children:(0,i.jsx)("b",{children:"add-method"})}),", ",(0,i.jsx)(r,{styled:!0,term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})}),", ",(0,i.jsx)(r,{styled:!0,term:"defgeneric",children:(0,i.jsx)("b",{children:"defgeneric"})}),", ",(0,i.jsx)(r,{styled:!0,term:"defmethod",children:(0,i.jsx)("b",{children:"defmethod"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.em,{children:"specializers"})," argument does not correspond in length to the number of required arguments of the ",(0,i.jsx)(n.em,{children:"generic-function"}),", an an error of ",(0,i.jsx)(r,{styled:!0,term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(r,{styled:!0,term:"error",children:(0,i.jsx)("b",{children:"error"})})," is signaled."]}),"\n",(0,i.jsxs)(n.p,{children:["If there is no such ",(0,i.jsx)(r,{styled:!0,term:"method",children:(0,i.jsx)("i",{children:"method"})})," and ",(0,i.jsx)(n.em,{children:"errorp"})," is ",(0,i.jsx)(r,{styled:!0,term:"true",children:(0,i.jsx)("i",{children:"true"})}),", ",(0,i.jsx)(r,{styled:!0,term:"find-method",children:(0,i.jsx)("b",{children:"find-method"})})," signals an error of ",(0,i.jsx)(r,{styled:!0,term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(r,{styled:!0,term:"error",children:(0,i.jsx)("b",{children:"error"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:"Section 7.6.3 (Agreement on Parameter Specializers and Qualifiers)"})]})}function s(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}const c={title:"find-method"},l="find-method",h={id:"chap-7/h-h-dictionary/find-method_standard-generic-function",title:"find-method",description:"Expanded Reference: find-method",source:"@site/docs/chap-7/h-h-dictionary/find-method_standard-generic-function.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/find-method_standard-generic-function",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/find-method_standard-generic-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-7/h-h-dictionary/find-method_standard-generic-function.md",tags:[],version:"current",frontMatter:{title:"find-method"},sidebar:"tutorialSidebar",previous:{title:"find-class",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/find-class_accessor"},next:{title:"function-keywords",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/function-keywords_standard-generic-function"}},o={},a=[{value:"Expanded Reference: find-method",id:"expanded-reference-find-method",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"find-method",children:"find-method"}),"\n","\n","\n",(0,i.jsx)(s,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-find-method",children:"Expanded Reference: find-method"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(find-method )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>s});var i=r(67294);const d={},t=i.createContext(d);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);