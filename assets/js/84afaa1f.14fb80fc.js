"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[97478],{45774:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>h,default:()=>x,frontMatter:()=>c,metadata:()=>o,toc:()=>m});var t=a(85893),r=a(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:a,GlossaryTerm:i}=n;return a||l("ClLinks",!0),i||l("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"translate-logical-pathname"})," ",(0,t.jsx)(a,{term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{term:"translate-logical-pathname",children:(0,t.jsx)("b",{children:"translate-logical-pathname"})})," ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," &key \u2192 physical-pathname"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})}),"\u2014a ",(0,t.jsx)(i,{styled:!0,term:"pathname designator",children:(0,t.jsx)("i",{children:"pathname designator"})})," , or a ",(0,t.jsx)(n.em,{children:"logical pathname namestring"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"physical-pathname"}),"\u2014a ",(0,t.jsx)(i,{styled:!0,term:"physical pathname",children:(0,t.jsx)("i",{children:"physical pathname"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Translates ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," to a ",(0,t.jsx)(i,{styled:!0,term:"physical pathname",children:(0,t.jsx)("i",{children:"physical pathname"})}),", which it returns."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a ",(0,t.jsx)(a,{term:"stream",children:(0,t.jsx)("i",{children:"stream"})}),", the ",(0,t.jsx)(a,{term:"stream",children:(0,t.jsx)("i",{children:"stream"})})," can be either open or closed. ",(0,t.jsx)(a,{term:"translate-logical-pathname",children:(0,t.jsx)("b",{children:"translate-logical-pathname"})})," returns the same physical pathname after a file is closed as it did when the file was open. It is an er ror if ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a ",(0,t.jsx)(a,{term:"stream",children:(0,t.jsx)("i",{children:"stream"})})," that is created with ",(0,t.jsx)(a,{term:"make-two-way-stream",children:(0,t.jsx)("b",{children:"make-two-way-stream"})}),", ",(0,t.jsx)(a,{term:"make-echo-stream",children:(0,t.jsx)("b",{children:"make-echo-stream"})}),", ",(0,t.jsx)(a,{term:"make-broadcast-stream",children:(0,t.jsx)("b",{children:"make-broadcast-stream"})}),", ",(0,t.jsx)(a,{term:"make-concatenated-stream",children:(0,t.jsx)("b",{children:"make-concatenated-stream"})}),", ",(0,t.jsx)(a,{term:"make-string-input-stream",children:(0,t.jsx)("b",{children:"make-string-input-stream"})}),", ",(0,t.jsx)(a,{term:"make-string-output-stream",children:(0,t.jsx)("b",{children:"make-string-output-stream"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a ",(0,t.jsx)(i,{styled:!0,term:"logical pathname",children:(0,t.jsx)("i",{children:"logical pathname"})})," namestring, the host portion of the ",(0,t.jsx)(i,{styled:!0,term:"logical pathname",children:(0,t.jsx)("i",{children:"logical pathname"})})," namestring and its following ",(0,t.jsx)(a,{term:"colon",children:(0,t.jsx)("i",{children:"colon"})})," are required."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"Pathname"})})," is first coerced to a ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})}),". If the coerced ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a physical pathname, it is returned. If the coerced ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is a ",(0,t.jsx)(i,{styled:!0,term:"logical pathname",children:(0,t.jsx)("i",{children:"logical pathname"})}),", the first matching translation (according to ",(0,t.jsx)(a,{term:"pathname-match-p",children:(0,t.jsx)("b",{children:"pathname-match-p"})}),") of the ",(0,t.jsx)(i,{styled:!0,term:"logical pathname",children:(0,t.jsx)("i",{children:"logical pathname"})})," host is applied, as if by calling ",(0,t.jsx)(a,{term:"translate-pathname",children:(0,t.jsx)("b",{children:"translate-pathname"})}),". If the result is a ",(0,t.jsx)(i,{styled:!0,term:"logical pathname",children:(0,t.jsx)("i",{children:"logical pathname"})}),", this process is repeated. When the result is finally a physical pathname, it is returned. If no translation matches, an error is signaled."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{term:"translate-logical-pathname",children:(0,t.jsx)("b",{children:"translate-logical-pathname"})})," might perform additional translations, typically to provide translation of file types to local naming conventions, to accomodate physical file systems with limited length names, or to deal with special character requirements such as translating hyphens to underscores or uppercase letters to lowercase. Any such additional translations are ",(0,t.jsx)(a,{term:"implementation-defined",children:(0,t.jsx)("i",{children:"implementation-defined"})}),". Some implementations do no additional translations."]}),"\n",(0,t.jsxs)(n.p,{children:["There are no specified keyword arguments for ",(0,t.jsx)(a,{term:"translate-logical-pathname",children:(0,t.jsx)("b",{children:"translate-logical-pathname"})}),", but implementations are permitted to extend it by adding keyword arguments."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"See **logical-pathname-translations**. \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(a,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," is incorrectly supplied, an error of ",(0,t.jsx)(a,{term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(a,{term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," is signaled."]}),"\n",(0,t.jsxs)(n.p,{children:["If no translation matches, an error of ",(0,t.jsx)(a,{term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(a,{term:"file-error",children:(0,t.jsx)("b",{children:"file-error"})})," is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{term:"logical-pathname",children:(0,t.jsx)("b",{children:"logical-pathname"})}),", ",(0,t.jsx)(a,{term:"logical-pathname-translations",children:(0,t.jsx)("b",{children:"logical-pathname-translations"})}),", ",(0,t.jsx)(a,{term:"logical-pathname",children:(0,t.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]})]})}function s(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const c={title:"translate-logical-pathname"},h="translate-logical-pathname",o={id:"chap-19/bj-e-dictionary/translate-logical-pathname_function",title:"translate-logical-pathname",description:"Expanded Reference: translate-logical-pathname",source:"@site/docs/chap-19/bj-e-dictionary/translate-logical-pathname_function.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/translate-logical-pathname_function",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/translate-logical-pathname_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/translate-logical-pathname_function.md",tags:[],version:"current",frontMatter:{title:"translate-logical-pathname"},sidebar:"tutorialSidebar",previous:{title:"pathnamep",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/pathnamep_function"},next:{title:"translate-pathname",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/translate-pathname_function"}},d={},m=[{value:"Expanded Reference: translate-logical-pathname",id:"expanded-reference-translate-logical-pathname",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"translate-logical-pathname",children:"translate-logical-pathname"}),"\n","\n","\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-translate-logical-pathname",children:"Expanded Reference: translate-logical-pathname"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(translate-logical-pathname )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>s});var t=a(67294);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);