"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[14308],{58679:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var c=n(85893),o=n(11151);const i={},a="compute-applicable-methods-standard-generic-function",s={id:"meta-object-protocol/dictionary/compute-applicable-methods-standard-generic-function",title:"compute-applicable-methods-standard-generic-function",description:"Method COMPUTE-APPLICABLE-METHODS",source:"@site/docs/meta-object-protocol/dictionary/compute-applicable-methods-standard-generic-function.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/compute-applicable-methods-standard-generic-function",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-applicable-methods-standard-generic-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/compute-applicable-methods-standard-generic-function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"T",permalink:"/cl-language-reference/meta-object-protocol/dictionary/class-t"},next:{title:"compute-applicable-methods-using-classes-standard-generic-function",permalink:"/cl-language-reference/meta-object-protocol/dictionary/compute-applicable-methods-using-classes-standard-generic-function"}},r={},l=[];function d(e){const t={a:"a",em:"em",h1:"h1",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h1,{id:"compute-applicable-methods-standard-generic-function",children:"compute-applicable-methods-standard-generic-function"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.em,{children:"Method"})," ",(0,c.jsx)(t.strong,{children:"COMPUTE-APPLICABLE-METHODS"})]}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"compute-applicable-methods"})," ",(0,c.jsx)(t.em,{children:"(generic-function"})," standard-generic-function) ",(0,c.jsx)(t.em,{children:"arguments"})," => ",(0,c.jsx)(t.em,{children:"methods"})]}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(t.p,{children:["This is a method on the generic function",(0,c.jsx)(t.a,{href:"/meta-object-protocol/compute-applicable-methods",children:"compute-applicable-methods"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["This method signals an error if any method of the generic function has a specializer which is neither a class metaobject nor an ",(0,c.jsx)(t.strong,{children:"eql"})," specializer metaobject."]}),"\n",(0,c.jsxs)(t.p,{children:["Otherwise, this method computes the sorted list of applicable methods according to the rules described in the section of the CLOS Specification called ",(0,c.jsx)(t.a,{href:"http://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node283.md#SECTION003217000000000000000",children:"``Method Selection and Combination.''"})]}),"\n",(0,c.jsxs)(t.p,{children:["This method can be overridden. Because of the consistency requirements between this generic function and ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/compute-applicable-methods-using-classes",children:"compute-applicable-methods-using-classes"}),", doing so may require also overriding ",(0,c.jsx)(t.a,{href:"/meta-object-protocol/compute-applicable-methods-using-classes-standard-generic-function",children:"compute-applicable-methods-using-classes (standard-generic-function t)"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var c=n(67294);const o={},i=c.createContext(o);function a(e){const t=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),c.createElement(i.Provider,{value:t},e.children)}}}]);