"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[79133],{67536:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>l,toc:()=>h});var s=i(85893),r=i(11151);function t(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"deftype"})," ",(0,s.jsx)(n.em,{children:"Macro"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"deftype"})," ",(0,s.jsx)(n.em,{children:"name lambda-list"})," [[ ",(0,s.jsx)(n.em,{children:"{declaration}"}),"* ",(0,s.jsx)(n.em,{children:"| documentation"})," ]] ",(0,s.jsx)(n.em,{children:"{form}"}),"* ",(0,s.jsx)(n.em,{children:"\u2192 name"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"name"}),"\u2014a ",(0,s.jsx)(n.em,{children:"symbol"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"lambda-list"}),"\u2014a ",(0,s.jsx)(n.em,{children:"deftype lambda list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"declaration"}),"\u2014a ",(0,s.jsx)(n.strong,{children:"declare"})," ",(0,s.jsx)(n.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"documentation"}),"\u2014a ",(0,s.jsx)(n.em,{children:"string"}),"; not evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"form"}),"\u2014a ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"deftype"})," defines a ",(0,s.jsx)(n.em,{children:"derived type specifier"})," named ",(0,s.jsx)(n.em,{children:"name"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The meaning of the new ",(0,s.jsx)(n.em,{children:"type specifier"})," is given in terms of a function which expands the ",(0,s.jsx)(n.em,{children:"type specifier"})," into another ",(0,s.jsx)(n.em,{children:"type specifier"})," , which itself will be expanded if it contains references to another ",(0,s.jsx)(n.em,{children:"derived type specifier"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:["The newly defined ",(0,s.jsx)(n.em,{children:"type specifier"})," may be referenced as a list of the form (",(0,s.jsx)(n.em,{children:"name arg"}),"<sub>1</sub> ",(0,s.jsx)(n.em,{children:"arg"}),"<sub>2</sub> ...). The number of arguments must be appropriate to the ",(0,s.jsx)(n.em,{children:"lambda-list"}),". If the new ",(0,s.jsx)(n.em,{children:"type specifier"})," takes no arguments, or if all of its arguments are optional, the ",(0,s.jsx)(n.em,{children:"type specifier"})," may be used as an ",(0,s.jsx)(n.em,{children:"atomic type specifier"})," ."]}),"\n",(0,s.jsx)(n.p,{children:"The <i>argument expressions</i> to the <i>type specifier</i> , <i>arg</i><sub>1</sub> <i>. . . arg<sub>n</sub></i>, are not <i>evaluated</i>. Instead, these <i>literal objects</i> become the <i>objects</i> to which corresponding <i>parameters</i> become <i>bound</i>."}),"\n",(0,s.jsxs)(n.p,{children:["The body of the ",(0,s.jsx)(n.strong,{children:"deftype"})," ",(0,s.jsx)(n.em,{children:"form"})," (but not the ",(0,s.jsx)(n.em,{children:"lambda-list"}),") is implicitly enclosed in a ",(0,s.jsx)(n.em,{children:"block"})," named ",(0,s.jsx)(n.em,{children:"name"}),", and is evaluated as an ",(0,s.jsx)(n.em,{children:"implicit progn"}),", returning a new ",(0,s.jsx)(n.em,{children:"type specifier"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"lexical environment"})," of the body is the one which was current at the time the ",(0,s.jsx)(n.strong,{children:"deftype"})," form was evaluated, augmented by the ",(0,s.jsx)(n.em,{children:"variables"})," in the ",(0,s.jsx)(n.em,{children:"lambda-list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Recursive expansion of the ",(0,s.jsx)(n.em,{children:"type specifier"})," returned as the expansion must terminate, including the expansion of ",(0,s.jsx)(n.em,{children:"type specifiers"})," which are nested within the expansion."]}),"\n",(0,s.jsxs)(n.p,{children:["The consequences are undefined if the result of fully expanding a ",(0,s.jsx)(n.em,{children:"type specifier"})," contains any circular structure, except within the ",(0,s.jsx)(n.em,{children:"objects"})," referred to by ",(0,s.jsx)(n.strong,{children:"member"})," and ",(0,s.jsx)(n.strong,{children:"eql"})," ",(0,s.jsx)(n.em,{children:"type specifiers"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Documentation"})," is attached to ",(0,s.jsx)(n.em,{children:"name"})," as a ",(0,s.jsx)(n.em,{children:"documentation string"})," of kind ",(0,s.jsx)(n.strong,{children:"type"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If a ",(0,s.jsx)(n.strong,{children:"deftype"})," ",(0,s.jsx)(n.em,{children:"form"})," appears as a ",(0,s.jsx)(n.em,{children:"top level form"}),", the ",(0,s.jsx)(n.em,{children:"compiler"})," must ensure that the ",(0,s.jsx)(n.em,{children:"name"})," is recognized in subsequent ",(0,s.jsx)(n.em,{children:"type"})," declarations. The ",(0,s.jsx)(n.em,{children:"programmer"})," must ensure that the body of a ",(0,s.jsx)(n.strong,{children:"deftype"})," form can be ",(0,s.jsx)(n.em,{children:"evaluated"})," at compile time if the ",(0,s.jsx)(n.em,{children:"name"})," is referenced in subsequent ",(0,s.jsx)(n.em,{children:"type"})," declarations. If the"]}),"\n",(0,s.jsxs)(n.p,{children:["expansion of a ",(0,s.jsx)(n.em,{children:"type specifier"})," is not defined fully at compile time (perhaps because it expands into an unknown ",(0,s.jsx)(n.em,{children:"type specifier"})," or a ",(0,s.jsx)(n.strong,{children:"satisfies"})," of a named ",(0,s.jsx)(n.em,{children:"function"})," that isn\u2019t defined in the compile-time environment), an ",(0,s.jsx)(n.em,{children:"implementation"})," may ignore any references to this ",(0,s.jsx)(n.em,{children:"type"})," in declarations and/or signal a warning."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.p,{children:"(defun equidimensional (a)"}),"\n",(0,s.jsx)(n.p,{children:"(or (< (array-rank a) 2)"}),"\n",(0,s.jsxs)(n.p,{children:["(apply #\u2019= (array-dimensions a)))) ",(0,s.jsx)(n.em,{children:"\u2192"})," EQUIDIMENSIONAL"]}),"\n",(0,s.jsx)(n.p,{children:"(deftype square-matrix (&optional type size)"}),"\n",(0,s.jsx)(n.p,{children:"\u2018(and (array ,type (,size ,size))"}),"\n",(0,s.jsxs)(n.p,{children:["(satisfies equidimensional))) ",(0,s.jsx)(n.em,{children:"\u2192"})," SQUARE-MATRIX"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"declare"}),", ",(0,s.jsx)(n.strong,{children:"defmacro"}),", ",(0,s.jsx)(n.strong,{children:"documentation"}),", Section 4.2.3 (Type Specifiers), Section 3.4.11 (Syntactic Interaction of Documentation Strings and Declarations)"]})]})}function a(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}const c={},d="deftype",l={id:"chap-4/e-e-dictionary/deftype",title:"deftype",description:"Expanded Reference: deftype",source:"@site/docs/chap-4/e-e-dictionary/deftype.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/deftype",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/deftype",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-4/e-e-dictionary/deftype.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"defstruct** are *instances* of the *class* **structure-class**. **standard-class",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/defstructaaaareaainstancesaaofatheaaclassaaaastructureclassaaaaaastandardclass"},next:{title:"eql",permalink:"/cl-language-reference/docs/chap-4/e-e-dictionary/eql"}},o={},h=[{value:"Expanded Reference: deftype",id:"expanded-reference-deftype",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"deftype",children:"deftype"}),"\n","\n","\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-deftype",children:"Expanded Reference: deftype"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(deftype )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>a});var s=i(67294);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);