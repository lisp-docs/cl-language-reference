"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[20050],{53389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>x,frontMatter:()=>d,metadata:()=>r,toc:()=>a});var s=t(85893),l=t(11151);function o(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"call-method, make-method"})," ",(0,s.jsx)(n.em,{children:"Local Macro"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"call-method"})," ",(0,s.jsx)(n.em,{children:"method"})," &optional ",(0,s.jsx)(n.em,{children:"next-method-list \u2192 {result}"}),"*"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"make-method"})," ",(0,s.jsx)(n.em,{children:"form \u2192 method-object"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"method"}),"\u2014a ",(0,s.jsx)(n.em,{children:"method object"}),", or a ",(0,s.jsx)(n.em,{children:"list"})," (see below); not evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"method-object"}),"\u2014a ",(0,s.jsx)(n.em,{children:"method object"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"next-method-list"}),"\u2014a ",(0,s.jsx)(n.em,{children:"list"})," of ",(0,s.jsx)(n.em,{children:"method objects"}),"; not evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"results"}),"\u2014the ",(0,s.jsx)(n.em,{children:"values"})," returned by the ",(0,s.jsx)(n.em,{children:"method"})," invocation."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["The macro ",(0,s.jsx)(n.strong,{children:"call-method"})," is used in method combination. It hides the ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," details of how ",(0,s.jsx)(n.em,{children:"methods"})," are called. The macro ",(0,s.jsx)(n.strong,{children:"call-method"})," has ",(0,s.jsx)(n.em,{children:"lexical scope"})," and can only be used within an ",(0,s.jsx)(n.em,{children:"effective method form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Whether or not ",(0,s.jsx)(n.strong,{children:"call-method"})," is ",(0,s.jsx)(n.em,{children:"fbound"})," in the ",(0,s.jsx)(n.em,{children:"global environment"})," is ",(0,s.jsx)(n.em,{children:"implementation-dependent"}),"; however, the restrictions on redefinition and ",(0,s.jsx)(n.em,{children:"shadowing"})," of ",(0,s.jsx)(n.strong,{children:"call-method"})," are the same as for ",(0,s.jsx)(n.em,{children:"symbols"})," in the COMMON-LISP ",(0,s.jsx)(n.em,{children:"package"})," which are ",(0,s.jsx)(n.em,{children:"fbound"})," in the ",(0,s.jsx)(n.em,{children:"global environment"}),". The consequences of attempting to use ",(0,s.jsx)(n.strong,{children:"call-method"})," outside of an ",(0,s.jsx)(n.em,{children:"effective method form"})," are undefined."]}),"\n",(0,s.jsxs)(n.p,{children:["The macro ",(0,s.jsx)(n.strong,{children:"call-method"})," invokes the specified ",(0,s.jsx)(n.em,{children:"method"}),", supplying it with arguments and with definitions for ",(0,s.jsx)(n.strong,{children:"call-next-method"})," and for ",(0,s.jsx)(n.strong,{children:"next-method-p"}),". If the invocation of ",(0,s.jsx)(n.strong,{children:"call-method"})," is lexically inside of a ",(0,s.jsx)(n.strong,{children:"make-method"}),", the arguments are those that were supplied to that method. Otherwise the arguments are those that were supplied to the generic function. The definitions of ",(0,s.jsx)(n.strong,{children:"call-next-method"})," and ",(0,s.jsx)(n.strong,{children:"next-method-p"})," rely on the specified ",(0,s.jsx)(n.em,{children:"next-method-list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"method"})," is a ",(0,s.jsx)(n.em,{children:"list"}),", the first element of the ",(0,s.jsx)(n.em,{children:"list"})," must be the symbol ",(0,s.jsx)(n.strong,{children:"make-method"})," and the second element must be a ",(0,s.jsx)(n.em,{children:"form"}),". Such a ",(0,s.jsx)(n.em,{children:"list"})," specifies a ",(0,s.jsx)(n.em,{children:"method object"})," whose ",(0,s.jsx)(n.em,{children:"method"})," function has a body that is the given ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Next-method-list"})," can contain ",(0,s.jsx)(n.em,{children:"method objects"})," or ",(0,s.jsx)(n.em,{children:"lists"}),", the first element of which must be the symbol ",(0,s.jsx)(n.strong,{children:"make-method"})," and the second element of which must be a ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Those are the only two places where ",(0,s.jsx)(n.strong,{children:"make-method"})," can be used. The ",(0,s.jsx)(n.em,{children:"form"})," used with ",(0,s.jsx)(n.strong,{children:"make-method"})," is evaluated in the ",(0,s.jsx)(n.em,{children:"null lexical environment"})," augmented with a local macro definition for ",(0,s.jsx)(n.strong,{children:"call-method"})," and with bindings named by symbols not ",(0,s.jsx)(n.em,{children:"accessible"})," from the COMMON-LISP-USER ",(0,s.jsx)(n.em,{children:"package"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"call-next-method"})," function available to ",(0,s.jsx)(n.em,{children:"method"})," will call the first ",(0,s.jsx)(n.em,{children:"method"})," in ",(0,s.jsx)(n.em,{children:"next-method-list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"call-next-method"})," function available in that ",(0,s.jsx)(n.em,{children:"method"}),", in turn, will call the second ",(0,s.jsx)(n.em,{children:"method"})," in ",(0,s.jsx)(n.em,{children:"next-method-list"}),", and so on, until the list of next ",(0,s.jsx)(n.em,{children:"methods"})," is exhausted."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"next-method-list"})," is not supplied, the ",(0,s.jsx)(n.strong,{children:"call-next-method"})," function available to ",(0,s.jsx)(n.em,{children:"method"})," signals an error of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"control-error"})," and the ",(0,s.jsx)(n.strong,{children:"next-method-p"})," function available to ",(0,s.jsx)(n.em,{children:"method"})," returns ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"call-next-method"}),", ",(0,s.jsx)(n.strong,{children:"define-method-combination"}),", ",(0,s.jsx)(n.strong,{children:"next-method-p"})]})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}const d={},i="call-method, make-method",r={id:"chap-7/h-h-dictionary/callmethod",title:"call-method, make-method",description:"Expanded Reference: call-method, make-method",source:"@site/docs/chap-7/h-h-dictionary/callmethod.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/callmethod",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/callmethod",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-7/h-h-dictionary/callmethod.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"(setf class-name)",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/asetfaclassnamea"},next:{title:"call-next-method",permalink:"/cl-language-reference/docs/chap-7/h-h-dictionary/callnextmethod"}},c={},a=[{value:"Expanded Reference: call-method, make-method",id:"expanded-reference-call-method-make-method",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"call-method-make-method",children:"call-method, make-method"}),"\n","\n","\n",(0,s.jsx)(h,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-call-method-make-method",children:"Expanded Reference: call-method, make-method"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(call-method, make-method )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>h});var s=t(67294);const l={},o=s.createContext(l);function h(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:h(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);