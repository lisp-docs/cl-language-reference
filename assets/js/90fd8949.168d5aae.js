"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[12727],{37429:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>m});var s=r(85893),t=r(11151);function c(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"number"})," ",(0,s.jsx)(n.em,{children:"System Class"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"number"}),", ",(0,s.jsx)(n.strong,{children:"t"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"number"})," contains ",(0,s.jsx)(n.em,{children:"objects"})," which represent mathematical numbers. The ",(0,s.jsx)(n.em,{children:"types"})," ",(0,s.jsx)(n.strong,{children:"real"})," and ",(0,s.jsx)(n.strong,{children:"complex"})," are ",(0,s.jsx)(n.em,{children:"disjoint subtypes"})," of ",(0,s.jsx)(n.strong,{children:"number"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"function"})," ",(0,s.jsx)(n.strong,{children:"="})," tests for numerical equality. The ",(0,s.jsx)(n.em,{children:"function"})," ",(0,s.jsx)(n.strong,{children:"eql"}),", when its arguments are both ",(0,s.jsx)(n.em,{children:"numbers"}),", tests that they have both the same ",(0,s.jsx)(n.em,{children:"type"})," and numerical value. Two ",(0,s.jsx)(n.em,{children:"numbers"})," that are the ",(0,s.jsx)(n.em,{children:"same"})," under ",(0,s.jsx)(n.strong,{children:"eql"})," or ",(0,s.jsx)(n.strong,{children:"="})," are not necessarily the ",(0,s.jsx)(n.em,{children:"same"})," under ",(0,s.jsx)(n.strong,{children:"eq"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["Common Lisp differs from mathematics on some naming issues. In mathematics, the set of real numbers is traditionally described as a subset of the complex numbers, but in Common Lisp, the ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"real"})," and the ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"complex"})," are disjoint. The Common Lisp type which includes all mathematical complex numbers is called ",(0,s.jsx)(n.strong,{children:"number"}),". The reasons for these differences include historical precedent, compatibility with most other popular computer languages, and various issues of time and space efficiency."]})]})}function i(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}const o={},a="number",d={id:"chap-12/bc-c-dictionary/number",title:"number",description:"Expanded Reference: number",source:"@site/docs/chap-12/bc-c-dictionary/number.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/number",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/number",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/number.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"mod, rem",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/mod"},next:{title:"numberp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/numberp"}},l={},m=[{value:"Expanded Reference: number",id:"expanded-reference-number",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"number",children:"number"}),"\n","\n","\n",(0,s.jsx)(i,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-number",children:"Expanded Reference: number"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(number )\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var s=r(67294);const t={},c=s.createContext(t);function i(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);