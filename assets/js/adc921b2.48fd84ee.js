"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[82576],{31445:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var t=i(85893),c=i(11151);function s(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"funcall"}),", ",(0,t.jsx)(e.strong,{children:"fdefinition"}),", ",(0,t.jsx)(e.strong,{children:"function"}),", Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) ",(0,t.jsx)(e.strong,{children:"defun"})," ",(0,t.jsx)(e.em,{children:"Macro"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"defun"})," ",(0,t.jsx)(e.em,{children:"function-name lambda-list"})," [[ ",(0,t.jsx)(e.em,{children:"{declaration}"}),"* ",(0,t.jsx)(e.em,{children:"| documentation"})," ]] ",(0,t.jsx)(e.em,{children:"{form}"}),"*"]}),"\n",(0,t.jsx)(e.p,{children:"\u2192 function-name"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"function-name"}),"\u2014a ",(0,t.jsx)(e.em,{children:"function name"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"lambda-list"}),"\u2014an ",(0,t.jsx)(e.em,{children:"ordinary lambda list"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"declaration"}),"\u2014a ",(0,t.jsx)(e.strong,{children:"declare"})," ",(0,t.jsx)(e.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"documentation"}),"\u2014a ",(0,t.jsx)(e.em,{children:"string"}),"; not evaluated."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"forms"}),"\u2014an ",(0,t.jsx)(e.em,{children:"implicit progn"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"block-name"}),"\u2014the ",(0,t.jsx)(e.em,{children:"function block name"})," of the ",(0,t.jsx)(e.em,{children:"function-name"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(e.p,{children:["Defines a new ",(0,t.jsx)(e.em,{children:"function"})," named ",(0,t.jsx)(e.em,{children:"function-name"})," in the ",(0,t.jsx)(e.em,{children:"global environment"}),". The body of the ",(0,t.jsx)(e.em,{children:"function"})," defined by ",(0,t.jsx)(e.strong,{children:"defun"})," consists of ",(0,t.jsx)(e.em,{children:"forms"}),"; they are executed as an ",(0,t.jsx)(e.em,{children:"implicit progn"})," when the ",(0,t.jsx)(e.em,{children:"function"})," is called. ",(0,t.jsx)(e.strong,{children:"defun"})," can be used to define a new ",(0,t.jsx)(e.em,{children:"function"}),", to install a corrected version of an incorrect definition, to redefine an already-defined ",(0,t.jsx)(e.em,{children:"function"}),", or to redefine a ",(0,t.jsx)(e.em,{children:"macro"})," as a ",(0,t.jsx)(e.em,{children:"function"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"defun"})," implicitly puts a ",(0,t.jsx)(e.strong,{children:"block"})," named ",(0,t.jsx)(e.em,{children:"block-name"})," around the body ",(0,t.jsx)(e.em,{children:"forms"})," (but not the ",(0,t.jsx)(e.em,{children:"forms"})," in the ",(0,t.jsx)(e.em,{children:"lambda-list"}),") of the ",(0,t.jsx)(e.em,{children:"function"})," defined."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"Documentation"})," is attached as a ",(0,t.jsx)(e.em,{children:"documentation string"})," to ",(0,t.jsx)(e.em,{children:"name"})," (as kind ",(0,t.jsx)(e.strong,{children:"function"}),") and to the ",(0,t.jsx)(e.em,{children:"function object"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["Evaluating ",(0,t.jsx)(e.strong,{children:"defun"})," causes ",(0,t.jsx)(e.em,{children:"function-name"})," to be a global name for the ",(0,t.jsx)(e.em,{children:"function"})," specified by the ",(0,t.jsx)(e.em,{children:"lambda expression"})]}),"\n",(0,t.jsxs)(e.p,{children:["(lambda ",(0,t.jsx)(e.em,{children:"lambda-list"})]}),"\n",(0,t.jsxs)(e.p,{children:["[[ ",(0,t.jsx)(e.em,{children:"{declaration}"}),"* ",(0,t.jsx)(e.em,{children:"| documentation"})," ]]"]}),"\n",(0,t.jsxs)(e.p,{children:["(block ",(0,t.jsx)(e.em,{children:"block-name {form}"}),"*))"]}),"\n",(0,t.jsxs)(e.p,{children:["processed in the ",(0,t.jsx)(e.em,{children:"lexical environment"})," in which ",(0,t.jsx)(e.strong,{children:"defun"})," was executed."]}),"\n",(0,t.jsx)(e.p,{children:"Data and Control"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"defun"})}),"\n",(0,t.jsx)(e.p,{children:"(None of the arguments are evaluated at macro expansion time.)"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"defun"})," is not required to perform any compile-time side effects. In particular, ",(0,t.jsx)(e.strong,{children:"defun"})," does not make the ",(0,t.jsx)(e.em,{children:"function"})," definition available at compile time. An ",(0,t.jsx)(e.em,{children:"implementation"})," may choose to store information about the ",(0,t.jsx)(e.em,{children:"function"})," for the purposes of compile-time error-checking (such as checking the number of arguments on calls), or to enable the ",(0,t.jsx)(e.em,{children:"function"})," to be expanded inline."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:' \n\n(defun recur (x) \n\n(when (> x 0) \n\n(recur (1- x)))) \u2192 RECUR \n\n(defun ex (a b &amp;optional c (d 66) &amp;rest keys &amp;key test (start 0)) \n\n(list a b c d keys test start)) \u2192 EX \n\n(ex 1 2) \u2192 (1 2 NIL 66 NIL NIL 0) \n\n(ex 1 2 3 4 :test \u2019equal :start 50) \n\n\u2192 (1 2 3 4 (:TEST EQUAL :START 50) EQUAL 50) \n\n(ex :test 1 :start 2) \u2192 (:TEST 1 :START 2 NIL NIL 0) \n\n;; This function assumes its callers have checked the types of the \n\n;; arguments, and authorizes the compiler to build in that assumption. \n\n(defun discriminant (a b c) \n\n(declare (number a b c)) \n\n"Compute the discriminant for a quadratic equation." \n\n(- (\\* b b) (\\* 4 a c))) \u2192 DISCRIMINANT \n\n(discriminant 1 2/3 -2) \u2192 76/9 \n\n;; This function assumes its callers have not checked the types of the \n\n;; arguments, and performs explicit type checks before making any assumptions. (defun careful-discriminant (a b c) \n\n"Compute the discriminant for a quadratic equation." \n\n(check-type a number) \n\n(check-type b number) \n\n(check-type c number) \n\n(locally (declare (number a b c)) \n\n(- (\\* b b) (\\* 4 a c)))) \u2192 CAREFUL-DISCRIMINANT \n\n(careful-discriminant 1 2/3 -2) \u2192 76/9 \n\n\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"flet"}),", ",(0,t.jsx)(e.strong,{children:"labels"}),", ",(0,t.jsx)(e.strong,{children:"block"}),", ",(0,t.jsx)(e.strong,{children:"return-from"}),", ",(0,t.jsx)(e.strong,{children:"declare"}),", ",(0,t.jsx)(e.strong,{children:"documentation"}),", Section 3.1 (Evaluation), Section 3.4.1 (Ordinary Lambda Lists), Section 3.4.11 (Syntactic Interaction of Documentation Strings and Declarations)"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"return-from"})," can be used to return prematurely from a ",(0,t.jsx)(e.em,{children:"function"})," defined by ",(0,t.jsx)(e.strong,{children:"defun"}),"."]}),"\n",(0,t.jsx)(e.p,{children:"Additional side effects might take place when additional information (typically debugging information) about the function definition is recorded."})]})}function r(n={}){const{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(s,{...n})}):s(n)}const o={},a="funcall**, fdefinition, function, Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) **defun",l={id:"chap-5/f-d-dictionary/funcallaa",title:"funcall**, **fdefinition**, **function**, Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) **defun",description:"Expanded Reference: funcall, fdefinition, function, Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) defun",source:"@site/docs/chap-5/f-d-dictionary/funcallaa.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/funcallaa",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/funcallaa",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/funcallaa.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"funcall",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/funcall"},next:{title:"function",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/function"}},d={},h=[{value:"Expanded Reference: funcall**, <strong>fdefinition</strong>, <strong>function</strong>, Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) **defun",id:"expanded-reference-funcall-fdefinition-function-section-31-evaluation-section-5125-apply-forms-as-places-defun",level:2}];function u(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h1,{id:"funcall-fdefinition-function-section-31-evaluation-section-5125-apply-forms-as-places-defun",children:["funcall**, ",(0,t.jsx)(e.strong,{children:"fdefinition"}),", ",(0,t.jsx)(e.strong,{children:"function"}),", Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) **defun"]}),"\n","\n","\n",(0,t.jsx)(r,{}),"\n",(0,t.jsxs)(e.h2,{id:"expanded-reference-funcall-fdefinition-function-section-31-evaluation-section-5125-apply-forms-as-places-defun",children:["Expanded Reference: funcall**, ",(0,t.jsx)(e.strong,{children:"fdefinition"}),", ",(0,t.jsx)(e.strong,{children:"function"}),", Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) **defun"]}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:"(funcall**, **fdefinition**, **function**, Section 3.1 (Evaluation), Section 5.1.2.5 (APPLY Forms as Places) **defun )\n"})})]})}function f(n={}){const{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},11151:(n,e,i)=>{i.d(e,{Z:()=>o,a:()=>r});var t=i(67294);const c={},s=t.createContext(c);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);