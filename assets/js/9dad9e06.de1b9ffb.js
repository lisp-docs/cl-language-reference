"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[99014],{10896:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>u});var o=t(85893),r=t(11151);function s(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"quote"})," ",(0,o.jsx)(n.em,{children:"Special Operator"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"quote"})," ",(0,o.jsx)(n.em,{children:"object \u2192 object"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"object"}),"\u2014an ",(0,o.jsx)(n.em,{children:"object"}),"; not evaluated."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Description:"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.strong,{children:"quote"})," ",(0,o.jsx)(n.em,{children:"special operator"})," just returns ",(0,o.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The consequences are undefined if ",(0,o.jsx)(n.em,{children:"literal objects"})," (including ",(0,o.jsx)(n.em,{children:"quoted objects"}),") are destructively modified."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lisp",children:' \n\n\n\n(setq a 1) *\u2192* 1 \n\n\n\n(quote (setq a 3)) *\u2192* (SETQ A 3) \n\n\n\na *\u2192* 1 \n\n\n\n\u2019a *\u2192* A \n\n\n\n\u201da *\u2192* (QUOTE A)  \n\n\n\n\n\n\n\n\u201d\u2019a *\u2192* (QUOTE (QUOTE A)) \n\n\n\n(setq a 43) *\u2192* 43 \n\n\n\n(list a (cons a 3)) *\u2192* (43 (43 . 3)) \n\n\n\n(list (quote a) (quote (cons a 3))) *\u2192* (A (CONS A 3)) \n\n\n\n1 *\u2192* 1 \n\n\n\n\u20191 *\u2192* 1 \n\n\n\n"foo" *\u2192* "foo" \n\n\n\n\u2019"foo" *\u2192* "foo" \n\n\n\n(car \u2019(a b)) *\u2192* A \n\n\n\n\u2019(car \u2019(a b)) *\u2192* (CAR (QUOTE (A B))) \n\n\n\n#(car \u2019(a b)) *\u2192* #(CAR (QUOTE (A B))) \n\n\n\n\u2019#(car \u2019(a b)) *\u2192* #(CAR (QUOTE (A B))) \n\n\n\n\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,o.jsx)(n.p,{children:"Section 3.1 (Evaluation), Section 2.4.3 (Single-Quote), Section 3.2.1 (Compiler Terminology)"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,o.jsxs)(n.p,{children:["The textual notation \u2019",(0,o.jsx)(n.em,{children:"object"})," is equivalent to (quote ",(0,o.jsx)(n.em,{children:"object"}),"); see Section 3.2.1 (Compiler Terminology)."]}),"\n",(0,o.jsxs)(n.p,{children:["Some ",(0,o.jsx)(n.em,{children:"objects"}),", called ",(0,o.jsx)(n.em,{children:"self-evaluating objects"}),", do not require quotation by ",(0,o.jsx)(n.strong,{children:"quote"}),". However, ",(0,o.jsx)(n.em,{children:"symbols"})," and ",(0,o.jsx)(n.em,{children:"lists"})," are used to represent parts of programs, and so would not be useable as constant data in a program without ",(0,o.jsx)(n.strong,{children:"quote"}),". Since ",(0,o.jsx)(n.strong,{children:"quote"})," suppresses the ",(0,o.jsx)(n.em,{children:"evaluation"})," of these ",(0,o.jsx)(n.em,{children:"objects"}),", they become data rather than program."]})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}const i={},a="quote",d={id:"chap-3/d-i-dictionary/quote",title:"quote",description:"Expanded Reference: quote",source:"@site/docs/chap-3/d-i-dictionary/quote.md",sourceDirName:"chap-3/d-i-dictionary",slug:"/chap-3/d-i-dictionary/quote",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/quote",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-3/d-i-dictionary/quote.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"macro-function",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/macrofunction"},next:{title:"symbol-macrolet",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/symbolmacrolet"}},l={},u=[{value:"Expanded Reference: quote",id:"expanded-reference-quote",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"quote",children:"quote"}),"\n","\n","\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(n.h2,{id:"expanded-reference-quote",children:"Expanded Reference: quote"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lisp",children:"(quote )\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>c});var o=t(67294);const r={},s=o.createContext(r);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);