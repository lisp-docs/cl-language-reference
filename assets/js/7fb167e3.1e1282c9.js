"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[11712],{87214:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>x,frontMatter:()=>o,metadata:()=>d,toc:()=>m});var i=r(85893),s=r(11151);function l(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"define-symbol-macro"})," ",(0,i.jsx)(r,{term:"macro",children:(0,i.jsx)("i",{children:"Macro"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"define-symbol-macro",children:(0,i.jsx)("b",{children:"define-symbol-macro"})})," ",(0,i.jsx)(n.em,{children:"symbol expansion"})]}),"\n",(0,i.jsx)(n.p,{children:"\u2192 symbol"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),"\u2014a ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"expansion"}),"\u2014a ",(0,i.jsx)(r,{term:"form",children:(0,i.jsx)("i",{children:"form"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Provides a mechanism for globally affecting the ",(0,i.jsx)(n.em,{children:"macro expansion"})," of the indicated ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Globally establishes an expansion function for the ",(0,i.jsx)(n.em,{children:"symbol macro"})," named by ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),". The only guaranteed property of an expansion ",(0,i.jsx)(r,{term:"function",children:(0,i.jsx)("i",{children:"function"})})," for a ",(0,i.jsx)(n.em,{children:"symbol macro"})," is that when it is applied to the ",(0,i.jsx)(r,{term:"form",children:(0,i.jsx)("i",{children:"form"})})," and the ",(0,i.jsx)(r,{term:"environment",children:(0,i.jsx)("i",{children:"environment"})})," it returns the correct expansion. (In particular, it is ",(0,i.jsx)(n.em,{children:"implementation dependent"})," whether the expansion is conceptually stored in the expansion function, the ",(0,i.jsx)(r,{term:"environment",children:(0,i.jsx)("i",{children:"environment"})}),", or both.)"]}),"\n",(0,i.jsxs)(n.p,{children:["Each global reference to ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," (",(0,i.jsx)(n.em,{children:"i.e."}),", not ",(0,i.jsx)(n.em,{children:"shadowed"})," ",(0,i.jsx)("sub",{children:"2"})," by a ",(0,i.jsx)(r,{term:"binding",children:(0,i.jsx)("i",{children:"binding"})})," for a ",(0,i.jsx)(r,{term:"variable",children:(0,i.jsx)("i",{children:"variable"})})," or ",(0,i.jsx)(n.em,{children:"symbol macro"})," named by the same ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),") is expanded by the normal macro expansion process; see Section 3.1.2.1.1 (Symbols as Forms). The expansion of a ",(0,i.jsx)(n.em,{children:"symbol macro"})," is subject to further ",(0,i.jsx)(n.em,{children:"macro expansion"})," in the same ",(0,i.jsx)(n.em,{children:"lexical environment"})," as the ",(0,i.jsx)(n.em,{children:"symbol macro"})," reference, exactly analogous to normal ",(0,i.jsx)(r,{term:"macro",children:(0,i.jsx)("i",{children:"macros"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The consequences are unspecified if a ",(0,i.jsx)(r,{term:"special",children:(0,i.jsx)("b",{children:"special"})})," declaration is made for ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," while in the scope of this definition (",(0,i.jsx)(n.em,{children:"i.e."}),", when it is not ",(0,i.jsx)(n.em,{children:"shadowed"})," ",(0,i.jsx)("sub",{children:"2"})," by a ",(0,i.jsx)(r,{term:"binding",children:(0,i.jsx)("i",{children:"binding"})})," for a ",(0,i.jsx)(r,{term:"variable",children:(0,i.jsx)("i",{children:"variable"})})," or ",(0,i.jsx)(n.em,{children:"symbol macro"})," named by the same ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["Any use of ",(0,i.jsx)(r,{term:"setq",children:(0,i.jsx)("b",{children:"setq"})})," to set the value of the ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," while in the scope of this definition is treated as if it were a ",(0,i.jsx)(r,{term:"setf",children:(0,i.jsx)("b",{children:"setf"})}),". ",(0,i.jsx)(r,{term:"psetq",children:(0,i.jsx)("b",{children:"psetq"})})," of ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," is treated as if it were a ",(0,i.jsx)(r,{term:"psetf",children:(0,i.jsx)("b",{children:"psetf"})}),", and ",(0,i.jsx)(r,{term:"multiple-value-setq",children:(0,i.jsx)("b",{children:"multiple-value-setq"})})," is treated as if it were a ",(0,i.jsx)(r,{term:"setf",children:(0,i.jsx)("b",{children:"setf"})})," of ",(0,i.jsx)(r,{term:"values",children:(0,i.jsx)("b",{children:"values"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(r,{term:"binding",children:(0,i.jsx)("i",{children:"binding"})})," for a ",(0,i.jsx)(n.em,{children:"symbol macro"})," can be ",(0,i.jsx)(n.em,{children:"shadowed"})," ",(0,i.jsx)("sub",{children:"2"})," by ",(0,i.jsx)(r,{term:"let",children:(0,i.jsx)("b",{children:"let"})})," or ",(0,i.jsx)(r,{term:"symbol-macrolet",children:(0,i.jsx)("b",{children:"symbol-macrolet"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(defvar \\*things\\* (list \u2019alpha \u2019beta \u2019gamma)) \u2192 \\*THINGS\\* \n(define-symbol-macro thing1 (first \\*things\\*)) \u2192 THING1 \n(define-symbol-macro thing2 (second \\*things\\*)) \u2192 THING2 \n(define-symbol-macro thing3 (third \\*things\\*)) \u2192 THING3 \nthing1 \u2192 ALPHA \n(setq thing1 \u2019ONE) \u2192 ONE \n\\*things\\* \u2192 (ONE BETA GAMMA) \n(multiple-value-setq (thing2 thing3) (values \u2019two \u2019three)) \u2192 TWO \nthing3 \u2192 THREE \n\\*things\\* \u2192 (ONE TWO THREE) \n(list thing2 (let ((thing2 2)) thing2)) \u2192 (TWO 2) \n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(r,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," is already defined as a ",(0,i.jsx)(n.em,{children:"global variable"}),", an error of ",(0,i.jsx)(r,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(r,{term:"program-error",children:(0,i.jsx)("b",{children:"program-error"})})," is signaled."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"symbol-macrolet",children:(0,i.jsx)("b",{children:"symbol-macrolet"})}),", ",(0,i.jsx)(r,{term:"macroexpand",children:(0,i.jsx)("b",{children:"macroexpand"})})]}),"\n",(0,i.jsx)(r,{term:"symbol-macrolet",children:(0,i.jsx)("b",{children:"symbol-macrolet"})})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}const o={title:"define-symbol-macro"},t="define-symbol-macro",d={id:"chap-3/d-i-dictionary/define-symbol-macro_macro",title:"define-symbol-macro",description:"Expanded Reference: define-symbol-macro",source:"@site/docs/chap-3/d-i-dictionary/define-symbol-macro_macro.md",sourceDirName:"chap-3/d-i-dictionary",slug:"/chap-3/d-i-dictionary/define-symbol-macro_macro",permalink:"/cl-language-reference/chap-3/d-i-dictionary/define-symbol-macro_macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-3/d-i-dictionary/define-symbol-macro_macro.md",tags:[],version:"current",frontMatter:{title:"define-symbol-macro"},sidebar:"tutorialSidebar",previous:{title:"define-compiler-macro",permalink:"/cl-language-reference/chap-3/d-i-dictionary/define-compiler-macro_macro"},next:{title:"defmacro",permalink:"/cl-language-reference/chap-3/d-i-dictionary/defmacro_macro"}},a={},m=[{value:"Expanded Reference: define-symbol-macro",id:"expanded-reference-define-symbol-macro",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"define-symbol-macro",children:"define-symbol-macro"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-define-symbol-macro",children:"Expanded Reference: define-symbol-macro"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(define-symbol-macro )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var i=r(67294);const s={},l=i.createContext(s);function c(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);