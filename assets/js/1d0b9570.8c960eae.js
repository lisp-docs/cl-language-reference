"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[76533],{96851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=t(85893),c=t(11151);const a={},r="setf-class-name",i={id:"meta-object-protocol/dictionary/setf-class-name",title:"setf-class-name",description:"Generic Function (SETF CLASS-NAME)",source:"@site/docs/meta-object-protocol/dictionary/setf-class-name.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/setf-class-name",permalink:"/cl-language-reference/meta-object-protocol/dictionary/setf-class-name",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/setf-class-name.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"set-funcallable-instance-function",permalink:"/cl-language-reference/meta-object-protocol/dictionary/set-funcallable-instance-function"},next:{title:"setf-generic-function-name",permalink:"/cl-language-reference/meta-object-protocol/dictionary/setf-generic-function-name"}},o={},l=[];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"setf-class-name",children:"setf-class-name"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Generic Function"})," ",(0,s.jsx)(n.strong,{children:"(SETF CLASS-NAME)"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.code,{children:"setf"})," (",(0,s.jsx)(n.strong,{children:"class-name"})," ",(0,s.jsx)(n.em,{children:"class"}),") ",(0,s.jsx)(n.em,{children:"new-name"}),") => ",(0,s.jsx)(n.em,{children:"new-name"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"class"})," -- A class metaobject."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"new-name"})," -- Any Lisp object."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["This function changes the name of ",(0,s.jsx)(n.em,{children:"class"})," to ",(0,s.jsx)(n.em,{children:"new-name"}),". This value is usually a symbol, or ",(0,s.jsx)(n.code,{children:"nil"})," if the class has no name."]}),"\n",(0,s.jsxs)(n.p,{children:["This function works by calling",(0,s.jsx)(n.a,{href:"http://www.lispworks.com/documentation/HyperSpec/Body/f_reinit.htm#reinitialize-instance",children:"reinitialize-instance"})," with ",(0,s.jsx)(n.em,{children:"class"})," as its first argument, the symbol ",(0,s.jsx)(n.code,{children:":name"})," as its second argument and ",(0,s.jsx)(n.em,{children:"new-name"})," as its third argument."]})]})}function m(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var s=t(67294);const c={},a=s.createContext(c);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);