"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[21100],{64159:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var t=a(85893),r=a(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{DictionaryLink:a,GlossaryTerm:i}=n;return a||l("DictionaryLink",!0),i||l("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["\u2217",(0,t.jsx)(a,{term:"default-pathname-defaults",children:(0,t.jsx)("b",{children:(0,t.jsx)(n.em,{children:"default-pathname-defaults"})})}),"\u2217 Variable"]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,t.jsxs)(n.p,{children:["a ",(0,t.jsx)(n.em,{children:"pathname object"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.em,{children:"implementation-dependent pathname"}),", typically in the working directory that was current when Common Lisp was started up."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["a ",(0,t.jsx)(i,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})}),", used as the default whenever a ",(0,t.jsx)(i,{term:"function",children:(0,t.jsx)("i",{children:"function"})})," needs a default ",(0,t.jsx)(i,{term:"pathname",children:(0,t.jsx)("i",{children:"pathname"})})," and one is not supplied."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:';; This example illustrates a possible usage for a hypothetical Lisp running on a ;; DEC TOPS-20 file system. Since pathname conventions vary between Lisp \n;; implementations and host file system types, it is not possible to provide a ;; general-purpose, conforming example. \n\\*default-pathname-defaults\\* \u2192 #P"PS:<FRED>" \n(merge-pathnames (make-pathname :name "CALENDAR")) \n\u2192 #P"PS:<FRED>CALENDAR" \n(let ((\\*default-pathname-defaults\\* (pathname "<MARY>"))) \n  (merge-pathnames (make-pathname :name "CALENDAR"))) \n\u2192 #P"<MARY>CALENDAR" \n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(i,{term:"implementation",children:(0,t.jsx)("i",{children:"implementation"})}),"."]})]})}function s(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"default-pathname-defaults"},c="*default-pathname-defaults*",o={id:"chap-19/bj-e-dictionary/default-pathname-defaults_variable",title:"default-pathname-defaults",description:"Expanded Reference: \\default-pathname-defaults\\",source:"@site/docs/chap-19/bj-e-dictionary/default-pathname-defaults_variable.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/default-pathname-defaults_variable",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/default-pathname-defaults_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-19/bj-e-dictionary/default-pathname-defaults_variable.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"default-pathname-defaults"},sidebar:"tutorialSidebar",previous:{title:"19.4 Filenames Dictionary",permalink:"/cl-language-reference/category/194-filenames-dictionary"},next:{title:"load-logical-pathname-translations",permalink:"/cl-language-reference/chap-19/bj-e-dictionary/load-logical-pathname-translations_function"}},p={},h=[{value:"Expanded Reference: *default-pathname-defaults*",id:"expanded-reference-default-pathname-defaults",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"default-pathname-defaults",children:"*default-pathname-defaults*"}),"\n","\n","\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-default-pathname-defaults",children:"Expanded Reference: *default-pathname-defaults*"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"*default-pathname-defaults*\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>s});var t=a(67294);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);