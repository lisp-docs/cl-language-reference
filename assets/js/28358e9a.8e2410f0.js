"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[58766],{63540:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>d,metadata:()=>h,toc:()=>x});var s=r(85893),l=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:i}=n;return r||c("DictionaryLink",!0),i||c("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"+, ++, +++"})," ",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"Variable"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,s.jsxs)(n.p,{children:["an ",(0,s.jsx)(i,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(i,{styled:!0,term:"implementation-dependent",children:(0,s.jsx)("i",{children:"implementation-dependent"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variables"})})," ",(0,s.jsx)(r,{styled:!0,term:"+",children:(0,s.jsx)("b",{children:"+"})}),", ",(0,s.jsx)(r,{styled:!0,term:"++",children:(0,s.jsx)("b",{children:"++"})}),", and ",(0,s.jsx)(r,{styled:!0,term:"+++",children:(0,s.jsx)("b",{children:"+++"})})," are maintained by the ",(0,s.jsx)(n.em,{children:"Lisp read-eval-print loop"})," to save ",(0,s.jsx)(i,{styled:!0,term:"form",children:(0,s.jsx)("i",{children:"forms"})})," that were recently ",(0,s.jsx)(n.em,{children:"evaluated"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(r,{styled:!0,term:"+",children:(0,s.jsx)("b",{children:"+"})})," is the last ",(0,s.jsx)(i,{styled:!0,term:"form",children:(0,s.jsx)("i",{children:"form"})})," that was ",(0,s.jsx)(n.em,{children:"evaluated"}),", the ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(r,{styled:!0,term:"++",children:(0,s.jsx)("b",{children:"++"})})," is the previous value of ",(0,s.jsx)(r,{styled:!0,term:"+",children:(0,s.jsx)("b",{children:"+"})}),", and the ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(r,{styled:!0,term:"+++",children:(0,s.jsx)("b",{children:"+++"})})," is the previous value of ",(0,s.jsx)(r,{styled:!0,term:"++",children:(0,s.jsx)("b",{children:"++"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:" \n(+ 0 1) \u2192 1 \n(- 4 2) \u2192 2 \n(/ 9 3) \u2192 3 \n(list + ++ +++) \u2192 ((/ 9 3) (- 4 2) (+ 0 1)) \n(setq a 1 b 2 c 3 d (list a b c)) \u2192 (1 2 3) \n(setq a 4 b 5 c 6 d (list a b c)) \u2192 (4 5 6) \n(list a b c) \u2192 (4 5 6) \n(eval +++) \u2192 (1 2 3) \n#.\u2018(,@++ d) \u2192 (1 2 3 (1 2 3)) \n \n \n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Lisp read-eval-print loop"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(r,{styled:!0,term:"-",children:(0,s.jsx)("b",{children:"-"})})," (",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),"), ",(0,s.jsx)(n.strong,{children:"*"})," (",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),"), ",(0,s.jsx)(r,{styled:!0,term:"/",children:(0,s.jsx)("b",{children:"/"})})," (",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),"), Section 25.1.1 (Top level loop)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"\u2217"}),"**,** ",(0,s.jsx)(n.em,{children:"\u2217\u2217"}),"**,** ",(0,s.jsx)(n.em,{children:"\u2217\u2217\u2217 Variable"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Value Type:"})}),"\n",(0,s.jsxs)(n.p,{children:["an ",(0,s.jsx)(i,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Initial Value:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(i,{styled:!0,term:"implementation-dependent",children:(0,s.jsx)("i",{children:"implementation-dependent"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variables"})})," ",(0,s.jsx)(n.strong,{children:"*"}),", ",(0,s.jsx)(n.strong,{children:"**"}),", and ",(0,s.jsx)(n.strong,{children:"***"})," are maintained by the ",(0,s.jsx)(n.em,{children:"Lisp read-eval-print loop"})," to save the values of results that are printed each time through the loop."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(n.strong,{children:"*"})," is the most recent ",(0,s.jsx)(i,{styled:!0,term:"primary value",children:(0,s.jsx)("i",{children:"primary value"})})," that was printed, the ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(n.strong,{children:"**"})," is the previous value of ",(0,s.jsx)(n.strong,{children:"*"}),", and the ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(n.strong,{children:"***"})," is the previous value of ",(0,s.jsx)(n.strong,{children:"**"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If several values are produced, ",(0,s.jsx)(n.strong,{children:"*"})," contains the first value only; ",(0,s.jsx)(n.strong,{children:"*"})," contains ",(0,s.jsx)(r,{styled:!0,term:"nil",children:(0,s.jsx)("b",{children:"nil"})})," if zero values are produced."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"value",children:(0,s.jsx)("i",{children:"values"})})," of ",(0,s.jsx)(n.strong,{children:"*"}),", ",(0,s.jsx)(n.strong,{children:"**"}),", and ",(0,s.jsx)(n.strong,{children:"***"})," are updated immediately prior to printing the ",(0,s.jsx)(i,{styled:!0,term:"return value",children:(0,s.jsx)("i",{children:"return value"})})," of a top-level ",(0,s.jsx)(i,{styled:!0,term:"form",children:(0,s.jsx)("i",{children:"form"})})," by the ",(0,s.jsx)(n.em,{children:"Lisp read-eval-print loop"}),". If the ",(0,s.jsx)(i,{styled:!0,term:"evaluation",children:(0,s.jsx)("i",{children:"evaluation"})})," of such a ",(0,s.jsx)(i,{styled:!0,term:"form",children:(0,s.jsx)("i",{children:"form"})})," is aborted prior to its normal return, the values of ",(0,s.jsx)(n.strong,{children:"*"}),", ",(0,s.jsx)(n.strong,{children:"**"}),", and ",(0,s.jsx)(n.strong,{children:"***"})," are not updated."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(values \u2019a1 \u2019a2) \u2192 A1, A2 \n\u2019b \u2192 B \n(values \u2019c1 \u2019c2 \u2019c3) \u2192 C1, C2, C3 \n(list \\* \\*\\* \\*\\*\\*) \u2192 (C1 B A1) \n(defun cube-root (x) (expt x 1/3)) \u2192 CUBE-ROOT \n(compile \\*) \u2192 CUBE-ROOT \n(setq a (cube-root 27.0)) \u2192 3.0 \n(\\* \\* 9.0) \u2192 27.0 \n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Lisp read-eval-print loop"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(r,{styled:!0,term:"-",children:(0,s.jsx)("b",{children:"-"})})," (",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),"), ",(0,s.jsx)(r,{styled:!0,term:"+",children:(0,s.jsx)("b",{children:"+"})})," (",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),"), ",(0,s.jsx)(r,{styled:!0,term:"/",children:(0,s.jsx)("b",{children:"/"})})," (",(0,s.jsx)(i,{styled:!0,term:"variable",children:(0,s.jsx)("i",{children:"variable"})}),"), Section 25.1.1 (Top level loop)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["* ",(0,s.jsx)(n.em,{children:"\u2261"})," (car /)"]}),"\n",(0,s.jsxs)(n.p,{children:["** ",(0,s.jsx)(n.em,{children:"\u2261"})," (car //)"]}),"\n",(0,s.jsxs)(n.p,{children:["*** ",(0,s.jsx)(n.em,{children:"\u2261"})," (car ///)"]})]})}function t(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"+, ++, +++"},a="+, ++, +++",h={id:"chap-25/cf-c-dictionary/plus_plusplus_plusplusplus_variable",title:"+, ++, +++",description:"Expanded Reference: +, ++, +++",source:"@site/docs/chap-25/cf-c-dictionary/plus_plusplus_plusplusplus_variable.md",sourceDirName:"chap-25/cf-c-dictionary",slug:"/chap-25/cf-c-dictionary/plus_plusplus_plusplusplus_variable",permalink:"/cl-language-reference/chap-25/cf-c-dictionary/plus_plusplus_plusplusplus_variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-25/cf-c-dictionary/plus_plusplus_plusplusplus_variable.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"+, ++, +++"},sidebar:"tutorialSidebar",previous:{title:"machine-version",permalink:"/cl-language-reference/chap-25/cf-c-dictionary/machine-version_function"},next:{title:"room",permalink:"/cl-language-reference/chap-25/cf-c-dictionary/room_function"}},o={},x=[{value:"Expanded Reference: +, ++, +++",id:"expanded-reference---",level:2}];function j(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"--",children:"+, ++, +++"}),"\n","\n","\n",(0,s.jsx)(t,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference---",children:"Expanded Reference: +, ++, +++"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(+, ++, +++ )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>t});var s=r(67294);const l={},i=s.createContext(l);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);