"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[9671],{7876:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=t(5893),r=t(1151);const i={},c="Introduction",s={id:"intro",title:"intro",description:"Welcome to the Cl Technical Reference.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/cl-language-reference/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"intro",permalink:"/cl-language-reference/docs/chap-0/intro"}},a={},l=[];function u(e){const n={h1:"h1",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Welcome to the Cl Technical Reference."}),"\n",(0,o.jsx)(n.p,{children:"The goal of this project is to provide a full technical reference that can be useful to anyone programming in Common Lisp."}),"\n",(0,o.jsx)(n.p,{children:"This document is comprised of both the original Common Lisp specification, and community provided explanations and examples to make it easier to understand."}),"\n",(0,o.jsx)(n.p,{children:"If you have any ideas, please help us with an issue on GitHub or better yet, make a pull request!"}),"\n",(0,o.jsx)(n.p,{children:"Thank you and we hope you find this useful."}),"\n",(0,o.jsx)(n.p,{children:"Lisp Docs,"})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>c});var o=t(7294);const r={},i=o.createContext(r);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);