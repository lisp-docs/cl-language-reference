"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[17927],{5808:(t,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>r});var e=o(85893),i=o(11151);const a={},s="slot-definition-allocation-standard-slot-definition",l={id:"meta-object-protocol/dictionary/slot-definition-allocation-standard-slot-definition",title:"slot-definition-allocation-standard-slot-definition",description:"Method SLOT-DEFINITION-ALLOCATION",source:"@site/docs/meta-object-protocol/dictionary/slot-definition-allocation-standard-slot-definition.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/slot-definition-allocation-standard-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-definition-allocation-standard-slot-definition",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/slot-definition-allocation-standard-slot-definition.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"slot-boundp-using-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-boundp-using-class"},next:{title:"slot-definition-allocation",permalink:"/cl-language-reference/meta-object-protocol/dictionary/slot-definition-allocation"}},c={},r=[];function d(t){const n={a:"a",em:"em",h1:"h1",p:"p",strong:"strong",...(0,i.a)(),...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:"slot-definition-allocation-standard-slot-definition",children:"slot-definition-allocation-standard-slot-definition"}),"\n",(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:"Method"})," ",(0,e.jsx)(n.strong,{children:"SLOT-DEFINITION-ALLOCATION"})]}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:"slot-definition-allocation"})," ",(0,e.jsx)(n.em,{children:"(slot"})," standard-slot-definition) => ",(0,e.jsx)(n.em,{children:"allocation"})]}),"\n",(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:"Description:"})}),"\n",(0,e.jsxs)(n.p,{children:["This is a method on the generic function",(0,e.jsx)(n.a,{href:"/meta-object-protocol/slot-definition-allocation",children:"slot-definition-allocation"}),"."]}),"\n",(0,e.jsx)(n.p,{children:"No behavior is specified for this method beyond that which is specified for the corresponding generic function."})]})}function f(t={}){const{wrapper:n}={...(0,i.a)(),...t.components};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(d,{...t})}):d(t)}},11151:(t,n,o)=>{o.d(n,{Z:()=>l,a:()=>s});var e=o(67294);const i={},a=e.createContext(i);function s(t){const n=e.useContext(a);return e.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function l(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),e.createElement(a.Provider,{value:n},t.children)}}}]);