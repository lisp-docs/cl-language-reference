"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[3417],{628:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>g,contentTitle:()=>f,default:()=>b,frontMatter:()=>p,metadata:()=>u,toc:()=>y});var i=s(5893),r=s(1151);function t(e){const n={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This section describes the Common Lisp interface to file systems. The model used by this interface assumes that ",(0,i.jsx)(n.em,{children:"files"})," are named by ",(0,i.jsx)(n.em,{children:"filenames"}),", that a ",(0,i.jsx)(n.em,{children:"filename"})," can be represented by a ",(0,i.jsx)(n.em,{children:"pathname object"}),", and that given a ",(0,i.jsx)(n.em,{children:"pathname"})," a ",(0,i.jsx)(n.em,{children:"stream"})," can be constructed that connects to a ",(0,i.jsx)(n.em,{children:"file"})," whose ",(0,i.jsx)(n.em,{children:"filename"})," it represents."]}),"\n",(0,i.jsxs)(n.p,{children:["For information about opening and closing ",(0,i.jsx)(n.em,{children:"files"}),", and manipulating their contents, see Chapter 21 (Streams)."]}),"\n",(0,i.jsxs)(n.p,{children:["Figure 20\u20131 lists some ",(0,i.jsx)(n.em,{children:"operators"})," that are applicable to ",(0,i.jsx)(n.em,{children:"files"})," and directories."]}),"\n",(0,i.jsx)(n.table,{children:(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.th,{style:{textAlign:"left"},children:["<p>",(0,i.jsx)(n.strong,{children:"compile-file file-length open"})," </p><p>",(0,i.jsx)(n.strong,{children:"delete-file file-position probe-file"})," </p><p>",(0,i.jsx)(n.strong,{children:"directory file-write-date rename-file"})," </p><p>",(0,i.jsx)(n.strong,{children:"file-author load with-open-file"}),"</p>"]})})})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Figure 20\u20131. File and Directory Operations"})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}function c(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.em,{children:"stream associated with a file"})," is either a ",(0,i.jsx)(n.em,{children:"file stream"})," or a ",(0,i.jsx)(n.em,{children:"synonym stream"})," whose target is a ",(0,i.jsx)(n.em,{children:"stream associated with a file"}),". Such streams can be used as ",(0,i.jsx)(n.em,{children:"pathname designators"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Normally, when a ",(0,i.jsx)(n.em,{children:"stream associated with a file"})," is used as a ",(0,i.jsx)(n.em,{children:"pathname designator"})," , it denotes the ",(0,i.jsx)(n.em,{children:"pathname"})," used to open the ",(0,i.jsx)(n.em,{children:"file"}),"; this may be, but is not required to be, the actual name of the ",(0,i.jsx)(n.em,{children:"file"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Some functions, such as ",(0,i.jsx)(n.strong,{children:"truename"})," and ",(0,i.jsx)(n.strong,{children:"delete-file"}),", coerce ",(0,i.jsx)(n.em,{children:"streams"})," to ",(0,i.jsx)(n.em,{children:"pathnames"})," in a different way that involves referring to the actual ",(0,i.jsx)(n.em,{children:"file"})," that is open, which might or might not be the file whose name was opened originally. Such special situations are always notated specifically and are not the default."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function d(e){const n={em:"em",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Many ",(0,i.jsx)(n.em,{children:"functions"})," that perform ",(0,i.jsx)(n.em,{children:"file"})," operations accept either ",(0,i.jsx)(n.em,{children:"open"})," or ",(0,i.jsx)(n.em,{children:"closed streams"})," as ",(0,i.jsx)(n.em,{children:"arguments"}),"; see Section 21.1.3 (Stream Arguments to Standardized Functions)."]}),"\n",(0,i.jsxs)(n.p,{children:["Of these, the ",(0,i.jsx)(n.em,{children:"functions"})," in Figure 20\u20132 treat ",(0,i.jsx)(n.em,{children:"open"})," and ",(0,i.jsx)(n.em,{children:"closed streams"})," differently."]}),"\n",(0,i.jsx)(n.table,{children:(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsxs)(n.th,{style:{textAlign:"left"},children:["<p>",(0,i.jsx)(n.strong,{children:"delete-file file-author probe-file"})," </p><p>",(0,i.jsx)(n.strong,{children:"directory file-write-date truename"}),"</p>"]})})})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Figure 20\u20132. File Functions that Treat Open and Closed Streams Differently"})}),"\n",(0,i.jsxs)(n.p,{children:["Files ",(0,i.jsx)(n.strong,{children:"20\u20131"})]}),"\n",(0,i.jsxs)(n.p,{children:["Since treatment of ",(0,i.jsx)(n.em,{children:"open streams"})," by the ",(0,i.jsx)(n.em,{children:"file system"})," may vary considerably between ",(0,i.jsx)(n.em,{children:"implementations"}),", however, a ",(0,i.jsx)(n.em,{children:"closed stream"})," might be the most reliable kind of ",(0,i.jsx)(n.em,{children:"argument"})," for some of these functions\u2014in particular, those in Figure 20\u20133. For example, in some ",(0,i.jsx)(n.em,{children:"file systems"}),", ",(0,i.jsx)(n.em,{children:"open files"})," are written under temporary names and not renamed until ",(0,i.jsx)(n.em,{children:"closed"})," and/or are held invisible until ",(0,i.jsx)(n.em,{children:"closed"}),". In general, any code that is intended to be portable should use such ",(0,i.jsx)(n.em,{children:"functions"})," carefully."]}),"\n",(0,i.jsx)(n.table,{children:(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{style:{textAlign:"left"},children:(0,i.jsx)(n.strong,{children:"directory probe-file truename"})})})})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Figure 20\u20133. File Functions where Closed Streams Might Work Best"})})]})}function o(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function a(e){const n={em:"em",p:"p",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Many ",(0,i.jsx)(n.em,{children:"file systems"})," permit more than one ",(0,i.jsx)(n.em,{children:"filename"})," to designate a particular ",(0,i.jsx)(n.em,{children:"file"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Even where multiple names are possible, most ",(0,i.jsx)(n.em,{children:"file systems"})," have a convention for generating a canonical ",(0,i.jsx)(n.em,{children:"filename"})," in such situations. Such a canonical ",(0,i.jsx)(n.em,{children:"filename"})," (or the ",(0,i.jsx)(n.em,{children:"pathname"})," representing such a ",(0,i.jsx)(n.em,{children:"filename"}),") is called a ",(0,i.jsx)(n.em,{children:"truename"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"truename"})," of a ",(0,i.jsx)(n.em,{children:"file"})," may differ from other ",(0,i.jsx)(n.em,{children:"filenames"})," for the file because of symbolic links, version numbers, logical device translations in the ",(0,i.jsx)(n.em,{children:"file system"}),", ",(0,i.jsx)(n.em,{children:"logical pathname"})," translations within Common Lisp, or other artifacts of the ",(0,i.jsx)(n.em,{children:"file system"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"truename"})," for a ",(0,i.jsx)(n.em,{children:"file"})," is often, but not necessarily, unique for each ",(0,i.jsx)(n.em,{children:"file"}),". For instance, a Unix ",(0,i.jsx)(n.em,{children:"file"})," with multiple hard links could have several ",(0,i.jsx)(n.em,{children:"truenames"}),"."]})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}function m(e){const n={del:"del",em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["For example, a DEC TOPS-20 system with ",(0,i.jsx)(n.em,{children:"files"})," PS:<JOE>FOO.TXT.1 and PS:<JOE>FOO.TXT.2 might permit the second ",(0,i.jsx)(n.em,{children:"file"})," to be referred to as PS:<JOE>FOO.TXT.0, since the \u201c.0\u201d notation denotes \u201cnewest\u201d version of several ",(0,i.jsx)(n.em,{children:"files"}),". In the same ",(0,i.jsx)(n.em,{children:"file system"}),", a \u201clogical device\u201d \u201cJOE:\u201d might be taken to refer to PS:<JOE>\u201d and so the names JOE",":FOO",".TXT.2 or JOE",":FOO",".TXT.0 might refer to PS:<JOE>FOO.TXT.2. In all of these cases, the ",(0,i.jsx)(n.em,{children:"truename"})," of the file would probably be PS:<JOE>FOO.TXT.2."]}),"\n",(0,i.jsxs)(n.p,{children:["If a ",(0,i.jsx)(n.em,{children:"file"})," is a symbolic link to another ",(0,i.jsx)(n.em,{children:"file"})," (in a ",(0,i.jsx)(n.em,{children:"file system"})," permitting such a thing), it is conventional for the ",(0,i.jsx)(n.em,{children:"truename"})," to be the canonical name of the ",(0,i.jsx)(n.em,{children:"file"})," after any symbolic links have been followed; that is, it is the canonical name of the ",(0,i.jsx)(n.em,{children:"file"})," whose contents would become available if an ",(0,i.jsx)(n.em,{children:"input stream"})," to that ",(0,i.jsx)(n.em,{children:"file"})," were opened."]}),"\n",(0,i.jsxs)(n.p,{children:["In the case of a ",(0,i.jsx)(n.em,{children:"file"})," still being created (that is, of an ",(0,i.jsx)(n.em,{children:"output stream"})," open to such a ",(0,i.jsx)(n.em,{children:"file"}),"), the exact ",(0,i.jsx)(n.em,{children:"truename"})," of the file might not be known until the ",(0,i.jsx)(n.em,{children:"stream"})," is closed. In this case, the ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"truename"})," might return different values for such a ",(0,i.jsx)(n.em,{children:"stream"})," before and after it was closed. In fact, before it is closed, the name returned might not even be a valid name in the ",(0,i.jsx)(n.em,{children:"file system"}),"\u2014for example, while a file is being written, it might have version ",":newest"," and might only take on a specific numeric value later when the file is closed even in a ",(0,i.jsx)(n.em,{children:"file system"})," where all files have numeric versions."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"directory"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"directory"})," ",(0,i.jsx)(n.em,{children:"pathspec"})," &key ",(0,i.jsx)(n.em,{children:"\u2192 pathnames"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," , which may contain ",(0,i.jsx)(n.em,{children:"wild"})," components."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathnames"}),"\u2014a ",(0,i.jsx)(n.em,{children:"list"})," of ",(0,i.jsx)(n.em,{children:"physical pathnames"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Determines which, if any, ",(0,i.jsx)(n.em,{children:"files"})," that are present in the file system have names matching ",(0,i.jsx)(n.em,{children:"pathspec"}),", and returns a ",(0,i.jsx)(n.em,{children:"fresh list"})," of ",(0,i.jsx)(n.em,{children:"pathnames"})," corresponding to the ",(0,i.jsx)(n.em,{children:"truenames"})," of those ",(0,i.jsx)(n.em,{children:"files"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.em,{children:"implementation"})," may be extended to accept ",(0,i.jsx)(n.em,{children:"implementation-defined"})," keyword arguments to ",(0,i.jsx)(n.strong,{children:"directory"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:"The host computer\u2019s file system."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If the attempt to obtain a directory listing is not successful, an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"pathname"}),", ",(0,i.jsx)(n.strong,{children:"logical-pathname"}),", ",(0,i.jsx)(n.strong,{children:"ensure-directories-exist"}),", Section 20.1 (File System Concepts), Section 21.1.1.1.2 (Open and Closed Streams), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.em,{children:"pathspec"})," is not ",(0,i.jsx)(n.em,{children:"wild"}),", the resulting list will contain either zero or one elements."]}),"\n",(0,i.jsxs)(n.p,{children:["Common Lisp specifies \u201c&key\u201d in the argument list to ",(0,i.jsx)(n.strong,{children:"directory"})," even though no ",(0,i.jsx)(n.em,{children:"standardized"})," keyword arguments to ",(0,i.jsx)(n.strong,{children:"directory"})," are defined. \u201c",":allow-other-keys"," t\u201d may be used in ",(0,i.jsx)(n.em,{children:"conforming programs"})," in order to quietly ignore any additional keywords which are passed by the program but not supported by the ",(0,i.jsx)(n.em,{children:"implementation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"probe-file"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"probe-file"})," ",(0,i.jsx)(n.em,{children:"pathspec \u2192 truename"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:["Files ",(0,i.jsx)(n.strong,{children:"20\u20133"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"truename"}),"\u2014a ",(0,i.jsx)(n.em,{children:"physical pathname"})," or ",(0,i.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"probe-file"})," tests whether a file exists."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"probe-file"})," returns ",(0,i.jsx)(n.em,{children:"false"})," if there is no file named ",(0,i.jsx)(n.em,{children:"pathspec"}),", and otherwise returns the ",(0,i.jsx)(n.em,{children:"truename"})," of ",(0,i.jsx)(n.em,{children:"pathspec"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.em,{children:"pathspec designator"})," is an open ",(0,i.jsx)(n.em,{children:"stream"}),", then ",(0,i.jsx)(n.strong,{children:"probe-file"})," produces the ",(0,i.jsx)(n.em,{children:"truename"})," of its associated ",(0,i.jsx)(n.em,{children:"file"}),". If ",(0,i.jsx)(n.em,{children:"pathspec"})," is a ",(0,i.jsx)(n.em,{children:"stream"}),", whether open or closed, it is coerced to a ",(0,i.jsx)(n.em,{children:"pathname"})," as if by the ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"pathname"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:"The host computer\u2019s file system."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if ",(0,i.jsx)(n.em,{children:"pathspec"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if the ",(0,i.jsx)(n.em,{children:"file system"})," cannot perform the requested operation."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"truename"}),", ",(0,i.jsx)(n.strong,{children:"open"}),", ",(0,i.jsx)(n.strong,{children:"ensure-directories-exist"}),", ",(0,i.jsx)(n.strong,{children:"pathname"}),", ",(0,i.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 21.1.1.1.2 (Open and Closed Streams), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ensure-directories-exist"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ensure-directories-exist"})," ",(0,i.jsx)(n.em,{children:"pathspec"})," &key ",(0,i.jsx)(n.em,{children:"verbose \u2192 pathspec, created"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"verbose"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"created"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Tests whether the directories containing the specified ",(0,i.jsx)(n.em,{children:"file"})," actually exist, and attempts to create them if they do not."]}),"\n",(0,i.jsxs)(n.p,{children:["If the containing directories do not exist and if ",(0,i.jsx)(n.em,{children:"verbose"})," is ",(0,i.jsx)(n.em,{children:"true"}),", then the ",(0,i.jsx)(n.em,{children:"implementation"})," is permitted (but not required) to perform output to ",(0,i.jsx)(n.em,{children:"standard output"})," saying what directories were created. If the containing directories exist, or if ",(0,i.jsx)(n.em,{children:"verbose"})," is ",(0,i.jsx)(n.em,{children:"false"}),", this function performs no output."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"primary value"})," is the given ",(0,i.jsx)(n.em,{children:"pathspec"})," so that this operation can be straightforwardly composed with other file manipulation expressions. The ",(0,i.jsx)(n.em,{children:"secondary value"}),", ",(0,i.jsx)(n.em,{children:"created"}),", is ",(0,i.jsx)(n.em,{children:"true"})," if any directories were created."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:"The host computer\u2019s file system."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if the host, device, or directory part of ",(0,i.jsx)(n.em,{children:"pathspec"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If the directory creation attempt is not successful, an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled; if this occurs, it might be the case that none, some, or all of the requested creations have actually occurred within the ",(0,i.jsx)(n.em,{children:"file system"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"probe-file"}),", ",(0,i.jsx)(n.strong,{children:"open"}),", Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"truename"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"truename"})," ",(0,i.jsx)(n.em,{children:"filespec \u2192 truename"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"filespec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"truename"}),"\u2014a ",(0,i.jsx)(n.em,{children:"physical pathname"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"truename"})," tries to find the ",(0,i.jsx)(n.em,{children:"file"})," indicated by ",(0,i.jsx)(n.em,{children:"filespec"})," and returns its ",(0,i.jsx)(n.em,{children:"truename"}),". If the ",(0,i.jsx)(n.em,{children:"filespec designator"})," is an open ",(0,i.jsx)(n.em,{children:"stream"}),", its associated ",(0,i.jsx)(n.em,{children:"file"})," is used. If ",(0,i.jsx)(n.em,{children:"filespec"})," is a ",(0,i.jsx)(n.em,{children:"stream"}),", ",(0,i.jsx)(n.strong,{children:"truename"})," can be used whether the ",(0,i.jsx)(n.em,{children:"stream"})," is open or closed. It is permissible for ",(0,i.jsx)(n.strong,{children:"truename"})," to return more specific information after the ",(0,i.jsx)(n.em,{children:"stream"})," is closed than when the ",(0,i.jsx)(n.em,{children:"stream"})," was open. If ",(0,i.jsx)(n.em,{children:"filespec"})," is a ",(0,i.jsx)(n.em,{children:"pathname"})," it represents the name used to open the file. This may be, but is not required to be, the actual name of the file."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.p,{children:";; An example involving version numbers. Note that the precise nature of"}),"\n",(0,i.jsx)(n.p,{children:";; the truename is implementation-dependent while the file is still open."}),"\n",(0,i.jsx)(n.p,{children:'(with-open-file (stream ">vistor>test.text.newest")'}),"\n",(0,i.jsx)(n.p,{children:"(values (pathname stream)"}),"\n",(0,i.jsxs)(n.p,{children:["Files ",(0,i.jsx)(n.strong,{children:"20\u20135"})]}),"\n",(0,i.jsx)(n.p,{children:"(truename stream)))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' #P"S:>vistor>test.text.newest", #P"S:>vistor>test.text.1"']}),"\n",(0,i.jsx)(n.p,{children:'<i><sup>or</sup>\u2192</i> #P"S:>vistor>test.text.newest", #P"S:>vistor>test.text.newest"'}),"\n",(0,i.jsx)(n.p,{children:'<i><sup>or</sup>\u2192</i> #P"S:>vistor>test.text.newest", #P"S:>vistor> temp . temp .1"'}),"\n",(0,i.jsx)(n.p,{children:";; In this case, the file is closed when the truename is tried, so the"}),"\n",(0,i.jsx)(n.p,{children:";; truename information is reliable."}),"\n",(0,i.jsx)(n.p,{children:'(with-open-file (stream ">vistor>test.text.newest")'}),"\n",(0,i.jsx)(n.p,{children:"(close stream)"}),"\n",(0,i.jsx)(n.p,{children:"(values (pathname stream)"}),"\n",(0,i.jsx)(n.p,{children:"(truename stream)))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' #P"S:>vistor>test.text.newest", #P"S:>vistor>test.text.1"']}),"\n",(0,i.jsx)(n.p,{children:";; An example involving TOP-20\u2019s implementation-dependent concept"}),"\n",(0,i.jsx)(n.p,{children:';; of logical devices \u2013 in this case, "DOC:" is shorthand for'}),"\n",(0,i.jsx)(n.p,{children:';; "PS:<DOCUMENTATION>" ...'}),"\n",(0,i.jsxs)(n.p,{children:['(with-open-file (stream "CMUC::DOC',":DUMPER",'.HLP")']}),"\n",(0,i.jsx)(n.p,{children:"(values (pathname stream)"}),"\n",(0,i.jsx)(n.p,{children:"(truename stream)))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' #P"CMUC::DOC',":DUMPER",'.HLP", #P"CMUC::PS:<DOCUMENTATION>DUMPER.HLP.13"']}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if an appropriate ",(0,i.jsx)(n.em,{children:"file"})," cannot be located within the ",(0,i.jsx)(n.em,{children:"file system"})," for the given ",(0,i.jsx)(n.em,{children:"filespec"}),", or if the ",(0,i.jsx)(n.em,{children:"file system"})," cannot perform the requested operation."]}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if ",(0,i.jsx)(n.em,{children:"pathname"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"pathname"}),", ",(0,i.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"truename"})," may be used to account for any ",(0,i.jsx)(n.em,{children:"filename"})," translations performed by the ",(0,i.jsx)(n.em,{children:"file system"}),". ",(0,i.jsx)(n.strong,{children:"file-author"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-author"})," ",(0,i.jsx)(n.em,{children:"pathspec \u2192 author"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"author"}),"\u2014a ",(0,i.jsx)(n.em,{children:"string"})," or ",(0,i.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns a ",(0,i.jsx)(n.em,{children:"string"})," naming the author of the ",(0,i.jsx)(n.em,{children:"file"})," specified by ",(0,i.jsx)(n.em,{children:"pathspec"}),", or ",(0,i.jsx)(n.strong,{children:"nil"})," if the author\u2019s name cannot be determined."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.p,{children:'(with-open-file (stream ">relativity>general.text")'}),"\n",(0,i.jsx)(n.p,{children:"(file-author s))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' "albert"']}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:"The host computer\u2019s file system."}),"\n",(0,i.jsxs)(n.p,{children:["Other users of the ",(0,i.jsx)(n.em,{children:"file"})," named by ",(0,i.jsx)(n.em,{children:"pathspec"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if ",(0,i.jsx)(n.em,{children:"pathspec"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if the ",(0,i.jsx)(n.em,{children:"file system"})," cannot perform the requested operation."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"pathname"}),", ",(0,i.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-write-date"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-write-date"})," ",(0,i.jsx)(n.em,{children:"pathspec \u2192 date"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"date"}),"\u2014a ",(0,i.jsx)(n.em,{children:"universal time"})," or ",(0,i.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns a ",(0,i.jsx)(n.em,{children:"universal time"})," representing the time at which the ",(0,i.jsx)(n.em,{children:"file"})," specified by ",(0,i.jsx)(n.em,{children:"pathspec"})," was last written (or created), or returns ",(0,i.jsx)(n.strong,{children:"nil"})," if such a time cannot be determined."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.p,{children:'(with-open-file (s "noel.text"'}),"\n",(0,i.jsxs)(n.p,{children:[":direction"," ",":output"," ",":if-exists"," ",":error",")"]}),"\n",(0,i.jsx)(n.p,{children:'(format s "~&Dear Santa,~2%I was good this year. ~'}),"\n",(0,i.jsxs)(n.p,{children:["Please leave lots of toys.",(0,i.jsx)(n.del,{children:"2%Love, Sue"})]}),"\n",(0,i.jsxs)(n.p,{children:["Files ",(0,i.jsx)(n.strong,{children:"20\u20137"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.del,{children:"2%attachments: milk, cookies"}),'%")']}),"\n",(0,i.jsx)(n.p,{children:"(truename s))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' #P"CUPID:/susan/noel.text"']}),"\n",(0,i.jsx)(n.p,{children:'(with-open-file (s "noel.text")'}),"\n",(0,i.jsx)(n.p,{children:"(file-write-date s))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"})," 2902600800"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:"The host computer\u2019s file system."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if ",(0,i.jsx)(n.em,{children:"pathspec"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled if the ",(0,i.jsx)(n.em,{children:"file system"})," cannot perform the requested operation."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:"Section 25.1.4.2 (Universal Time), Section 19.1.2 (Pathnames as Filenames)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"rename-file"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"rename-file"})," ",(0,i.jsx)(n.em,{children:"filespec new-name \u2192 defaulted-new-name, old-truename, new-truename"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"filespec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"new-name"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," other than a ",(0,i.jsx)(n.em,{children:"stream"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"defaulted-new-name"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"old-truename"}),"\u2014a ",(0,i.jsx)(n.em,{children:"physical pathname"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"new-truename"}),"\u2014a ",(0,i.jsx)(n.em,{children:"physical pathname"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"rename-file"})," modifies the file system in such a way that the file indicated by ",(0,i.jsx)(n.em,{children:"filespec"})," is renamed to ",(0,i.jsx)(n.em,{children:"defaulted-new-name"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It is an error to specify a filename containing a ",(0,i.jsx)(n.em,{children:"wild"})," component, for ",(0,i.jsx)(n.em,{children:"filespec"})," to contain a ",(0,i.jsx)(n.strong,{children:"nil"})," component where the file system does not permit a ",(0,i.jsx)(n.strong,{children:"nil"})," component, or for the result of defaulting missing components of ",(0,i.jsx)(n.em,{children:"new-name"})," from ",(0,i.jsx)(n.em,{children:"filespec"})," to contain a ",(0,i.jsx)(n.strong,{children:"nil"})," component where the file system does not permit a ",(0,i.jsx)(n.strong,{children:"nil"})," component."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"new-name"})," is a ",(0,i.jsx)(n.em,{children:"logical pathname"}),", ",(0,i.jsx)(n.strong,{children:"rename-file"})," returns a ",(0,i.jsx)(n.em,{children:"logical pathname"})," as its ",(0,i.jsx)(n.em,{children:"primary value"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"rename-file"})," returns three values if successful. The ",(0,i.jsx)(n.em,{children:"primary value"}),", ",(0,i.jsx)(n.em,{children:"defaulted-new-name"}),", is the resulting name which is composed of ",(0,i.jsx)(n.em,{children:"new-name"})," with any missing components filled in by performing a ",(0,i.jsx)(n.strong,{children:"merge-pathnames"})," operation using ",(0,i.jsx)(n.em,{children:"filespec"})," as the defaults. The ",(0,i.jsx)(n.em,{children:"secondary value"}),", ",(0,i.jsx)(n.em,{children:"old-truename"}),", is the ",(0,i.jsx)(n.em,{children:"truename"})," of the ",(0,i.jsx)(n.em,{children:"file"})," before it was renamed. The ",(0,i.jsx)(n.em,{children:"tertiary value"}),", ",(0,i.jsx)(n.em,{children:"new-truename"}),", is the ",(0,i.jsx)(n.em,{children:"truename"})," of the ",(0,i.jsx)(n.em,{children:"file"})," after it was renamed."]}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.em,{children:"filespec designator"})," is an open ",(0,i.jsx)(n.em,{children:"stream"}),", then the ",(0,i.jsx)(n.em,{children:"stream"})," itself and the file associated with it are affected (if the ",(0,i.jsx)(n.em,{children:"file system"})," permits)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.p,{children:";; An example involving logical pathnames."}),"\n",(0,i.jsxs)(n.p,{children:['(with-open-file (stream "sys',":chemistry",';lead.text"']}),"\n",(0,i.jsxs)(n.p,{children:[":direction"," ",":output"," ",":if-exists"," ",":error",")"]}),"\n",(0,i.jsx)(n.p,{children:'(princ "eureka" stream)'}),"\n",(0,i.jsx)(n.p,{children:"(values (pathname stream) (truename stream)))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' #P"SYS',":CHEMISTRY",';LEAD.TEXT.NEWEST", #P"Q:>sys>chem>lead.text.1"']}),"\n",(0,i.jsxs)(n.p,{children:['(rename-file "sys',":chemistry",';lead.text" "gold.text")']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"}),' #P"SYS',":CHEMISTRY",';GOLD.TEXT.NEWEST",']}),"\n",(0,i.jsx)(n.p,{children:'#P"Q:>sys>chem>lead.text.1",'}),"\n",(0,i.jsx)(n.p,{children:'#P"Q:>sys>chem>gold.text.1"'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If the renaming operation is not successful, an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled."]}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," might be signaled if ",(0,i.jsx)(n.em,{children:"filespec"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"truename"}),", ",(0,i.jsx)(n.strong,{children:"pathname"}),", ",(0,i.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"delete-file"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"delete-file"})," ",(0,i.jsx)(n.em,{children:"filespec \u2192"})," ",(0,i.jsx)(n.strong,{children:"t"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"filespec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Deletes the ",(0,i.jsx)(n.em,{children:"file"})," specified by ",(0,i.jsx)(n.em,{children:"filespec"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.em,{children:"filespec designator"})," is an open ",(0,i.jsx)(n.em,{children:"stream"}),", then ",(0,i.jsx)(n.em,{children:"filespec"})," and the file associated with it are affected (if the file system permits), in which case ",(0,i.jsx)(n.em,{children:"filespec"})," might be closed immediately, and the deletion"]}),"\n",(0,i.jsxs)(n.p,{children:["Files ",(0,i.jsx)(n.strong,{children:"20\u20139"})]}),"\n",(0,i.jsxs)(n.p,{children:["might be immediate or delayed until ",(0,i.jsx)(n.em,{children:"filespec"})," is explicitly closed, depending on the requirements of the file system."]}),"\n",(0,i.jsxs)(n.p,{children:["It is ",(0,i.jsx)(n.em,{children:"implementation-dependent"})," whether an attempt to delete a nonexistent file is considered to be successful."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"delete-file"})," returns ",(0,i.jsx)(n.em,{children:"true"})," if it succeeds, or signals an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," if it does not."]}),"\n",(0,i.jsxs)(n.p,{children:["The consequences are undefined if ",(0,i.jsx)(n.em,{children:"filespec"})," has a ",(0,i.jsx)(n.em,{children:"wild"})," component, or if ",(0,i.jsx)(n.em,{children:"filespec"})," has a ",(0,i.jsx)(n.strong,{children:"nil"})," component and the file system does not permit a ",(0,i.jsx)(n.strong,{children:"nil"})," component."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsxs)(n.p,{children:['(with-open-file (s "delete-me.text" ',":direction"," ",":output"," ",":if-exists"," ",":error","))"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"})," NIL"]}),"\n",(0,i.jsxs)(n.p,{children:['(setq p (probe-file "delete-me.text")) ',(0,i.jsx)(n.em,{children:"\u2192"}),' #P"R:>fred>delete-me.text.1"']}),"\n",(0,i.jsxs)(n.p,{children:["(delete-file p) ",(0,i.jsx)(n.em,{children:"\u2192"})," T"]}),"\n",(0,i.jsxs)(n.p,{children:['(probe-file "delete-me.text") ',(0,i.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,i.jsxs)(n.p,{children:['(with-open-file (s "delete-me.text" ',":direction"," ",":output"," ",":if-exists"," ",":error",")"]}),"\n",(0,i.jsx)(n.p,{children:"(delete-file s))"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"\u2192"})," T"]}),"\n",(0,i.jsxs)(n.p,{children:['(probe-file "delete-me.text") ',(0,i.jsx)(n.em,{children:"\u2192 false"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If the deletion operation is not successful, an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," is signaled."]}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," might be signaled if ",(0,i.jsx)(n.em,{children:"filespec"})," is ",(0,i.jsx)(n.em,{children:"wild"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"pathname"}),", ",(0,i.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-error"})," ",(0,i.jsx)(n.em,{children:"Condition Type"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-error"}),", ",(0,i.jsx)(n.strong,{children:"error"}),", ",(0,i.jsx)(n.strong,{children:"serious-condition"}),", ",(0,i.jsx)(n.strong,{children:"condition"}),", ",(0,i.jsx)(n.strong,{children:"t"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"})," consists of error conditions that occur during an attempt to open or close a file, or during some low-level transactions with a file system. The \u201coffending pathname\u201d is initialized by the ",":pathname"," initialization argument to ",(0,i.jsx)(n.strong,{children:"make-condition"}),", and is ",(0,i.jsx)(n.em,{children:"accessed"})," by the ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"file-error-pathname"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"file-error-pathname, open, probe-file, directory, ensure-directories-exist"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-error-pathname"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-error-pathname"})," ",(0,i.jsx)(n.em,{children:"condition \u2192 pathspec"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"condition"}),"\u2014a ",(0,i.jsx)(n.em,{children:"condition"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"pathspec"}),"\u2014a ",(0,i.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns the \u201coffending pathname\u201d of a ",(0,i.jsx)(n.em,{children:"condition"})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"file-error"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"file-error"}),", Chapter 9 (Conditions)"]}),"\n",(0,i.jsxs)(n.p,{children:["Files ",(0,i.jsx)(n.strong,{children:"20\u201311"})]})]})}function j(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}const p={title:"20.1 File System Concepts"},f="20.1 File System Concepts",u={id:"chap-20/ca-b-file-system-concepts",title:"20.1 File System Concepts",description:"20.1.1 Coercion of Streams to Pathnames",source:"@site/docs/chap-20/ca-b-file-system-concepts.md",sourceDirName:"chap-20",slug:"/chap-20/ca-b-file-system-concepts",permalink:"/cl-language-reference/docs/chap-20/ca-b-file-system-concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-20/ca-b-file-system-concepts.md",tags:[],version:"current",frontMatter:{title:"20.1 File System Concepts"},sidebar:"tutorialSidebar",previous:{title:"20. Files",permalink:"/cl-language-reference/docs/category/20-files"},next:{title:"intro",permalink:"/cl-language-reference/docs/chap-20/intro"}},g={},y=[{value:"20.1.1 Coercion of Streams to Pathnames",id:"2011-coercion-of-streams-to-pathnames",level:2},{value:"20.1.2 File Operations on Open and Closed Streams",id:"2012-file-operations-on-open-and-closed-streams",level:2},{value:"20.1.3 Truenames",id:"2013-truenames",level:2},{value:"20.1.3.1 Examples of Truenames",id:"20131-examples-of-truenames",level:3}];function w(e){const n={h1:"h1",h2:"h2",h3:"h3",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"201-file-system-concepts",children:"20.1 File System Concepts"}),"\n","\n",(0,i.jsx)(l,{}),"\n",(0,i.jsx)(n.h2,{id:"2011-coercion-of-streams-to-pathnames",children:"20.1.1 Coercion of Streams to Pathnames"}),"\n","\n",(0,i.jsx)(h,{}),"\n",(0,i.jsx)(n.h2,{id:"2012-file-operations-on-open-and-closed-streams",children:"20.1.2 File Operations on Open and Closed Streams"}),"\n","\n",(0,i.jsx)(o,{}),"\n",(0,i.jsx)(n.h2,{id:"2013-truenames",children:"20.1.3 Truenames"}),"\n","\n",(0,i.jsx)(x,{}),"\n",(0,i.jsx)(n.h3,{id:"20131-examples-of-truenames",children:"20.1.3.1 Examples of Truenames"}),"\n","\n","\n",(0,i.jsx)(j,{})]})}function b(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(w,{...e})}):w(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>l});var i=s(7294);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);