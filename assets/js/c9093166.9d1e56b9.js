"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[77121],{34034:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>a});var s=r(85893),i=r(11151);function t(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"simple-string"})," ",(0,s.jsx)(n.em,{children:"Type"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Supertypes:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"simple-string"}),", ",(0,s.jsx)(n.strong,{children:"string"}),", ",(0,s.jsx)(n.strong,{children:"vector"}),", ",(0,s.jsx)(n.strong,{children:"simple-array"}),", ",(0,s.jsx)(n.strong,{children:"array"}),", ",(0,s.jsx)(n.strong,{children:"sequence"}),", ",(0,s.jsx)(n.strong,{children:"t"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.em,{children:"simple string"})," is a specialized one-dimensional ",(0,s.jsx)(n.em,{children:"simple array"})," whose ",(0,s.jsx)(n.em,{children:"elements"})," are of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"character"})," or a ",(0,s.jsx)(n.em,{children:"subtype"})," of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"character"}),". When used as a ",(0,s.jsx)(n.em,{children:"type specifier"})," for object creation, ",(0,s.jsx)(n.strong,{children:"simple-string"})," means (simple-array character (",(0,s.jsx)(n.em,{children:"size"}),"))."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,s.jsx)(n.p,{children:"Abbreviating."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:["(simple-string [",(0,s.jsx)(n.em,{children:"size"}),"])"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"size"}),"\u2014a non-negative ",(0,s.jsx)(n.em,{children:"fixnum"}),", or the ",(0,s.jsx)(n.em,{children:"symbol"})," ",(0,s.jsx)(n.strong,{children:"*"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["This denotes the union of all ",(0,s.jsx)(n.em,{children:"types"})," (simple-array ",(0,s.jsx)(n.em,{children:"c"})," (",(0,s.jsx)(n.em,{children:"size"}),")) for all ",(0,s.jsx)(n.em,{children:"subtypes c"})," of ",(0,s.jsx)(n.strong,{children:"character"}),"; that is, the set of ",(0,s.jsx)(n.em,{children:"simple strings"})," of size ",(0,s.jsx)(n.em,{children:"size"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}const l={title:"simple-string"},o="simple-string",p={id:"chap-16/bg-c-dictionary/simple-string_type",title:"simple-string",description:"Expanded Reference: simple-string",source:"@site/docs/chap-16/bg-c-dictionary/simple-string_type.md",sourceDirName:"chap-16/bg-c-dictionary",slug:"/chap-16/bg-c-dictionary/simple-string_type",permalink:"/cl-language-reference/docs/chap-16/bg-c-dictionary/simple-string_type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-16/bg-c-dictionary/simple-string_type.md",tags:[],version:"current",frontMatter:{title:"simple-string"},sidebar:"tutorialSidebar",previous:{title:"simple-string-p",permalink:"/cl-language-reference/docs/chap-16/bg-c-dictionary/simple-string-p_function"},next:{title:"string-trim, string-left-trim, string-right-trim",permalink:"/cl-language-reference/docs/chap-16/bg-c-dictionary/string-trim_string-left-trim_string-right-trim_func-tion"}},d={},a=[{value:"Expanded Reference: simple-string",id:"expanded-reference-simple-string",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"simple-string",children:"simple-string"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-simple-string",children:"Expanded Reference: simple-string"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(simple-string )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>c});var s=r(67294);const i={},t=s.createContext(i);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);