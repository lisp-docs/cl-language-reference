"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[96366],{79472:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>j,frontMatter:()=>a,metadata:()=>h,toc:()=>m});var i=n(85893),r=n(11151);function l(e){const s={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:l}=s;return n||c("DictionaryLink",!0),l||c("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"defclass"})," ",(0,i.jsx)(l,{term:"macro",children:(0,i.jsx)("i",{children:"Macro"})})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," ",(0,i.jsx)(s.em,{children:"class-name"})," (",(0,i.jsx)(s.em,{children:"{superclass-name}"}),"*) (",(0,i.jsx)(s.em,{children:"{slot-specifier}"}),"*) [[",(0,i.jsx)(s.em,{children:"\u2193class-option"})," ]]"]}),"\n",(0,i.jsx)(s.p,{children:"\u2192 new-class"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"slot-specifier"}),"::= ",(0,i.jsx)(s.em,{children:"slot-name |"})," (",(0,i.jsx)(s.em,{children:"slot-name"})," [[",(0,i.jsx)(s.em,{children:"\u2193slot-option"})," ]])"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"slot-name"}),"::= ",(0,i.jsx)(l,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"slot-option"}),"::= ",(0,i.jsx)(s.em,{children:"{"}),":reader"," ",(0,i.jsx)(s.em,{children:"reader-function-name}"}),"* ",(0,i.jsx)(s.em,{children:"|"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":writer"," ",(0,i.jsx)(s.em,{children:"writer-function-name}"}),"* ",(0,i.jsx)(s.em,{children:"|"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":accessor"," ",(0,i.jsx)(s.em,{children:"reader-function-name}"}),"* ",(0,i.jsx)(s.em,{children:"|"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":allocation"," ",(0,i.jsx)(s.em,{children:"allocation-type} |"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":initarg"," ",(0,i.jsx)(s.em,{children:"initarg-name}"}),"* ",(0,i.jsx)(s.em,{children:"|"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":initform"," ",(0,i.jsx)(s.em,{children:"form} |"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":type"," ",(0,i.jsx)(s.em,{children:"type-specifier} |"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"{"}),":documentation"," ",(0,i.jsx)(l,{term:"string",children:(0,i.jsx)("i",{children:"string}"})})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"function-name"}),"::= ",(0,i.jsx)(s.em,{children:"{symbol |"})," (setf ",(0,i.jsx)(l,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),")",(0,i.jsx)(s.em,{children:"}"})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"class-option"}),"::= (",":default-initargs"," . ",(0,i.jsx)(s.em,{children:"initarg-list"}),") ",(0,i.jsx)(s.em,{children:"|"})]}),"\n",(0,i.jsxs)(s.p,{children:["(",":documentation"," ",(0,i.jsx)(l,{term:"string",children:(0,i.jsx)("i",{children:"string"})}),") ",(0,i.jsx)(s.em,{children:"|"})]}),"\n",(0,i.jsxs)(s.p,{children:["(",":metaclass"," ",(0,i.jsx)(s.em,{children:"class-name"}),")"]}),"\n",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Class-name"}),"\u2014a ",(0,i.jsx)(s.em,{children:"non-nil symbol"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Superclass-name"}),"\u2013a ",(0,i.jsx)(s.em,{children:"non-nil symbol"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Slot-name"}),"\u2013a ",(0,i.jsx)(l,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),". The ",(0,i.jsx)(s.em,{children:"slot-name"})," argument is a ",(0,i.jsx)(l,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," that is syntactically valid for use as a variable name."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Reader-function-name"}),"\u2014a ",(0,i.jsx)(s.em,{children:"non-nil symbol"}),". ",":reader"," can be supplied more than once for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Writer-function-name"}),"\u2014a ",(0,i.jsx)(s.em,{children:"generic function"})," name. ",":writer"," can be supplied more than once for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Reader-function-name"}),"\u2014a ",(0,i.jsx)(s.em,{children:"non-nil symbol"}),". ",":accessor"," can be supplied more than once for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Allocation-type"}),"\u2014(member ",":instance"," ",":class","). ",":allocation"," can be supplied once at most for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Initarg-name"}),"\u2014a ",(0,i.jsx)(l,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),". ",":initarg"," can be supplied more than once for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"Form"})}),"\u2014a ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})}),". ",":init-form"," can be supplied once at most for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Type-specifier"}),"\u2014a ",(0,i.jsx)(s.em,{children:"type specifier"})," . ",":type"," can be supplied once at most for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". ",(0,i.jsx)(s.em,{children:"Class-option"}),"\u2014 refers to the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," as a whole or to all class ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Initarg-list"}),"\u2014a ",(0,i.jsx)(l,{term:"list",children:(0,i.jsx)("i",{children:"list"})})," of alternating initialization argument ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"names"})})," and default initial value ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"forms"})}),". ",":default-initargs"," can be supplied at most once."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Class-name"}),"\u2014a ",(0,i.jsx)(s.em,{children:"non-nil symbol"}),". ",":metaclass"," can be supplied once at most."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"new-class"}),"\u2014the new ",(0,i.jsx)(s.em,{children:"class object"}),"."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(s.p,{children:["The macro ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," defines a new named ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),". It returns the new ",(0,i.jsx)(s.em,{children:"class object"})," as its result."]}),"\n",(0,i.jsxs)(s.p,{children:["The syntax of ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," provides options for specifying initialization arguments for ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})}),", for specifying default initialization values for ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})}),", and for requesting that ",(0,i.jsx)(l,{term:"method",children:(0,i.jsx)("i",{children:"methods"})})," on specified ",(0,i.jsx)(s.em,{children:"generic functions"})," be automatically generated for reading and writing the values of ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})}),". No reader or writer functions are defined by default; their generation must be explicitly requested. However, ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})})," can always be ",(0,i.jsx)(s.em,{children:"accessed"})," using ",(0,i.jsx)(n,{term:"slot-value",children:(0,i.jsx)("b",{children:"slot-value"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Defining a new ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," also causes a ",(0,i.jsx)(l,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," of the same name to be defined. The predicate (typep ",(0,i.jsx)(s.em,{children:"object class-name"}),") returns true if the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," of the given ",(0,i.jsx)(l,{term:"object",children:(0,i.jsx)("i",{children:"object"})})," is the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," named by ",(0,i.jsx)(s.em,{children:"class-name"})," itself or a subclass of the class ",(0,i.jsx)(s.em,{children:"class-name"}),". A ",(0,i.jsx)(s.em,{children:"class object"})," can be used as a ",(0,i.jsx)(s.em,{children:"type specifier"})," . Thus (typep ",(0,i.jsx)(s.em,{children:"object class"}),") returns ",(0,i.jsx)(l,{term:"true",children:(0,i.jsx)("i",{children:"true"})})," if the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," of the ",(0,i.jsx)(l,{term:"object",children:(0,i.jsx)("i",{children:"object"})})," is ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," itself or a subclass of ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.em,{children:"class-name"})," argument specifies the ",(0,i.jsx)(s.em,{children:"proper name"})," of the new ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),". If a ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," with the same"]}),"\n",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"proper name"})," already exists and that ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," is an ",(0,i.jsx)(l,{term:"instance",children:(0,i.jsx)("i",{children:"instance"})})," of ",(0,i.jsx)(n,{term:"standard-class",children:(0,i.jsx)("b",{children:"standard-class"})}),", and if the ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form for the definition of the new ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," specifies a ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," of ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," ",(0,i.jsx)(n,{term:"standard-class",children:(0,i.jsx)("b",{children:"standard-class"})}),", the existing ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," is redefined, and instances of it (and its ",(0,i.jsx)(s.em,{children:"subclasses"}),") are updated to the new definition at the time that they are next ",(0,i.jsx)(s.em,{children:"accessed"}),". For details, see Section 4.3.6 (Redefining Classes)."]}),"\n",(0,i.jsxs)(s.p,{children:["Each ",(0,i.jsx)(s.em,{children:"superclass-name"})," argument specifies a direct ",(0,i.jsx)(l,{term:"superclass",children:(0,i.jsx)("i",{children:"superclass"})})," of the new ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),". If the ",(0,i.jsx)(l,{term:"superclass",children:(0,i.jsx)("i",{children:"superclass"})})," list is empty, then the ",(0,i.jsx)(l,{term:"superclass",children:(0,i.jsx)("i",{children:"superclass"})})," defaults depending on the ",(0,i.jsx)(l,{term:"metaclass",children:(0,i.jsx)("i",{children:"metaclass"})}),", with ",(0,i.jsx)(n,{term:"standard-object",children:(0,i.jsx)("b",{children:"standard-object"})})," being the default for ",(0,i.jsx)(n,{term:"standard-class",children:(0,i.jsx)("b",{children:"standard-class"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["The new ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," will inherit ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})})," and ",(0,i.jsx)(l,{term:"method",children:(0,i.jsx)("i",{children:"methods"})})," from each of its direct ",(0,i.jsx)(s.em,{children:"superclasses"}),", from their direct ",(0,i.jsx)(s.em,{children:"superclasses"}),", and so on. For a discussion of how ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})})," and ",(0,i.jsx)(l,{term:"method",children:(0,i.jsx)("i",{children:"methods"})})," are inherited, see Section 4.3.4 (Inheritance)."]}),"\n",(0,i.jsx)(s.p,{children:"The following slot options are available:"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":reader"," slot option specifies that an ",(0,i.jsx)(s.em,{children:"unqualified method"})," is to be defined on the ",(0,i.jsx)(s.em,{children:"generic function"})," named ",(0,i.jsx)(s.em,{children:"reader-function-name"})," to read the value of the given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":writer"," slot option specifies that an ",(0,i.jsx)(s.em,{children:"unqualified method"})," is to be defined on the ",(0,i.jsx)(s.em,{children:"generic function"})," named ",(0,i.jsx)(s.em,{children:"writer-function-name"})," to write the value of the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":accessor"," slot option specifies that an ",(0,i.jsx)(s.em,{children:"unqualified method"})," is to be defined on the generic function named ",(0,i.jsx)(s.em,{children:"reader-function-name"})," to read the value of the given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," and that an ",(0,i.jsx)(s.em,{children:"unqualified method"})," is to be defined on the ",(0,i.jsx)(s.em,{children:"generic function"})," named (setf ",(0,i.jsx)(s.em,{children:"reader-function-name"}),") to be used with ",(0,i.jsx)(n,{term:"setf",children:(0,i.jsx)("b",{children:"setf"})})," to modify the value of the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":allocation"," slot option is used to specify where storage is to be allocated for the given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". Storage for a ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," can be located in each instance or in the ",(0,i.jsx)(s.em,{children:"class object"})," itself. The value of the ",(0,i.jsx)(s.em,{children:"allocation-type"})," argument can be either the keyword ",":instance"," or the keyword ",":class",". If the ",":allocation"," slot option is not specified, the effect is the same as specifying ",":allocation"," ",":instance","."]}),"\n",(0,i.jsxs)(s.p,{children:["\u2013 If ",(0,i.jsx)(s.em,{children:"allocation-type"})," is ",":instance",", a ",(0,i.jsx)(l,{styled:!0,term:"local slot",children:(0,i.jsx)("i",{children:"local slot"})})," of the name ",(0,i.jsx)(s.em,{children:"slot-name"})," is allocated in each instance of the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["\u2013 If ",(0,i.jsx)(s.em,{children:"allocation-type"})," is ",":class",", a shared ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," of the given name is allocated in the ",(0,i.jsx)(s.em,{children:"class object"})," created by this ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form. The value of the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," is shared by all"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(l,{term:"instance",children:(0,i.jsx)("i",{children:"instances"})})," of the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),". If a class ",(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"1"})," defines such a ",(0,i.jsx)(l,{styled:!0,term:"shared slot",children:(0,i.jsx)("i",{children:"shared slot"})}),", any subclass ",(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"2"})," of"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"1"})," will share this single ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," unless the ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form for ",(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"2"})," specifies a ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," of the"]}),"\n",(0,i.jsxs)(s.p,{children:["same ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"name"})})," or there is a superclass of ",(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"2"})," that precedes ",(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"1"})," in the class precedence"]}),"\n",(0,i.jsxs)(s.p,{children:["list of ",(0,i.jsx)(s.em,{children:"C"}),(0,i.jsx)("sub",{children:"2"})," and that defines a ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," of the same ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"name"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":initform"," slot option is used to provide a default initial value form to be used in the initialization of the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". This ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})})," is evaluated every time it is used to initialize the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". The lexical environment in which this ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})})," is evaluated is the lexical environment in which the ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form was evaluated. Note that the lexical environment refers both to variables"]}),"\n",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})}),"\n",(0,i.jsxs)(s.p,{children:["and to functions. For ",(0,i.jsx)(l,{styled:!0,term:"local slot",children:(0,i.jsx)("i",{children:"local slots"})}),", the dynamic environment is the dynamic environment in which ",(0,i.jsx)(n,{term:"make-instance",children:(0,i.jsx)("b",{children:"make-instance"})})," is called; for shared ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})}),", the dynamic environment is the dynamic environment in which the ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form was evaluated. See Section 7.1 (Object Creation and Initialization)."]}),"\n",(0,i.jsxs)(s.p,{children:["No implementation is permitted to extend the syntax of ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," to allow (",(0,i.jsx)(s.em,{children:"slot-name form"}),") as an abbreviation for (",(0,i.jsx)(s.em,{children:"slot-name"})," ",":initform"," ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})}),")."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":initarg"," slot option declares an initialization argument named ",(0,i.jsx)(s.em,{children:"initarg-name"})," and specifies that this initialization argument initializes the given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". If the initialization argument has a value in the call to ",(0,i.jsx)(n,{term:"initialize-instance",children:(0,i.jsx)("b",{children:"initialize-instance"})}),", the value will be stored into the given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),", and the slot\u2019s ",":initform"," slot option, if any, is not evaluated. If none of the initialization arguments specified for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," has a value, the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," is initialized according to the ",":initform"," slot option, if specified."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":type"," slot option specifies that the contents of the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," will always be of the specified data type. It effectively declares the result type of the reader generic function when applied to an ",(0,i.jsx)(l,{term:"object",children:(0,i.jsx)("i",{children:"object"})})," of this ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})}),". The consequences of attempting to store in a ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," a value that does not satisfy the type of the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," are undefined. The ",":type"," slot option is further discussed in Section 7.5.3 (Inheritance of Slots and Slot Options)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":documentation"," slot option provides a ",(0,i.jsx)(l,{styled:!0,term:"documentation string",children:(0,i.jsx)("i",{children:"documentation string"})})," for the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". ",":documentation"," can be supplied once at most for a given ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Each class option is an option that refers to the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," as a whole. The following class options are available:"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":default-initargs"," class option is followed by a list of alternating initialization argument ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"names"})})," and default initial value forms. If any of these initialization arguments does not appear in the initialization argument list supplied to ",(0,i.jsx)(n,{term:"make-instance",children:(0,i.jsx)("b",{children:"make-instance"})}),", the corresponding default initial value form is evaluated, and the initialization argument ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"name"})})," and the ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})}),"\u2019s value are added to the end of the initialization argument list before the instance is created; see Section 7.1 (Object Creation and Initialization). The default initial value form is evaluated each time it is used. The lexical environment in which this ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})})," is evaluated is the lexical environment in which the ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form was evaluated. The dynamic environment is the dynamic environment in which ",(0,i.jsx)(n,{term:"make-instance",children:(0,i.jsx)("b",{children:"make-instance"})})," was called. If an initialization argument ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"name"})})," appears more than once in a ",":default-initargs"," class option, an error is signaled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":documentation"," class option causes a ",(0,i.jsx)(l,{styled:!0,term:"documentation string",children:(0,i.jsx)("i",{children:"documentation string"})})," to be attached with the ",(0,i.jsx)(s.em,{children:"class object"}),", and attached with kind ",(0,i.jsx)(n,{term:"type",children:(0,i.jsx)("b",{children:"type"})})," to the ",(0,i.jsx)(s.em,{children:"class-name"}),". ",":documentation"," can be supplied once at most."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," The ",":metaclass"," class option is used to specify that instances of the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," being defined are to have a different metaclass than the default provided by the system (the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," ",(0,i.jsx)(n,{term:"standard-class",children:(0,i.jsx)("b",{children:"standard-class"})}),")."]}),"\n",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})}),"\n",(0,i.jsxs)(s.p,{children:["Note the following rules of ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," for ",(0,i.jsx)(s.em,{children:"standard classes"}),":"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," It is not required that the ",(0,i.jsx)(s.em,{children:"superclasses"})," of a ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," be defined before the ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," form for that ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," is evaluated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," All the ",(0,i.jsx)(s.em,{children:"superclasses"})," of a ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," must be defined before an ",(0,i.jsx)(l,{term:"instance",children:(0,i.jsx)("i",{children:"instance"})})," of the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," can be made."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"\u2022"})," A ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," must be defined before it can be used as a parameter specializer in a ",(0,i.jsx)(n,{term:"defmethod",children:(0,i.jsx)("b",{children:"defmethod"})})," form."]}),"\n",(0,i.jsx)(s.p,{children:"The object system can be extended to cover situations where these rules are not obeyed."}),"\n",(0,i.jsxs)(s.p,{children:["Some slot options are inherited by a ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," from its ",(0,i.jsx)(s.em,{children:"superclasses"}),", and some can be shadowed or altered by providing a local slot description. No class options except ",":default-initargs"," are inherited. For a detailed description of how ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slots"})})," and slot options are inherited, see Section 7.5.3 (Inheritance of Slots and Slot Options)."]}),"\n",(0,i.jsxs)(s.p,{children:["The options to ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," can be extended. It is required that all implementations signal an error if they observe a class option or a slot option that is not implemented locally."]}),"\n",(0,i.jsxs)(s.p,{children:["It is valid to specify more than one reader, writer, accessor, or initialization argument for a ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),". No other slot option can appear more than once in a single slot description, or an error is signaled."]}),"\n",(0,i.jsxs)(s.p,{children:["If no reader, writer, or accessor is specified for a ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})}),", the ",(0,i.jsx)(l,{term:"slot",children:(0,i.jsx)("i",{children:"slot"})})," can only be ",(0,i.jsx)(s.em,{children:"accessed"})," by the ",(0,i.jsx)(l,{term:"function",children:(0,i.jsx)("i",{children:"function"})})," ",(0,i.jsx)(n,{term:"slot-value",children:(0,i.jsx)("b",{children:"slot-value"})}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["If a ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})})," ",(0,i.jsx)(l,{term:"form",children:(0,i.jsx)("i",{children:"form"})})," appears as a ",(0,i.jsx)(l,{styled:!0,term:"top level form",children:(0,i.jsx)("i",{children:"top level form"})}),", the ",(0,i.jsx)(l,{term:"compiler",children:(0,i.jsx)("i",{children:"compiler"})})," must make the ",(0,i.jsx)(s.em,{children:"class name"})," be recognized as a valid ",(0,i.jsx)(s.em,{children:"type name"})," in subsequent declarations (as for ",(0,i.jsx)(n,{term:"deftype",children:(0,i.jsx)("b",{children:"deftype"})}),") and be recognized as a valid ",(0,i.jsx)(s.em,{children:"class name"})," for ",(0,i.jsx)(n,{term:"defmethod",children:(0,i.jsx)("b",{children:"defmethod"})})," ",(0,i.jsx)(l,{styled:!0,term:"parameter specializer",children:(0,i.jsx)("i",{children:"parameter specializers"})})," and for use as the ",":metaclass"," option of a subsequent ",(0,i.jsx)(n,{term:"defclass",children:(0,i.jsx)("b",{children:"defclass"})}),". The ",(0,i.jsx)(l,{term:"compiler",children:(0,i.jsx)("i",{children:"compiler"})})," must make the ",(0,i.jsx)(l,{term:"class",children:(0,i.jsx)("i",{children:"class"})})," definition available to be returned by ",(0,i.jsx)(n,{term:"find-class",children:(0,i.jsx)("b",{children:"find-class"})})," when its ",(0,i.jsx)(s.em,{children:"environment argument"})," is a value received as the ",(0,i.jsx)(l,{styled:!0,term:"environment parameter",children:(0,i.jsx)("i",{children:"environment parameter"})})," of a ",(0,i.jsx)(l,{term:"macro",children:(0,i.jsx)("i",{children:"macro"})}),"."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(s.p,{children:["If there are any duplicate slot names, an error of ",(0,i.jsx)(l,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"program-error",children:(0,i.jsx)("b",{children:"program-error"})})," is signaled."]}),"\n",(0,i.jsxs)(s.p,{children:["If an initialization argument ",(0,i.jsx)(l,{term:"name",children:(0,i.jsx)("i",{children:"name"})})," appears more than once in ",":default-initargs"," class option, an error of ",(0,i.jsx)(l,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"program-error",children:(0,i.jsx)("b",{children:"program-error"})})," is signaled."]}),"\n",(0,i.jsxs)(s.p,{children:["If any of the following slot options appears more than once in a single slot description, an error of ",(0,i.jsx)(l,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"program-error",children:(0,i.jsx)("b",{children:"program-error"})})," is signaled: ",":allocation",", ",":initform",", ",":type",", ",":documentation","."]}),"\n",(0,i.jsxs)(s.p,{children:["It is required that all implementations signal an error of ",(0,i.jsx)(l,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"program-error",children:(0,i.jsx)("b",{children:"program-error"})})," if they observe a class option or a slot option that is not implemented locally."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"documentation"}),", ",(0,i.jsx)(n,{term:"initialize-instance",children:(0,i.jsx)("b",{children:"initialize-instance"})}),", ",(0,i.jsx)(n,{term:"make-instance",children:(0,i.jsx)("b",{children:"make-instance"})}),", ",(0,i.jsx)(n,{term:"slot-value",children:(0,i.jsx)("b",{children:"slot-value"})}),", Section 4.3 (Classes), Section 4.3.4 (Inheritance), Section 4.3.6 (Redefining Classes), Section 4.3.5 (Determining the Class Precedence"]}),"\n",(0,i.jsx)(s.p,{children:"List), Section 7.1 (Object Creation and Initialization)"})]})}function t(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function c(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const a={title:"defclass"},d="defclass",h={id:"chap-7/h-h-dictionary/defclass_macro",title:"defclass",description:"Expanded Reference: defclass",source:"@site/docs/chap-7/h-h-dictionary/defclass_macro.md",sourceDirName:"chap-7/h-h-dictionary",slug:"/chap-7/h-h-dictionary/defclass_macro",permalink:"/cl-language-reference/chap-7/h-h-dictionary/defclass_macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-7/h-h-dictionary/defclass_macro.md",tags:[],version:"current",frontMatter:{title:"defclass"},sidebar:"tutorialSidebar",previous:{title:"compute-applicable-methods",permalink:"/cl-language-reference/chap-7/h-h-dictionary/compute-applicable-methods_standard-generic-function"},next:{title:"defgeneric",permalink:"/cl-language-reference/chap-7/h-h-dictionary/defgeneric_macro"}},o={},m=[{value:"Expanded Reference: defclass",id:"expanded-reference-defclass",level:2}];function x(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"defclass",children:"defclass"}),"\n","\n","\n",(0,i.jsx)(t,{}),"\n",(0,i.jsx)(s.h2,{id:"expanded-reference-defclass",children:"Expanded Reference: defclass"}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsx)(s.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lisp",children:"(defclass )\n"})})]})}function j(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>t});var i=n(67294);const r={},l=i.createContext(r);function t(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);