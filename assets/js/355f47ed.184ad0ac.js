"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[22980],{57822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(85893),o=t(11151);const s={},r="Restrictions on implementations",c={id:"meta-object-protocol/restrictions-on-implementations",title:"Restrictions on implementations",description:"Restrictions on implementations",source:"@site/docs/meta-object-protocol/restrictions-on-implementations.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/restrictions-on-implementations",permalink:"/cl-language-reference/meta-object-protocol/restrictions-on-implementations",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/restrictions-on-implementations.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"remove-method",permalink:"/cl-language-reference/meta-object-protocol/remove-method"},next:{title:"Restrictions on portable programs",permalink:"/cl-language-reference/meta-object-protocol/restrictions-on-portable-programs"}},a={},l=[{value:"Restrictions on implementations",id:"restrictions-on-implementations-1",level:4}];function d(e){const n={code:"code",del:"del",em:"em",h1:"h1",h4:"h4",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"restrictions-on-implementations",children:"Restrictions on implementations"}),"\n",(0,i.jsx)(n.h4,{id:"restrictions-on-implementations-1",children:"Restrictions on implementations"}),"\n",(0,i.jsx)(n.p,{children:"Implementations are allowed latitude to modify the structure of specified classes and methods. This includes: the interposition of implementation-specific classes; the promotion of specified methods; and the consolidation of two or more specified methods into a single method specialized to interposed classes."}),"\n",(0,i.jsxs)(n.p,{children:["Any such modifications are permitted only so long as for any portable class ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"p"})," that is a subclass of one or more specified classes ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"0"})," ... ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"i"}),", the following conditions are met:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In the actual class precedence list of ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"p"}),", the classes ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"0"})," ... ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"i"})," must appear in the same order as they would have if no implementation-specific modifications had been made."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The method applicability of any specified generic function must be the same in terms of behavior as it would have been had no implementation-specific changes been made. This includes specified generic functions that have had portable methods added. In this context, the expression ``the same in terms of behavior'' means that methods with the same behavior as those specified are applicable, and in the same order."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["No portable class ",(0,i.jsx)(n.em,{children:"C"}),(0,i.jsx)(n.del,{children:"p"})," may inherit, by virtue of being a direct or indirect subclass of a specified class, any slot for which the name is a symbol accessible in the ",(0,i.jsx)(n.code,{children:"common-lisp-user"})," package or exported by any package defined in the ANSI Common Lisp standard."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Implementations are free to define implementation-specific before- and after-methods on specified generic functions. Implementations are also free to define implementation-specific around-methods with extending behavior."}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var i=t(67294);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);