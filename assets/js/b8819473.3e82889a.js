"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[53565],{7053:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>p,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=s(85893),c=s(11151);function r(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"symbol-package"})," ",(0,a.jsx)(e.em,{children:"Function"})]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"symbol-package"})," ",(0,a.jsx)(e.em,{children:"symbol \u2192 contents"})]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.em,{children:"symbol"}),"\u2014a ",(0,a.jsx)(e.em,{children:"symbol"}),"."]}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.em,{children:"contents"}),"\u2014a ",(0,a.jsx)(e.em,{children:"package object"})," or ",(0,a.jsx)(e.strong,{children:"nil"}),"."]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Description:"})}),"\n",(0,a.jsxs)(e.p,{children:["Returns the ",(0,a.jsx)(e.em,{children:"home package"})," of ",(0,a.jsx)(e.em,{children:"symbol"}),"."]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lisp",children:' \n\n\n\n(in-package "CL-USER") *\u2192* #<PACKAGE "COMMON-LISP-USER"> \n\n\n\n(symbol-package \u2019car) *\u2192* #<PACKAGE "COMMON-LISP"> \n\n\n\n(symbol-package \u2019bus) *\u2192* #<PACKAGE "COMMON-LISP-USER"> \n\n\n\n(symbol-package :optional) *\u2192* #<PACKAGE "KEYWORD"> \n\n\n\n;; Gensyms are uninterned, so have no home package. \n\n\n\n(symbol-package (gensym)) *\u2192* NIL \n\n\n\n(make-package \u2019pk1) *\u2192* #<PACKAGE "PK1"> \n\n\n\n(intern "SAMPLE1" "PK1") *\u2192* PK1::SAMPLE1, NIL \n\n\n\n(export (find-symbol "SAMPLE1" "PK1") "PK1") *\u2192* T \n\n\n\n(make-package \u2019pk2 :use \u2019(pk1)) *\u2192* #<PACKAGE "PK2"> \n\n\n\n(find-symbol "SAMPLE1" "PK2") *\u2192* PK1:SAMPLE1, :INHERITED \n\n\n\n(symbol-package \u2019pk1::sample1) *\u2192* #<PACKAGE "PK1"> \n\n\n\n(symbol-package \u2019pk2::sample1) *\u2192* #<PACKAGE "PK1"> \n\n\n\n(symbol-package \u2019pk1::sample2) *\u2192* #<PACKAGE "PK1"> \n\n\n\n(symbol-package \u2019pk2::sample2) *\u2192* #<PACKAGE "PK2"> \n\n\n\n;; The next several forms create a scenario in which a symbol \n\n\n\n;; is not really uninterned, but is "apparently uninterned", \n\n\n\n;; and so SYMBOL-PACKAGE still returns NIL. \n\n\n\n(setq s3 \u2019pk1::sample3) *\u2192* PK1::SAMPLE3 \n\n\n\n(import s3 \u2019pk2) *\u2192* T \n\n\n\n(unintern s3 \u2019pk1) *\u2192* T \n\n\n\n(symbol-package s3) *\u2192* NIL \n\n\n\n(eq s3 \u2019pk2::sample3) *\u2192* T \n\n\n\n\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Affected By:"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"import"}),", ",(0,a.jsx)(e.strong,{children:"intern"}),", ",(0,a.jsx)(e.strong,{children:"unintern"})]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Exceptional Situations:"})}),"\n",(0,a.jsxs)(e.p,{children:["Should signal an error of ",(0,a.jsx)(e.em,{children:"type"})," ",(0,a.jsx)(e.strong,{children:"type-error"})," if ",(0,a.jsx)(e.em,{children:"symbol"})," is not a ",(0,a.jsx)(e.em,{children:"symbol"}),"."]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"intern"})})]})}function o(n={}){const{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(r,{...n})}):r(n)}const l={},t="symbol-package",i={id:"chap-10/ba-c-dictionary/symbolpackage",title:"symbol-package",description:"Expanded Reference: symbol-package",source:"@site/docs/chap-10/ba-c-dictionary/symbolpackage.md",sourceDirName:"chap-10/ba-c-dictionary",slug:"/chap-10/ba-c-dictionary/symbolpackage",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbolpackage",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-10/ba-c-dictionary/symbolpackage.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"symbolp",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbolp"},next:{title:"symbol-plist",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbolplist"}},p={},d=[{value:"Expanded Reference: symbol-package",id:"expanded-reference-symbol-package",level:2}];function m(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"symbol-package",children:"symbol-package"}),"\n","\n","\n",(0,a.jsx)(o,{}),"\n",(0,a.jsx)(e.h2,{id:"expanded-reference-symbol-package",children:"Expanded Reference: symbol-package"}),"\n",(0,a.jsx)(e.admonition,{type:"tip",children:(0,a.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lisp",children:"(symbol-package )\n"})})]})}function h(n={}){const{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(m,{...n})}):m(n)}},11151:(n,e,s)=>{s.d(e,{Z:()=>l,a:()=>o});var a=s(67294);const c={},r=a.createContext(c);function o(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:o(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);