"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23751],{22208:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var s=r(85893),d=r(11151);function c(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"mod, rem"})," ",(0,s.jsx)(e.em,{children:"Function"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"mod"})," ",(0,s.jsx)(e.em,{children:"number divisor \u2192 modulus"})]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"rem"})," ",(0,s.jsx)(e.em,{children:"number divisor \u2192 remainder"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"number"}),"\u2014a ",(0,s.jsx)(e.em,{children:"real"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"divisor"}),"\u2014a ",(0,s.jsx)(e.em,{children:"real"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"modulus"}),", ",(0,s.jsx)(e.em,{children:"remainder"}),"\u2014a ",(0,s.jsx)(e.em,{children:"real"}),"."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"mod"})," and ",(0,s.jsx)(e.strong,{children:"rem"})," are generalizations of the modulus and remainder functions respectively."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"mod"})," performs the operation ",(0,s.jsx)(e.strong,{children:"floor"})," on ",(0,s.jsx)(e.em,{children:"number"})," and ",(0,s.jsx)(e.em,{children:"divisor"})," and returns the remainder of the ",(0,s.jsx)(e.strong,{children:"floor"})," operation."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"rem"})," performs the operation ",(0,s.jsx)(e.strong,{children:"truncate"})," on ",(0,s.jsx)(e.em,{children:"number"})," and ",(0,s.jsx)(e.em,{children:"divisor"})," and returns the remainder of the ",(0,s.jsx)(e.strong,{children:"truncate"})," operation."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"mod"})," and ",(0,s.jsx)(e.strong,{children:"rem"})," are the modulus and remainder functions when ",(0,s.jsx)(e.em,{children:"number"})," and ",(0,s.jsx)(e.em,{children:"divisor"})," are ",(0,s.jsx)(e.em,{children:"integers"}),". ",(0,s.jsx)(e.strong,{children:"Examples:"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lisp",children:" \n\n\n\n(rem -1 5) *\u2192* -1 \n\n\n\n(mod -1 5) *\u2192* 4 \n\n\n\n(mod 13 4) *\u2192* 1 \n\n\n\n(rem 13 4) *\u2192* 1 \n\n\n\n(mod -13 4) *\u2192* 3 \n\n\n\n(rem -13 4) *\u2192* -1 \n\n\n\n(mod 13 -4) *\u2192* -3 \n\n\n\n(rem 13 -4) *\u2192* 1 \n\n\n\n(mod -13 -4) *\u2192* -1 \n\n\n\n(rem -13 -4) *\u2192* -1 \n\n\n\n(mod 13.4 1) *\u2192* 0.4 \n\n\n\n(rem 13.4 1) *\u2192* 0.4 \n\n\n\n(mod -13.4 1) *\u2192* 0.6 \n\n\n\n(rem -13.4 1) *\u2192* -0.4 \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"floor"}),", ",(0,s.jsx)(e.strong,{children:"truncate"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(e.p,{children:["The result of ",(0,s.jsx)(e.strong,{children:"mod"})," is either zero or a ",(0,s.jsx)(e.em,{children:"real"})," with the same sign as ",(0,s.jsx)(e.em,{children:"divisor"}),"."]})]})}function i(n={}){const{wrapper:e}={...(0,d.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}const o={},t="mod, rem",l={id:"chap-12/bc-c-dictionary/mod",title:"mod, rem",description:"Expanded Reference: mod, rem",source:"@site/docs/chap-12/bc-c-dictionary/mod.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/mod",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/mod",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/mod.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"minusp, plusp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/minusp"},next:{title:"number",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/number"}},a={},m=[{value:"Expanded Reference: mod, rem",id:"expanded-reference-mod-rem",level:2}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,d.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"mod-rem",children:"mod, rem"}),"\n","\n","\n",(0,s.jsx)(i,{}),"\n",(0,s.jsx)(e.h2,{id:"expanded-reference-mod-rem",children:"Expanded Reference: mod, rem"}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lisp",children:"(mod, rem )\n"})})]})}function p(n={}){const{wrapper:e}={...(0,d.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(h,{...n})}):h(n)}},11151:(n,e,r)=>{r.d(e,{Z:()=>o,a:()=>i});var s=r(67294);const d={},c=s.createContext(d);function i(n){const e=s.useContext(c);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(d):n.components||d:i(n.components),s.createElement(c.Provider,{value:e},n.children)}}}]);