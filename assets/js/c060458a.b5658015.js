"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[73258],{73859:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var i=r(85893),t=r(11151);function o(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"invalid-method-error"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"invalid-method-error"})," ",(0,i.jsx)(n.em,{children:"method format-control"})," &rest ",(0,i.jsx)(n.em,{children:"args \u2192 implementation-dependent"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"method"}),"\u2014a ",(0,i.jsx)(n.em,{children:"method"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"format-control"}),"\u2014a ",(0,i.jsx)(n.em,{children:"format control"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"args"}),"\u2014",(0,i.jsx)(n.em,{children:"format arguments"})," for the ",(0,i.jsx)(n.em,{children:"format-control"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"invalid-method-error"})," is used to signal an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"error"})," when there is an applicable ",(0,i.jsx)(n.em,{children:"method"})," whose ",(0,i.jsx)(n.em,{children:"qualifiers"})," are not valid for the method combination type. The error message is constructed by using the ",(0,i.jsx)(n.em,{children:"format-control"})," suitable for ",(0,i.jsx)(n.strong,{children:"format"})," and any ",(0,i.jsx)(n.em,{children:"args"})," to it. Because an implementation may need to add additional contextual information to the error message, ",(0,i.jsx)(n.strong,{children:"invalid-method-error"})," should be called only within the dynamic extent of a method combination function."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"function"})," ",(0,i.jsx)(n.strong,{children:"invalid-method-error"})," is called automatically when a ",(0,i.jsx)(n.em,{children:"method"})," fails to satisfy every ",(0,i.jsx)(n.em,{children:"qualifier"})," pattern and predicate in a ",(0,i.jsx)(n.strong,{children:"define-method-combination"})," ",(0,i.jsx)(n.em,{children:"form"}),". A method combination function that imposes additional restrictions should call ",(0,i.jsx)(n.strong,{children:"invalid-method-error"})," explicitly if it encounters a ",(0,i.jsx)(n.em,{children:"method"})," it cannot accept."]}),"\n",(0,i.jsxs)(n.p,{children:["Whether ",(0,i.jsx)(n.strong,{children:"invalid-method-error"})," returns to its caller or exits via ",(0,i.jsx)(n.strong,{children:"throw"})," is ",(0,i.jsx)(n.em,{children:"implementation-dependent"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,i.jsx)(n.p,{children:"The debugger might be entered."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"*break-on-signals*"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"define-method-combination"})})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}const s={},c="invalid-method-error",a={id:"chap-9/j-c-dictionary/invalidmethoderror",title:"invalid-method-error",description:"Expanded Reference: invalid-method-error",source:"@site/docs/chap-9/j-c-dictionary/invalidmethoderror.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/invalidmethoderror",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/invalidmethoderror",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/invalidmethoderror.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ignore-errors",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/ignoreerrors"},next:{title:"invoke-debugger",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/invokedebugger"}},l={},h=[{value:"Expanded Reference: invalid-method-error",id:"expanded-reference-invalid-method-error",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"invalid-method-error",children:"invalid-method-error"}),"\n","\n","\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-invalid-method-error",children:"Expanded Reference: invalid-method-error"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(invalid-method-error )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>d});var i=r(67294);const t={},o=i.createContext(t);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);