"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[90561],{57181:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=s(85893),i=s(11151);function l(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"logical-pathname-translations"})," ",(0,a.jsx)(n.em,{children:"Accessor"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"logical-pathname-translations"})," ",(0,a.jsx)(n.em,{children:"host \u2192 translations"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"(setf (logical-pathname-translations"})," ",(0,a.jsx)(n.em,{children:"host"}),"**)** ",(0,a.jsx)(n.em,{children:"new-translations"}),"**)**"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"host"}),"\u2013a ",(0,a.jsx)(n.em,{children:"logical host designator"})," ."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"translations"}),", ",(0,a.jsx)(n.em,{children:"new-translations"}),"\u2014a ",(0,a.jsx)(n.em,{children:"list"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"logical-pathname-translations"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Description:"})}),"\n",(0,a.jsxs)(n.p,{children:["Returns the host\u2019s ",(0,a.jsx)(n.em,{children:"list"})," of translations. Each translation is a ",(0,a.jsx)(n.em,{children:"list"})," of at least two elements: ",(0,a.jsx)(n.em,{children:"from-wildcard"})," and ",(0,a.jsx)(n.em,{children:"to-wildcard"}),". Any additional elements are ",(0,a.jsx)(n.em,{children:"implementation-defined"}),". ",(0,a.jsx)(n.em,{children:"From-wildcard"})," is a ",(0,a.jsx)(n.em,{children:"logical pathname"})," whose host is ",(0,a.jsx)(n.em,{children:"host"}),". ",(0,a.jsx)(n.em,{children:"To-wildcard"})," is a ",(0,a.jsx)(n.em,{children:"pathname"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["(setf (logical-pathname-translations ",(0,a.jsx)(n.em,{children:"host"}),") ",(0,a.jsx)(n.em,{children:"translations"}),") sets a ",(0,a.jsx)(n.em,{children:"logical pathname"})," host\u2019s ",(0,a.jsx)(n.em,{children:"list"})," of ",(0,a.jsx)(n.em,{children:"translations"}),". If ",(0,a.jsx)(n.em,{children:"host"})," is a ",(0,a.jsx)(n.em,{children:"string"})," that has not been previously used as a ",(0,a.jsx)(n.em,{children:"logical pathname"})," host, a new ",(0,a.jsx)(n.em,{children:"logical pathname"})," host is defined; otherwise an existing host\u2019s translations are replaced. ",(0,a.jsx)(n.em,{children:"logical pathname"})," host names are compared with ",(0,a.jsx)(n.strong,{children:"string-equal"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["When setting the translations list, each ",(0,a.jsx)(n.em,{children:"from-wildcard"})," can be a ",(0,a.jsx)(n.em,{children:"logical pathname"})," whose host is ",(0,a.jsx)(n.em,{children:"host"})," or a ",(0,a.jsx)(n.em,{children:"logical pathname"})," namestring parseable by (parse-namestring ",(0,a.jsx)(n.em,{children:"string host"}),"), where ",(0,a.jsx)(n.em,{children:"host"})," represents the appropriate ",(0,a.jsx)(n.em,{children:"object"})," as defined by ",(0,a.jsx)(n.strong,{children:"parse-namestring"}),". Each ",(0,a.jsx)(n.em,{children:"to-wildcard"})," can be anything coercible to a ",(0,a.jsx)(n.em,{children:"pathname"})," by (pathname ",(0,a.jsx)(n.em,{children:"to-wildcard"}),"). If ",(0,a.jsx)(n.em,{children:"to-wildcard"})," coerces to a ",(0,a.jsx)(n.em,{children:"logical pathname"}),", ",(0,a.jsx)(n.strong,{children:"translate-logical-pathname"})," will perform repeated translation steps when it uses it."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"host"})," is either the host component of a ",(0,a.jsx)(n.em,{children:"logical pathname"})," or a ",(0,a.jsx)(n.em,{children:"string"})," that has been defined as a ",(0,a.jsx)(n.em,{children:"logical pathname"})," host name by ",(0,a.jsx)(n.strong,{children:"setf"})," of ",(0,a.jsx)(n.strong,{children:"logical-pathname-translations"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,a.jsx)(n.p,{children:";;;A very simple example of setting up a logical pathname host. No"}),"\n",(0,a.jsx)(n.p,{children:";;;translations are necessary to get around file system restrictions, so"}),"\n",(0,a.jsx)(n.p,{children:";;;all that is necessary is to specify the root of the physical directory"}),"\n",(0,a.jsx)(n.p,{children:";;;tree that contains the logical file system."}),"\n",(0,a.jsx)(n.p,{children:";;;The namestring syntax on the right-hand side is implementation-dependent."}),"\n",(0,a.jsx)(n.p,{children:'(setf (logical-pathname-translations "foo")'}),"\n",(0,a.jsx)(n.p,{children:'\u2019(("**;*.*.*" "MY-LISPM:>library>foo>**>")))'}),"\n",(0,a.jsx)(n.p,{children:";;;Sample use of that logical pathname. The return value"}),"\n",(0,a.jsx)(n.p,{children:";;;is implementation-dependent."}),"\n",(0,a.jsxs)(n.p,{children:['(translate-logical-pathname "foo',":bar",';baz;mum.quux.3")']}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"\u2192"}),' #P"MY-LISPM:>library>foo>bar>baz>mum.quux.3"']}),"\n",(0,a.jsx)(n.p,{children:";;;A more complex example, dividing the files among two file servers"}),"\n",(0,a.jsx)(n.p,{children:";;;and several different directories. This Unix doesn\u2019t support"}),"\n",(0,a.jsxs)(n.p,{children:[";;;",":WILD-INFERIORS"," in the directory, so each directory level must"]}),"\n",(0,a.jsx)(n.p,{children:";;;be translated individually. No file name or type translations"}),"\n",(0,a.jsx)(n.p,{children:";;;are required except for .MAIL to .MBX."}),"\n",(0,a.jsx)(n.p,{children:";;;The namestring syntax on the right-hand side is implementation-dependent."}),"\n",(0,a.jsx)(n.p,{children:'(setf (logical-pathname-translations "prog")'}),"\n",(0,a.jsx)(n.p,{children:'\u2019(("RELEASED;*.*.*" "MY-UNIX:/sys/bin/my-prog/")'}),"\n",(0,a.jsx)(n.p,{children:'("RELEASED;*;*.*.*" "MY-UNIX:/sys/bin/my-prog/*/")'}),"\n",(0,a.jsx)(n.p,{children:'("EXPERIMENTAL;*.*.*" "MY-UNIX:/usr/Joe/development/prog/")'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"logical-pathname-translations"})}),"\n",(0,a.jsx)(n.p,{children:'("EXPERIMENTAL;DOCUMENTATION;*.*.*"'}),"\n",(0,a.jsxs)(n.p,{children:['"MY-VAX',":SYS",'$DISK:[JOE.DOC]")']}),"\n",(0,a.jsx)(n.p,{children:'("EXPERIMENTAL;*;*.*.*" "MY-UNIX:/usr/Joe/development/prog/*/")'}),"\n",(0,a.jsxs)(n.p,{children:['("MAIL;**;*.MAIL" "MY-VAX',":SYS",'$DISK:[JOE.MAIL.PROG...]*.MBX")))']}),"\n",(0,a.jsx)(n.p,{children:";;;Sample use of that logical pathname. The return value"}),"\n",(0,a.jsx)(n.p,{children:";;;is implementation-dependent."}),"\n",(0,a.jsxs)(n.p,{children:['(translate-logical-pathname "prog',":mail",';save;ideas.mail.3")']}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"\u2192"}),' #P"MY-VAX',":SYS",'$DISK:[JOE.MAIL.PROG.SAVE]IDEAS.MBX.3"']}),"\n",(0,a.jsx)(n.p,{children:";;;Example translations for a program that uses three files main.lisp,"}),"\n",(0,a.jsx)(n.p,{children:";;;auxiliary.lisp, and documentation.lisp. These translations might be"}),"\n",(0,a.jsx)(n.p,{children:";;;supplied by a software supplier as examples."}),"\n",(0,a.jsx)(n.p,{children:";;;For Unix with long file names"}),"\n",(0,a.jsx)(n.p,{children:'(setf (logical-pathname-translations "prog")'}),"\n",(0,a.jsx)(n.p,{children:'\u2019(("CODE;*.*.*" "/lib/prog/")))'}),"\n",(0,a.jsx)(n.p,{children:";;;Sample use of that logical pathname. The return value"}),"\n",(0,a.jsx)(n.p,{children:";;;is implementation-dependent."}),"\n",(0,a.jsxs)(n.p,{children:['(translate-logical-pathname "prog',":code",';documentation.lisp")']}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"\u2192"}),' #P"/lib/prog/documentation.lisp"']}),"\n",(0,a.jsx)(n.p,{children:";;;For Unix with 14-character file names, using .lisp as the type"}),"\n",(0,a.jsx)(n.p,{children:'(setf (logical-pathname-translations "prog")'}),"\n",(0,a.jsx)(n.p,{children:'\u2019(("CODE;DOCUMENTATION.*.*" "/lib/prog/docum.*")'}),"\n",(0,a.jsx)(n.p,{children:'("CODE;*.*.*" "/lib/prog/")))'}),"\n",(0,a.jsx)(n.p,{children:";;;Sample use of that logical pathname. The return value"}),"\n",(0,a.jsx)(n.p,{children:";;;is implementation-dependent."}),"\n",(0,a.jsxs)(n.p,{children:['(translate-logical-pathname "prog',":code",';documentation.lisp")']}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"\u2192"}),' #P"/lib/prog/docum.lisp"']}),"\n",(0,a.jsx)(n.p,{children:";;;For Unix with 14-character file names, using .l as the type"}),"\n",(0,a.jsx)(n.p,{children:";;;The second translation shortens the compiled file type to .b"}),"\n",(0,a.jsx)(n.p,{children:'(setf (logical-pathname-translations "prog")'}),"\n",(0,a.jsx)(n.p,{children:'\u2018(("**;*.LISP.*" ,(logical-pathname "PROG:**;*.L.*"))'}),"\n",(0,a.jsx)(n.p,{children:'(,(compile-file-pathname (logical-pathname "PROG:**;*.LISP.*"))'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"logical-pathname-translations"})}),"\n",(0,a.jsx)(n.p,{children:',(logical-pathname "PROG:**;*.B.*"))'}),"\n",(0,a.jsx)(n.p,{children:'("CODE;DOCUMENTATION.*.*" "/lib/prog/documentatio.*")'}),"\n",(0,a.jsx)(n.p,{children:'("CODE;*.*.*" "/lib/prog/")))'}),"\n",(0,a.jsx)(n.p,{children:";;;Sample use of that logical pathname. The return value"}),"\n",(0,a.jsx)(n.p,{children:";;;is implementation-dependent."}),"\n",(0,a.jsxs)(n.p,{children:['(translate-logical-pathname "prog',":code",';documentation.lisp")']}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"\u2192"}),' #P"/lib/prog/documentatio.l"']}),"\n",(0,a.jsx)(n.p,{children:';;;For a Cray with 6 character names and no directories, types, or versions. (setf (logical-pathname-translations "prog")'}),"\n",(0,a.jsx)(n.p,{children:'(let ((l \u2019(("MAIN" "PGMN")'}),"\n",(0,a.jsx)(n.p,{children:'("AUXILIARY" "PGAUX")'}),"\n",(0,a.jsx)(n.p,{children:'("DOCUMENTATION" "PGDOC")))'}),"\n",(0,a.jsxs)(n.p,{children:['(logpath (logical-pathname "prog',":code",';"))']}),"\n",(0,a.jsx)(n.p,{children:'(phypath (pathname "XXX")))'}),"\n",(0,a.jsx)(n.p,{children:"(append"}),"\n",(0,a.jsx)(n.p,{children:";; Translations for source files"}),"\n",(0,a.jsx)(n.p,{children:"(mapcar #\u2019(lambda (x)"}),"\n",(0,a.jsx)(n.p,{children:"(let ((log (first x))"}),"\n",(0,a.jsx)(n.p,{children:"(phy (second x)))"}),"\n",(0,a.jsxs)(n.p,{children:["(list (make-pathname ",":name"," log"]}),"\n",(0,a.jsxs)(n.p,{children:[":type",' "LISP"']}),"\n",(0,a.jsxs)(n.p,{children:[":version"," ",":wild"]}),"\n",(0,a.jsxs)(n.p,{children:[":defaults"," logpath)"]}),"\n",(0,a.jsxs)(n.p,{children:["(make-pathname ",":name"," phy"]}),"\n",(0,a.jsxs)(n.p,{children:[":defaults"," phypath))))"]}),"\n",(0,a.jsx)(n.p,{children:"l)"}),"\n",(0,a.jsx)(n.p,{children:";; Translations for compiled files"}),"\n",(0,a.jsx)(n.p,{children:"(mapcar #\u2019(lambda (x)"}),"\n",(0,a.jsx)(n.p,{children:"(let* ((log (first x))"}),"\n",(0,a.jsx)(n.p,{children:"(phy (second x))"}),"\n",(0,a.jsx)(n.p,{children:"(com (compile-file-pathname"}),"\n",(0,a.jsxs)(n.p,{children:["(make-pathname ",":name"," log"]}),"\n",(0,a.jsxs)(n.p,{children:[":type",' "LISP"']}),"\n",(0,a.jsxs)(n.p,{children:[":version"," ",":wild"]}),"\n",(0,a.jsxs)(n.p,{children:[":defaults"," logpath))))"]}),"\n",(0,a.jsx)(n.p,{children:'(setq phy (concatenate \u2019string phy "B"))'}),"\n",(0,a.jsx)(n.p,{children:"(list com"}),"\n",(0,a.jsxs)(n.p,{children:["(make-pathname ",":name"," phy"]}),"\n",(0,a.jsxs)(n.p,{children:[":defaults"," phypath))))"]}),"\n",(0,a.jsx)(n.p,{children:"l))))"}),"\n",(0,a.jsx)(n.p,{children:";;;Sample use of that logical pathname. The return value"}),"\n",(0,a.jsx)(n.p,{children:";;;is implementation-dependent."}),"\n",(0,a.jsxs)(n.p,{children:['(translate-logical-pathname "prog',":code",';documentation.lisp")']}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"\u2192"}),' #P"PGDOC"']}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.em,{children:"host"})," is incorrectly supplied, an error of ",(0,a.jsx)(n.em,{children:"type"})," ",(0,a.jsx)(n.strong,{children:"type-error"})," is signaled."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"logical-pathname"}),", Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,a.jsxs)(n.p,{children:["Implementations can define additional ",(0,a.jsx)(n.em,{children:"functions"})," that operate on ",(0,a.jsx)(n.em,{children:"logical pathname"})," hosts, for example to specify additional translation rules or options."]})]})}function t(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}const r={},c="logical-pathname-translations",o={id:"chap-19/bj-e-dictionary/logicalpathnametranslations",title:"logical-pathname-translations",description:"Expanded Reference: logical-pathname-translations",source:"@site/docs/chap-19/bj-e-dictionary/logicalpathnametranslations.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/logicalpathnametranslations",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/logicalpathnametranslations",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/logicalpathnametranslations.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"logical-pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/logicalpathname"},next:{title:"make-pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/makepathname"}},h={},p=[{value:"Expanded Reference: logical-pathname-translations",id:"expanded-reference-logical-pathname-translations",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"logical-pathname-translations",children:"logical-pathname-translations"}),"\n","\n","\n",(0,a.jsx)(t,{}),"\n",(0,a.jsx)(n.h2,{id:"expanded-reference-logical-pathname-translations",children:"Expanded Reference: logical-pathname-translations"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lisp",children:"(logical-pathname-translations )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>t});var a=s(67294);const i={},l=a.createContext(i);function t(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);