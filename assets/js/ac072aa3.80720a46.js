"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[53078],{90213:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var t=r(85893),i=r(11151);const s={},c=void 0,o={id:"chap-22/intro",title:"intro",description:"Description:",source:"@site/docs/chap-22/intro.md",sourceDirName:"chap-22",slug:"/chap-22/intro",permalink:"/cl-language-reference/docs/chap-22/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-22/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"22.3 Formatted Output",permalink:"/cl-language-reference/docs/chap-22/cc-d-formatted-output"},next:{title:"23. Reader",permalink:"/cl-language-reference/docs/category/23-reader"}},d={},l=[];function h(e){const n={em:"em",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["If it is ",(0,t.jsx)(n.em,{children:"non-nil"}),", it specifies the right margin (as ",(0,t.jsx)(n.em,{children:"integer"})," number of ",(0,t.jsx)(n.em,{children:"ems"}),") to use when the ",(0,t.jsx)(n.em,{children:"pretty printer"})," is making layout decisions."]}),"\n",(0,t.jsxs)(n.p,{children:["If it is ",(0,t.jsx)(n.strong,{children:"nil"}),", the right margin is taken to be the maximum line length such that output can be displayed without wraparound or truncation. If this cannot be determined, an ",(0,t.jsx)(n.em,{children:"implementation-dependent"})," value is used."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["This measure is in units of ",(0,t.jsx)(n.em,{children:"ems"})," in order to be compatible with ",(0,t.jsx)(n.em,{children:"implementation-defined"})," variable-width fonts while still not requiring the language to provide support for fonts."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"print-not-readable"})," ",(0,t.jsx)(n.em,{children:"Condition Type"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"print-not-readable"}),", ",(0,t.jsx)(n.strong,{children:"error"}),", ",(0,t.jsx)(n.strong,{children:"serious-condition"}),", ",(0,t.jsx)(n.strong,{children:"condition"}),", ",(0,t.jsx)(n.strong,{children:"t"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"print-not-readable"})," consists of error conditions that occur during output while ",(0,t.jsx)(n.strong,{children:"*print-readably*"})," is ",(0,t.jsx)(n.em,{children:"true"}),", as a result of attempting to write a printed representation with the ",(0,t.jsx)(n.em,{children:"Lisp printer"})," that would not be correctly read back with the ",(0,t.jsx)(n.em,{children:"Lisp reader"})," . The object which could not be printed is initialized by the ",":object"," initialization argument to ",(0,t.jsx)(n.strong,{children:"make-condition"}),", and is ",(0,t.jsx)(n.em,{children:"accessed"})," by the ",(0,t.jsx)(n.em,{children:"function"})," ",(0,t.jsx)(n.strong,{children:"print-not-readable-object"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"print-not-readable-object"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"print-not-readable-object"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"print-not-readable-object"})," ",(0,t.jsx)(n.em,{children:"condition ! object"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"condition"}),"\u2014a ",(0,t.jsx)(n.em,{children:"condition"})," of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"print-not-readable"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"object"}),"\u2014an ",(0,t.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Returns the ",(0,t.jsx)(n.em,{children:"object"})," that could not be printed readably in the situation represented by ",(0,t.jsx)(n.em,{children:"condition"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"print-not-readable"}),", Chapter 9 (Conditions)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"format"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"format"})," ",(0,t.jsx)(n.em,{children:"destination control-string"})," &rest ",(0,t.jsx)(n.em,{children:"args ! result"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"destination"}),"\u2014",(0,t.jsx)(n.strong,{children:"nil"}),", ",(0,t.jsx)(n.strong,{children:"t"}),", a ",(0,t.jsx)(n.em,{children:"stream"}),", or a ",(0,t.jsx)(n.em,{children:"string"})," with a ",(0,t.jsx)(n.em,{children:"fill pointer"})," ."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"control-string"}),"\u2014a ",(0,t.jsx)(n.em,{children:"format control"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"args"}),"\u2014",(0,t.jsx)(n.em,{children:"format arguments"})," for ",(0,t.jsx)(n.em,{children:"control-string"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"result"}),"\u2014if ",(0,t.jsx)(n.em,{children:"destination"})," is ",(0,t.jsx)(n.em,{children:"non-nil"}),", then ",(0,t.jsx)(n.strong,{children:"nil"}),"; otherwise, a ",(0,t.jsx)(n.em,{children:"string"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"format"})," produces formatted output by outputting the characters of ",(0,t.jsx)(n.em,{children:"control-string"})," and observing that a ",(0,t.jsx)(n.em,{children:"tilde"})," introduces a directive. The character after the tilde, possibly preceded by prefix parameters and modifiers, specifies what kind of formatting is desired. Most directives use one or more elements of ",(0,t.jsx)(n.em,{children:"args"})," to create their output."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"destination"})," is a ",(0,t.jsx)(n.em,{children:"string"}),", a ",(0,t.jsx)(n.em,{children:"stream"}),", or ",(0,t.jsx)(n.strong,{children:"t"}),", then the ",(0,t.jsx)(n.em,{children:"result"})," is ",(0,t.jsx)(n.strong,{children:"nil"}),". Otherwise, the ",(0,t.jsx)(n.em,{children:"result"})," is a ",(0,t.jsx)(n.em,{children:"string"})," containing the \u2018output.\u2019"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"format"})," is useful for producing nicely formatted text, producing good-looking messages, and so on. ",(0,t.jsx)(n.strong,{children:"format"})," can generate and return a ",(0,t.jsx)(n.em,{children:"string"})," or output to ",(0,t.jsx)(n.em,{children:"destination"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["For details on how the ",(0,t.jsx)(n.em,{children:"control-string"})," is interpreted, see Section 22.3 (Formatted Output)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Aected By:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"*standard-output*"}),", ",(0,t.jsx)(n.strong,{children:"*print-escape*"}),", ",(0,t.jsx)(n.strong,{children:"*print-radix*"}),", ",(0,t.jsx)(n.strong,{children:"*print-base*"}),", ",(0,t.jsx)(n.strong,{children:"*print-circle*"}),", ",(0,t.jsx)(n.strong,{children:"*print-pretty*"}),", ",(0,t.jsx)(n.strong,{children:"*print-level*"}),", ",(0,t.jsx)(n.strong,{children:"*print-length*"}),", ",(0,t.jsx)(n.strong,{children:"*print-case*"}),", ",(0,t.jsx)(n.strong,{children:"*print-gensym*"}),", ",(0,t.jsx)(n.strong,{children:"*print-array*"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"destination"})," is a ",(0,t.jsx)(n.em,{children:"string"})," with a ",(0,t.jsx)(n.em,{children:"fill pointer"})," , the consequences are undefined if destructive modifications are performed directly on the ",(0,t.jsx)(n.em,{children:"string"})," during the ",(0,t.jsx)(n.em,{children:"dynamic extent"})," of the call."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"write"}),", Section 13.1.10 (Documentation of Implementation-Defined Scripts)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"22. Printer"})})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var t=r(67294);const i={},s=t.createContext(i);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);