"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[20171],{82933:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>h,toc:()=>a});var t=s(85893),r=s(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"map"})," ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(s,{styled:!0,term:"map",children:(0,t.jsx)("b",{children:"map"})})," ",(0,t.jsx)(n.em,{children:"result-type function"})," &rest ",(0,t.jsx)(n.em,{children:"sequences"}),(0,t.jsx)("sup",{children:"+"})," \u2192 result"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"result-type"})," \u2013 a ",(0,t.jsx)(s,{styled:!0,term:"sequence",children:(0,t.jsx)("b",{children:"sequence"})})," ",(0,t.jsx)(n.em,{children:"type specifier"})," , or ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})}),"\u2014a ",(0,t.jsx)(n.em,{children:"function designator"})," . ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," must take as many arguments as there are ",(0,t.jsx)(n.em,{children:"sequences"}),". ",(0,t.jsx)(n.em,{children:"sequence"}),"\u2014a ",(0,t.jsx)(n.em,{children:"proper sequence"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"result"}),"\u2014if ",(0,t.jsx)(n.em,{children:"result-type"})," is a ",(0,t.jsx)(n.em,{children:"type specifier"})," other than ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),", then a ",(0,t.jsx)(n.em,{children:"sequence"})," of the ",(0,t.jsx)(s,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," it denotes; otherwise (if the ",(0,t.jsx)(n.em,{children:"result-type"})," is ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"), ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Applies ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," to successive sets of arguments in which one argument is obtained from each ",(0,t.jsx)(n.em,{children:"sequence"}),". The ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," is called first on all the elements with index 0, then on all those with index 1, and so on. The ",(0,t.jsx)(n.em,{children:"result-type"})," specifies the ",(0,t.jsx)(s,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," of the resulting ",(0,t.jsx)(n.em,{children:"sequence"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(s,{styled:!0,term:"map",children:(0,t.jsx)("b",{children:"map"})})," returns ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," if ",(0,t.jsx)(n.em,{children:"result-type"})," is ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),". Otherwise, ",(0,t.jsx)(s,{styled:!0,term:"map",children:(0,t.jsx)("b",{children:"map"})})," returns a ",(0,t.jsx)(n.em,{children:"sequence"})," such that element j is the result of applying ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," to element j of each of the ",(0,t.jsx)(n.em,{children:"sequences"}),". The result ",(0,t.jsx)(n.em,{children:"sequence"})," is as long as the shortest of the ",(0,t.jsx)(n.em,{children:"sequences"}),". The consequences are undefined if the result of applying ",(0,t.jsx)(s,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," to"]}),"\n",(0,t.jsxs)(n.p,{children:["the successive elements of the ",(0,t.jsx)(n.em,{children:"sequences"})," cannot be contained in a ",(0,t.jsx)(n.em,{children:"sequence"})," of the ",(0,t.jsx)(s,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," given by ",(0,t.jsx)(n.em,{children:"result-type"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.em,{children:"result-type"})," is a ",(0,t.jsx)(s,{styled:!0,term:"subtype",children:(0,t.jsx)("i",{children:"subtype"})})," of ",(0,t.jsx)(s,{styled:!0,term:"list",children:(0,t.jsx)("b",{children:"list"})}),", the result will be a ",(0,t.jsx)(s,{styled:!0,term:"list",children:(0,t.jsx)("i",{children:"list"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.em,{children:"result-type"})," is a ",(0,t.jsx)(s,{styled:!0,term:"subtype",children:(0,t.jsx)("i",{children:"subtype"})})," of ",(0,t.jsx)(s,{styled:!0,term:"vector",children:(0,t.jsx)("b",{children:"vector"})}),", then if the implementation can determine the element type specified for the ",(0,t.jsx)(n.em,{children:"result-type"}),", the element type of the resulting array is the result of ",(0,t.jsx)(n.em,{children:"upgrading"})," that element type; or, if the implementation can determine that the element type is unspecified (or *), the element type of the resulting array is ",(0,t.jsx)(s,{styled:!0,term:"t",children:(0,t.jsx)("b",{children:"t"})}),"; otherwise, an error is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:'\n(map \u2019string #\u2019(lambda (x y) \n\t\t (char "01234567890ABCDEF" (mod (+ x y) 16))) \n      \u2019(1 2 3 4) \n      \u2019(10 9 8 7)) \u2192 "AAAA" \n(setq seq \u2019("lower" "UPPER" "" "123")) \u2192 ("lower" "UPPER" "" "123") \n(map nil #\u2019nstring-upcase seq) \u2192 NIL \nseq \u2192 ("LOWER" "UPPER" "" "123") \n(map \u2019list #\u2019- \u2019(1 2 3 4)) \u2192 (-1 -2 -3 -4) \n(map \u2019string \n      #\u2019(lambda (x) (if (oddp x) #\\1 #\\0)) \n      \u2019(1 2 3 4)) \u2192 "1010" \n(map \u2019(vector \\* 4) #\u2019cons "abc" "de") should signal an error \n\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["An error of ",(0,t.jsx)(s,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(s,{styled:!0,term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," must be signaled if the ",(0,t.jsx)(n.em,{children:"result-type"})," is not a ",(0,t.jsx)(n.em,{children:"recognizable subtype"})," of ",(0,t.jsx)(s,{styled:!0,term:"list",children:(0,t.jsx)("b",{children:"list"})}),", not a ",(0,t.jsx)(n.em,{children:"recognizable subtype"})," of ",(0,t.jsx)(s,{styled:!0,term:"vector",children:(0,t.jsx)("b",{children:"vector"})}),", and not ",(0,t.jsx)(s,{styled:!0,term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Should be prepared to signal an error of ",(0,t.jsx)(s,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(s,{styled:!0,term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," if any ",(0,t.jsx)(n.em,{children:"sequence"})," is not a ",(0,t.jsx)(n.em,{children:"proper sequence"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["An error of ",(0,t.jsx)(s,{styled:!0,term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(s,{styled:!0,term:"type-error",children:(0,t.jsx)("b",{children:"type-error"})})," should be signaled if ",(0,t.jsx)(n.em,{children:"result-type"})," specifies the number of elements and the minimum length of the ",(0,t.jsx)(n.em,{children:"sequences"})," is different from that number."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(n.p,{children:"Section 3.6 (Traversal Rules and Side Effects)"}),"\n",(0,t.jsx)(s,{styled:!0,term:"map-into",children:(0,t.jsx)("b",{children:"map-into"})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const c={title:"map"},d="map",h={id:"chap-17/bh-d-dictionary/map_function",title:"map",description:"Expanded Reference: map",source:"@site/docs/chap-17/bh-d-dictionary/map_function.md",sourceDirName:"chap-17/bh-d-dictionary",slug:"/chap-17/bh-d-dictionary/map_function",permalink:"/cl-language-reference/chap-17/bh-d-dictionary/map_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-17/bh-d-dictionary/map_function.md",tags:[],version:"current",frontMatter:{title:"map"},sidebar:"tutorialSidebar",previous:{title:"map-into",permalink:"/cl-language-reference/chap-17/bh-d-dictionary/map-into_function"},next:{title:"merge",permalink:"/cl-language-reference/chap-17/bh-d-dictionary/merge_function"}},o={},a=[{value:"Expanded Reference: map",id:"expanded-reference-map",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"map",children:"map"}),"\n","\n","\n",(0,t.jsx)(l,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-map",children:"Expanded Reference: map"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(map )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>l});var t=s(67294);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);