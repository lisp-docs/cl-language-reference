"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[17165],{86281:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>m});var r=i(85893),c=i(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"encode-universal-time"})," ",(0,r.jsx)(n.em,{children:"function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"encode-universal-time"})," ",(0,r.jsx)(n.em,{children:"second minute hour date month year"})]}),"\n",(0,r.jsxs)(n.p,{children:["&optional ",(0,r.jsx)(n.em,{children:"time-zone"})]}),"\n",(0,r.jsx)(n.p,{children:"\u2192 universal-time"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"second"}),", ",(0,r.jsx)(n.em,{children:"minute"}),", ",(0,r.jsx)(n.em,{children:"hour"}),", ",(0,r.jsx)(n.em,{children:"date"}),", ",(0,r.jsx)(n.em,{children:"month"}),", ",(0,r.jsx)(n.em,{children:"year"}),", ",(0,r.jsx)(n.em,{children:"time-zone"}),"\u2014the corresponding parts of a ",(0,r.jsx)(n.em,{children:"decoded time"}),". (Note that some of the nine values in a full ",(0,r.jsx)(n.em,{children:"decoded time"})," are redundant, and so are not used as inputs to this function.)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"universal-time"}),"\u2014a ",(0,r.jsx)(n.em,{children:"universal time"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"encode-universal-time"})," converts a time from Decoded Time format to a ",(0,r.jsx)(n.em,{children:"universal time"}),". If ",(0,r.jsx)(n.em,{children:"time-zone"})," is supplied, no adjustment for daylight savings time is performed."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"\n(encode-universal-time 0 0 0 1 1 1900 0) \u2192 0 \n(encode-universal-time 0 0 1 4 7 1976 5) \u2192 2414296800 \n;; The next example assumes Eastern Daylight Time. \n(encode-universal-time 0 0 1 4 7 1976) \u2192 2414293200 \n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"decode-universal-time"}),", ",(0,r.jsx)(n.strong,{children:"get-decoded-time"})]})]})}function s(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}const d={},o="encode-universal-time",a={id:"chap-25/cf-c-dictionary/encode-universal-time_function",title:"encode-universal-time",description:"Expanded Reference: encode-universal-time",source:"@site/docs/chap-25/cf-c-dictionary/encode-universal-time_function.md",sourceDirName:"chap-25/cf-c-dictionary",slug:"/chap-25/cf-c-dictionary/encode-universal-time_function",permalink:"/cl-language-reference/docs/chap-25/cf-c-dictionary/encode-universal-time_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-25/cf-c-dictionary/encode-universal-time_function.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ed",permalink:"/cl-language-reference/docs/chap-25/cf-c-dictionary/ed"},next:{title:"get-internal-real-time",permalink:"/cl-language-reference/docs/chap-25/cf-c-dictionary/getinternalrealtime"}},l={},m=[{value:"Expanded Reference: encode-universal-time",id:"expanded-reference-encode-universal-time",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"encode-universal-time",children:"encode-universal-time"}),"\n","\n","\n",(0,r.jsx)(s,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-encode-universal-time",children:"Expanded Reference: encode-universal-time"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(encode-universal-time )\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>s});var r=i(67294);const c={},t=r.createContext(c);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);