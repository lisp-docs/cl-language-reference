"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[61006],{77220:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var r=s(85893),t=s(11151);function i(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"set-difference, nset-difference"})," ",(0,r.jsx)(n.em,{children:"Function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"set-difference"})," ",(0,r.jsx)(n.em,{children:"list-1 list-2"})," &key ",(0,r.jsx)(n.em,{children:"key test test-not \u2192 result-list"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"nset-difference"})," ",(0,r.jsx)(n.em,{children:"list-1 list-2"})," &key ",(0,r.jsx)(n.em,{children:"key test test-not \u2192 result-list"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"list-1"}),"\u2014a ",(0,r.jsx)(n.em,{children:"proper list"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"list-2"}),"\u2014a ",(0,r.jsx)(n.em,{children:"proper list"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"test"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of two ",(0,r.jsx)(n.em,{children:"arguments"})," that returns a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),". ",(0,r.jsx)(n.em,{children:"test-not"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of two ",(0,r.jsx)(n.em,{children:"arguments"})," that returns a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"set-difference, nset-difference"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"key"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of one argument, or ",(0,r.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"result-list"}),"\u2014a ",(0,r.jsx)(n.em,{children:"list"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"set-difference"})," returns a ",(0,r.jsx)(n.em,{children:"list"})," of elements of ",(0,r.jsx)(n.em,{children:"list-1"})," that do not appear in ",(0,r.jsx)(n.em,{children:"list-2"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"nset-difference"})," is the destructive version of ",(0,r.jsx)(n.strong,{children:"set-difference"}),". It may destroy ",(0,r.jsx)(n.em,{children:"list-1"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For all possible ordered pairs consisting of one element from ",(0,r.jsx)(n.em,{children:"list-1"})," and one element from ",(0,r.jsx)(n.em,{children:"list-2"}),", the ",":test"," or ",":test-not"," function is used to determine whether they ",(0,r.jsx)(n.em,{children:"satisfy the test"}),". The first argument to the ",":test"," or ",":test-not"," function is the part of an element of ",(0,r.jsx)(n.em,{children:"list-1"})," that is returned by the ",":key"," function (if supplied); the second argument is the part of an element of ",(0,r.jsx)(n.em,{children:"list-2"})," that is returned by the ",":key"," function (if supplied)."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",":key"," is supplied, its argument is a ",(0,r.jsx)(n.em,{children:"list-1"})," or ",(0,r.jsx)(n.em,{children:"list-2"})," element. The ",":key"," function typically returns part of the supplied element. If ",":key"," is not supplied, the ",(0,r.jsx)(n.em,{children:"list-1"})," or ",(0,r.jsx)(n.em,{children:"list-2"})," element is used."]}),"\n",(0,r.jsxs)(n.p,{children:["An element of ",(0,r.jsx)(n.em,{children:"list-1"})," appears in the result if and only if it does not match any element of ",(0,r.jsx)(n.em,{children:"list-2"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["There is no guarantee that the order of elements in the result will reflect the ordering of the arguments in any particular way. The result ",(0,r.jsx)(n.em,{children:"list"})," may share cells with, or be ",(0,r.jsx)(n.strong,{children:"eq"})," to, either of ",(0,r.jsx)(n.em,{children:"list-1"})," or ",(0,r.jsx)(n.em,{children:"list-2"}),", if appropriate."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.p,{children:'(setq lst1 (list "A" "b" "C" "d")'}),"\n",(0,r.jsxs)(n.p,{children:['lst2 (list "a" "B" "C" "d")) ',(0,r.jsx)(n.em,{children:"\u2192"}),' ("a" "B" "C" "d")']}),"\n",(0,r.jsxs)(n.p,{children:["(set-difference lst1 lst2) ",(0,r.jsx)(n.em,{children:"\u2192"}),' ("d" "C" "b" "A")']}),"\n",(0,r.jsxs)(n.p,{children:["(set-difference lst1 lst2 ",":test"," \u2019equal) ",(0,r.jsx)(n.em,{children:"\u2192"}),' ("b" "A")']}),"\n",(0,r.jsxs)(n.p,{children:["(set-difference lst1 lst2 ",":test"," #\u2019equalp) ",(0,r.jsx)(n.em,{children:"\u2192"})," NIL"]}),"\n",(0,r.jsxs)(n.p,{children:["(nset-difference lst1 lst2 ",":test"," #\u2019string=) ",(0,r.jsx)(n.em,{children:"\u2192"}),' ("A" "b")']}),"\n",(0,r.jsx)(n.p,{children:'(setq lst1 \u2019(("a" . "b") ("c" . "d") ("e" . "f")))'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2192"}),' (("a" . "b") ("c" . "d") ("e" . "f"))']}),"\n",(0,r.jsx)(n.p,{children:'(setq lst2 \u2019(("c" . "a") ("e" . "b") ("d" . "a")))'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2192"}),' (("c" . "a") ("e" . "b") ("d" . "a"))']}),"\n",(0,r.jsxs)(n.p,{children:["(nset-difference lst1 lst2 ",":test"," #\u2019string= ",":key"," #\u2019cdr)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2192"}),' (("c" . "d") ("e" . "f"))']}),"\n",(0,r.jsxs)(n.p,{children:["lst1 ",(0,r.jsx)(n.em,{children:"\u2192"}),' (("a" . "b") ("c" . "d") ("e" . "f"))']}),"\n",(0,r.jsxs)(n.p,{children:["lst2 ",(0,r.jsx)(n.em,{children:"\u2192"}),' (("c" . "a") ("e" . "b") ("d" . "a"))']}),"\n",(0,r.jsx)(n.p,{children:';; Remove all flavor names that contain "c" or "w".'}),"\n",(0,r.jsx)(n.p,{children:'(set-difference \u2019("strawberry" "chocolate" "banana"'}),"\n",(0,r.jsx)(n.p,{children:'"lemon" "pistachio" "rhubarb")'}),"\n",(0,r.jsx)(n.p,{children:"\u2019(#\\c #\\w)"}),"\n",(0,r.jsxs)(n.p,{children:[":test"," #\u2019(lambda (s c) (find c s)))"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2192"}),' ("banana" "rhubarb" "lemon") ;One possible ordering.']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"nset-difference"})," may destroy ",(0,r.jsx)(n.em,{children:"list-1"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsxs)(n.p,{children:["Should be prepared to signal an error of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"type-error"})," if ",(0,r.jsx)(n.em,{children:"list-1"})," and ",(0,r.jsx)(n.em,{children:"list-2"})," are not ",(0,r.jsx)(n.em,{children:"proper lists"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsx)(n.p,{children:"Section 3.2.1 (Compiler Terminology), Section 3.6 (Traversal Rules and Side Effects)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",":test-not"," parameter is deprecated."]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}const l={},d="set-difference, nset-difference",a={id:"chap-14/be-c-dictionary/setdifferenceaansetdifference",title:"set-difference, nset-difference",description:"Expanded Reference: set-difference, nset-difference",source:"@site/docs/chap-14/be-c-dictionary/setdifferenceaansetdifference.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/setdifferenceaansetdifference",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/setdifferenceaansetdifference",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/setdifferenceaansetdifference.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rplaca, rplacd",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/rplacaaarplacd"},next:{title:"set-exclusive-or, nset-exclusive-or",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/setexclusiveoraansetexclusiveor"}},o={},h=[{value:"Expanded Reference: set-difference, nset-difference",id:"expanded-reference-set-difference-nset-difference",level:2}];function f(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"set-difference-nset-difference",children:"set-difference, nset-difference"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-set-difference-nset-difference",children:"Expanded Reference: set-difference, nset-difference"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(set-difference, nset-difference )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>c});var r=s(67294);const t={},i=r.createContext(t);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);