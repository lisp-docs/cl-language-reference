"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[30609],{98770:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var t=n(85893),s=n(11151);function i(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"tree-equal"})," ",(0,t.jsx)(n,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"Function"})})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," ",(0,t.jsx)(r.em,{children:"tree-1 tree-2"})," &key ",(0,t.jsx)(r.em,{children:"test test-not \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"tree-1"}),"\u2014a ",(0,t.jsx)(n,{styled:!0,term:"tree",children:(0,t.jsx)("i",{children:"tree"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"tree-2"}),"\u2014a ",(0,t.jsx)(n,{styled:!0,term:"tree",children:(0,t.jsx)("i",{children:"tree"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"test"}),"\u2014a ",(0,t.jsx)(n,{styled:!0,term:"designator",children:(0,t.jsx)("i",{children:"designator"})})," for a ",(0,t.jsx)(n,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," of two ",(0,t.jsx)(n,{styled:!0,term:"argument",children:(0,t.jsx)("i",{children:"arguments"})})," that returns a ",(0,t.jsx)(r.em,{children:"generalized boolean"}),". ",(0,t.jsxs)(r.em,{children:["test-not",(0,t.jsx)(n,{styled:!0,term:"t",children:(0,t.jsx)("i",{children:"\u2014a "})}),"designator"]})," for a ",(0,t.jsx)(n,{styled:!0,term:"function",children:(0,t.jsx)("i",{children:"function"})})," of two ",(0,t.jsx)(n,{styled:!0,term:"argument",children:(0,t.jsx)("i",{children:"arguments"})})," that returns a ",(0,t.jsx)(r.em,{children:"generalized boolean"}),". ",(0,t.jsx)(r.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(r.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," tests whether two trees are of the same shape and have the same leaves. ",(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," returns ",(0,t.jsx)(n,{styled:!0,term:"true",children:(0,t.jsx)("i",{children:"true"})})," if ",(0,t.jsx)(r.em,{children:"tree-1"})," and ",(0,t.jsx)(r.em,{children:"tree-2"})," are both ",(0,t.jsx)(n,{styled:!0,term:"atom",children:(0,t.jsx)("i",{children:"atoms"})})," and ",(0,t.jsx)(r.em,{children:"satisfy the test"}),", or if they are both ",(0,t.jsx)(r.em,{children:"conses"})," and the ",(0,t.jsx)(n,{styled:!0,term:"car",children:(0,t.jsx)("i",{children:"car"})})," of ",(0,t.jsx)(r.em,{children:"tree-1"})," is ",(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," to the ",(0,t.jsx)(n,{styled:!0,term:"car",children:(0,t.jsx)("i",{children:"car"})})," of ",(0,t.jsx)(r.em,{children:"tree-2"})," and the ",(0,t.jsx)(n,{styled:!0,term:"cdr",children:(0,t.jsx)("i",{children:"cdr"})})," of ",(0,t.jsx)(r.em,{children:"tree-1"})," is ",(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," to the ",(0,t.jsx)(n,{styled:!0,term:"cdr",children:(0,t.jsx)("i",{children:"cdr"})})," of ",(0,t.jsx)(r.em,{children:"tree-2"}),". Otherwise, ",(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," returns ",(0,t.jsx)(n,{styled:!0,term:"false",children:(0,t.jsx)("i",{children:"false"})}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"tree-equal",children:(0,t.jsx)("b",{children:"tree-equal"})})," recursively compares ",(0,t.jsx)(r.em,{children:"conses"})," but not any other ",(0,t.jsx)(n,{styled:!0,term:"object",children:(0,t.jsx)("i",{children:"objects"})})," that have components."]}),"\n",(0,t.jsxs)(r.p,{children:["The first argument to the ",":test"," or ",":test-not"," function is ",(0,t.jsx)(r.em,{children:"tree-1"})," or a ",(0,t.jsx)(n,{styled:!0,term:"car",children:(0,t.jsx)("i",{children:"car"})})," or ",(0,t.jsx)(n,{styled:!0,term:"cdr",children:(0,t.jsx)("i",{children:"cdr"})})," of ",(0,t.jsx)(r.em,{children:"tree-1"}),"; the second argument is ",(0,t.jsx)(r.em,{children:"tree-2"})," or a ",(0,t.jsx)(n,{styled:!0,term:"car",children:(0,t.jsx)("i",{children:"car"})})," or ",(0,t.jsx)(n,{styled:!0,term:"cdr",children:(0,t.jsx)("i",{children:"cdr"})})," of ",(0,t.jsx)(r.em,{children:"tree-2"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:"\n(setq tree1 \u2019(1 (1 2)) \n      tree2 \u2019(1 (1 2))) \u2192 (1 (1 2)) \n(tree-equal tree1 tree2) \u2192 true \n(eql tree1 tree2) \u2192 false \n(setq tree1 \u2019(\u2019a (\u2019b \u2019c)) \n      tree2 \u2019(\u2019a (\u2019b \u2019c))) \u2192 (\u2019a (\u2019b \u2019c)) \n\u2192 ((QUOTE A) ((QUOTE B) (QUOTE C))) \n(tree-equal tree1 tree2 :test \u2019eq) \u2192 true \n\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(r.p,{children:["The consequences are undefined if both ",(0,t.jsx)(r.em,{children:"tree-1"})," and ",(0,t.jsx)(r.em,{children:"tree-2"})," are circular."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(n,{styled:!0,term:"equal",children:(0,t.jsx)("b",{children:"equal"})}),", Section 3.6 (Traversal Rules and Side Effects)"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",":test-not"," parameter is deprecated."]})]})}function c(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const l={title:"tree-equal"},d="tree-equal",a={id:"chap-14/be-c-dictionary/tree-equal_function",title:"tree-equal",description:"Expanded Reference: tree-equal",source:"@site/docs/chap-14/be-c-dictionary/tree-equal_function.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/tree-equal_function",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/tree-equal_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/tree-equal_function.md",tags:[],version:"current",frontMatter:{title:"tree-equal"},sidebar:"tutorialSidebar",previous:{title:"subst, subst-if, subst-if-not, nsubst, nsubst-if, nsubst-if-not",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/subst_subst-if_subst-if-not_nsubst_nsubst-if_nsubst-if-not_function"},next:{title:"union, nunion",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/union_nunion_function"}},o={},h=[{value:"Expanded Reference: tree-equal",id:"expanded-reference-tree-equal",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"tree-equal",children:"tree-equal"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(r.h2,{id:"expanded-reference-tree-equal",children:"Expanded Reference: tree-equal"}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lisp",children:"(tree-equal )\n"})})]})}function u(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>c});var t=n(67294);const s={},i=t.createContext(s);function c(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);