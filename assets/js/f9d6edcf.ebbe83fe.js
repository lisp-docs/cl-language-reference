"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[32254],{82276:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>j,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var t=r(85893),s=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:i}=n;return r||a("DictionaryLink",!0),i||a("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"t"})," ",(0,t.jsx)(i,{styled:!0,term:"constant variable",children:(0,t.jsx)("i",{children:"Constant Variable"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constant Value:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(i,{term:"boolean",children:(0,t.jsx)("i",{children:"boolean"})})," representing true, and the canonical ",(0,t.jsx)(i,{styled:!0,term:"generalized boolean",children:(0,t.jsx)("i",{children:"generalized boolean"})})," representing true. Although any ",(0,t.jsx)(i,{term:"object",children:(0,t.jsx)("i",{children:"object"})})," other than ",(0,t.jsx)(r,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," is considered ",(0,t.jsx)(i,{term:"true",children:(0,t.jsx)("i",{children:"true"})}),", ",(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})})," is generally used when there is no special reason to prefer one such ",(0,t.jsx)(i,{term:"object",children:(0,t.jsx)("i",{children:"object"})})," over another."]}),"\n",(0,t.jsx)(n.p,{children:"Data and Control"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(i,{term:"symbol",children:(0,t.jsx)("i",{children:"symbol"})})," ",(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})})," is also sometimes used for other purposes as well. For example, as the ",(0,t.jsx)(i,{term:"name",children:(0,t.jsx)("i",{children:"name"})})," of a ",(0,t.jsx)(i,{term:"class",children:(0,t.jsx)("i",{children:"class"})}),", as a ",(0,t.jsx)(i,{term:"designator",children:(0,t.jsx)("i",{children:"designator"})})," (",(0,t.jsx)(n.em,{children:"e.g."}),", a ",(0,t.jsx)(i,{styled:!0,term:"stream designator",children:(0,t.jsx)("i",{children:"stream designator"})})," ) or as a special symbol for some syntactic reason (",(0,t.jsx)(n.em,{children:"e.g."}),", in ",(0,t.jsx)(r,{term:"case",children:(0,t.jsx)("b",{children:"case"})})," and ",(0,t.jsx)(r,{term:"typecase",children:(0,t.jsx)("b",{children:"typecase"})})," to label the ",(0,t.jsx)(n.em,{children:"otherwise-clause"}),")."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"t \u2192 T \n(eq t \u2019t) \u2192 true \n(find-class \u2019t) \u2192 #<CLASS T 610703333> \n(case \u2019a (a 1) (t 2)) \u2192 1 \n(case \u2019b (a 1) (t 2)) \u2192 2 \n(prin1 \u2019hello t) \n\u25b7 HELLO \n\u2192 HELLO \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(r,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}function a(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const l={title:"t"},o="t",d={id:"chap-5/f-d-dictionary/t_constant-variable",title:"t",description:"Expanded Reference: t",source:"@site/docs/chap-5/f-d-dictionary/t_constant-variable.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/t_constant-variable",permalink:"/cl-language-reference/chap-5/f-d-dictionary/t_constant-variable",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/t_constant-variable.md",tags:[],version:"current",frontMatter:{title:"t"},sidebar:"tutorialSidebar",previous:{title:"shiftf",permalink:"/cl-language-reference/chap-5/f-d-dictionary/shiftf_macro"},next:{title:"tagbody",permalink:"/cl-language-reference/chap-5/f-d-dictionary/tagbody_special-operator"}},h={},p=[{value:"Expanded Reference: t",id:"expanded-reference-t",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"t",children:"t"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-t",children:"Expanded Reference: t"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(t )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>c});var t=r(67294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);