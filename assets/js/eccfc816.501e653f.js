"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[43812],{77753:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>h,toc:()=>o});var t=a(85893),r=a(11151);function c(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"pathname-match-p"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"pathname-match-p"})," ",(0,t.jsx)(n.em,{children:"pathname wildcard \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"pathname"}),"\u2014a ",(0,t.jsx)(n.em,{children:"pathname designator"})," ."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"wildcard"}),"\u2014a ",(0,t.jsx)(n.em,{children:"designator"})," for a ",(0,t.jsx)(n.em,{children:"wild pathname"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"pathname-match-p"})," returns true if ",(0,t.jsx)(n.em,{children:"pathname"})," matches ",(0,t.jsx)(n.em,{children:"wildcard"}),", otherwise ",(0,t.jsx)(n.strong,{children:"nil"}),". The matching rules are ",(0,t.jsx)(n.em,{children:"implementation-defined"})," but should be consistent with ",(0,t.jsx)(n.strong,{children:"directory"}),". Missing components of ",(0,t.jsx)(n.em,{children:"wildcard"})," default to ",":wild","."]}),"\n",(0,t.jsxs)(n.p,{children:["It is valid for ",(0,t.jsx)(n.em,{children:"pathname"})," to be a wild ",(0,t.jsx)(n.em,{children:"pathname"}),"; a wildcard field in ",(0,t.jsx)(n.em,{children:"pathname"})," only matches a wildcard field in ",(0,t.jsx)(n.em,{children:"wildcard"})," (",(0,t.jsx)(n.em,{children:"i.e."}),", ",(0,t.jsx)(n.strong,{children:"pathname-match-p"})," is not commutative). It is valid for ",(0,t.jsx)(n.em,{children:"wildcard"})," to be a non-wild ",(0,t.jsx)(n.em,{children:"pathname"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"pathname"})," or ",(0,t.jsx)(n.em,{children:"wildcard"})," is not a ",(0,t.jsx)(n.em,{children:"pathname"}),", ",(0,t.jsx)(n.em,{children:"string"}),", or ",(0,t.jsx)(n.em,{children:"stream associated with a file"})," an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"type-error"})," is signaled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"directory"}),", ",(0,t.jsx)(n.strong,{children:"pathname"}),", ",(0,t.jsx)(n.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"translate-logical-pathname"})})]})}function i(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}const s={},d="pathname-match-p",h={id:"chap-19/bj-e-dictionary/pathnamematchp",title:"pathname-match-p",description:"Expanded Reference: pathname-match-p",source:"@site/docs/chap-19/bj-e-dictionary/pathnamematchp.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/pathnamematchp",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathnamematchp",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/pathnamematchp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathname"},next:{title:"pathnamep",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathnamep"}},l={},o=[{value:"Expanded Reference: pathname-match-p",id:"expanded-reference-pathname-match-p",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"pathname-match-p",children:"pathname-match-p"}),"\n","\n","\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-pathname-match-p",children:"Expanded Reference: pathname-match-p"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(pathname-match-p )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>s,a:()=>i});var t=a(67294);const r={},c=t.createContext(r);function i(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);