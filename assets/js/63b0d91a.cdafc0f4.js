"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[25842],{88641:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var s=n(85893),t=n(11151);function l(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"equalp"})," ",(0,s.jsx)(n,{styled:!0,term:"function",children:(0,s.jsx)("i",{children:"Function"})})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," ",(0,s.jsx)(r.em,{children:"x y \u2192 generalized-boolean"})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"x"}),"\u2014an ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"y"}),"\u2014an ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"generalized-boolean"}),"\u2014a ",(0,s.jsx)(r.em,{children:"generalized boolean"}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(r.p,{children:["Returns ",(0,s.jsx)(n,{styled:!0,term:"true",children:(0,s.jsx)("i",{children:"true"})})," if ",(0,s.jsx)(r.em,{children:"x"})," and ",(0,s.jsx)(r.em,{children:"y"})," are ",(0,s.jsx)(n,{styled:!0,term:"equal",children:(0,s.jsx)("b",{children:"equal"})}),", or if they have components that are of the same ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," as each other and if those components are ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})}),"; specifically, ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," returns ",(0,s.jsx)(n,{styled:!0,term:"true",children:(0,s.jsx)("i",{children:"true"})})," in the following cases:"]}),"\n",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"Characters"})}),"\n",(0,s.jsxs)(r.p,{children:["If two ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"characters"})})," are ",(0,s.jsx)(n,{styled:!0,term:"char-equal",children:(0,s.jsx)("b",{children:"char-equal"})}),"."]}),"\n",(0,s.jsx)(n,{styled:!0,term:"number",children:(0,s.jsx)("i",{children:"Numbers"})}),"\n",(0,s.jsxs)(r.p,{children:["If two ",(0,s.jsx)(n,{styled:!0,term:"number",children:(0,s.jsx)("i",{children:"numbers"})})," are the ",(0,s.jsx)(n,{styled:!0,term:"same",children:(0,s.jsx)("i",{children:"same"})})," under ",(0,s.jsx)(n,{styled:!0,term:"=",children:(0,s.jsx)("b",{children:"="})}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"Conses"})}),"\n",(0,s.jsxs)(r.p,{children:["If the two ",(0,s.jsx)(n,{styled:!0,term:"car",children:(0,s.jsx)("i",{children:"cars"})})," in the ",(0,s.jsx)(r.em,{children:"conses"})," are ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," and the two ",(0,s.jsx)(n,{styled:!0,term:"cdr",children:(0,s.jsx)("i",{children:"cdrs"})})," in the ",(0,s.jsx)(r.em,{children:"conses"})," are ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})}),"."]}),"\n",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"Arrays"})}),"\n",(0,s.jsxs)(r.p,{children:["If two ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," have the same number of dimensions, the dimensions match, and the corresponding ",(0,s.jsx)(r.em,{children:"active elements"})," are ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})}),". The ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"types"})})," for which the ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"arrays"})})," are ",(0,s.jsx)(n,{styled:!0,term:"specialized",children:(0,s.jsx)("i",{children:"specialized"})})," need not match; for example, a ",(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("i",{children:"string"})})," and a general ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"array"})})," that happens to contain the same ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"characters"})})," are ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})}),". Because ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," performs ",(0,s.jsx)(n,{styled:!0,term:"element",children:(0,s.jsx)("i",{children:"element"})}),"-by-",(0,s.jsx)(n,{styled:!0,term:"element",children:(0,s.jsx)("i",{children:"element"})})," comparisons of ",(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("i",{children:"strings"})})," and ignores the ",(0,s.jsx)(n,{styled:!0,term:"case",children:(0,s.jsx)("i",{children:"case"})})," of ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"characters"})}),", ",(0,s.jsx)(n,{styled:!0,term:"case",children:(0,s.jsx)("i",{children:"case"})})," distinctions are ignored when ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," compares ",(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("i",{children:"strings"})}),"."]}),"\n",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})}),"\n",(0,s.jsx)(n,{styled:!0,term:"structure",children:(0,s.jsx)("i",{children:"Structures"})}),"\n",(0,s.jsxs)(r.p,{children:["If two ",(0,s.jsx)(r.em,{children:"structures S"}),(0,s.jsx)("sub",{children:"1"})," and ",(0,s.jsx)(r.em,{children:"S"}),(0,s.jsx)("sub",{children:"2"})," have the same ",(0,s.jsx)(n,{styled:!0,term:"class",children:(0,s.jsx)("i",{children:"class"})})," and the value of each ",(0,s.jsx)(n,{styled:!0,term:"slot",children:(0,s.jsx)("i",{children:"slot"})})," in ",(0,s.jsx)(r.em,{children:"S"}),(0,s.jsx)("sub",{children:"1"})," is the ",(0,s.jsx)(n,{styled:!0,term:"same",children:(0,s.jsx)("i",{children:"same"})})," under ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," as the value of the corresponding ",(0,s.jsx)(n,{styled:!0,term:"slot",children:(0,s.jsx)("i",{children:"slot"})})," in ",(0,s.jsx)(r.em,{children:"S"}),(0,s.jsx)("sub",{children:"2"}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"Hash Tables"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," descends ",(0,s.jsx)(r.em,{children:"hash-tables"})," by first comparing the count of entries and the ",":test"," function; if those are the same, it compares the keys of the tables using the ",":test"," function and then the values of the matching keys using ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," recursively."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," does not descend any ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"objects"})})," other than the ones explicitly specified above. Figure 5\u201313 summarizes the information given in the previous list. In addition, the figure specifies the priority of the behavior of ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})}),", with upper entries taking priority over lower ones."]}),"\n",(0,s.jsxs)(r.p,{children:["|",(0,s.jsx)(r.strong,{children:"Type Behavior"}),"|"]}),"\n",(0,s.jsx)(r.p,{children:"| :- |"}),"\n",(0,s.jsxs)(r.p,{children:["|",(0,s.jsxs)("p",{children:[(0,s.jsx)(n,{styled:!0,term:"number",children:(0,s.jsx)("i",{children:"number"})})," uses ",(0,s.jsx)(n,{styled:!0,term:"=",children:(0,s.jsx)("b",{children:"="})})," "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("i",{children:"character"})})," uses ",(0,s.jsx)(n,{styled:!0,term:"char-equal",children:(0,s.jsx)("b",{children:"char-equal"})})," "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n,{styled:!0,term:"cons",children:(0,s.jsx)("i",{children:"cons"})})," descends "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(r.em,{children:"bit vector"})," descends "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("i",{children:"string"})})," descends "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n,{styled:!0,term:"pathname",children:(0,s.jsx)("i",{children:"pathname"})})," same as ",(0,s.jsx)(n,{styled:!0,term:"equal",children:(0,s.jsx)("b",{children:"equal"})})," "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n,{styled:!0,term:"structure",children:(0,s.jsx)("i",{children:"structure"})})," descends, as described above "]}),(0,s.jsxs)("p",{children:["Other ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"array"})})," descends "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(r.em,{children:"hash table"})," descends, as described above "]}),(0,s.jsxs)("p",{children:["Other ",(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"object"})})," uses ",(0,s.jsx)(n,{styled:!0,term:"eq",children:(0,s.jsx)("b",{children:"eq"})})]}),"|"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Figure 5\u201313. Summary and priorities of behavior of equalp"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:'\n(equalp \u2019a \u2019b) \u2192 false \n(equalp \u2019a \u2019a) \u2192 true \n(equalp 3 3) \u2192 true \n(equalp 3 3.0) \u2192 true \n(equalp 3.0 3.0) \u2192 true \n(equalp #c(3 -4) #c(3 -4)) \u2192 true \n(equalp #c(3 -4.0) #c(3 -4)) \u2192 true \n(equalp (cons \u2019a \u2019b) (cons \u2019a \u2019c)) \u2192 false \n(equalp (cons \u2019a \u2019b) (cons \u2019a \u2019b)) \u2192 true \n(equalp #\\A #\\A) \u2192 true \n(equalp #\\A #\\a) \u2192 true \n(equalp "Foo" "Foo") \u2192 true \n(equalp "Foo" (copy-seq "Foo")) \u2192 true \nData and Control \n\n\n(equalp "FOO" "foo") \u2192 true \n(setq array1 (make-array 6 :element-type \u2019integer \n\t\t\t :initial-contents \u2019(1 1 1 3 5 7))) \n\u2192 #(1 1 1 3 5 7) \n(setq array2 (make-array 8 :element-type \u2019integer \n\t\t\t :initial-contents \u2019(1 1 1 3 5 7 2 6) \n\t\t\t :fill-pointer 6)) \n\u2192 #(1 1 1 3 5 7) \n(equalp array1 array2) \u2192 true \n(setq vector1 (vector 1 1 1 3 5 7)) \u2192 #(1 1 1 3 5 7) \n(equalp array1 vector1) \u2192 true \n\n'})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"eq",children:(0,s.jsx)("b",{children:"eq"})}),", ",(0,s.jsx)(n,{styled:!0,term:"eql",children:(0,s.jsx)("b",{children:"eql"})}),", ",(0,s.jsx)(n,{styled:!0,term:"equal",children:(0,s.jsx)("b",{children:"equal"})}),", ",(0,s.jsx)(n,{styled:!0,term:"=",children:(0,s.jsx)("b",{children:"="})}),", ",(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("b",{children:"string="})}),", ",(0,s.jsx)(r.strong,{children:"string-equal"}),", ",(0,s.jsx)(n,{styled:!0,term:"char=",children:(0,s.jsx)("b",{children:"char="})}),", ",(0,s.jsx)(n,{styled:!0,term:"char-equal",children:(0,s.jsx)("b",{children:"char-equal"})})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"object",children:(0,s.jsx)("i",{children:"Object"})})," equality is not a concept for which there is a uniquely determined correct algorithm. The appropriateness of an equality predicate can be judged only in the context of the needs of some particular program. Although these functions take any type of argument and their names sound very generic, ",(0,s.jsx)(n,{styled:!0,term:"equal",children:(0,s.jsx)("b",{children:"equal"})})," and ",(0,s.jsx)(n,{styled:!0,term:"equalp",children:(0,s.jsx)("b",{children:"equalp"})})," are not appropriate for every application."]})]})}function i(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}const c={title:"equalp"},d="equalp",a={id:"chap-5/f-d-dictionary/equalp_function",title:"equalp",description:"Expanded Reference: equalp",source:"@site/docs/chap-5/f-d-dictionary/equalp_function.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/equalp_function",permalink:"/cl-language-reference/chap-5/f-d-dictionary/equalp_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/equalp_function.md",tags:[],version:"current",frontMatter:{title:"equalp"},sidebar:"tutorialSidebar",previous:{title:"equal",permalink:"/cl-language-reference/chap-5/f-d-dictionary/equal_function"},next:{title:"every, some, notevery, notany",permalink:"/cl-language-reference/chap-5/f-d-dictionary/every_some_notevery_notany_function"}},h={},o=[{value:"Expanded Reference: equalp",id:"expanded-reference-equalp",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"equalp",children:"equalp"}),"\n","\n","\n",(0,s.jsx)(i,{}),"\n",(0,s.jsx)(r.h2,{id:"expanded-reference-equalp",children:"Expanded Reference: equalp"}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:"(equalp )\n"})})]})}function j(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>i});var s=n(67294);const t={},l=s.createContext(t);function i(e){const r=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(l.Provider,{value:r},e.children)}}}]);