"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[63869],{26847:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>u});var i=r(85893),t=r(11151);function o(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"unbound-variable"})," ",(0,i.jsx)(n.em,{children:"Condition Type"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Class Precedence List:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"unbound-variable"}),", ",(0,i.jsx)(n.strong,{children:"cell-error"}),", ",(0,i.jsx)(n.strong,{children:"error"}),", ",(0,i.jsx)(n.strong,{children:"serious-condition"}),", ",(0,i.jsx)(n.strong,{children:"condition"}),", ",(0,i.jsx)(n.strong,{children:"t"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"unbound-variable"})," consists of ",(0,i.jsx)(n.em,{children:"error conditions"})," that represent attempts to ",(0,i.jsx)(n.em,{children:"read"})," the ",(0,i.jsx)(n.em,{children:"value"})," of an ",(0,i.jsx)(n.em,{children:"unbound variable"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The name of the cell (see ",(0,i.jsx)(n.strong,{children:"cell-error"}),") is the ",(0,i.jsx)(n.em,{children:"name"})," of the ",(0,i.jsx)(n.em,{children:"variable"})," that was ",(0,i.jsx)(n.em,{children:"unbound"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"cell-error-name"})})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}const c={title:"unbound-variable"},s="unbound-variable",d={id:"chap-10/ba-c-dictionary/unbound-variable_condition-type",title:"unbound-variable",description:"Expanded Reference: unbound-variable",source:"@site/docs/chap-10/ba-c-dictionary/unbound-variable_condition-type.md",sourceDirName:"chap-10/ba-c-dictionary",slug:"/chap-10/ba-c-dictionary/unbound-variable_condition-type",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/unbound-variable_condition-type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-10/ba-c-dictionary/unbound-variable_condition-type.md",tags:[],version:"current",frontMatter:{title:"unbound-variable"},sidebar:"tutorialSidebar",previous:{title:"symbolp",permalink:"/cl-language-reference/docs/chap-10/ba-c-dictionary/symbolp_function"},next:{title:"11. Packages",permalink:"/cl-language-reference/docs/category/11-packages"}},l={},u=[{value:"Expanded Reference: unbound-variable",id:"expanded-reference-unbound-variable",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"unbound-variable",children:"unbound-variable"}),"\n","\n","\n",(0,i.jsx)(a,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-unbound-variable",children:"Expanded Reference: unbound-variable"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(unbound-variable )\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>a});var i=r(67294);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);