"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[21994],{21288:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var t=c(85893),r=c(11151);function s(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"complement"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"complement"})," ",(0,t.jsx)(n.em,{children:"function \u2192 complement-function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"function"}),"\u2014a ",(0,t.jsx)(n.em,{children:"function"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"complement-function"}),"\u2014a ",(0,t.jsx)(n.em,{children:"function"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Returns a ",(0,t.jsx)(n.em,{children:"function"})," that takes the same ",(0,t.jsx)(n.em,{children:"arguments"})," as ",(0,t.jsx)(n.em,{children:"function"}),", and has the same side-effect behavior as ",(0,t.jsx)(n.em,{children:"function"}),", but returns only a single value: a ",(0,t.jsx)(n.em,{children:"generalized boolean"})," with the opposite truth value of that which would be returned as the ",(0,t.jsx)(n.em,{children:"primary value"})," of ",(0,t.jsx)(n.em,{children:"function"}),". That is, when the ",(0,t.jsx)(n.em,{children:"function"})," would have returned ",(0,t.jsx)(n.em,{children:"true"})," as its ",(0,t.jsx)(n.em,{children:"primary value"})," the ",(0,t.jsx)(n.em,{children:"complement-function"})," returns ",(0,t.jsx)(n.em,{children:"false"}),", and when the ",(0,t.jsx)(n.em,{children:"function"})," would have returned ",(0,t.jsx)(n.em,{children:"false"})," as its ",(0,t.jsx)(n.em,{children:"primary value"})," the ",(0,t.jsx)(n.em,{children:"complement-function"})," returns ",(0,t.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(funcall (complement #\u2019zerop) 1) \u2192 true \n(funcall (complement #\u2019characterp) #\\A) \u2192 false \n(funcall (complement #\u2019member) \u2019a \u2019(a b c)) \u2192 false \n(funcall (complement #\u2019member) \u2019d \u2019(a b c)) \u2192 true \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"not"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["(complement ",(0,t.jsx)(n.em,{children:"x"}),") ",(0,t.jsx)(n.em,{children:"\u2261"})," #\u2019(lambda (&rest arguments) (not (apply ",(0,t.jsx)(n.em,{children:"x"})," arguments)))"]}),"\n",(0,t.jsxs)(n.p,{children:["In Common Lisp, functions with names like \u201c",(0,t.jsx)(n.em,{children:"xxx"}),"-if-not\u201d are related to functions with names like \u201c",(0,t.jsx)(n.em,{children:"xxx"}),"-if\u201d in that"]}),"\n",(0,t.jsxs)(n.p,{children:["(",(0,t.jsx)(n.em,{children:"xxx"}),"-if-not ",(0,t.jsx)(n.em,{children:"f"})," . ",(0,t.jsx)(n.em,{children:"arguments"}),") ",(0,t.jsx)(n.em,{children:"\u2261"})," (",(0,t.jsx)(n.em,{children:"xxx"}),"-if (complement ",(0,t.jsx)(n.em,{children:"f"}),") . ",(0,t.jsx)(n.em,{children:"arguments"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"For example,"}),"\n",(0,t.jsxs)(n.p,{children:["(find-if-not #\u2019zerop \u2019(0 0 3)) ",(0,t.jsx)(n.em,{children:"\u2261"})]}),"\n",(0,t.jsx)(n.p,{children:"(find-if (complement #\u2019zerop) \u2019(0 0 3)) \u2192 3"}),"\n",(0,t.jsx)(n.p,{children:"Data and Control"}),"\n",(0,t.jsxs)(n.p,{children:["Note that since the \u201c",(0,t.jsx)(n.em,{children:"xxx"}),"-if-not\u201d ",(0,t.jsx)(n.em,{children:"functions"})," and the ",":test-not"," arguments have been deprecated, uses of \u201c",(0,t.jsx)(n.em,{children:"xxx"}),"-if\u201d ",(0,t.jsx)(n.em,{children:"functions"})," or ",":test"," arguments with ",(0,t.jsx)(n.strong,{children:"complement"})," are preferred."]})]})}function i(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}const l={},o="complement",d={id:"chap-5/f-d-dictionary/complement",title:"complement",description:"Expanded Reference: complement",source:"@site/docs/chap-5/f-d-dictionary/complement.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/complement",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/complement",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/complement.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"compiled-function-p",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/compiledfunctionp"},next:{title:"cond",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/cond"}},a={},m=[{value:"Expanded Reference: complement",id:"expanded-reference-complement",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"complement",children:"complement"}),"\n","\n","\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-complement",children:"Expanded Reference: complement"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(complement )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,n,c)=>{c.d(n,{Z:()=>l,a:()=>i});var t=c(67294);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);