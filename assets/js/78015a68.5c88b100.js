"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[38283],{75668:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>j,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var s=r(85893),t=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"every, some, notevery, notany"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"every"})," ",(0,s.jsx)(n.em,{children:"predicate"})," &rest ",(0,s.jsx)(n.em,{children:"sequences"}),(0,s.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"some"})," ",(0,s.jsx)(n.em,{children:"predicate"})," &rest ",(0,s.jsx)(n.em,{children:"sequences"}),(0,s.jsx)("sup",{children:"+"})," \u2192 result"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"notevery"})," ",(0,s.jsx)(n.em,{children:"predicate"})," &rest ",(0,s.jsx)(n.em,{children:"sequences"}),(0,s.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"notany"})," ",(0,s.jsx)(n.em,{children:"predicate"})," &rest ",(0,s.jsx)(n.em,{children:"sequences"}),(0,s.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"predicate"}),"\u2014a ",(0,s.jsx)(n.em,{children:"designator"})," for a ",(0,s.jsx)(n.em,{children:"function"})," of as many ",(0,s.jsx)(n.em,{children:"arguments"})," as there are ",(0,s.jsx)(n.em,{children:"sequences"}),". ",(0,s.jsx)(n.em,{children:"sequence"}),"\u2014a ",(0,s.jsx)(n.em,{children:"sequence"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"result"}),"\u2014an ",(0,s.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,s.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"every"}),", ",(0,s.jsx)(n.strong,{children:"some"}),", ",(0,s.jsx)(n.strong,{children:"notevery"}),", and ",(0,s.jsx)(n.strong,{children:"notany"})," test ",(0,s.jsx)(n.em,{children:"elements"})," of ",(0,s.jsx)(n.em,{children:"sequences"})," for satisfaction of a given ",(0,s.jsx)(n.em,{children:"predicate"}),". The first argument to ",(0,s.jsx)(n.em,{children:"predicate"})," is an ",(0,s.jsx)(n.em,{children:"element"})," of the first ",(0,s.jsx)(n.em,{children:"sequence"}),"; each succeeding argument is an ",(0,s.jsx)(n.em,{children:"element"})," of a succeeding ",(0,s.jsx)(n.em,{children:"sequence"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Predicate"})," is first applied to the elements with index 0 in each of the ",(0,s.jsx)(n.em,{children:"sequences"}),", and possibly then to the elements with index 1, and so on, until a termination criterion is met or the end of the shortest of the ",(0,s.jsx)(n.em,{children:"sequences"})," is reached."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"every"})," returns ",(0,s.jsx)(n.em,{children:"false"})," as soon as any invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"false"}),". If the end of a ",(0,s.jsx)(n.em,{children:"sequence"})," is reached, ",(0,s.jsx)(n.strong,{children:"every"})," returns ",(0,s.jsx)(n.em,{children:"true"}),". Thus, ",(0,s.jsx)(n.strong,{children:"every"})," returns ",(0,s.jsx)(n.em,{children:"true"})," if and only if every invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"some"})," returns the first ",(0,s.jsx)(n.em,{children:"non-nil"})," value which is returned by an invocation of ",(0,s.jsx)(n.em,{children:"predicate"}),". If the end of a ",(0,s.jsx)(n.em,{children:"sequence"})," is reached without any invocation of the ",(0,s.jsx)(n.em,{children:"predicate"})," returning ",(0,s.jsx)(n.em,{children:"true"}),", ",(0,s.jsx)(n.strong,{children:"some"})," returns ",(0,s.jsx)(n.em,{children:"false"}),". Thus, ",(0,s.jsx)(n.strong,{children:"some"})," returns ",(0,s.jsx)(n.em,{children:"true"})," if and only if some invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"notany"})," returns ",(0,s.jsx)(n.em,{children:"false"})," as soon as any invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"true"}),". If the end of a ",(0,s.jsx)(n.em,{children:"sequence"})," is reached, ",(0,s.jsx)(n.strong,{children:"notany"})," returns ",(0,s.jsx)(n.em,{children:"true"}),". Thus, ",(0,s.jsx)(n.strong,{children:"notany"})," returns ",(0,s.jsx)(n.em,{children:"true"})," if and only if it is not the case that any invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"notevery"})," returns ",(0,s.jsx)(n.em,{children:"true"})," as soon as any invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"false"}),". If the end of a ",(0,s.jsx)(n.em,{children:"sequence"})," is reached, ",(0,s.jsx)(n.strong,{children:"notevery"})," returns ",(0,s.jsx)(n.em,{children:"false"}),". Thus, ",(0,s.jsx)(n.strong,{children:"notevery"})," returns ",(0,s.jsx)(n.em,{children:"true"})," if and only if it is not the case that every invocation of ",(0,s.jsx)(n.em,{children:"predicate"})," returns ",(0,s.jsx)(n.em,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Data and Control"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:' \n\n(every #\u2019characterp "abc") \u2192 true \n\n(some #\u2019= \u2019(1 2 3 4 5) \u2019(5 4 3 2 1)) \u2192 true \n\n(notevery #\u2019&lt; \u2019(1 2 3 4) \u2019(5 6 7 8) \u2019(9 10 11 12)) \u2192 false \n\n(notany #\u2019&gt; \u2019(1 2 3 4) \u2019(5 6 7 8) \u2019(9 10 11 12)) \u2192 true \n\n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,s.jsxs)(n.p,{children:["Should signal ",(0,s.jsx)(n.strong,{children:"type-error"})," if its first argument is neither a ",(0,s.jsx)(n.em,{children:"symbol"})," nor a ",(0,s.jsx)(n.em,{children:"function"})," or if any subsequent argument is not a ",(0,s.jsx)(n.em,{children:"proper sequence"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Other exceptional situations are possible, depending on the nature of the ",(0,s.jsx)(n.em,{children:"predicate"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"and"}),", ",(0,s.jsx)(n.strong,{children:"or"}),", Section 3.6 (Traversal Rules and Side Effects)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["(notany ",(0,s.jsx)(n.em,{children:"predicate {sequence}"}),"*) ",(0,s.jsx)(n.em,{children:"\u2261"})," (not (some ",(0,s.jsx)(n.em,{children:"predicate {sequence}"}),"*))"]}),"\n",(0,s.jsxs)(n.p,{children:["(notevery ",(0,s.jsx)(n.em,{children:"predicate {sequence}"}),"*) ",(0,s.jsx)(n.em,{children:"\u2261"})," (not (every ",(0,s.jsx)(n.em,{children:"predicate {sequence}"}),"*))"]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const o={},d="every, some, notevery, notany",l={id:"chap-5/f-d-dictionary/every",title:"every, some, notevery, notany",description:"Expanded Reference: every, some, notevery, notany",source:"@site/docs/chap-5/f-d-dictionary/every.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/every",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/every",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/every.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"equalp",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/equalp"},next:{title:"fboundp",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/fboundp"}},a={},h=[{value:"Expanded Reference: every, some, notevery, notany",id:"expanded-reference-every-some-notevery-notany",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"every-some-notevery-notany",children:"every, some, notevery, notany"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-every-some-notevery-notany",children:"Expanded Reference: every, some, notevery, notany"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(every, some, notevery, notany )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var s=r(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);