"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[43731],{18481:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var r=s(85893),i=s(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{ClLinks:s,GlossaryTerm:c}=n;return s||d("ClLinks",!0),c||d("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"mask-field"})," ",(0,r.jsx)(s,{term:"accessor",children:(0,r.jsx)("i",{children:"Accessor"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{term:"mask-field",children:(0,r.jsx)("b",{children:"mask-field"})})," ",(0,r.jsx)(n.em,{children:"bytespec integer ! masked-integer"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"(setf (mask-field"})," ",(0,r.jsx)(n.em,{children:"bytespec place"}),"**)** ",(0,r.jsx)(n.em,{children:"new-masked-integer"}),"**)**"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"bytespec"}),"\u2014a ",(0,r.jsx)(c,{styled:!0,term:"byte specifier",children:(0,r.jsx)("i",{children:"byte specifier"})})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"integer"}),"\u2014an ",(0,r.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"masked-integer"}),", ",(0,r.jsx)(n.em,{children:"new-masked-integer"}),"\u2014a non-negative ",(0,r.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{term:"mask-field",children:(0,r.jsx)("b",{children:"mask-field"})})," performs a \u201cmask\u201d operation on ",(0,r.jsx)(n.em,{children:"integer"}),". It returns an ",(0,r.jsx)(n.em,{children:"integer"})," that has the same bits as ",(0,r.jsx)(n.em,{children:"integer"})," in the ",(0,r.jsx)(s,{term:"byte",children:(0,r.jsx)("i",{children:"byte"})})," specified by ",(0,r.jsx)(n.em,{children:"bytespec"}),", but that has zero-bits everywhere else."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{term:"setf",children:(0,r.jsx)("b",{children:"setf"})})," may be used with ",(0,r.jsx)(s,{term:"mask-field",children:(0,r.jsx)("b",{children:"mask-field"})})," to modify a byte within the ",(0,r.jsx)(n.em,{children:"integer"})," that is stored in a given ",(0,r.jsx)(s,{term:"place",children:(0,r.jsx)("i",{children:"place"})}),". The e\u21b5ect is to perform a ",(0,r.jsx)(s,{term:"deposit-field",children:(0,r.jsx)("b",{children:"deposit-field"})})," operation and then store the result back into the ",(0,r.jsx)(s,{term:"place",children:(0,r.jsx)("i",{children:"place"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(mask-field (byte 1 5) -1) *!* 32 \n(setq a 15) *!* 15 \n(mask-field (byte 2 0) a) *!* 3 \na *!* 15 \n(setf (mask-field (byte 2 0) a) 1) *!* 1 \na *!* 13 \n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{term:"byte",children:(0,r.jsx)("b",{children:"byte"})}),", ",(0,r.jsx)(s,{term:"ldb",children:(0,r.jsx)("b",{children:"ldb"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["(ldb ",(0,r.jsx)(n.em,{children:"bs"})," (mask-field ",(0,r.jsx)(n.em,{children:"bs n"}),")) ",(0,r.jsx)(n.em,{children:"\u2318"})," (ldb ",(0,r.jsx)(n.em,{children:"bs n"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["(logbitp ",(0,r.jsx)(n.em,{children:"j"})," (mask-field (byte ",(0,r.jsx)(n.em,{children:"s p"}),") ",(0,r.jsx)(n.em,{children:"n"}),"))"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2318"})," (and (>= ",(0,r.jsx)(n.em,{children:"j p"}),") (< ",(0,r.jsx)(n.em,{children:"j s"}),") (logbitp ",(0,r.jsx)(n.em,{children:"j n"}),"))"]}),"\n",(0,r.jsxs)(n.p,{children:["(mask-field ",(0,r.jsx)(n.em,{children:"bs n"}),") ",(0,r.jsx)(n.em,{children:"\u2318"})," (logand ",(0,r.jsx)(n.em,{children:"n"})," (dpb -1 ",(0,r.jsx)(n.em,{children:"bs"})," 0))"]})]})}function t(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const l={title:"mask-field"},a="mask-field",o={id:"chap-12/bc-c-dictionary/mask-field_accessor",title:"mask-field",description:"Expanded Reference: mask-field",source:"@site/docs/chap-12/bc-c-dictionary/mask-field_accessor.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/mask-field_accessor",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/mask-field_accessor",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/mask-field_accessor.md",tags:[],version:"current",frontMatter:{title:"mask-field"},sidebar:"tutorialSidebar",previous:{title:"make-random-state",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/make-random-state_function"},next:{title:"max, min",permalink:"/cl-language-reference/chap-12/bc-c-dictionary/max_min_function"}},h={},m=[{value:"Expanded Reference: mask-field",id:"expanded-reference-mask-field",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"mask-field",children:"mask-field"}),"\n","\n","\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-mask-field",children:"Expanded Reference: mask-field"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(mask-field )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>t});var r=s(67294);const i={},c=r.createContext(i);function t(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);