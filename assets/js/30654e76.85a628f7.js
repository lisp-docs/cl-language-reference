"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[50283],{62305:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var r=o(85893),n=o(11151);const s={},c="Readers for Method Metaobjects",d={id:"meta-object-protocol/readers-for-method-metaobjects",title:"Readers for Method Metaobjects",description:"Readers for Method Metaobjects",source:"@site/docs/meta-object-protocol/readers-for-method-metaobjects.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/readers-for-method-metaobjects",permalink:"/cl-language-reference/meta-object-protocol/readers-for-method-metaobjects",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/readers-for-method-metaobjects.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Readers for Generic Function Metaobjects",permalink:"/cl-language-reference/meta-object-protocol/readers-for-generic-function-metaobjects"},next:{title:"Readers for Slot Definition Metaobjects",permalink:"/cl-language-reference/meta-object-protocol/readers-for-slot-definition-metaobjects"}},i={},a=[{value:"Readers for Method Metaobjects",id:"readers-for-method-metaobjects-1",level:3},{value:"Functions",id:"functions",level:4},{value:"Methods",id:"methods",level:4}];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"readers-for-method-metaobjects",children:"Readers for Method Metaobjects"}),"\n",(0,r.jsx)(t.h3,{id:"readers-for-method-metaobjects-1",children:"Readers for Method Metaobjects"}),"\n",(0,r.jsxs)(t.p,{children:["The reader generic functions which simply return information associated with method metaobjects are presented together here in the format described under ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/readers-for-class-metaobjects",children:"``Readers for Class Metaobjects.''"})]}),"\n",(0,r.jsxs)(t.p,{children:["Each of these reader generic functions have the same syntax, accepting one required argument called ",(0,r.jsx)(t.em,{children:"method"}),", which must be a method metaobject; otherwise, an error is signaled. An error is also signaled if the method metaobject has not been initialized."]}),"\n",(0,r.jsx)(t.p,{children:"These generic functions can be called by the user or the implementation."}),"\n",(0,r.jsx)(t.p,{children:"For any of these generic functions which returns a list, such lists will not be mutated by the implementation. The results are undefined if a portable program allows such a list to be mutated."}),"\n",(0,r.jsx)(t.h4,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.p,{children:["Generic Function   ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/method-function",children:(0,r.jsx)(t.strong,{children:"method-function"})}),"\nGeneric Function   ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/method-generic-function",children:(0,r.jsx)(t.strong,{children:"method-generic-function"})}),"\nGeneric Function   ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/method-lambda-list",children:(0,r.jsx)(t.strong,{children:"method-lambda-list"})}),"\nGeneric Function   ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/method-specializers",children:(0,r.jsx)(t.strong,{children:"method-specializers"})}),"\nGeneric Function   ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/method-qualifiers",children:(0,r.jsx)(t.strong,{children:"method-qualifiers"})}),"\nGeneric Function   ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/accessor-method-slot-definition",children:(0,r.jsx)(t.strong,{children:"accessor-method-slot-definition"})})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h4,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.p,{children:"The specified methods for the method metaobject reader generic functions are presented below."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.p,{children:["Method   ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/method-function-standard-method",children:[(0,r.jsx)(t.strong,{children:"method-function"})," (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]}),"\nMethod   ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/method-lambda-list-standard-method",children:[(0,r.jsx)(t.strong,{children:"method-lambda-list"})," (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]}),"\nMethod   ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/method-specializers-standard-method",children:[(0,r.jsx)(t.strong,{children:"method-specializers"})," (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]}),"\nMethod   ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/method-qualifiers-standard-method",children:[(0,r.jsx)(t.strong,{children:"method-qualifiers"})," (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.p,{children:"No behavior is specified for these methods beyond that which is specified for their respective generic functions."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.p,{children:["Method   ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/method-generic-function-standard-method",children:[(0,r.jsx)(t.strong,{children:"method-generic-function"})," (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.p,{children:"No behavior is specified for this method beyond that which is specified for their respective generic functions."}),"\n",(0,r.jsxs)(t.p,{children:["The value returned by this method is maintained by ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/add-method-standard-generic-function-standard-method",children:[(0,r.jsx)(t.code,{children:"add-method"})," (",(0,r.jsx)(t.em,{children:"generic-function"})," standard-generic-function) (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]})," and ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/remove-method-standard-generic-function-standard-method",children:[(0,r.jsx)(t.code,{children:"remove-method"})," (",(0,r.jsx)(t.em,{children:"generic-function"})," standard-generic-function) (",(0,r.jsx)(t.em,{children:"method"})," standard-method)"]}),"."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.p,{children:["Method   ",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/accessor-method-slot-definition-standard-accessor-method",children:[(0,r.jsx)(t.strong,{children:"accessor-method-slot-definition"})," (",(0,r.jsx)(t.em,{children:"method"})," standard-accessor-method)"]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.p,{children:"No behavior is specified for this method beyond that which is specified for their respective generic functions."})]})}function l(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>d,a:()=>c});var r=o(67294);const n={},s=r.createContext(n);function c(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);