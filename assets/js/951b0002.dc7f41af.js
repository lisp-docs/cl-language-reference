"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[11570],{9379:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>x,frontMatter:()=>c,metadata:()=>a,toc:()=>m});var r=s(85893),o=s(11151);function l(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," ",(0,r.jsx)(n.em,{children:"Special Operator"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," (",(0,r.jsx)(n.em,{children:"&#123;"}),"(",(0,r.jsx)(n.em,{children:"symbol expansion"}),")",(0,r.jsx)(n.em,{children:"&#125;"}),"*) ",(0,r.jsx)(n.em,{children:"&#123;declaration&#125;"}),"* ",(0,r.jsx)(n.em,{children:"&#123;form&#125;"}),"*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"\u2192 &#123;result&#125;"}),"*"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"symbol"}),"\u2014a ",(0,r.jsx)(n.em,{children:"symbol"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"expansion"}),"\u2014a ",(0,r.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"declaration"}),"\u2014a ",(0,r.jsx)(n.strong,{children:"declare"})," ",(0,r.jsx)(n.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"forms"}),"\u2014an ",(0,r.jsx)(n.em,{children:"implicit progn"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"results"}),"\u2014the ",(0,r.jsx)(n.em,{children:"values"})," returned by the ",(0,r.jsx)(n.em,{children:"forms"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," provides a mechanism for affecting the ",(0,r.jsx)(n.em,{children:"macro expansion"})," environment for ",(0,r.jsx)(n.em,{children:"symbols"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," lexically establishes expansion functions for each of the ",(0,r.jsx)(n.em,{children:"symbol macros"})," named by ",(0,r.jsx)(n.em,{children:"symbols"}),". The only guaranteed property of an expansion ",(0,r.jsx)(n.em,{children:"function"})," for a ",(0,r.jsx)(n.em,{children:"symbol macro"})," is that when it is applied to the ",(0,r.jsx)(n.em,{children:"form"})," and the ",(0,r.jsx)(n.em,{children:"environment"})," it returns the correct expansion. (In particular, it is ",(0,r.jsx)(n.em,{children:"implementation-dependent"})," whether the expansion is conceptually stored in the expansion function, the ",(0,r.jsx)(n.em,{children:"environment"}),", or both.)"]}),"\n",(0,r.jsxs)(n.p,{children:["Each reference to ",(0,r.jsx)(n.em,{children:"symbol"})," as a variable within the lexical ",(0,r.jsx)(n.em,{children:"scope"})," of ",(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," is expanded by the normal macro expansion process; see Section 3.1.2.1.1 (Symbols as Forms). The expansion of a symbol macro is subject to further macro expansion in the same lexical environment as the symbol macro invocation, exactly analogous to normal ",(0,r.jsx)(n.em,{children:"macros"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Exactly the same ",(0,r.jsx)(n.em,{children:"declarations"})," are allowed as for ",(0,r.jsx)(n.strong,{children:"let"})," with one exception: ",(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," signals an error if a ",(0,r.jsx)(n.strong,{children:"special"})," declaration names one of the ",(0,r.jsx)(n.em,{children:"symbols"})," being defined by ",(0,r.jsx)(n.strong,{children:"symbol-macrolet"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.em,{children:"forms"})," of the ",(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," form are expanded, any use of ",(0,r.jsx)(n.strong,{children:"setq"})," to set the value of one of the specified variables is treated as if it were a ",(0,r.jsx)(n.strong,{children:"setf"}),". ",(0,r.jsx)(n.strong,{children:"psetq"})," of a ",(0,r.jsx)(n.em,{children:"symbol"})," defined as a symbol macro is treated as if it were a ",(0,r.jsx)(n.strong,{children:"psetf"}),", and ",(0,r.jsx)(n.strong,{children:"multiple-value-setq"})," is treated as if it were a ",(0,r.jsx)(n.strong,{children:"setf"})," of ",(0,r.jsx)(n.strong,{children:"values"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The use of ",(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," can be shadowed by ",(0,r.jsx)(n.strong,{children:"let"}),". In other words, ",(0,r.jsx)(n.strong,{children:"symbol-macrolet"})," only substitutes for occurrences of ",(0,r.jsx)(n.em,{children:"symbol"})," that would be in the ",(0,r.jsx)(n.em,{children:"scope"})," of a lexical binding of ",(0,r.jsx)(n.em,{children:"symbol"})," surrounding the ",(0,r.jsx)(n.em,{children:"forms"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:" \n\n\n\n;;; The following is equivalent to \n\n\n\n;;; (list \u2019foo (let ((x \u2019bar)) x)), \n\n\n"})})]})}function t(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}const c={},i="symbol-macrolet",a={id:"chap-3/d-i-dictionary/symbolmacrolet",title:"symbol-macrolet",description:"Expanded Reference: symbol-macrolet",source:"@site/docs/chap-3/d-i-dictionary/symbolmacrolet.md",sourceDirName:"chap-3/d-i-dictionary",slug:"/chap-3/d-i-dictionary/symbolmacrolet",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/symbolmacrolet",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-3/d-i-dictionary/symbolmacrolet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"quote",permalink:"/cl-language-reference/docs/chap-3/d-i-dictionary/quote"},next:{title:"4. Types and Classes",permalink:"/cl-language-reference/docs/category/4-types-and-classes"}},d={},m=[{value:"Expanded Reference: symbol-macrolet",id:"expanded-reference-symbol-macrolet",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"symbol-macrolet",children:"symbol-macrolet"}),"\n","\n","\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-symbol-macrolet",children:"Expanded Reference: symbol-macrolet"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(symbol-macrolet )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var r=s(67294);const o={},l=r.createContext(o);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);