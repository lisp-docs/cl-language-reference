"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[69776],{32037:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var r=s(85893),c=s(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"case, ccase, ecase"})," ",(0,r.jsx)(n.em,{children:"Macro"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"case"})," ",(0,r.jsx)(n.em,{children:"keyform {\u2193normal-clause}"}),"* [",(0,r.jsx)(n.em,{children:"\u2193otherwise-clause"}),"] \u2192 {result}*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ccase"})," ",(0,r.jsx)(n.em,{children:"keyplace {\u2193normal-clause}"}),"* \u2192 {result}*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ecase"})," ",(0,r.jsx)(n.em,{children:"keyform {\u2193normal-clause}"}),"* \u2192 {result}*"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"normal-clause::"}),"=(",(0,r.jsx)(n.em,{children:"keys {form}"}),"*)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"otherwise-clause::"}),"=(",(0,r.jsx)(n.em,{children:"{otherwise | t} {form}"}),"*)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"clause::"}),"=",(0,r.jsx)(n.em,{children:"normal-clause | otherwise-clause"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"keyform"}),"\u2014a ",(0,r.jsx)(n.em,{children:"form"}),"; evaluated to produce a ",(0,r.jsx)(n.em,{children:"test-key"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"keyplace"}),"\u2014a ",(0,r.jsx)(n.em,{children:"form"}),"; evaluated initially to produce a ",(0,r.jsx)(n.em,{children:"test-key"}),". Possibly also used later as a ",(0,r.jsx)(n.em,{children:"place"})," if no ",(0,r.jsx)(n.em,{children:"keys"})," match."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"test-key"}),"\u2014an object produced by evaluating ",(0,r.jsx)(n.em,{children:"keyform"})," or ",(0,r.jsx)(n.em,{children:"keyplace"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"keys"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"list"})," of ",(0,r.jsx)(n.em,{children:"objects"}),". In the case of ",(0,r.jsx)(n.strong,{children:"case"}),", the ",(0,r.jsx)(n.em,{children:"symbols"})," ",(0,r.jsx)(n.strong,{children:"t"})," and ",(0,r.jsx)(n.strong,{children:"otherwise"})," may not be used as the ",(0,r.jsx)(n.em,{children:"keys designator"})," . To refer to these ",(0,r.jsx)(n.em,{children:"symbols"})," by themselves as ",(0,r.jsx)(n.em,{children:"keys"}),", the designators (t) and (otherwise), respectively, must be used instead."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"forms"}),"\u2014an ",(0,r.jsx)(n.em,{children:"implicit progn"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"results"}),"\u2014the ",(0,r.jsx)(n.em,{children:"values"})," returned by the ",(0,r.jsx)(n.em,{children:"forms"})," in the matching ",(0,r.jsx)(n.em,{children:"clause"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:["These ",(0,r.jsx)(n.em,{children:"macros"})," allow the conditional execution of a body of ",(0,r.jsx)(n.em,{children:"forms"})," in a ",(0,r.jsx)(n.em,{children:"clause"})," that is selected by matching the ",(0,r.jsx)(n.em,{children:"test-key"})," on the basis of its identity."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"keyform"})," or ",(0,r.jsx)(n.em,{children:"keyplace"})," is ",(0,r.jsx)(n.em,{children:"evaluated"})," to produce the ",(0,r.jsx)(n.em,{children:"test-key"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Each of the ",(0,r.jsx)(n.em,{children:"normal-clauses"})," is then considered in turn. If the ",(0,r.jsx)(n.em,{children:"test-key"})," is the ",(0,r.jsx)(n.em,{children:"same"})," as any ",(0,r.jsx)(n.em,{children:"key"})," for that ",(0,r.jsx)(n.em,{children:"clause"}),", the ",(0,r.jsx)(n.em,{children:"forms"})," in that ",(0,r.jsx)(n.em,{children:"clause"})," are ",(0,r.jsx)(n.em,{children:"evaluated"})," as an ",(0,r.jsx)(n.em,{children:"implicit progn"}),", and the ",(0,r.jsx)(n.em,{children:"values"})," it returns are returned as the value of the ",(0,r.jsx)(n.strong,{children:"case"}),", ",(0,r.jsx)(n.strong,{children:"ccase"}),", or ",(0,r.jsx)(n.strong,{children:"ecase"})," ",(0,r.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["These ",(0,r.jsx)(n.em,{children:"macros"})," differ only in their ",(0,r.jsx)(n.em,{children:"behavior"})," when no ",(0,r.jsx)(n.em,{children:"normal-clause"})," matches; specifically: ",(0,r.jsx)(n.strong,{children:"case"})]}),"\n",(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.em,{children:"normal-clause"})," matches, and there is an ",(0,r.jsx)(n.em,{children:"otherwise-clause"}),", then that ",(0,r.jsx)(n.em,{children:"otherwise-clause"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"case, ccase, ecase"})}),"\n",(0,r.jsxs)(n.p,{children:["automatically matches; the ",(0,r.jsx)(n.em,{children:"forms"})," in that ",(0,r.jsx)(n.em,{children:"clause"})," are ",(0,r.jsx)(n.em,{children:"evaluated"})," as an ",(0,r.jsx)(n.em,{children:"implicit progn"}),", and the ",(0,r.jsx)(n.em,{children:"values"})," it returns are returned as the value of the ",(0,r.jsx)(n.strong,{children:"case"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If there is no ",(0,r.jsx)(n.em,{children:"otherwise-clause"}),", ",(0,r.jsx)(n.strong,{children:"case"})," returns ",(0,r.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ccase"})}),"\n",(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.em,{children:"normal-clause"})," matches, a ",(0,r.jsx)(n.em,{children:"correctable error"})," of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"type-error"})," is signaled. The offending datum is the ",(0,r.jsx)(n.em,{children:"test-key"})," and the expected type is ",(0,r.jsx)(n.em,{children:"type equivalent"})," to (member ",(0,r.jsx)(n.em,{children:"key1 key2"})," ...). The ",(0,r.jsx)(n.strong,{children:"store-value"})," ",(0,r.jsx)(n.em,{children:"restart"})," can be used to correct the error."]}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.strong,{children:"store-value"})," ",(0,r.jsx)(n.em,{children:"restart"})," is invoked, its ",(0,r.jsx)(n.em,{children:"argument"})," becomes the new ",(0,r.jsx)(n.em,{children:"test-key"}),", and is stored in ",(0,r.jsx)(n.em,{children:"keyplace"})," as if by (setf ",(0,r.jsx)(n.em,{children:"keyplace test-key"}),"). Then ",(0,r.jsx)(n.strong,{children:"ccase"})," starts over, considering each ",(0,r.jsx)(n.em,{children:"clause"})," anew."]}),"\n",(0,r.jsxs)(n.p,{children:["The subforms of ",(0,r.jsx)(n.em,{children:"keyplace"})," might be evaluated again if none of the cases holds."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ecase"})}),"\n",(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.em,{children:"normal-clause"})," matches, a ",(0,r.jsx)(n.em,{children:"non-correctable error"})," of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"type-error"})," is signaled. The offending datum is the ",(0,r.jsx)(n.em,{children:"test-key"})," and the expected type is ",(0,r.jsx)(n.em,{children:"type equivalent"})," to (member ",(0,r.jsx)(n.em,{children:"key1 key2"})," ...)."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that in contrast with ",(0,r.jsx)(n.strong,{children:"ccase"}),", the caller of ",(0,r.jsx)(n.strong,{children:"ecase"})," may rely on the fact that ",(0,r.jsx)(n.strong,{children:"ecase"})," does not return if a ",(0,r.jsx)(n.em,{children:"normal-clause"})," does not match."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:' \n\n(dolist (k \u2019(1 2 3 :four #\\v () t \u2019other)) \n\n(format t "&#126;S " \n\n(case k ((1 2) \u2019clause1) \n\n(3 \u2019clause2) \n\n(nil \u2019no-keys-so-never-seen) \n\n((nil) \u2019nilslot) \n\n((:four #\\v) \u2019clause4) \n\n((t) \u2019tslot) \n\n(otherwise \u2019others)))) \n\n\u25b7 CLAUSE1 CLAUSE1 CLAUSE2 CLAUSE4 CLAUSE4 NILSLOT TSLOT OTHERS \n\n\u2192 NIL \n\n(defun add-em (x) (apply #\u2019+ (mapcar #\u2019decode x))) \n\n\u2192 ADD-EM \n\n(defun decode (x) \n\n(ccase x \n\n((i uno) 1) \n\n((ii dos) 2) \n\n((iii tres) 3) \n\n((iv cuatro) 4))) \n\n\u2192 DECODE \n\nData and Control \n\n\n\n\n\n(add-em \u2019(uno iii)) \u2192 4 \n\n(add-em \u2019(uno iiii)) \n\n\u25b7 Error: The value of X, IIII, is not I, UNO, II, DOS, III, \n\n\u25b7 TRES, IV, or CUATRO. \n\n\u25b7 1: Supply a value to use instead. \n\n\u25b7 2: Return to Lisp Toplevel. \n\n\u25b7 Debug&gt; :CONTINUE 1 \n\n\u25b7 Value to evaluate and use for X: \u2019IV \n\n\u2192 5 \n\n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,r.jsxs)(n.p,{children:["The debugger might be entered. If the ",(0,r.jsx)(n.strong,{children:"store-value"})," ",(0,r.jsx)(n.em,{children:"restart"})," is invoked, the ",(0,r.jsx)(n.em,{children:"value"})," of ",(0,r.jsx)(n.em,{children:"keyplace"})," might be changed."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ccase"})," and ",(0,r.jsx)(n.strong,{children:"ecase"}),", since they might signal an error, are potentially affected by existing ",(0,r.jsx)(n.em,{children:"handlers"})," and ",(0,r.jsx)(n.strong,{children:"*debug-io*"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ccase"})," and ",(0,r.jsx)(n.strong,{children:"ecase"})," signal an error of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"type-error"})," if no ",(0,r.jsx)(n.em,{children:"normal-clause"})," matches."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"cond"}),", ",(0,r.jsx)(n.strong,{children:"typecase"}),", ",(0,r.jsx)(n.strong,{children:"setf"}),", Section 5.1 (Generalized Reference)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["(case ",(0,r.jsx)(n.em,{children:"test-key"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"{"}),"((",(0,r.jsx)(n.em,{children:"{key}"}),"*) ",(0,r.jsx)(n.em,{children:"{form}"}),"*)",(0,r.jsx)(n.em,{children:"}"}),"*)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u2261"})}),"\n",(0,r.jsxs)(n.p,{children:["(let ((#1=#",":g0001"," ",(0,r.jsx)(n.em,{children:"test-key"}),"))"]}),"\n",(0,r.jsxs)(n.p,{children:["(cond ",(0,r.jsx)(n.em,{children:"{"}),"((member #1# \u2019(",(0,r.jsx)(n.em,{children:"{key}"}),"*)) ",(0,r.jsx)(n.em,{children:"{form}"}),"*)",(0,r.jsx)(n.em,{children:"}"}),"*))"]}),"\n",(0,r.jsxs)(n.p,{children:["The specific error message used by ",(0,r.jsx)(n.strong,{children:"ecase"})," and ",(0,r.jsx)(n.strong,{children:"ccase"})," can vary between implementations. In situations where control of the specific wording of the error message is important, it is better to use ",(0,r.jsx)(n.strong,{children:"case"})," with an ",(0,r.jsx)(n.em,{children:"otherwise-clause"})," that explicitly signals an error with an appropriate message."]})]})}function t(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}const l={},a="case, ccase, ecase",d={id:"chap-5/f-d-dictionary/case",title:"case, ccase, ecase",description:"Expanded Reference: case, ccase, ecase",source:"@site/docs/chap-5/f-d-dictionary/case.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/case",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/case",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/case.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"call-arguments-limit",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/callargumentslimit"},next:{title:"catch",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/catch"}},h={},o=[{value:"Expanded Reference: case, ccase, ecase",id:"expanded-reference-case-ccase-ecase",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"case-ccase-ecase",children:"case, ccase, ecase"}),"\n","\n","\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-case-ccase-ecase",children:"Expanded Reference: case, ccase, ecase"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(case, ccase, ecase )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>t});var r=s(67294);const c={},i=r.createContext(c);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);