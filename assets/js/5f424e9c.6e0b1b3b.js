"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[62239],{37005:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>K,contentTitle:()=>H,default:()=>Y,frontMatter:()=>$,metadata:()=>J,toc:()=>Q});var s=t(85893),n=t(11151);function i(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"Lisp reader"})," takes ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," from a ",(0,s.jsx)(t,{term:"stream",children:(0,s.jsx)("i",{children:"stream"})}),", interprets them as a printed representation of an ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})}),", constructs that ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})}),", and returns it."]}),"\n",(0,s.jsxs)(r.p,{children:["The syntax described by this chapter is called the ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})}),". Operations are provided by Common Lisp so that various aspects of the syntax information represented by a ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})})," can be modified under program control; see Chapter 23 (Reader). Except as explicitly stated otherwise, the syntax used throughout this document is ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," ."]})]})}function c(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}function d(e){const r={code:"code",em:"em",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["Syntax information for use by the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," is embodied in an ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," called a ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})}),". Among other things, the ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})})," contains the association between ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," and ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax types"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["Figure 2\u20131 lists some ",(0,s.jsx)(t,{styled:!0,term:"defined name",children:(0,s.jsx)("i",{children:"defined names"})})," that are applicable to ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtables"})}),"."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.th,{children:"Defined Name"})})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*readtable*"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"readtable-case"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"copy-readtable"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"readtablep"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"get-dispatch-macro-character"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"set-dispatch-macro-character"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"get-macro-character"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"set-macro-character"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"make-dispatch-macro-character"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"set-syntax-from-char"})})})]})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Figure 2\u20131. Readtable defined names"})})]})}function l(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function h(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:i}=r;return t||x("DictionaryLink",!0),i||x("GlossaryTerm",!0),(0,s.jsxs)(r.p,{children:["Several ",(0,s.jsx)(i,{term:"readtable",children:(0,s.jsx)("i",{children:"readtables"})})," describing different syntaxes can exist, but at any given time only one, called the ",(0,s.jsx)(i,{styled:!0,term:"current readtable",children:(0,s.jsx)("i",{children:"current readtable"})}),", affects the way in which ",(0,s.jsx)(i,{term:"expression",children:(0,s.jsx)("i",{children:"expressions"})}),(0,s.jsx)("sub",{children:"2"})," are parsed into ",(0,s.jsx)(i,{term:"object",children:(0,s.jsx)("i",{children:"objects"})})," by the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," . The ",(0,s.jsx)(i,{styled:!0,term:"current readtable",children:(0,s.jsx)("i",{children:"current readtable"})})," in a given ",(0,s.jsx)(i,{styled:!0,term:"dynamic environment",children:(0,s.jsx)("i",{children:"dynamic environment"})})," is the ",(0,s.jsx)(i,{term:"value",children:(0,s.jsx)("i",{children:"value"})})," of ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("b",{children:"*readtable*"})})," in that ",(0,s.jsx)(i,{term:"environment",children:(0,s.jsx)("i",{children:"environment"})}),". To make a different ",(0,s.jsx)(i,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})})," become the ",(0,s.jsx)(i,{styled:!0,term:"current readtable",children:(0,s.jsx)("i",{children:"current readtable"})}),", ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("b",{children:"*readtable*"})})," can be ",(0,s.jsx)(r.em,{children:"assigned"})," or ",(0,s.jsx)(i,{term:"bound",children:(0,s.jsx)("i",{children:"bound"})}),"."]})}function a(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function x(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function j(e){const r={p:"p",...(0,n.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:i}=r;return t||m("DictionaryLink",!0),i||m("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"standard readtable",children:(0,s.jsx)("i",{children:"standard readtable"})})," conforms to ",(0,s.jsx)(i,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," . The consequences are undefined if an attempt is made to modify the ",(0,s.jsx)(i,{styled:!0,term:"standard readtable",children:(0,s.jsx)("i",{children:"standard readtable"})}),". To achieve the effect of altering or extending ",(0,s.jsx)(i,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," , a copy of the ",(0,s.jsx)(i,{styled:!0,term:"standard readtable",children:(0,s.jsx)("i",{children:"standard readtable"})})," can be created; see the ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," ",(0,s.jsx)(t,{term:"copy-readtable",children:(0,s.jsx)("b",{children:"copy-readtable"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(i,{styled:!0,term:"readtable case",children:(0,s.jsx)("i",{children:"readtable case"})})," of the ",(0,s.jsx)(i,{styled:!0,term:"standard readtable",children:(0,s.jsx)("i",{children:"standard readtable"})})," is ",":upcase","."]})]})}function o(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}function m(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function p(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(t,{styled:!0,term:"initial readtable",children:(0,s.jsx)("i",{children:"initial readtable"})})," is the ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})})," that is the ",(0,s.jsx)(t,{styled:!0,term:"current readtable",children:(0,s.jsx)("i",{children:"current readtable"})})," at the time when the ",(0,s.jsx)(r.em,{children:"Lisp image"})," starts. At that time, it conforms to ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," . The ",(0,s.jsx)(t,{styled:!0,term:"initial readtable",children:(0,s.jsx)("i",{children:"initial readtable"})})," is ",(0,s.jsx)(t,{term:"distinct",children:(0,s.jsx)("i",{children:"distinct"})})," from the ",(0,s.jsx)(t,{styled:!0,term:"standard readtable",children:(0,s.jsx)("i",{children:"standard readtable"})}),". It is permissible for a ",(0,s.jsx)(t,{styled:!0,term:"conforming program",children:(0,s.jsx)("i",{children:"conforming program"})})," to modify the ",(0,s.jsx)(t,{styled:!0,term:"initial readtable",children:(0,s.jsx)("i",{children:"initial readtable"})}),"."]})}function u(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function b(e){const r={code:"code",em:"em",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"Lisp reader"})," is influenced not only by the ",(0,s.jsx)(t,{styled:!0,term:"current readtable",children:(0,s.jsx)("i",{children:"current readtable"})}),", but also by various ",(0,s.jsx)(t,{styled:!0,term:"dynamic variable",children:(0,s.jsx)("i",{children:"dynamic variables"})}),". Figure 2\u20132 lists the ",(0,s.jsx)(t,{term:"variable",children:(0,s.jsx)("i",{children:"variables"})})," that influence the behavior of the ",(0,s.jsx)(r.em,{children:"Lisp reader"}),"."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.th,{children:"Variable"})})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*package*"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*read-default-float-format*"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*readtable*"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*read-base*"})})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*read-suppress*"})})})]})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Figure 2\u20132. Variables that influence the Lisp reader."})})]})}function y(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}function g(e){const r={code:"code",em:"em",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:i}=r;return t||v("DictionaryLink",!0),i||v("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["All ",(0,s.jsx)(i,{term:"implementation",children:(0,s.jsx)("i",{children:"implementations"})})," must support a ",(0,s.jsx)(r.em,{children:"character repertoire"})," called ",(0,s.jsx)(t,{term:"standard-char",children:(0,s.jsx)("b",{children:"standard-char"})}),"; ",(0,s.jsx)(i,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," that are members of that ",(0,s.jsx)(i,{term:"repertoire",children:(0,s.jsx)("i",{children:"repertoire"})})," are called ",(0,s.jsx)(i,{styled:!0,term:"standard character",children:(0,s.jsx)("i",{children:"standard characters"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(t,{term:"standard-char",children:(0,s.jsx)("b",{children:"standard-char"})})," ",(0,s.jsx)(i,{term:"repertoire",children:(0,s.jsx)("i",{children:"repertoire"})})," consists of the ",(0,s.jsx)(r.em,{children:"non-graphic character newline"}),", the ",(0,s.jsx)(r.em,{children:"graphic character space"}),", and the following additional ninety-four ",(0,s.jsx)(r.em,{children:"graphic characters"})," or their equivalents:"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Graphic ID"}),(0,s.jsx)(r.th,{children:"Glyph"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LA01"}),(0,s.jsx)(r.td,{children:"a"}),(0,s.jsx)(r.td,{children:"small a"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LA02"}),(0,s.jsx)(r.td,{children:"A"}),(0,s.jsx)(r.td,{children:"capital A"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LB01"}),(0,s.jsx)(r.td,{children:"b"}),(0,s.jsx)(r.td,{children:"small b"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LB02"}),(0,s.jsx)(r.td,{children:"B"}),(0,s.jsx)(r.td,{children:"capital B"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LC01"}),(0,s.jsx)(r.td,{children:"c"}),(0,s.jsx)(r.td,{children:"small c"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LC02"}),(0,s.jsx)(r.td,{children:"C"}),(0,s.jsx)(r.td,{children:"capital C"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LD01"}),(0,s.jsx)(r.td,{children:"d"}),(0,s.jsx)(r.td,{children:"small d"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LD02"}),(0,s.jsx)(r.td,{children:"D"}),(0,s.jsx)(r.td,{children:"capital D"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LE01"}),(0,s.jsx)(r.td,{children:"e"}),(0,s.jsx)(r.td,{children:"small e"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LE02"}),(0,s.jsx)(r.td,{children:"E"}),(0,s.jsx)(r.td,{children:"capital E"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LF01"}),(0,s.jsx)(r.td,{children:"f"}),(0,s.jsx)(r.td,{children:"small f"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LF02"}),(0,s.jsx)(r.td,{children:"F"}),(0,s.jsx)(r.td,{children:"capital F"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LG01"}),(0,s.jsx)(r.td,{children:"g"}),(0,s.jsx)(r.td,{children:"small g"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LG02"}),(0,s.jsx)(r.td,{children:"G"}),(0,s.jsx)(r.td,{children:"capital G"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LH01"}),(0,s.jsx)(r.td,{children:"h"}),(0,s.jsx)(r.td,{children:"small h"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LH02"}),(0,s.jsx)(r.td,{children:"H"}),(0,s.jsx)(r.td,{children:"capital H"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LI01"}),(0,s.jsx)(r.td,{children:"i"}),(0,s.jsx)(r.td,{children:"small i"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LI02"}),(0,s.jsx)(r.td,{children:"I"}),(0,s.jsx)(r.td,{children:"capital I"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LJ01"}),(0,s.jsx)(r.td,{children:"j"}),(0,s.jsx)(r.td,{children:"small j"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LJ02"}),(0,s.jsx)(r.td,{children:"J"}),(0,s.jsx)(r.td,{children:"capital J"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LK01"}),(0,s.jsx)(r.td,{children:"k"}),(0,s.jsx)(r.td,{children:"small k"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LK02"}),(0,s.jsx)(r.td,{children:"K"}),(0,s.jsx)(r.td,{children:"capital K"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LL01"}),(0,s.jsx)(r.td,{children:"l"}),(0,s.jsx)(r.td,{children:"small l"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LL02"}),(0,s.jsx)(r.td,{children:"L"}),(0,s.jsx)(r.td,{children:"capital L"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LM01"}),(0,s.jsx)(r.td,{children:"m"}),(0,s.jsx)(r.td,{children:"small m"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LM02"}),(0,s.jsx)(r.td,{children:"M"}),(0,s.jsx)(r.td,{children:"capital M"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LN01"}),(0,s.jsx)(r.td,{children:"n"}),(0,s.jsx)(r.td,{children:"small n"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LN02"}),(0,s.jsx)(r.td,{children:"N"}),(0,s.jsx)(r.td,{children:"capital N"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LO01"}),(0,s.jsx)(r.td,{children:"o"}),(0,s.jsx)(r.td,{children:"small o"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LO02"}),(0,s.jsx)(r.td,{children:"O"}),(0,s.jsx)(r.td,{children:"capital O"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LP01"}),(0,s.jsx)(r.td,{children:"p"}),(0,s.jsx)(r.td,{children:"small p"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LP02"}),(0,s.jsx)(r.td,{children:"P"}),(0,s.jsx)(r.td,{children:"capital P"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LQ01"}),(0,s.jsx)(r.td,{children:"q"}),(0,s.jsx)(r.td,{children:"small q"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LQ02"}),(0,s.jsx)(r.td,{children:"Q"}),(0,s.jsx)(r.td,{children:"capital Q"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LR01"}),(0,s.jsx)(r.td,{children:"r"}),(0,s.jsx)(r.td,{children:"small r"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LR02"}),(0,s.jsx)(r.td,{children:"R"}),(0,s.jsx)(r.td,{children:"capital R"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LS01"}),(0,s.jsx)(r.td,{children:"s"}),(0,s.jsx)(r.td,{children:"small s"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LS02"}),(0,s.jsx)(r.td,{children:"S"}),(0,s.jsx)(r.td,{children:"capital S"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LT01"}),(0,s.jsx)(r.td,{children:"t"}),(0,s.jsx)(r.td,{children:"small t"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LT02"}),(0,s.jsx)(r.td,{children:"T"}),(0,s.jsx)(r.td,{children:"capital T"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LU01"}),(0,s.jsx)(r.td,{children:"u"}),(0,s.jsx)(r.td,{children:"small u"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LU02"}),(0,s.jsx)(r.td,{children:"U"}),(0,s.jsx)(r.td,{children:"capital U"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LV01"}),(0,s.jsx)(r.td,{children:"v"}),(0,s.jsx)(r.td,{children:"small v"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LV02"}),(0,s.jsx)(r.td,{children:"V"}),(0,s.jsx)(r.td,{children:"capital V"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LW01"}),(0,s.jsx)(r.td,{children:"w"}),(0,s.jsx)(r.td,{children:"small w"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LW02"}),(0,s.jsx)(r.td,{children:"W"}),(0,s.jsx)(r.td,{children:"capital W"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LX01"}),(0,s.jsx)(r.td,{children:"x"}),(0,s.jsx)(r.td,{children:"small x"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LX02"}),(0,s.jsx)(r.td,{children:"X"}),(0,s.jsx)(r.td,{children:"capital X"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LY01"}),(0,s.jsx)(r.td,{children:"y"}),(0,s.jsx)(r.td,{children:"small y"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LY02"}),(0,s.jsx)(r.td,{children:"Y"}),(0,s.jsx)(r.td,{children:"capital Y"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LZ01"}),(0,s.jsx)(r.td,{children:"z"}),(0,s.jsx)(r.td,{children:"small z"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LZ02"}),(0,s.jsx)(r.td,{children:"Z"}),(0,s.jsx)(r.td,{children:"capital Z"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"(Figure 2\u20133. Standard Character Subrepertoire (Part 1 of 3: Latin Characters))"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Graphic ID"}),(0,s.jsx)(r.th,{children:"Glyph"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND01"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"digit 1"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND02"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"digit 2"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND03"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"digit 3"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND04"}),(0,s.jsx)(r.td,{children:"4"}),(0,s.jsx)(r.td,{children:"digit 4"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND05"}),(0,s.jsx)(r.td,{children:"5"}),(0,s.jsx)(r.td,{children:"digit 5"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND06"}),(0,s.jsx)(r.td,{children:"6"}),(0,s.jsx)(r.td,{children:"digit 6"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND07"}),(0,s.jsx)(r.td,{children:"7"}),(0,s.jsx)(r.td,{children:"digit 7"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND08"}),(0,s.jsx)(r.td,{children:"8"}),(0,s.jsx)(r.td,{children:"digit 8"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND09"}),(0,s.jsx)(r.td,{children:"9"}),(0,s.jsx)(r.td,{children:"digit 9"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ND10"}),(0,s.jsx)(r.td,{children:"0"}),(0,s.jsx)(r.td,{children:"digit 0"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"(Figure 2\u20134. Standard Character Subrepertoire (Part 2 of 3: Numeric Characters))"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Graphic ID"}),(0,s.jsx)(r.th,{children:"Glyph Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP02"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"!"})," exclamation mark"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SC03"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"$"})," dollar sign"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP04"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:'"'})," quotation mark, or double quote"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP05"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"\u2019"})," apostrophe, or [single] quote"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP06"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"("})," left parenthesis, or open parenthesis"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP07"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:")"})," right parenthesis, or close parenthesis"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP08"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:","})," comma"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP09"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"_"})," low line, or underscore"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP10"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"-"})," hyphen, or minus [sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP11"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"."})," full stop, period, or dot"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP12"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"/"})," solidus, or slash"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP13"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:":"})," colon"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP14"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:";"})," semicolon"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SP15"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"?"})," question mark"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SA01"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"+"})," plus [sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SA03"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"<"})," less-than [sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SA04"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"="})," equals [sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SA05"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:">"})," greater-than [sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM01"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"#"})," number sign, or sharp[sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM02"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"%"})," percent [sign]"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM03"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"&"})," ampersand"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM04"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"*"})," asterisk, or star"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM05"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"@"})," commercial at, or at-sign"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM06"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"["})," left [square] bracket"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM07"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"\\"})," reverse solidus, or backslash"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM08"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"]"})," right [square] bracket"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM11"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"{"})," left curly bracket, or left brace"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM13"}),(0,s.jsx)(r.td,{children:"`"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SM14"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"}"})," right curly bracket, or right brace"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SD13"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"\u2018"})," grave accent, or backquote"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SD15"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)("i",{children:(0,s.jsx)("sup",{children:(0,s.jsx)(r.code,{children:"^"})})})," circumflex accent"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SD19"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"~"})," tilde"]})]})]})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.th,{style:{textAlign:"left"},children:(0,s.jsx)(r.strong,{children:"Graphic ID Glyph Description"})})})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP02 ! exclamation mark"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SC03 $ dollar sign"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:'SP04 " quotation mark, or double quote SP05 \u2019 apostrophe, or [single] quote'})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP06 ( left parenthesis, or open parenthesis SP07 ) right parenthesis, or close parenthesis SP08 , comma"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP09 low line, or underscore"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP10 - hyphen, or minus [sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP11 . full stop, period, or dot"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP12 / solidus, or slash"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP13 : colon"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP14 ; semicolon"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SP15 ? question mark"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SA01 + plus [sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SA03 < less-than [sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SA04 = equals [sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SA05 > greater-than [sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM01 # number sign, or sharp[sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM02 % percent [sign]"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM03 & ampersand"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM04 * asterisk, or star"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM05 @ commercial at, or at-sign"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM06 [ left [square] bracket"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM07 \\ reverse solidus, or backslash"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM08 ] right [square] bracket"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM11 { left curly bracket, or left brace"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM13"})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SM14 } right curly bracket, or right brace SD13 \u2018 grave accent, or backquote"})}),(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{style:{textAlign:"left"},children:["SD15 ",(0,s.jsx)("i",{children:(0,s.jsx)("sup",{children:"\u2227"})})," circumflex accent"]})}),(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{style:{textAlign:"left"},children:"SD19 ~ tilde"})})]})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"(Figure 2\u20135. Standard Character Subrepertoire (Part 3 of 3: Special Characters))"})}),"\n",(0,s.jsx)(r.p,{children:"The graphic IDs are not used within Common Lisp, but are provided for cross-reference purposes with ISO 6937/2. Note that the first letter of the graphic ID categorizes the character as follows: L\u2014Latin, N\u2014Numeric, S\u2014Special.  The table above shows only a portion of the complete character set."})]})}function f(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function v(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function w(e){const r={code:"code",em:"em",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"Lisp reader"})," constructs an ",(0,s.jsx)(t,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," from the input text by interpreting each ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," according to its ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})}),". The ",(0,s.jsx)(r.em,{children:"Lisp reader"})," cannot accept as input everything that the ",(0,s.jsx)(r.em,{children:"Lisp printer"})," produces, and the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," has features that are not used by the ",(0,s.jsx)(r.em,{children:"Lisp printer"}),". The ",(0,s.jsx)(r.em,{children:"Lisp reader"})," can be used as a lexical analyzer for a more general user-written parser."]}),"\n",(0,s.jsxs)(r.p,{children:["When the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," is invoked, it reads a single character from the ",(0,s.jsx)(r.em,{children:"input stream"})," and dispatches according to the ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})})," of that ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," . Every ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," that can appear in the ",(0,s.jsx)(r.em,{children:"input stream"})," is of one of the ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax types"})})," shown in Figure 2\u20136."]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Figure 2\u20136. Possible Character Syntax Types"})}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.p,{children:["| Syntax Type |\n|---|---|\n| constituent |\n| macro character |\n| single escape |\n| multiple escape |\n| whitespace",(0,s.jsx)("sub",{children:"2"})," |\n| invalid |"]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})})," of a ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," in a ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})})," determines how that character is interpreted by the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," while that ",(0,s.jsx)(t,{term:"readtable",children:(0,s.jsx)("i",{children:"readtable"})})," is the ",(0,s.jsx)(t,{styled:!0,term:"current readtable",children:(0,s.jsx)("i",{children:"current readtable"})}),". At any given time, every character has exactly one ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})}),"."]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.p,{children:["Figure 2\u20137 lists the ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})})," of each ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," in ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})}),"."]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Character"}),(0,s.jsx)(r.th,{children:"Syntax Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Backspace"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"0\u20139"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Tab"})}),(0,s.jsxs)(r.td,{children:["whitespace",(0,s.jsx)("sub",{children:"2"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:":"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Newline"})}),(0,s.jsxs)(r.td,{children:["whitespace",(0,s.jsx)("sub",{children:"2"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:";"})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Linefeed"})}),(0,s.jsxs)(r.td,{children:["whitespace",(0,s.jsx)("sub",{children:"2"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"<"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"="})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:">"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"?"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"!"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:'"'})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"A\u2013Z"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"#"})}),(0,s.jsx)(r.td,{children:"non-terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"["})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"$"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"\\"})}),(0,s.jsx)(r.td,{children:"single escape"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"%"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"]"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"&"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"\u2019"})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"("})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"\u2018"})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:")"})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"a\u2013z"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"*"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"{"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"+"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"`"}),(0,s.jsx)(r.td,{children:"`"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:","})}),(0,s.jsx)(r.td,{children:"terminating macro char"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"}"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"-"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"~"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"."})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Rubout"})}),(0,s.jsx)(r.td,{children:"constituent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"/"})}),(0,s.jsx)(r.td,{children:"constituent"})]})]})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.th,{style:{textAlign:"left"},children:(0,s.jsx)(r.strong,{children:"character syntax type character syntax type"})})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{style:{textAlign:"left"},children:["Backspace ",(0,s.jsx)("i",{children:"constituent"})," 0\u20139 ",(0,s.jsx)("i",{children:"constituent"})," Tab ",(0,s.jsx)("i",{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," : ",(0,s.jsx)("i",{children:"constituent"})," Newline ",(0,s.jsx)("i",{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," ; ",(0,s.jsx)("i",{children:"terminating macro char"})," Linefeed ",(0,s.jsx)("i",{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," < ",(0,s.jsx)("i",{children:"constituent"})," Page ",(0,s.jsx)("i",{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," = ",(0,s.jsx)("i",{children:"constituent"})," Return ",(0,s.jsx)("i",{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," > ",(0,s.jsx)("i",{children:"constituent"})," Space ",(0,s.jsx)("i",{children:"whitespace"}),(0,s.jsx)("sub",{children:"2"})," ? ",(0,s.jsx)("i",{children:"constituent"}),"* ! ",(0,s.jsx)("i",{children:"constituent"}),"* @ ",(0,s.jsx)("i",{children:"constituent"}),' " ',(0,s.jsx)("i",{children:"terminating macro char"})," A\u2013Z ",(0,s.jsx)("i",{children:"constituent"})," # ",(0,s.jsx)("i",{children:"non-terminating macro char"})," [ ",(0,s.jsx)("i",{children:"constituent"}),"* $ ",(0,s.jsx)("i",{children:"constituent"})," \\ ",(0,s.jsx)("i",{children:"single escape"})," % ",(0,s.jsx)("i",{children:"constituent"})," ] ",(0,s.jsx)("i",{children:"constituent"}),"* & ",(0,s.jsxs)("i",{children:["constituent ",(0,s.jsx)("sup",{children:"\u2227"})," constituent"]})," \u2019 ",(0,s.jsx)("i",{children:"terminating macro char constituent"})," ( ",(0,s.jsx)("i",{children:"terminating macro char"})," \u2018 ",(0,s.jsx)("i",{children:"terminating macro char"})," ) ",(0,s.jsx)("i",{children:"terminating macro char"})," a\u2013z ",(0,s.jsx)("i",{children:"constituent"})," * ",(0,s.jsx)("i",{children:"constituent"})," { ",(0,s.jsx)("i",{children:"constituent"}),"* + ",(0,s.jsx)("i",{children:"constituent"})]})})})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Figure 2\u20137. Character Syntax Types in Standard Syntax"})}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.p,{children:["The characters marked with an asterisk (*) are initially ",(0,s.jsx)(t,{term:"constituent",children:(0,s.jsx)("i",{children:"constituents"})}),", but they are not used in any standard Common Lisp notations. These characters are explicitly reserved to the ",(0,s.jsx)(t,{term:"programmer",children:(0,s.jsx)("i",{children:"programmer"})})," . ",(0,s.jsx)(r.code,{children:"~"})," is not used in Common Lisp, and reserved to implementors. ",(0,s.jsx)(r.code,{children:"$"})," and ",(0,s.jsx)(r.code,{children:"%"})," are ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})}),", but are not used in the names of any standard Common Lisp ",(0,s.jsx)(t,{styled:!0,term:"defined name",children:(0,s.jsx)("i",{children:"defined names"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{term:"whitespace",children:(0,s.jsx)("i",{children:"Whitespace"})}),(0,s.jsx)("sub",{children:"2"})," characters serve as separators but are otherwise ignored. ",(0,s.jsx)(t,{term:"constituent",children:(0,s.jsx)("i",{children:"Constituent"})})," and ",(0,s.jsx)(r.em,{children:"escape characters"})," are accumulated to make a ",(0,s.jsx)(t,{term:"token",children:(0,s.jsx)("i",{children:"token"})}),", which is then interpreted as a ",(0,s.jsx)(t,{term:"number",children:(0,s.jsx)("i",{children:"number"})})," or ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})}),". ",(0,s.jsx)(t,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"Macro characters"})})," trigger the invocation of ",(0,s.jsx)(t,{term:"function",children:(0,s.jsx)("i",{children:"functions"})})," (possibly user-supplied) that can perform arbitrary parsing actions. ",(0,s.jsx)(t,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"Macro characters"})})," are divided into two kinds, ",(0,s.jsx)(t,{term:"terminating",children:(0,s.jsx)("i",{children:"terminating"})})," and ",(0,s.jsx)(r.em,{children:"non"})," ",(0,s.jsx)(t,{term:"terminating",children:(0,s.jsx)("i",{children:"terminating"})}),", depending on whether or not they terminate a ",(0,s.jsx)(t,{term:"token",children:(0,s.jsx)("i",{children:"token"})}),". The following are descriptions of each kind of ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})}),"."]}),"\n",(0,s.jsx)("br",{})]})}function k(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(w,{...e})}):w(e)}function S(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Constituent characters"})," are used in ",(0,s.jsx)(t,{term:"token",children:(0,s.jsx)("i",{children:"tokens"})}),". A ",(0,s.jsx)(t,{term:"token",children:(0,s.jsx)("i",{children:"token"})})," is a representation of a ",(0,s.jsx)(t,{term:"number",children:(0,s.jsx)("i",{children:"number"})})," or a ",(0,s.jsx)(t,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})}),". Examples of ",(0,s.jsx)(r.em,{children:"constituent characters"})," are letters and digits."]}),"\n",(0,s.jsxs)(r.p,{children:["Letters in symbol names are sometimes converted to letters in the opposite ",(0,s.jsx)(t,{term:"case",children:(0,s.jsx)("i",{children:"case"})})," when the name is read; see Section 23.1.2 (Effect of Readtable Case on the Lisp Reader). ",(0,s.jsx)(t,{term:"case",children:(0,s.jsx)("i",{children:"Case"})})," conversion can be suppressed by the use of ",(0,s.jsx)(t,{styled:!0,term:"single escape",children:(0,s.jsx)("i",{children:"single escape"})})," or ",(0,s.jsx)(t,{styled:!0,term:"multiple escape",children:(0,s.jsx)("i",{children:"multiple escape"})})," characters."]})]})}function L(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(S,{...e})}):S(e)}function T(e){const r={em:"em",p:"p",strong:"strong",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["Every ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," has one or more ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent traits"})})," that define how the ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," is to be interpreted by the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," when the ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," is a ",(0,s.jsx)(r.em,{children:"constituent character"})," . These ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent traits"})})," are ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),", digit, ",(0,s.jsx)(t,{styled:!0,term:"package marker",children:(0,s.jsx)("i",{children:"package marker"})})," , plus sign, minus sign, dot, decimal point, ",(0,s.jsx)(t,{styled:!0,term:"ratio marker",children:(0,s.jsx)("i",{children:"ratio marker"})})," , ",(0,s.jsx)(t,{styled:!0,term:"exponent marker",children:(0,s.jsx)("i",{children:"exponent marker"})})," , and ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),". Figure 2\u20138 shows the ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent traits"})})," of the ",(0,s.jsx)(t,{styled:!0,term:"standard character",children:(0,s.jsx)("i",{children:"standard characters"})})," and of certain ",(0,s.jsx)(r.em,{children:"semi-standard characters"}),"; no mechanism is provided for changing the ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent trait"})})," of a ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," . Any ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," with the alphadigit ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent trait"})})," in that figure is a digit if the ",(0,s.jsx)(t,{styled:!0,term:"current input base",children:(0,s.jsx)("i",{children:"current input base"})})," is greater than that character\u2019s digit value, otherwise the ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," is ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),". Any ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," quoted by a ",(0,s.jsx)(t,{styled:!0,term:"single escape",children:(0,s.jsx)("i",{children:"single escape"})})," is treated as an ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," constituent, regardless of its normal syntax."]}),"\n",(0,s.jsxs)(r.p,{children:["|",(0,s.jsxs)("p",{children:[(0,s.jsx)(r.strong,{children:"constituent traits constituent traits"})," "]}),(0,s.jsx)("p",{children:(0,s.jsx)(r.strong,{children:"character character"})}),"|"]}),"\n",(0,s.jsx)(r.p,{children:"| :- |"}),"\n",(0,s.jsxs)(r.p,{children:["|",(0,s.jsxs)("p",{children:["Backspace ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})})," { ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," "]}),(0,s.jsxs)("p",{children:["Tab ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),"* } ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," "]}),(0,s.jsxs)("p",{children:["Newline ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),"* + ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),", plus sign Linefeed ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),"* - ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),", minus sign Page ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),"* . ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),", dot, decimal point Return ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),"* / ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),", ",(0,s.jsx)(t,{styled:!0,term:"ratio marker",children:(0,s.jsx)("i",{children:"ratio marker"})})," Space ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})}),"* A, a alphadigit "]}),(0,s.jsxs)("p",{children:["! ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," B, b alphadigit "]}),(0,s.jsxs)("p",{children:['" ',(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* C, c alphadigit "]}),(0,s.jsxs)("p",{children:["# ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* D, d alphadigit, double-float ",(0,s.jsx)(t,{styled:!0,term:"exponent marker",children:(0,s.jsx)("i",{children:"exponent marker"})})," $ ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," E, e alphadigit, float ",(0,s.jsx)(t,{styled:!0,term:"exponent marker",children:(0,s.jsx)("i",{children:"exponent marker"})})," % ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," F, f alphadigit, single-float ",(0,s.jsx)(t,{styled:!0,term:"exponent marker",children:(0,s.jsx)("i",{children:"exponent marker"})})," & ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," G, g alphadigit "]}),(0,s.jsxs)("p",{children:["\u2019 ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* H, h alphadigit "]}),(0,s.jsxs)("p",{children:["( ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* I, i alphadigit "]}),(0,s.jsxs)("p",{children:[") ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* J, j alphadigit "]}),(0,s.jsxs)("p",{children:["* ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," K, k alphadigit "]}),(0,s.jsxs)("p",{children:[", ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* L, l alphadigit, long-float ",(0,s.jsx)(t,{styled:!0,term:"exponent marker",children:(0,s.jsx)("i",{children:"exponent marker"})})," 0-9 alphadigit M, m alphadigit "]}),(0,s.jsxs)("p",{children:[": ",(0,s.jsx)(t,{styled:!0,term:"package marker",children:(0,s.jsx)("i",{children:"package marker"})})," N, n alphadigit "]}),(0,s.jsxs)("p",{children:["; ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* O, o alphadigit "]}),(0,s.jsxs)("p",{children:["< ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," P, p alphadigit "]}),(0,s.jsxs)("p",{children:["= ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," Q, q alphadigit "]}),(0,s.jsxs)("p",{children:["> ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," R, r alphadigit "]}),(0,s.jsxs)("p",{children:["? ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," S, s alphadigit, short-float ",(0,s.jsx)(t,{styled:!0,term:"exponent marker",children:(0,s.jsx)("i",{children:"exponent marker"})})," @ ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," T, t alphadigit "]}),(0,s.jsxs)("p",{children:["[ ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," U, u alphadigit "]}),(0,s.jsxs)("p",{children:["\\ ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* V, v alphadigit "]}),(0,s.jsxs)("p",{children:["] ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," W, w alphadigit "]}),(0,s.jsxs)("p",{children:[(0,s.jsxs)("i",{children:[(0,s.jsx)("sup",{children:"\u2227"})," alphabetic"]}),(0,s.jsx)("sub",{children:"2"})," X, x alphadigit "]}),(0,s.jsxs)("p",{children:[(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," Y, y alphadigit "]}),(0,s.jsxs)("p",{children:["\u2018 ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* Z, z alphadigit "]}),(0,s.jsxs)("p",{children:["| ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"}),"* Rubout ",(0,s.jsx)(t,{term:"invalid",children:(0,s.jsx)("i",{children:"invalid"})})," "]}),(0,s.jsxs)("p",{children:["~ ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})]}),"|"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Figure 2\u20138. Constituent Traits of Standard Characters and Semi-Standard Characters"})}),"\n",(0,s.jsxs)(r.p,{children:["The interpretations in this table apply only to ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," whose ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax type"})})," is ",(0,s.jsx)(t,{term:"constituent",children:(0,s.jsx)("i",{children:"constituent"})}),". Entries marked with an asterisk (*) are normally ",(0,s.jsx)(r.em,{children:"shadowed"})," ",(0,s.jsx)("sub",{children:"2"})," because the indicated ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," are of ",(0,s.jsx)(r.em,{children:"syntax type whitespace"}),(0,s.jsx)("sub",{children:"2"}),", ",(0,s.jsx)(t,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro character"})})," , ",(0,s.jsx)(t,{styled:!0,term:"single escape",children:(0,s.jsx)("i",{children:"single escape"})}),", or ",(0,s.jsx)(t,{styled:!0,term:"multiple escape",children:(0,s.jsx)("i",{children:"multiple escape"})}),"; these ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent traits"})})," apply to them only if their ",(0,s.jsx)(t,{styled:!0,term:"syntax type",children:(0,s.jsx)("i",{children:"syntax types"})})," are changed to ",(0,s.jsx)(t,{term:"constituent",children:(0,s.jsx)("i",{children:"constituent"})}),"."]})]})}function C(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}function A(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:i}=r;return t||D("DictionaryLink",!0),i||D("GlossaryTerm",!0),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(i,{term:"character",children:(0,s.jsx)("i",{children:"Characters"})})," with the ",(0,s.jsx)(r.em,{children:"constituent trait invalid"})," cannot ever appear in a ",(0,s.jsx)(i,{term:"token",children:(0,s.jsx)("i",{children:"token"})})," except under the control of a ",(0,s.jsx)(r.em,{children:"single escape character"})," . If an ",(0,s.jsx)(r.em,{children:"invalid character"})," is encountered while an ",(0,s.jsx)(i,{term:"object",children:(0,s.jsx)("i",{children:"object"})})," is being read, an error of ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(t,{term:"reader-error",children:(0,s.jsx)("b",{children:"reader-error"})})," is signaled. If an ",(0,s.jsx)(r.em,{children:"invalid character"})," is preceded by a ",(0,s.jsx)(r.em,{children:"single escape character"})," , it is treated as an ",(0,s.jsx)(i,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(i,{term:"constituent",children:(0,s.jsx)("i",{children:"constituent"})})," instead."]})}function E(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(A,{...e})}):A(e)}function D(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function G(e){const r={em:"em",p:"p",strong:"strong",...(0,n.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:i}=r;return t||M("DictionaryLink",!0),i||M("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["When the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," encounters a ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro character"})})," on an ",(0,s.jsx)(r.em,{children:"input stream"}),", special parsing of subsequent ",(0,s.jsx)(i,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," on the ",(0,s.jsx)(r.em,{children:"input stream"})," is performed."]}),"\n",(0,s.jsxs)(r.p,{children:["A ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro character"})})," has an associated ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," called a ",(0,s.jsx)(i,{styled:!0,term:"reader macro function",children:(0,s.jsx)("i",{children:"reader macro function"})})," that implements its specialized parsing behavior. An association of this kind can be established or modified under control of a ",(0,s.jsx)(i,{styled:!0,term:"conforming program",children:(0,s.jsx)("i",{children:"conforming program"})})," by using the ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"functions"})})," ",(0,s.jsx)(t,{term:"set-macro-character",children:(0,s.jsx)("b",{children:"set-macro-character"})})," and ",(0,s.jsx)(r.strong,{children:"set-dispatch-macro-character"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["Upon encountering a ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro character"})})," , the ",(0,s.jsx)(r.em,{children:"Lisp reader"})," calls its ",(0,s.jsx)(i,{styled:!0,term:"reader macro function",children:(0,s.jsx)("i",{children:"reader macro function"})}),", which parses one specially formatted object from the ",(0,s.jsx)(r.em,{children:"input stream"}),". The ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," either returns the parsed ",(0,s.jsx)(i,{term:"object",children:(0,s.jsx)("i",{children:"object"})}),", or else it returns no ",(0,s.jsx)(i,{term:"value",children:(0,s.jsx)("i",{children:"values"})})," to indicate that the characters scanned by the ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," are being ignored (",(0,s.jsx)(r.em,{children:"e.g."}),", in the case of a comment). Examples of ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro characters"})})," are ",(0,s.jsx)(i,{term:"backquote",children:(0,s.jsx)("i",{children:"backquote"})}),", ",(0,s.jsx)(i,{term:"single-quote",children:(0,s.jsx)("i",{children:"single-quote"})}),", ",(0,s.jsx)(i,{term:"left-parenthesis",children:(0,s.jsx)("i",{children:"left-parenthesis"})}),", and ",(0,s.jsx)(i,{term:"right-parenthesis",children:(0,s.jsx)("i",{children:"right-parenthesis"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["A ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro character"})})," is either ",(0,s.jsx)(i,{term:"terminating",children:(0,s.jsx)("i",{children:"terminating"})})," or ",(0,s.jsx)(i,{term:"non-terminating",children:(0,s.jsx)("i",{children:"non-terminating"})}),". The difference between ",(0,s.jsx)(i,{term:"terminating",children:(0,s.jsx)("i",{children:"terminating"})})," and ",(0,s.jsx)(r.em,{children:"non-terminating macro characters"})," lies in what happens when such characters occur in the middle of a ",(0,s.jsx)(i,{term:"token",children:(0,s.jsx)("i",{children:"token"})}),". If a ",(0,s.jsx)(r.em,{children:"non-terminating macro character"})," occurs in the middle of a ",(0,s.jsx)(i,{term:"token",children:(0,s.jsx)("i",{children:"token"})}),", the ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," associated with the ",(0,s.jsx)(r.em,{children:"non-terminating macro character"})," is not called, and the ",(0,s.jsx)(r.em,{children:"non terminating macro character"})," does not terminate the ",(0,s.jsx)(i,{term:"token",children:(0,s.jsx)("i",{children:"token"})}),"\u2019s name; it becomes part of the name as if the ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro character"})})," were really a constituent character. A ",(0,s.jsx)(r.em,{children:"terminating macro character"})," terminates any ",(0,s.jsx)(i,{term:"token",children:(0,s.jsx)("i",{children:"token"})}),", and its associated ",(0,s.jsx)(i,{styled:!0,term:"reader macro function",children:(0,s.jsx)("i",{children:"reader macro function"})})," is called no matter where the ",(0,s.jsx)(i,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," appears. The only ",(0,s.jsx)(r.em,{children:"non-terminating macro character"})," in ",(0,s.jsx)(i,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," is ",(0,s.jsx)(i,{term:"sharpsign",children:(0,s.jsx)("i",{children:"sharpsign"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["If a ",(0,s.jsx)(i,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," is a ",(0,s.jsx)(r.em,{children:"dispatching macro character C"}),(0,s.jsx)("sub",{children:"1"}),", its ",(0,s.jsx)(i,{styled:!0,term:"reader macro function",children:(0,s.jsx)("i",{children:"reader macro function"})})," is a ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," supplied by the ",(0,s.jsx)(i,{term:"implementation",children:(0,s.jsx)("i",{children:"implementation"})}),". This ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," reads decimal ",(0,s.jsx)(r.em,{children:"digit characters"})," until a non-",(0,s.jsx)(r.em,{children:"digit C"}),(0,s.jsx)("sub",{children:"2"})," is read. If any ",(0,s.jsx)(i,{term:"digit",children:(0,s.jsx)("i",{children:"digits"})})," were read, they are converted into a corresponding ",(0,s.jsx)(r.em,{children:"integer"})," infix parameter ",(0,s.jsx)(r.em,{children:"P"}),"; otherwise, the infix parameter ",(0,s.jsx)(r.em,{children:"P"})," is ",(0,s.jsx)(t,{term:"nil",children:(0,s.jsx)("b",{children:"nil"})}),". The terminating non-",(0,s.jsx)(r.em,{children:"digit C"}),(0,s.jsx)("sub",{children:"2"})," is a ",(0,s.jsx)(i,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," (sometimes called a \u201csub-character\u201d to emphasize its subordinate role in the dispatching) that is looked up in the dispatch table associated with the ",(0,s.jsx)(r.em,{children:"dispatching macro character C"}),(0,s.jsx)("sub",{children:"1"}),". The ",(0,s.jsx)(i,{styled:!0,term:"reader macro function",children:(0,s.jsx)("i",{children:"reader macro function"})})," associated with the sub-character ",(0,s.jsx)(r.em,{children:"C"}),(0,s.jsx)("sub",{children:"2"})," is invoked with three arguments: the ",(0,s.jsx)(i,{term:"stream",children:(0,s.jsx)("i",{children:"stream"})}),", the sub-character ",(0,s.jsx)(r.em,{children:"C"}),(0,s.jsx)("sub",{children:"2"}),", and the infix parameter ",(0,s.jsx)(r.em,{children:"P"}),". For more information about dispatch characters, see the ",(0,s.jsx)(i,{term:"function",children:(0,s.jsx)("i",{children:"function"})})," ",(0,s.jsx)(r.strong,{children:"set-dispatch-macro-character"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["For information about the ",(0,s.jsx)(i,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro characters"})})," that are available in ",(0,s.jsx)(i,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," , see Section 2.4 (Standard Macro Characters)."]})]})}function P(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(G,{...e})}):G(e)}function M(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function q(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["A pair of ",(0,s.jsx)(r.em,{children:"multiple escape characters"})," is used to indicate that an enclosed sequence of characters, including possible ",(0,s.jsx)(t,{styled:!0,term:"macro character",children:(0,s.jsx)("i",{children:"macro characters"})})," and ",(0,s.jsx)(t,{term:"whitespace",children:(0,s.jsx)("i",{children:"whitespace"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})}),", are to be treated as ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," with ",(0,s.jsx)(t,{term:"case",children:(0,s.jsx)("i",{children:"case"})})," preserved. Any ",(0,s.jsx)(t,{styled:!0,term:"single escape",children:(0,s.jsx)("i",{children:"single escape"})})," and ",(0,s.jsx)(r.em,{children:"multiple escape characters"})," that are to appear in the sequence must be preceded by a ",(0,s.jsx)(r.em,{children:"single escape character"})," ."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{term:"vertical-bar",children:(0,s.jsx)("i",{children:"Vertical-bar"})})," is a ",(0,s.jsx)(r.em,{children:"multiple escape character"})," in ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," ."]})]})}function F(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(q,{...e})}):q(e)}function N(e){const r={code:"code",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:";; The following examples assume the readtable case of \\*readtable\\* \n;; and \\*print-case\\* are both :upcase. \n(eq \u2019abc \u2019ABC) \u2192 true \n(eq \u2019abc \u2019|ABC|) \u2192 true \n(eq \u2019abc \u2019a|B|c) \u2192 true \n(eq \u2019abc \u2019|abc|) \u2192 false \n"})})}function R(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}function I(e){const r={em:"em",p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["A ",(0,s.jsx)(t,{styled:!0,term:"single escape",children:(0,s.jsx)("i",{children:"single escape"})})," is used to indicate that the next ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," is to be treated as an ",(0,s.jsx)(t,{term:"alphabetic",children:(0,s.jsx)("i",{children:"alphabetic"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," with its ",(0,s.jsx)(t,{term:"case",children:(0,s.jsx)("i",{children:"case"})})," preserved, no matter what the ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"character"})})," is or which ",(0,s.jsx)(t,{styled:!0,term:"constituent trait",children:(0,s.jsx)("i",{children:"constituent traits"})})," it has."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{term:"backslash",children:(0,s.jsx)("i",{children:"Backslash"})})," is a ",(0,s.jsx)(r.em,{children:"single escape character"})," in ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," ."]})]})}function B(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(I,{...e})}):I(e)}function W(e){const r={code:"code",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:";; The following examples assume the readtable case of \\*readtable\\* \n;; and \\*print-case\\* are both :upcase. \n(eq \u2019abc \u2019\\A\\B\\C) \u2192 true \n(eq \u2019abc \u2019a\\Bc) \u2192 true \n(eq \u2019abc \u2019\\ABC) \u2192 true \n(eq \u2019abc \u2019\\abc) \u2192 false \n"})})}function V(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(W,{...e})}):W(e)}function z(e){const r={p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{term:"whitespace",children:(0,s.jsx)("i",{children:"Whitespace"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," are used to separate ",(0,s.jsx)(t,{term:"token",children:(0,s.jsx)("i",{children:"tokens"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(t,{term:"space",children:(0,s.jsx)("i",{children:"Space"})})," and ",(0,s.jsx)(t,{term:"newline",children:(0,s.jsx)("i",{children:"newline"})})," are ",(0,s.jsx)(t,{term:"whitespace",children:(0,s.jsx)("i",{children:"whitespace"})}),(0,s.jsx)("sub",{children:"2"})," ",(0,s.jsx)(t,{term:"character",children:(0,s.jsx)("i",{children:"characters"})})," in ",(0,s.jsx)(t,{styled:!0,term:"standard syntax",children:(0,s.jsx)("i",{children:"standard syntax"})})," ."]})]})}function O(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(z,{...e})}):z(e)}function U(e){const r={code:"code",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:"(length \u2019(this-that)) \u2192 1 \n(length \u2019(this - that)) \u2192 3 \n(length \u2019(a \n\t  b)) \u2192 2 \n(+ 34) \u2192 34 \n(+ 3 4) \u2192 7  \n\n"})})}function Z(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(U,{...e})}):U(e)}const $={title:"2.1 Character Syntax"},H="2.1 Character Syntax",J={id:"chap-2/c-b-character-syntax",title:"2.1 Character Syntax",description:"2.1.1 Readtables",source:"@site/docs/chap-2/c-b-character-syntax.md",sourceDirName:"chap-2",slug:"/chap-2/c-b-character-syntax",permalink:"/cl-language-reference/chap-2/c-b-character-syntax",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-2/c-b-character-syntax.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"2.1 Character Syntax"},sidebar:"tutorialSidebar",previous:{title:"1.9 Symbols in the COMMON",permalink:"/cl-language-reference/chap-1/b-j-symbols-in-the-commonlisp-package"},next:{title:"2.2 Reader Algorithm",permalink:"/cl-language-reference/chap-2/c-c-reader-algorithm"}},K={},Q=[{value:"2.1.1 Readtables",id:"211-readtables",level:2},{value:"2.1.1.1 The Current Readtable",id:"2111-the-current-readtable",level:3},{value:"2.1.1.2 The Standard Readtable",id:"2112-the-standard-readtable",level:3},{value:"2.1.1.3 The Initial Readtable",id:"2113-the-initial-readtable",level:3},{value:"2.1.2 Variables that affect the Lisp Reader",id:"212-variables-that-affect-the-lisp-reader",level:2},{value:"2.1.3 Standard Characters",id:"213-standard-characters",level:2},{value:"2.1.4 Character Syntax Types",id:"214-character-syntax-types",level:2},{value:"2.1.4.1 Constituent Characters",id:"2141-constituent-characters",level:3},{value:"2.1.4.2 Constituent Traits",id:"2142-constituent-traits",level:3},{value:"2.1.4.3 Invalid Characters",id:"2143-invalid-characters",level:3},{value:"2.1.4.4 Macro Characters",id:"2144-macro-characters",level:3},{value:"2.1.4.5 Multiple Escape Characters",id:"2145-multiple-escape-characters",level:3},{value:"2.1.4.5.1 Examples of Multiple Escape Characters",id:"21451-examples-of-multiple-escape-characters",level:4},{value:"2.1.4.6 Single Escape Character",id:"2146-single-escape-character",level:3},{value:"2.1.4.6.1 Examples of Single Escape Characters",id:"21461-examples-of-single-escape-characters",level:4},{value:"2.1.4.7 Whitespace Characters",id:"2147-whitespace-characters",level:3},{value:"2.1.4.7.1 Examples of Whitespace Characters",id:"21471-examples-of-whitespace-characters",level:4}];function X(e){const r={h1:"h1",h2:"h2",h3:"h3",h4:"h4",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"21-character-syntax",children:"2.1 Character Syntax"}),"\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(r.h2,{id:"211-readtables",children:"2.1.1 Readtables"}),"\n","\n",(0,s.jsx)(l,{}),"\n",(0,s.jsx)(r.h3,{id:"2111-the-current-readtable",children:"2.1.1.1 The Current Readtable"}),"\n","\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(r.h3,{id:"2112-the-standard-readtable",children:"2.1.1.2 The Standard Readtable"}),"\n","\n",(0,s.jsx)(o,{}),"\n",(0,s.jsx)(r.h3,{id:"2113-the-initial-readtable",children:"2.1.1.3 The Initial Readtable"}),"\n","\n",(0,s.jsx)(u,{}),"\n",(0,s.jsx)(r.h2,{id:"212-variables-that-affect-the-lisp-reader",children:"2.1.2 Variables that affect the Lisp Reader"}),"\n","\n",(0,s.jsx)(y,{}),"\n",(0,s.jsx)(r.h2,{id:"213-standard-characters",children:"2.1.3 Standard Characters"}),"\n","\n",(0,s.jsx)(f,{}),"\n",(0,s.jsx)(r.h2,{id:"214-character-syntax-types",children:"2.1.4 Character Syntax Types"}),"\n","\n",(0,s.jsx)(k,{}),"\n",(0,s.jsx)(r.h3,{id:"2141-constituent-characters",children:"2.1.4.1 Constituent Characters"}),"\n","\n",(0,s.jsx)(L,{}),"\n",(0,s.jsx)(r.h3,{id:"2142-constituent-traits",children:"2.1.4.2 Constituent Traits"}),"\n","\n",(0,s.jsx)(C,{}),"\n",(0,s.jsx)(r.h3,{id:"2143-invalid-characters",children:"2.1.4.3 Invalid Characters"}),"\n","\n",(0,s.jsx)(E,{}),"\n",(0,s.jsx)(r.h3,{id:"2144-macro-characters",children:"2.1.4.4 Macro Characters"}),"\n","\n",(0,s.jsx)(P,{}),"\n",(0,s.jsx)(r.h3,{id:"2145-multiple-escape-characters",children:"2.1.4.5 Multiple Escape Characters"}),"\n","\n",(0,s.jsx)(F,{}),"\n",(0,s.jsx)(r.h4,{id:"21451-examples-of-multiple-escape-characters",children:"2.1.4.5.1 Examples of Multiple Escape Characters"}),"\n","\n",(0,s.jsx)(R,{}),"\n",(0,s.jsx)(r.h3,{id:"2146-single-escape-character",children:"2.1.4.6 Single Escape Character"}),"\n","\n",(0,s.jsx)(B,{}),"\n",(0,s.jsx)(r.h4,{id:"21461-examples-of-single-escape-characters",children:"2.1.4.6.1 Examples of Single Escape Characters"}),"\n","\n",(0,s.jsx)(V,{}),"\n",(0,s.jsx)(r.h3,{id:"2147-whitespace-characters",children:"2.1.4.7 Whitespace Characters"}),"\n","\n",(0,s.jsx)(O,{}),"\n",(0,s.jsx)(r.h4,{id:"21471-examples-of-whitespace-characters",children:"2.1.4.7.1 Examples of Whitespace Characters"}),"\n","\n","\n",(0,s.jsx)(Z,{})]})}function Y(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(X,{...e})}):X(e)}},11151:(e,r,t)=>{t.d(r,{Z:()=>d,a:()=>c});var s=t(67294);const n={},i=s.createContext(n);function c(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);