"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[81552],{87567:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var n=i(85893),r=i(11151);function s(e){const t={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"simple-bit-vector"})," ",(0,n.jsx)(i,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"Type"})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Supertypes:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(i,{styled:!0,term:"simple-bit-vector",children:(0,n.jsx)("b",{children:"simple-bit-vector"})}),", ",(0,n.jsx)(i,{styled:!0,term:"bit-vector",children:(0,n.jsx)("b",{children:"bit-vector"})}),", ",(0,n.jsx)(i,{styled:!0,term:"vector",children:(0,n.jsx)("b",{children:"vector"})}),", ",(0,n.jsx)(i,{styled:!0,term:"simple-array",children:(0,n.jsx)("b",{children:"simple-array"})}),", ",(0,n.jsx)(i,{styled:!0,term:"array",children:(0,n.jsx)("b",{children:"array"})}),", ",(0,n.jsx)(i,{styled:!0,term:"sequence",children:(0,n.jsx)("b",{children:"sequence"})}),", ",(0,n.jsx)(i,{styled:!0,term:"t",children:(0,n.jsx)("b",{children:"t"})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Description:"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(i,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"type"})})," of a ",(0,n.jsx)(t.em,{children:"bit vector"})," that is not displaced to another ",(0,n.jsx)(i,{styled:!0,term:"array",children:(0,n.jsx)("i",{children:"array"})}),", has no ",(0,n.jsx)(t.em,{children:"fill pointer"})," , and is not ",(0,n.jsx)(t.em,{children:"expressly adjustable"})," is a ",(0,n.jsx)(i,{styled:!0,term:"subtype",children:(0,n.jsx)("i",{children:"subtype"})})," of ",(0,n.jsx)(i,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"type"})})," ",(0,n.jsx)(i,{styled:!0,term:"simple-bit-vector",children:(0,n.jsx)("b",{children:"simple-bit-vector"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,n.jsx)(t.p,{children:"Abbreviating."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,n.jsxs)(t.p,{children:["(simple-bit-vector [",(0,n.jsx)(t.em,{children:"size"}),"])"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"size"}),"\u2014a non-negative ",(0,n.jsx)(i,{styled:!0,term:"fixnum",children:(0,n.jsx)("i",{children:"fixnum"})}),", or the ",(0,n.jsx)(i,{styled:!0,term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," ",(0,n.jsx)(t.strong,{children:"*"}),". The default is the ",(0,n.jsx)(i,{styled:!0,term:"symbol",children:(0,n.jsx)("i",{children:"symbol"})})," ",(0,n.jsx)(t.strong,{children:"*"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,n.jsxs)(t.p,{children:["This denotes the same type as the ",(0,n.jsx)(i,{styled:!0,term:"type",children:(0,n.jsx)("i",{children:"type"})})," (simple-array bit (",(0,n.jsx)(t.em,{children:"size"}),")); that is, the set of ",(0,n.jsx)(t.em,{children:"simple bit vectors"})," of size ",(0,n.jsx)(t.em,{children:"size"}),"."]})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(s,{...e})}):s(e)}const l={title:"simple-bit-vector"},o="simple-bit-vector",d={id:"chap-15/bf-c-dictionary/simple-bit-vector_type",title:"simple-bit-vector",description:"Expanded Reference: simple-bit-vector",source:"@site/docs/chap-15/bf-c-dictionary/simple-bit-vector_type.md",sourceDirName:"chap-15/bf-c-dictionary",slug:"/chap-15/bf-c-dictionary/simple-bit-vector_type",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/simple-bit-vector_type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-c-dictionary/simple-bit-vector_type.md",tags:[],version:"current",frontMatter:{title:"simple-bit-vector"},sidebar:"tutorialSidebar",previous:{title:"simple-bit-vector-p",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/simple-bit-vector-p_function"},next:{title:"simple-vector-p",permalink:"/cl-language-reference/docs/chap-15/bf-c-dictionary/simple-vector-p_function"}},p={},a=[{value:"Expanded Reference: simple-bit-vector",id:"expanded-reference-simple-bit-vector",level:2}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"simple-bit-vector",children:"simple-bit-vector"}),"\n","\n","\n",(0,n.jsx)(c,{}),"\n",(0,n.jsx)(t.h2,{id:"expanded-reference-simple-bit-vector",children:"Expanded Reference: simple-bit-vector"}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lisp",children:"(simple-bit-vector )\n"})})]})}function m(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},11151:(e,t,i)=>{i.d(t,{Z:()=>l,a:()=>c});var n=i(67294);const r={},s=n.createContext(r);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);