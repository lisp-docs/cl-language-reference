"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[61331],{43888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>m,toc:()=>o});var i=t(85893),l=t(11151);function r(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:r}=n;return t||s("DictionaryLink",!0),r||s("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"compile-file-pathname"})," ",(0,i.jsx)(r,{term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(t,{term:"compile-file-pathname",children:(0,i.jsx)("b",{children:"compile-file-pathname"})})," ",(0,i.jsx)(n.em,{children:"input-file"})," &key ",(0,i.jsx)(n.em,{children:"output-file"})," &allow-other-keys \u2192 pathname"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"input-file"}),"\u2014a ",(0,i.jsx)(r,{styled:!0,term:"pathname designator",children:(0,i.jsx)("i",{children:"pathname designator"})})," . (Default fillers for unspecified components are taken from ",(0,i.jsx)(t,{term:"default-pathname-defaults",children:(0,i.jsx)("b",{children:"*default-pathname-defaults*"})}),".)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"output-file"}),"\u2014a ",(0,i.jsx)(r,{styled:!0,term:"pathname designator",children:(0,i.jsx)("i",{children:"pathname designator"})})," . The default is ",(0,i.jsx)(r,{term:"implementation-defined",children:(0,i.jsx)("i",{children:"implementation-defined"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"pathname",children:(0,i.jsx)("i",{children:"pathname"})}),"\u2014a ",(0,i.jsx)(r,{term:"pathname",children:(0,i.jsx)("i",{children:"pathname"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns the ",(0,i.jsx)(r,{term:"pathname",children:(0,i.jsx)("i",{children:"pathname"})})," that ",(0,i.jsx)(t,{term:"compile-file",children:(0,i.jsx)("b",{children:"compile-file"})})," would write into, if given the same arguments."]}),"\n",(0,i.jsxs)(n.p,{children:["The defaults for the ",(0,i.jsx)(n.em,{children:"output-file"})," are taken from the ",(0,i.jsx)(r,{term:"pathname",children:(0,i.jsx)("i",{children:"pathname"})})," that results from merging the ",(0,i.jsx)(n.em,{children:"input-file"})," with the ",(0,i.jsx)(r,{term:"value",children:(0,i.jsx)("i",{children:"value"})})," of ",(0,i.jsx)(t,{term:"default-pathname-defaults",children:(0,i.jsx)("b",{children:"*default-pathname-defaults*"})}),", except that the type component should default to the appropriate ",(0,i.jsx)(r,{term:"implementation-defined",children:(0,i.jsx)("i",{children:"implementation-defined"})})," default type for ",(0,i.jsx)(r,{styled:!0,term:"compiled file",children:(0,i.jsx)("i",{children:"compiled files"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"input-file"})," is a ",(0,i.jsx)(r,{styled:!0,term:"logical pathname",children:(0,i.jsx)("i",{children:"logical pathname"})})," and ",(0,i.jsx)(n.em,{children:"output-file"})," is unsupplied, the result is a ",(0,i.jsx)(r,{styled:!0,term:"logical pathname",children:(0,i.jsx)("i",{children:"logical pathname"})}),". If ",(0,i.jsx)(n.em,{children:"input-file"})," is a ",(0,i.jsx)(r,{styled:!0,term:"logical pathname",children:(0,i.jsx)("i",{children:"logical pathname"})}),", it is translated into a physical pathname as if by calling ",(0,i.jsx)(t,{term:"translate-logical-pathname",children:(0,i.jsx)("b",{children:"translate-logical-pathname"})}),". If ",(0,i.jsx)(n.em,{children:"input-file"})," is a ",(0,i.jsx)(r,{term:"stream",children:(0,i.jsx)("i",{children:"stream"})}),", the ",(0,i.jsx)(r,{term:"stream",children:(0,i.jsx)("i",{children:"stream"})})," can be either open or closed. ",(0,i.jsx)(t,{term:"compile-file-pathname",children:(0,i.jsx)("b",{children:"compile-file-pathname"})})," returns the same ",(0,i.jsx)(r,{term:"pathname",children:(0,i.jsx)("i",{children:"pathname"})})," after a file is closed as it did when the file was open. It is an error if ",(0,i.jsx)(n.em,{children:"input-file"})," is a ",(0,i.jsx)(r,{styled:!0,term:"stream",children:(0,i.jsx)("i",{children:"stream"})})," that is created with ",(0,i.jsx)(t,{styled:!0,term:"make-two-way-stream",children:(0,i.jsx)("b",{children:"make-two-way-stream"})}),", ",(0,i.jsx)(t,{styled:!0,term:"make-echo-stream",children:(0,i.jsx)("b",{children:"make-echo-stream"})}),", ",(0,i.jsx)(t,{styled:!0,term:"make-broadcast-stream",children:(0,i.jsx)("b",{children:"make-broadcast-stream"})}),", ",(0,i.jsx)(t,{styled:!0,term:"make-concatenated-stream",children:(0,i.jsx)("b",{children:"make-concatenated-stream"})}),", ",(0,i.jsx)(t,{styled:!0,term:"make-string-input-stream",children:(0,i.jsx)("b",{children:"make-string-input-stream"})}),", ",(0,i.jsx)(t,{styled:!0,term:"make-string-output-stream",children:(0,i.jsx)("b",{children:"make-string-output-stream"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If an implementation supports additional keyword arguments to ",(0,i.jsx)(t,{styled:!0,term:"compile-file",children:(0,i.jsx)("b",{children:"compile-file"})}),", ",(0,i.jsx)(t,{styled:!0,term:"compile-file-pathname",children:(0,i.jsx)("b",{children:"compile-file-pathname"})})," must accept the same arguments."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"See **logical-pathname-translations**. \n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["An error of ",(0,i.jsx)(r,{styled:!0,term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(t,{styled:!0,term:"file-error",children:(0,i.jsx)("b",{children:"file-error"})})," might be signaled if either ",(0,i.jsx)(n.em,{children:"input-file"})," or ",(0,i.jsx)(n.em,{children:"output-file"})," is ",(0,i.jsx)(r,{styled:!0,term:"wild",children:(0,i.jsx)("i",{children:"wild"})}),". ",(0,i.jsx)(n.strong,{children:"See Also:"})]}),"\n",(0,i.jsx)(n.p,{children:"System"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(t,{styled:!0,term:"compile-file",children:(0,i.jsx)("b",{children:"compile-file"})}),", ",(0,i.jsx)(t,{styled:!0,term:"pathname",children:(0,i.jsx)("b",{children:"pathname"})}),", ",(0,i.jsx)(t,{styled:!0,term:"logical-pathname",children:(0,i.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]})]})}function a(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}function s(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const c={title:"compile-file-pathname"},d="compile-file-pathname",m={id:"chap-24/ce-c-dictionary/compile-file-pathname_function",title:"compile-file-pathname",description:"Expanded Reference: compile-file-pathname",source:"@site/docs/chap-24/ce-c-dictionary/compile-file-pathname_function.md",sourceDirName:"chap-24/ce-c-dictionary",slug:"/chap-24/ce-c-dictionary/compile-file-pathname_function",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/compile-file-pathname_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-24/ce-c-dictionary/compile-file-pathname_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"compile-file-pathname"},sidebar:"tutorialSidebar",previous:{title:"24.2 System Construction Dictionary",permalink:"/cl-language-reference/category/242-system-construction-dictionary"},next:{title:"compile-file-truename",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/compile-file-truename_variable"}},h={},o=[{value:"Expanded Reference: compile-file-pathname",id:"expanded-reference-compile-file-pathname",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"compile-file-pathname",children:"compile-file-pathname"}),"\n","\n","\n",(0,i.jsx)(a,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-compile-file-pathname",children:"Expanded Reference: compile-file-pathname"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(compile-file-pathname )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var i=t(67294);const l={},r=i.createContext(l);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);