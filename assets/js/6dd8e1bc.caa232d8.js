"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[1476],{72670:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>h,toc:()=>l});var t=a(85893),s=a(11151);function r(n){const e={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathnamep"})," ",(0,t.jsx)(e.em,{children:"Function"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathnamep"})," ",(0,t.jsx)(e.em,{children:"object \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"object"}),"\u2014an ",(0,t.jsx)(e.em,{children:"object"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(e.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(e.p,{children:["Returns ",(0,t.jsx)(e.em,{children:"true"})," if ",(0,t.jsx)(e.em,{children:"object"})," is of ",(0,t.jsx)(e.em,{children:"type"})," ",(0,t.jsx)(e.strong,{children:"pathname"}),"; otherwise, returns ",(0,t.jsx)(e.em,{children:"false"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:' \n\n\n\n(setq q "test") *\u2192* "test" \n\n\n\n(pathnamep q) *\u2192 false* \n\n\n\n(setq q (pathname "test")) \n\n\n\n*\u2192* #S(PATHNAME :HOST NIL :DEVICE NIL :DIRECTORY NIL :NAME "test" :TYPE NIL \n\n\n\n:VERSION NIL) \n\n\n\n(pathnamep q) *\u2192 true* \n\n\n\n(setq q (logical-pathname "SYS:SITE;FOO.SYSTEM")) \n\n\n\n*\u2192* #P"SYS:SITE;FOO.SYSTEM" \n\n\n\n(pathnamep q) *\u2192 true* \n\n\n\n\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(e.p,{children:["(pathnamep ",(0,t.jsx)(e.em,{children:"object"}),") ",(0,t.jsx)(e.em,{children:"\u2261"})," (typep ",(0,t.jsx)(e.em,{children:"object"})," \u2019pathname)"]}),"\n",(0,t.jsxs)("b",{children:[(0,t.jsx)("sup",{children:"pathname-host, pathname-device, pathname"})," directory, pathname-name, pathname-type, pathname-version"]}),"\n",(0,t.jsx)("i",{children:"Function"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname-host"})," ",(0,t.jsx)(e.em,{children:"pathname"})," &key ",(0,t.jsx)(e.em,{children:"case \u2192 host"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname-device"})," ",(0,t.jsx)(e.em,{children:"pathname"})," &key ",(0,t.jsx)(e.em,{children:"case \u2192 device"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname-directory"})," ",(0,t.jsx)(e.em,{children:"pathname"})," &key ",(0,t.jsx)(e.em,{children:"case \u2192 directory"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname-name"})," ",(0,t.jsx)(e.em,{children:"pathname"})," &key ",(0,t.jsx)(e.em,{children:"case \u2192 name"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname-type"})," ",(0,t.jsx)(e.em,{children:"pathname"})," &key ",(0,t.jsx)(e.em,{children:"case \u2192 type"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname-version"})," ",(0,t.jsx)(e.em,{children:"pathname \u2192 version"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"pathname"}),"\u2014a ",(0,t.jsx)(e.em,{children:"pathname designator"})," ."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"case"}),"\u2014one of ",":local"," or ",":common",". The default is ",":local","."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"host"}),"\u2014a ",(0,t.jsx)(e.em,{children:"valid pathname host"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"device"}),"\u2014a ",(0,t.jsx)(e.em,{children:"valid pathname device"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"directory"}),"\u2014a ",(0,t.jsx)(e.em,{children:"valid pathname directory"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"name"}),"\u2014a ",(0,t.jsx)(e.em,{children:"valid pathname name"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"type"}),"\u2014a ",(0,t.jsx)(e.em,{children:"valid pathname type"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"version"}),"\u2014a ",(0,t.jsx)(e.em,{children:"valid pathname version"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(e.p,{children:["These functions return the components of ",(0,t.jsx)(e.em,{children:"pathname"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["If the ",(0,t.jsx)(e.em,{children:"pathname designator"})," is a ",(0,t.jsx)(e.em,{children:"pathname"}),", it represents the name used to open the file. This may be, but is not required to be, the actual name of the file."]}),"\n",(0,t.jsxs)(e.p,{children:["If ",(0,t.jsx)(e.em,{children:"case"})," is supplied, it is treated as described in Section 19.2.2.1.2 (Case in Pathname Components). ",(0,t.jsx)(e.strong,{children:"Examples:"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:' \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n**pathname-host, pathname-device,** *. . .* \n\n\n\n(setq q (make-pathname :host "KATHY" \n\n\n\n:directory "CHAPMAN" \n\n\n\n:name "LOGIN" :type "COM")) \n\n\n\n*\u2192* #P"KATHY::[CHAPMAN]LOGIN.COM" \n\n\n\n(pathname-host q) *\u2192* "KATHY" \n\n\n\n(pathname-name q) *\u2192* "LOGIN" \n\n\n\n(pathname-type q) *\u2192* "COM" \n\n\n\n;; Because namestrings are used, the results shown in the remaining \n\n\n\n;; examples are not necessarily the only possible results. Mappings \n\n\n\n;; from namestring representation to pathname representation are \n\n\n\n;; dependent both on the file system involved and on the implementation \n\n\n\n;; (since there may be several implementations which can manipulate the \n\n\n\n;; the same file system, and those implementations are not constrained \n\n\n\n;; to agree on all details). Consult the documentation for each \n\n\n\n;; implementation for specific information on how namestrings are treated \n\n\n\n;; that implementation. \n\n\n\n;; VMS \n\n\n\n(pathname-directory (parse-namestring "[FOO.\\*.BAR]BAZ.LSP")) \n\n\n\n*\u2192* (:ABSOLUTE "FOO" "BAR") \n\n\n\n(pathname-directory (parse-namestring "[FOO.\\*.BAR]BAZ.LSP") :case :common) \n\n\n\n*\u2192* (:ABSOLUTE "FOO" "BAR") \n\n\n\n;; Unix \n\n\n\n(pathname-directory "foo.l") *\u2192* NIL \n\n\n\n(pathname-device "foo.l") *\u2192* :UNSPECIFIC \n\n\n\n(pathname-name "foo.l") *\u2192* "foo" \n\n\n\n(pathname-name "foo.l" :case :local) *\u2192* "foo" \n\n\n\n(pathname-name "foo.l" :case :common) *\u2192* "FOO" \n\n\n\n(pathname-type "foo.l") *\u2192* "l" \n\n\n\n(pathname-type "foo.l" :case :local) *\u2192* "l" \n\n\n\n(pathname-type "foo.l" :case :common) *\u2192* "L" \n\n\n\n(pathname-type "foo") *\u2192* :UNSPECIFIC \n\n\n\n(pathname-type "foo" :case :common) *\u2192* :UNSPECIFIC \n\n\n\n(pathname-type "foo.") *\u2192* "" \n\n\n\n(pathname-type "foo." :case :common) *\u2192* "" \n\n\n\n(pathname-directory (parse-namestring "/foo/bar/baz.lisp") :case :local) \n\n\n\n*\u2192* (:ABSOLUTE "foo" "bar") \n\n\n\n(pathname-directory (parse-namestring "/foo/bar/baz.lisp") :case :local) \n\n\n\n*\u2192* (:ABSOLUTE "FOO" "BAR") \n\n\n\n(pathname-directory (parse-namestring "../baz.lisp")) \n\n\n\n*\u2192* (:RELATIVE :UP) \n\n\n\n(PATHNAME-DIRECTORY (PARSE-NAMESTRING "/foo/BAR/../Mum/baz")) \n\n\n\n*\u2192* (:ABSOLUTE "foo" "BAR" :UP "Mum") \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n(PATHNAME-DIRECTORY (PARSE-NAMESTRING "/foo/BAR/../Mum/baz") :case :common) \n\n\n\n*\u2192* (:ABSOLUTE "FOO" "bar" :UP "Mum") \n\n\n\n(PATHNAME-DIRECTORY (PARSE-NAMESTRING "/foo/\\*/bar/baz.l")) \n\n\n\n*\u2192* (:ABSOLUTE "foo" :WILD "bar") \n\n\n\n(PATHNAME-DIRECTORY (PARSE-NAMESTRING "/foo/\\*/bar/baz.l") :case :common) \n\n\n\n*\u2192* (:ABSOLUTE "FOO" :WILD "BAR") \n\n\n\n;; Symbolics LMFS \n\n\n\n(pathname-directory (parse-namestring "&gt;foo&gt;\\*\\*&gt;bar&gt;baz.lisp")) \n\n\n\n*\u2192* (:ABSOLUTE "foo" :WILD-INFERIORS "bar") \n\n\n\n(pathname-directory (parse-namestring "&gt;foo&gt;\\*&gt;bar&gt;baz.lisp")) \n\n\n\n*\u2192* (:ABSOLUTE "foo" :WILD "bar") \n\n\n\n(pathname-directory (parse-namestring "&gt;foo&gt;\\*&gt;bar&gt;baz.lisp") :case :common) \n\n\n\n*\u2192* (:ABSOLUTE "FOO" :WILD "BAR") \n\n\n\n(pathname-device (parse-namestring "&gt;foo&gt;baz.lisp")) *\u2192* :UNSPECIFIC \n\n\n\n\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Affected By:"})}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.em,{children:"implementation"})," and the host ",(0,t.jsx)(e.em,{children:"file system"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(e.p,{children:["Should signal an error of ",(0,t.jsx)(e.em,{children:"type"})," ",(0,t.jsx)(e.strong,{children:"type-error"})," if its first argument is not a ",(0,t.jsx)(e.em,{children:"pathname"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"pathname"}),", ",(0,t.jsx)(e.strong,{children:"logical-pathname"}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as Filenames)"]})]})}function i(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(r,{...n})}):r(n)}const c={},o="pathnamep",h={id:"chap-19/bj-e-dictionary/pathnamep",title:"pathnamep",description:"Expanded Reference: pathnamep",source:"@site/docs/chap-19/bj-e-dictionary/pathnamep.md",sourceDirName:"chap-19/bj-e-dictionary",slug:"/chap-19/bj-e-dictionary/pathnamep",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathnamep",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-19/bj-e-dictionary/pathnamep.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pathname-match-p",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/pathnamematchp"},next:{title:"translate-logical-pathname",permalink:"/cl-language-reference/docs/chap-19/bj-e-dictionary/translatelogicalpathname"}},p={},l=[{value:"Expanded Reference: pathnamep",id:"expanded-reference-pathnamep",level:2}];function m(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"pathnamep",children:"pathnamep"}),"\n","\n","\n",(0,t.jsx)(i,{}),"\n",(0,t.jsx)(e.h2,{id:"expanded-reference-pathnamep",children:"Expanded Reference: pathnamep"}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lisp",children:"(pathnamep )\n"})})]})}function d(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}},11151:(n,e,a)=>{a.d(e,{Z:()=>c,a:()=>i});var t=a(67294);const s={},r=t.createContext(s);function i(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);