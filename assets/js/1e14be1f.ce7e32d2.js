"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[16544],{95841:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var t=s(85893),r=s(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"endp"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"endp"})," ",(0,t.jsx)(n.em,{children:"list \u2192 generalized-boolean"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"list"}),"\u2014a ",(0,t.jsx)(n.em,{children:"list"}),", which might be a ",(0,t.jsx)(n.em,{children:"dotted list"})," or a ",(0,t.jsx)(n.em,{children:"circular list"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,t.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["Returns ",(0,t.jsx)(n.em,{children:"true"})," if ",(0,t.jsx)(n.em,{children:"list"})," is the ",(0,t.jsx)(n.em,{children:"empty list"}),". Returns ",(0,t.jsx)(n.em,{children:"false"})," if ",(0,t.jsx)(n.em,{children:"list"})," is a ",(0,t.jsx)(n.em,{children:"cons"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"\n(endp nil) \u2192 true \n(endp \u2019(1 2)) \u2192 false \n(endp (cddr \u2019(1 2))) \u2192 true \n\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,t.jsxs)(n.p,{children:["Should signal an error of ",(0,t.jsx)(n.em,{children:"type"})," ",(0,t.jsx)(n.strong,{children:"type-error"})," if ",(0,t.jsx)(n.em,{children:"list"})," is not a ",(0,t.jsx)(n.em,{children:"list"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["The purpose of ",(0,t.jsx)(n.strong,{children:"endp"})," is to test for the end of ",(0,t.jsx)(n.em,{children:"proper list"}),". Since ",(0,t.jsx)(n.strong,{children:"endp"})," does not descend into a ",(0,t.jsx)(n.em,{children:"cons"}),", it is well-defined to pass it a ",(0,t.jsx)(n.em,{children:"dotted list"}),". However, if shorter \u201clists\u201d are iteratively produced by calling ",(0,t.jsx)(n.strong,{children:"cdr"})," on such a ",(0,t.jsx)(n.em,{children:"dotted list"})," and those \u201clists\u201d are tested with ",(0,t.jsx)(n.strong,{children:"endp"}),", a situation that has undefined consequences will eventually result when the ",(0,t.jsx)(n.em,{children:"non-nil atom"})," (which is not in fact a ",(0,t.jsx)(n.em,{children:"list"}),") finally becomes the argument to ",(0,t.jsx)(n.strong,{children:"endp"}),". Since this is the usual way in which ",(0,t.jsx)(n.strong,{children:"endp"})," is used, it is conservative programming style and consistent with the intent of ",(0,t.jsx)(n.strong,{children:"endp"})," to treat ",(0,t.jsx)(n.strong,{children:"endp"})," as simply a function on ",(0,t.jsx)(n.em,{children:"proper lists"})," which happens not to enforce an argument type of ",(0,t.jsx)(n.em,{children:"proper list"})," except when the argument is ",(0,t.jsx)(n.em,{children:"atomic"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const d={},l="endp",o={id:"chap-14/be-c-dictionary/endp",title:"endp",description:"Expanded Reference: endp",source:"@site/docs/chap-14/be-c-dictionary/endp.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/endp",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/endp",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/endp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"copy-tree",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/copytree"},next:{title:"first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/first"}},a={},h=[{value:"Expanded Reference: endp",id:"expanded-reference-endp",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"endp",children:"endp"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-endp",children:"Expanded Reference: endp"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(endp )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>c});var t=s(67294);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);