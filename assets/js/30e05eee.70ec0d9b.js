"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[76713],{58251:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>x});var i=r(85893),s=r(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:c}=n;return r||l("DictionaryLink",!0),c||l("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"unintern"})," ",(0,i.jsx)(c,{term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," &optional ",(0,i.jsx)(n.em,{children:"package \u2192 generalized-boolean"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),"\u2014a ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})}),"\u2014a ",(0,i.jsx)(c,{styled:!0,term:"package designator",children:(0,i.jsx)("i",{children:"package designator"})})," . The default is the ",(0,i.jsx)(c,{styled:!0,term:"current package",children:(0,i.jsx)("i",{children:"current package"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,i.jsx)(c,{styled:!0,term:"generalized boolean",children:(0,i.jsx)("i",{children:"generalized boolean"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," removes ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," from ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})}),". If ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," is ",(0,i.jsx)(c,{term:"present",children:(0,i.jsx)("i",{children:"present"})})," in ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})}),", it is removed from ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})})," and also from ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})}),"\u2019s ",(0,i.jsx)(c,{styled:!0,term:"shadowing symbols list",children:(0,i.jsx)("i",{children:"shadowing symbols list"})})," if it is present there. If ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})})," is the ",(0,i.jsx)(c,{styled:!0,term:"home package",children:(0,i.jsx)("i",{children:"home package"})})," for ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),", ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," is made to have no ",(0,i.jsx)(c,{styled:!0,term:"home package",children:(0,i.jsx)("i",{children:"home package"})}),". ",(0,i.jsx)(c,{styled:!0,term:"symbol",children:(0,i.jsx)("i",{children:"Symbol"})})," may continue to be ",(0,i.jsx)(c,{term:"accessible",children:(0,i.jsx)("i",{children:"accessible"})})," in ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})})," by inheritance."]}),"\n",(0,i.jsxs)(n.p,{children:["Use of ",(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," can result in a ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})})," that has no recorded ",(0,i.jsx)(c,{styled:!0,term:"home package",children:(0,i.jsx)("i",{children:"home package"})}),", but that in fact is ",(0,i.jsx)(c,{term:"accessible",children:(0,i.jsx)("i",{children:"accessible"})})," in some ",(0,i.jsx)(c,{term:"package",children:(0,i.jsx)("i",{children:"package"})}),". Common Lisp does not check for this pathological case, and such ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbols"})})," are always printed preceded by #:."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," returns ",(0,i.jsx)(c,{term:"true",children:(0,i.jsx)("i",{children:"true"})})," if it removes ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbol"})}),", and ",(0,i.jsx)(r,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})})," otherwise."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:'(in-package "COMMON-LISP-USER") \u2192 #<PACKAGE "COMMON-LISP-USER"> \n(setq temps-unpack (intern "UNPACK" (make-package \u2019temp))) \u2192 TEMP::UNPACK \n(unintern temps-unpack \u2019temp) \u2192 T \n(find-symbol "UNPACK" \u2019temp) \u2192 NIL, NIL \ntemps-unpack \u2192 #:UNPACK \n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," changes the state of the package system in such a way that the consistency rules do not hold across the change."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsx)(n.p,{children:"Current state of the package system."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["Giving a shadowing symbol to ",(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," can uncover a name conflict that had previously been resolved by the shadowing. If package A uses packages B and C, A contains a shadowing symbol x, and B and C each contain external symbols named x, then removing the shadowing symbol x from A will reveal a name conflict between b",":x"," and c",":x"," if those two ",(0,i.jsx)(c,{term:"symbol",children:(0,i.jsx)("i",{children:"symbols"})})," are distinct. In this case ",(0,i.jsx)(r,{term:"unintern",children:(0,i.jsx)("b",{children:"unintern"})})," will signal an error."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(n.p,{children:"Section 11.1 (Package Concepts)"})]})}function t(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const a={title:"unintern"},d="unintern",o={id:"chap-11/bb-c-dictionary/unintern_function",title:"unintern",description:"Expanded Reference: unintern",source:"@site/docs/chap-11/bb-c-dictionary/unintern_function.md",sourceDirName:"chap-11/bb-c-dictionary",slug:"/chap-11/bb-c-dictionary/unintern_function",permalink:"/cl-language-reference/chap-11/bb-c-dictionary/unintern_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-11/bb-c-dictionary/unintern_function.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"unintern"},sidebar:"tutorialSidebar",previous:{title:"unexport",permalink:"/cl-language-reference/chap-11/bb-c-dictionary/unexport_function"},next:{title:"unuse-package",permalink:"/cl-language-reference/chap-11/bb-c-dictionary/unuse-package_function"}},h={},x=[{value:"Expanded Reference: unintern",id:"expanded-reference-unintern",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"unintern",children:"unintern"}),"\n","\n","\n",(0,i.jsx)(t,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-unintern",children:"Expanded Reference: unintern"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(unintern )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>t});var i=r(67294);const s={},c=i.createContext(s);function t(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);