"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[268],{60902:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>x,frontMatter:()=>d,metadata:()=>l,toc:()=>p});var s=r(85893),i=r(11151);function o(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"progv"})," ",(0,s.jsx)(n.em,{children:"Special Operator"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"progv"})," ",(0,s.jsx)(n.em,{children:"symbols values {form}"}),"* \u2192 {result}*"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"symbols"}),"\u2014a ",(0,s.jsx)(n.em,{children:"list"})," of ",(0,s.jsx)(n.em,{children:"symbols"}),"; evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"values"}),"\u2014a ",(0,s.jsx)(n.em,{children:"list"})," of ",(0,s.jsx)(n.em,{children:"objects"}),"; evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"forms"}),"\u2014an ",(0,s.jsx)(n.em,{children:"implicit progn"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"results"}),"\u2014the ",(0,s.jsx)(n.em,{children:"values"})," returned by the ",(0,s.jsx)(n.em,{children:"forms"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"progv"})," creates new dynamic variable ",(0,s.jsx)(n.em,{children:"bindings"})," and executes each ",(0,s.jsx)(n.em,{children:"form"})," using those ",(0,s.jsx)(n.em,{children:"bindings"}),". Each ",(0,s.jsx)(n.em,{children:"form"})," is evaluated in order."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"progv"})," allows ",(0,s.jsx)(n.em,{children:"binding"})," one or more dynamic variables whose names may be determined at run time. Each ",(0,s.jsx)(n.em,{children:"form"})," is evaluated in order with the dynamic variables whose names are in ",(0,s.jsx)(n.em,{children:"symbols"})," bound to corresponding ",(0,s.jsx)(n.em,{children:"values"}),". If too few ",(0,s.jsx)(n.em,{children:"values"})," are supplied, the remaining ",(0,s.jsx)(n.em,{children:"symbols"})," are bound and then made to have no value. If too many ",(0,s.jsx)(n.em,{children:"values"})," are supplied, the excess values are ignored. The ",(0,s.jsx)(n.em,{children:"bindings"})," of the dynamic variables are undone on exit from ",(0,s.jsx)(n.strong,{children:"progv"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:" \n\n(setq \\*x\\* 1) \u2192 1 \n\n(progv \u2019(\\*x\\*) \u2019(2) \\*x\\*) \u2192 2 \n\n\\*x\\* \u2192 1 \n\nAssuming \\*x\\* is not globally special, \n\n(let ((\\*x\\* 3)) \n\n(progv \u2019(\\*x\\*) \u2019(4) \n\n(list \\*x\\* (symbol-value \u2019\\*x\\*)))) \u2192 (3 4) \n\n\n\n\n\n\n\n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"let"}),", Section 3.1 (Evaluation)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["Among other things, ",(0,s.jsx)(n.strong,{children:"progv"})," is useful when writing interpreters for languages embedded in Lisp; it provides a handle on the mechanism for ",(0,s.jsx)(n.em,{children:"binding dynamic variables"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}const d={},t="progv",l={id:"chap-5/f-d-dictionary/progv",title:"progv",description:"Expanded Reference: progv",source:"@site/docs/chap-5/f-d-dictionary/progv.md",sourceDirName:"chap-5/f-d-dictionary",slug:"/chap-5/f-d-dictionary/progv",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/progv",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-5/f-d-dictionary/progv.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"program-error",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/programerror"},next:{title:"psetq",permalink:"/cl-language-reference/docs/chap-5/f-d-dictionary/psetq"}},a={},p=[{value:"Expanded Reference: progv",id:"expanded-reference-progv",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"progv",children:"progv"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-progv",children:"Expanded Reference: progv"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(progv )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>c});var s=r(67294);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);