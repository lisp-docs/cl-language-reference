"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[49191],{84170:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var r=s(85893),c=s(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"rassoc, rassoc-if, rassoc-if-not"})," ",(0,r.jsx)(n.em,{children:"Function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"rassoc"})," ",(0,r.jsx)(n.em,{children:"item alist"})," &key ",(0,r.jsx)(n.em,{children:"key test test-not \u2192 entry"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"rassoc-if"})," ",(0,r.jsx)(n.em,{children:"predicate alist"})," &key ",(0,r.jsx)(n.em,{children:"key \u2192 entry"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"rassoc-if-not"})," ",(0,r.jsx)(n.em,{children:"predicate alist"})," &key ",(0,r.jsx)(n.em,{children:"key \u2192 entry"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"item"}),"\u2014an ",(0,r.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"alist"}),"\u2014an ",(0,r.jsx)(n.em,{children:"association list"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"predicate"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of one ",(0,r.jsx)(n.em,{children:"argument"})," that returns a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),". ",(0,r.jsx)(n.em,{children:"test"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of two ",(0,r.jsx)(n.em,{children:"arguments"})," that returns a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),". ",(0,r.jsx)(n.em,{children:"test-not"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of two ",(0,r.jsx)(n.em,{children:"arguments"})," that returns a ",(0,r.jsx)(n.em,{children:"generalized boolean"}),". ",(0,r.jsx)(n.em,{children:"key"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"function"})," of one argument, or ",(0,r.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"entry"}),"\u2014a ",(0,r.jsx)(n.em,{children:"cons"})," that is an ",(0,r.jsx)(n.em,{children:"element"})," of the ",(0,r.jsx)(n.em,{children:"alist"}),", or ",(0,r.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"rassoc"}),", ",(0,r.jsx)(n.strong,{children:"rassoc-if"}),", and ",(0,r.jsx)(n.strong,{children:"rassoc-if-not"})," return the first ",(0,r.jsx)(n.em,{children:"cons"})," whose ",(0,r.jsx)(n.em,{children:"cdr satisfies the test"}),". If no such ",(0,r.jsx)(n.em,{children:"cons"})," is found, ",(0,r.jsx)(n.strong,{children:"nil"})," is returned."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.strong,{children:"nil"})," appears in ",(0,r.jsx)(n.em,{children:"alist"})," in place of a pair, it is ignored."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:' \n\n(setq alist \u2019((1 . "one") (2 . "two") (3 . 3))) \n\n\u2192 ((1 . "one") (2 . "two") (3 . 3)) \n\n(rassoc 3 alist) \u2192 (3 . 3) \n\n(rassoc "two" alist) \u2192 NIL \n\n(rassoc "two" alist :test \u2019equal) \u2192 (2 . "two") \n\n(rassoc 1 alist :key #\u2019(lambda (x) (if (numberp x) (/ x 3)))) \u2192 (3 . 3) \n\n(rassoc \u2019a \u2019((a . b) (b . c) (c . a) (z . a))) \u2192 (C . A) \n\n(rassoc-if #\u2019stringp alist) \u2192 (1 . "one") \n\n(rassoc-if-not #\u2019vectorp alist) \u2192 (3 . 3) \n\n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"assoc"}),", Section 3.6 (Traversal Rules and Side Effects)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",":test-not"," parameter is deprecated."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"function"})," ",(0,r.jsx)(n.strong,{children:"rassoc-if-not"})," is deprecated."]}),"\n",(0,r.jsxs)(n.p,{children:["It is possible to ",(0,r.jsx)(n.strong,{children:"rplaca"})," the result of ",(0,r.jsx)(n.strong,{children:"rassoc"}),", provided that it is not ",(0,r.jsx)(n.strong,{children:"nil"}),", in order to \u201cupdate\u201d ",(0,r.jsx)(n.em,{children:"alist"}),". The expressions"]}),"\n",(0,r.jsxs)(n.p,{children:["(rassoc item list ",":test"," fn)"]}),"\n",(0,r.jsx)(n.p,{children:"and"}),"\n",(0,r.jsxs)(n.p,{children:["(find item list ",":test"," fn ",":key"," #\u2019cdr)"]}),"\n",(0,r.jsxs)(n.p,{children:["are equivalent in meaning, except when the item is ",(0,r.jsx)(n.strong,{children:"nil"})," and ",(0,r.jsx)(n.strong,{children:"nil"})," appears in place of a pair in the ",(0,r.jsx)(n.em,{children:"alist"}),". See the ",(0,r.jsx)(n.em,{children:"function"})," ",(0,r.jsx)(n.strong,{children:"assoc"}),"."]})]})}function t(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}const o={},a="rassoc, rassoc-if, rassoc-if-not",l={id:"chap-14/be-c-dictionary/rassoc",title:"rassoc, rassoc-if, rassoc-if-not",description:"Expanded Reference: rassoc, rassoc-if, rassoc-if-not",source:"@site/docs/chap-14/be-c-dictionary/rassoc.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/rassoc",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/rassoc",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/rassoc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pushnew",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/pushnew"},next:{title:"remf",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/remf"}},d={},h=[{value:"Expanded Reference: rassoc, rassoc-if, rassoc-if-not",id:"expanded-reference-rassoc-rassoc-if-rassoc-if-not",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"rassoc-rassoc-if-rassoc-if-not",children:"rassoc, rassoc-if, rassoc-if-not"}),"\n","\n","\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-rassoc-rassoc-if-rassoc-if-not",children:"Expanded Reference: rassoc, rassoc-if, rassoc-if-not"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(rassoc, rassoc-if, rassoc-if-not )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>t});var r=s(67294);const c={},i=r.createContext(c);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);