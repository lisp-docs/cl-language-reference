"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[86100],{33281:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var r=s(85893),i=s(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"export"})," ",(0,r.jsx)(n.em,{children:"Function"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"export"})," ",(0,r.jsx)(n.em,{children:"symbols"})," &optional ",(0,r.jsx)(n.em,{children:"package \u2192"})," ",(0,r.jsx)(n.strong,{children:"t"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"symbols"}),"\u2014a ",(0,r.jsx)(n.em,{children:"designator"})," for a ",(0,r.jsx)(n.em,{children:"list"})," of ",(0,r.jsx)(n.em,{children:"symbols"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"package"}),"\u2014a ",(0,r.jsx)(n.em,{children:"package designator"})," . The default is the ",(0,r.jsx)(n.em,{children:"current package"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"export"})," makes one or more ",(0,r.jsx)(n.em,{children:"symbols"})," that are ",(0,r.jsx)(n.em,{children:"accessible"})," in ",(0,r.jsx)(n.em,{children:"package"})," (whether directly or by inheritance) be ",(0,r.jsx)(n.em,{children:"external symbols"})," of that ",(0,r.jsx)(n.em,{children:"package"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If any of the ",(0,r.jsx)(n.em,{children:"symbols"})," is already ",(0,r.jsx)(n.em,{children:"accessible"})," as an ",(0,r.jsx)(n.em,{children:"external symbol"})," of ",(0,r.jsx)(n.em,{children:"package"}),", ",(0,r.jsx)(n.strong,{children:"export"})," has no effect on that ",(0,r.jsx)(n.em,{children:"symbol"}),". If the ",(0,r.jsx)(n.em,{children:"symbol"})," is ",(0,r.jsx)(n.em,{children:"present"})," in ",(0,r.jsx)(n.em,{children:"package"})," as an internal symbol, it is simply changed to external status. If it is ",(0,r.jsx)(n.em,{children:"accessible"})," as an ",(0,r.jsx)(n.em,{children:"internal symbol"})," via ",(0,r.jsx)(n.strong,{children:"use-package"}),", it is first ",(0,r.jsx)(n.em,{children:"imported"})," into ",(0,r.jsx)(n.em,{children:"package"}),", then ",(0,r.jsx)(n.em,{children:"exported"}),". (The ",(0,r.jsx)(n.em,{children:"symbol"})," is then ",(0,r.jsx)(n.em,{children:"present"})," in the ",(0,r.jsx)(n.em,{children:"package"})," whether or not ",(0,r.jsx)(n.em,{children:"package"})," continues to use the ",(0,r.jsx)(n.em,{children:"package"})," through which the ",(0,r.jsx)(n.em,{children:"symbol"})," was originally inherited.)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"export"})," makes each ",(0,r.jsx)(n.em,{children:"symbol accessible"})," to all the ",(0,r.jsx)(n.em,{children:"packages"})," that use ",(0,r.jsx)(n.em,{children:"package"}),". All of these ",(0,r.jsx)(n.em,{children:"packages"})," are checked for name conflicts: (export ",(0,r.jsx)(n.em,{children:"s p"}),") does (find-symbol (symbol-name ",(0,r.jsx)(n.em,{children:"s"}),") ",(0,r.jsx)(n.em,{children:"q"}),") for each package ",(0,r.jsx)(n.em,{children:"q"})," in (package-used-by-list ",(0,r.jsx)(n.em,{children:"p"}),"). Note that in the usual case of an ",(0,r.jsx)(n.strong,{children:"export"})," during the initial definition of a ",(0,r.jsx)(n.em,{children:"package"}),", the result of ",(0,r.jsx)(n.strong,{children:"package-used-by-list"})," is ",(0,r.jsx)(n.strong,{children:"nil"})," and the name-conflict checking takes negligible time. When multiple changes are to be made, for example when ",(0,r.jsx)(n.strong,{children:"export"})," is given a ",(0,r.jsx)(n.em,{children:"list"})," of ",(0,r.jsx)(n.em,{children:"symbols"}),", it is permissible for the implementation to process each change separately, so that aborting from a name conflict caused by any but the first ",(0,r.jsx)(n.em,{children:"symbol"})," in the ",(0,r.jsx)(n.em,{children:"list"})," does not unexport the first ",(0,r.jsx)(n.em,{children:"symbol"})," in the ",(0,r.jsx)(n.em,{children:"list"}),". However, aborting from a name-conflict error caused by ",(0,r.jsx)(n.strong,{children:"export"})," of one of ",(0,r.jsx)(n.em,{children:"symbols"})," does not leave that ",(0,r.jsx)(n.em,{children:"symbol accessible"})," to some ",(0,r.jsx)(n.em,{children:"packages"})," and ",(0,r.jsx)(n.em,{children:"inaccessible"})," to others; with respect to each of ",(0,r.jsx)(n.em,{children:"symbols"})," processed, ",(0,r.jsx)(n.strong,{children:"export"})," behaves as if it were as an atomic operation."]}),"\n",(0,r.jsxs)(n.p,{children:["A name conflict in ",(0,r.jsx)(n.strong,{children:"export"})," between one of ",(0,r.jsx)(n.em,{children:"symbols"})," being exported and a ",(0,r.jsx)(n.em,{children:"symbol"})," already ",(0,r.jsx)(n.em,{children:"present"})," in a ",(0,r.jsx)(n.em,{children:"package"})," that would inherit the newly-exported ",(0,r.jsx)(n.em,{children:"symbol"})," may be resolved in favor of the exported ",(0,r.jsx)(n.em,{children:"symbol"})," by uninterning the other one, or in favor of the already-present ",(0,r.jsx)(n.em,{children:"symbol"})," by making it a shadowing symbol."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:'\n(make-package \u2019temp :use nil) \u2192 #<PACKAGE "TEMP"> \n(use-package \u2019temp) \u2192 T \n(intern "TEMP-SYM" \u2019temp) \u2192 TEMP::TEMP-SYM, NIL \n(find-symbol "TEMP-SYM") \u2192 NIL, NIL \n(export (find-symbol "TEMP-SYM" \u2019temp) \u2019temp) \u2192 T \n(find-symbol "TEMP-SYM") \u2192 TEMP-SYM, :INHERITED \n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,r.jsx)(n.p,{children:"The package system is modified."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Accessible symbols"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,r.jsxs)(n.p,{children:["If any of the ",(0,r.jsx)(n.em,{children:"symbols"})," is not ",(0,r.jsx)(n.em,{children:"accessible"})," at all in ",(0,r.jsx)(n.em,{children:"package"}),", an error of ",(0,r.jsx)(n.em,{children:"type"})," ",(0,r.jsx)(n.strong,{children:"package-error"})," is signaled that is ",(0,r.jsx)(n.em,{children:"correctable"})," by permitting the ",(0,r.jsx)(n.em,{children:"user"})," to interactively specify whether that ",(0,r.jsx)(n.em,{children:"symbol"})," should be ",(0,r.jsx)(n.em,{children:"imported"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"import"}),", ",(0,r.jsx)(n.strong,{children:"unexport"}),", Section 11.1 (Package Concepts)"]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}const o={title:"export"},l="export",a={id:"chap-11/bb-c-dictionary/export_function",title:"export",description:"Expanded Reference: export",source:"@site/docs/chap-11/bb-c-dictionary/export_function.md",sourceDirName:"chap-11/bb-c-dictionary",slug:"/chap-11/bb-c-dictionary/export_function",permalink:"/cl-language-reference/docs/chap-11/bb-c-dictionary/export_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-11/bb-c-dictionary/export_function.md",tags:[],version:"current",frontMatter:{title:"export"},sidebar:"tutorialSidebar",previous:{title:"do-symbols, do-external-symbols, do-all-symbols",permalink:"/cl-language-reference/docs/chap-11/bb-c-dictionary/do-symbols_do-external-symbols_do-all-symbols_macro"},next:{title:"find-all-symbols",permalink:"/cl-language-reference/docs/chap-11/bb-c-dictionary/find-all-symbols_function"}},d={},h=[{value:"Expanded Reference: export",id:"expanded-reference-export",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"export",children:"export"}),"\n","\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(n.h2,{id:"expanded-reference-export",children:"Expanded Reference: export"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lisp",children:"(export )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>c});var r=s(67294);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);