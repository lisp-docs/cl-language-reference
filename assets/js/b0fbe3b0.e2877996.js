"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23751],{22208:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>x,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var s=r(85893),i=r(11151);function d(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"mod, rem"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"mod"})," ",(0,s.jsx)(n.em,{children:"number divisor \u2192 modulus"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rem"})," ",(0,s.jsx)(n.em,{children:"number divisor \u2192 remainder"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"number"}),"\u2014a ",(0,s.jsx)(n.em,{children:"real"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"divisor"}),"\u2014a ",(0,s.jsx)(n.em,{children:"real"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"modulus"}),", ",(0,s.jsx)(n.em,{children:"remainder"}),"\u2014a ",(0,s.jsx)(n.em,{children:"real"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"mod"})," and ",(0,s.jsx)(n.strong,{children:"rem"})," are generalizations of the modulus and remainder functions respectively."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"mod"})," performs the operation ",(0,s.jsx)(n.strong,{children:"floor"})," on ",(0,s.jsx)(n.em,{children:"number"})," and ",(0,s.jsx)(n.em,{children:"divisor"})," and returns the remainder of the ",(0,s.jsx)(n.strong,{children:"floor"})," operation."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rem"})," performs the operation ",(0,s.jsx)(n.strong,{children:"truncate"})," on ",(0,s.jsx)(n.em,{children:"number"})," and ",(0,s.jsx)(n.em,{children:"divisor"})," and returns the remainder of the ",(0,s.jsx)(n.strong,{children:"truncate"})," operation."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"mod"})," and ",(0,s.jsx)(n.strong,{children:"rem"})," are the modulus and remainder functions when ",(0,s.jsx)(n.em,{children:"number"})," and ",(0,s.jsx)(n.em,{children:"divisor"})," are ",(0,s.jsx)(n.em,{children:"integers"}),". ",(0,s.jsx)(n.strong,{children:"Examples:"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:" \n\n(rem -1 5) \u2192 -1 \n\n(mod -1 5) \u2192 4 \n\n(mod 13 4) \u2192 1 \n\n(rem 13 4) \u2192 1 \n\n(mod -13 4) \u2192 3 \n\n(rem -13 4) \u2192 -1 \n\n(mod 13 -4) \u2192 -3 \n\n(rem 13 -4) \u2192 1 \n\n(mod -13 -4) \u2192 -1 \n\n(rem -13 -4) \u2192 -1 \n\n(mod 13.4 1) \u2192 0.4 \n\n(rem 13.4 1) \u2192 0.4 \n\n(mod -13.4 1) \u2192 0.6 \n\n(rem -13.4 1) \u2192 -0.4 \n\n\n\n \n\n \n\n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"floor"}),", ",(0,s.jsx)(n.strong,{children:"truncate"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["The result of ",(0,s.jsx)(n.strong,{children:"mod"})," is either zero or a ",(0,s.jsx)(n.em,{children:"real"})," with the same sign as ",(0,s.jsx)(n.em,{children:"divisor"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}const o={},t="mod, rem",l={id:"chap-12/bc-c-dictionary/mod",title:"mod, rem",description:"Expanded Reference: mod, rem",source:"@site/docs/chap-12/bc-c-dictionary/mod.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/mod",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/mod",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/mod.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"minusp, plusp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/minusp"},next:{title:"most-positive-fixnum, most-negative-fixnum",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/mostpositivefixnum"}},a={},m=[{value:"Expanded Reference: mod, rem",id:"expanded-reference-mod-rem",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"mod-rem",children:"mod, rem"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-mod-rem",children:"Expanded Reference: mod, rem"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(mod, rem )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var s=r(67294);const i={},d=s.createContext(i);function c(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);