"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[42397],{58077:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>j,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var t=r(85893),s=r(11151);function i(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"find-restart"})," ",(0,t.jsx)(n.em,{children:"Function"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"find-restart"})," ",(0,t.jsx)(n.em,{children:"identifier"})," &optional ",(0,t.jsx)(n.em,{children:"condition"})]}),"\n",(0,t.jsx)(n.p,{children:"restart"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"identifier"}),"\u2014a ",(0,t.jsx)(n.em,{children:"non-nil symbol"}),", or a ",(0,t.jsx)(n.em,{children:"restart"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"condition"}),"\u2014a ",(0,t.jsx)(n.em,{children:"condition object"}),", or ",(0,t.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"restart"}),"\u2014a ",(0,t.jsx)(n.em,{children:"restart"})," or ",(0,t.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"find-restart"})," searches for a particular ",(0,t.jsx)(n.em,{children:"restart"})," in the current ",(0,t.jsx)(n.em,{children:"dynamic environment"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.em,{children:"condition"})," is ",(0,t.jsx)(n.em,{children:"non-nil"}),", only those ",(0,t.jsx)(n.em,{children:"restarts"})," are considered that are either explicitly associated with that ",(0,t.jsx)(n.em,{children:"condition"}),", or not associated with any ",(0,t.jsx)(n.em,{children:"condition"}),"; that is, the excluded ",(0,t.jsx)(n.em,{children:"restarts"})," are those that are associated with a non-empty set of ",(0,t.jsx)(n.em,{children:"conditions"})," of which the given ",(0,t.jsx)(n.em,{children:"condition"})," is not an ",(0,t.jsx)(n.em,{children:"element"}),". If ",(0,t.jsx)(n.em,{children:"condition"})," is ",(0,t.jsx)(n.strong,{children:"nil"}),", all ",(0,t.jsx)(n.em,{children:"restarts"})," are considered."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"identifier"})," is a ",(0,t.jsx)(n.em,{children:"symbol"}),", then the innermost (most recently established) ",(0,t.jsx)(n.em,{children:"applicable restart"})," with that ",(0,t.jsx)(n.em,{children:"name"})," is returned. ",(0,t.jsx)(n.strong,{children:"nil"})," is returned if no such restart is found."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"identifier"})," is a currently active restart, then it is returned. Otherwise, ",(0,t.jsx)(n.strong,{children:"nil"})," is returned. ",(0,t.jsx)(n.strong,{children:"Examples:"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:' \n\n\n\n(restart-case \n\n\n\n(let ((r (find-restart \u2019my-restart))) \n\n\n\n(format t "&#126;S is named &#126;S" r (restart-name r))) \n\n\n\n(my-restart () nil)) \n\n\n\n\u25b7 #<RESTART 32307325> is named MY-RESTART \n\n\n\n*\u2192* NIL \n\n\n\n(find-restart \u2019my-restart) \n\n\n\n*\u2192* NIL \n\n\n\n\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,t.jsx)(n.p,{children:"Existing restarts."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"restart-case"}),", ",(0,t.jsx)(n.strong,{children:"restart-bind"}),", ",(0,t.jsx)(n.strong,{children:"with-condition-restarts"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"compute-restarts"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["(find-restart ",(0,t.jsx)(n.em,{children:"identifier"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"\u2261"})," (find ",(0,t.jsx)(n.em,{children:"identifier"})," (compute-restarts) ",":key"," ",":restart-name",")"]}),"\n",(0,t.jsxs)(n.p,{children:["Although anonymous restarts have a name of ",(0,t.jsx)(n.strong,{children:"nil"}),", the consequences are unspecified if ",(0,t.jsx)(n.strong,{children:"nil"})," is given as an ",(0,t.jsx)(n.em,{children:"identifier"}),". Occasionally, programmers lament that ",(0,t.jsx)(n.strong,{children:"nil"})," is not permissible as an ",(0,t.jsx)(n.em,{children:"identifier"})," argument. In most such cases, ",(0,t.jsx)(n.strong,{children:"compute-restarts"})," can probably be used to simulate the desired effect."]})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const d={},a="find-restart",o={id:"chap-9/j-c-dictionary/findrestart",title:"find-restart",description:"Expanded Reference: find-restart",source:"@site/docs/chap-9/j-c-dictionary/findrestart.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/findrestart",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/findrestart",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/findrestart.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"error",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/error"},next:{title:"handler-bind",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/handlerbind"}},l={},h=[{value:"Expanded Reference: find-restart",id:"expanded-reference-find-restart",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"find-restart",children:"find-restart"}),"\n","\n","\n",(0,t.jsx)(c,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-find-restart",children:"Expanded Reference: find-restart"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(find-restart )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>c});var t=r(67294);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);