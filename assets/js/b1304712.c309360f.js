"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[94238],{82174:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>j,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var c=n(85893),a=n(11151);function s(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char=, char/=, char"}),"*<",(0,c.jsx)(r.em,{children:(0,c.jsx)(r.strong,{children:", char"})}),">",(0,c.jsx)(r.em,{children:(0,c.jsx)(r.strong,{children:", char"})}),"<",(0,c.jsx)(r.em,{children:(0,c.jsx)(r.strong,{children:"=, char"})}),">*",(0,c.jsx)(r.strong,{children:"=,"})," ",(0,c.jsx)(r.em,{children:". . ."})]}),"\n",(0,c.jsx)("b",{children:"char=, char/=, char"}),"\n",(0,c.jsx)("i",{children:"<"}),"\n",(0,c.jsx)("b",{children:", char"}),"\n",(0,c.jsx)("i",{children:">"}),"\n",(0,c.jsx)("b",{children:", char"}),"\n",(0,c.jsx)("i",{children:"<"}),"\n",(0,c.jsx)("b",{children:"=, char"}),"\n",(0,c.jsx)("i",{children:">"}),"\n",(0,c.jsxs)("b",{children:["=, ",(0,c.jsx)("sup",{children:"char-equal, char-not-equal, char-lessp, char"})," greaterp, char-not-greaterp, char-not-lessp"]}),"\n",(0,c.jsx)("i",{children:"Function"}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"= &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"*/* = &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"< &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"> &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"<= &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),">= &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-equal"})," &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-not-equal"})," &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-lessp"})," &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-greaterp"})," &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-not-greaterp"})," &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-not-lessp"})," &rest ",(0,c.jsx)(r.em,{children:"characters"}),(0,c.jsx)("sup",{children:"+"})," \u2192 generalized-boolean"]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.em,{children:"character"}),"\u2014a ",(0,c.jsx)(r.em,{children:"character"})," ."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.em,{children:"generalized-boolean"}),"\u2014a ",(0,c.jsx)(r.em,{children:"generalized boolean"}),"."]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Description:"})}),"\n",(0,c.jsxs)(r.p,{children:["These predicates compare ",(0,c.jsx)(r.em,{children:"characters"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char="})," returns ",(0,c.jsx)(r.em,{children:"true"})," if all ",(0,c.jsx)(r.em,{children:"characters"})," are the ",(0,c.jsx)(r.em,{children:"same"}),"; otherwise, it returns ",(0,c.jsx)(r.em,{children:"false"}),". If two ",(0,c.jsx)(r.em,{children:"characters"})," differ in any ",(0,c.jsx)(r.em,{children:"implementation-defined attributes"}),", then they are not ",(0,c.jsx)(r.strong,{children:"char="}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char/="})," returns ",(0,c.jsx)(r.em,{children:"true"})," if all ",(0,c.jsx)(r.em,{children:"characters"})," are different; otherwise, it returns ",(0,c.jsx)(r.em,{children:"false"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"< returns ",(0,c.jsx)(r.em,{children:"true"})," if the ",(0,c.jsx)(r.em,{children:"characters"})," are monotonically increasing; otherwise, it returns ",(0,c.jsx)(r.em,{children:"false"}),". If two ",(0,c.jsx)(r.em,{children:"characters"})," have ",(0,c.jsx)(r.em,{children:"identical implementation-defined attributes"}),", then their ordering by ",(0,c.jsx)(r.strong,{children:"char"}),"< is consistent with the numerical ordering by the predicate < on their ",(0,c.jsx)(r.em,{children:"codes"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"> returns ",(0,c.jsx)(r.em,{children:"true"})," if the ",(0,c.jsx)(r.em,{children:"characters"})," are monotonically decreasing; otherwise, it returns ",(0,c.jsx)(r.em,{children:"false"}),". If two ",(0,c.jsx)(r.em,{children:"characters"})," have ",(0,c.jsx)(r.em,{children:"identical implementation-defined attributes"}),", then their ordering by ",(0,c.jsx)(r.strong,{children:"char"}),"> is consistent with the numerical ordering by the predicate > on their ",(0,c.jsx)(r.em,{children:"codes"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),"<",(0,c.jsx)(r.strong,{children:"="})," returns ",(0,c.jsx)(r.em,{children:"true"})," if the ",(0,c.jsx)(r.em,{children:"characters"})," are monotonically nondecreasing; otherwise, it returns ",(0,c.jsx)(r.em,{children:"false"}),". If two ",(0,c.jsx)(r.em,{children:"characters"})," have ",(0,c.jsx)(r.em,{children:"identical implementation-defined attributes"}),", then their ordering by ",(0,c.jsx)(r.strong,{children:"char"}),"<",(0,c.jsx)(r.strong,{children:"="})," is consistent with the numerical ordering by the predicate <= on their ",(0,c.jsx)(r.em,{children:"codes"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char"}),">",(0,c.jsx)(r.strong,{children:"="})," returns ",(0,c.jsx)(r.em,{children:"true"})," if the ",(0,c.jsx)(r.em,{children:"characters"})," are monotonically nonincreasing; otherwise, it returns ",(0,c.jsx)(r.em,{children:"false"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char=, char/=, char"}),"*<",(0,c.jsx)(r.em,{children:(0,c.jsx)(r.strong,{children:", char"})}),">",(0,c.jsx)(r.em,{children:(0,c.jsx)(r.strong,{children:", char"})}),"<",(0,c.jsx)(r.em,{children:(0,c.jsx)(r.strong,{children:"=, char"})}),">*",(0,c.jsx)(r.strong,{children:"=,"})," ",(0,c.jsx)(r.em,{children:". . ."})]}),"\n",(0,c.jsxs)(r.p,{children:["If two ",(0,c.jsx)(r.em,{children:"characters"})," have ",(0,c.jsx)(r.em,{children:"identical implementation-defined attributes"}),", then their ordering by ",(0,c.jsx)(r.strong,{children:"char"}),">",(0,c.jsx)(r.strong,{children:"="})," is consistent with the numerical ordering by the predicate >= on their ",(0,c.jsx)(r.em,{children:"codes"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"char-equal"}),", ",(0,c.jsx)(r.strong,{children:"char-not-equal"}),", ",(0,c.jsx)(r.strong,{children:"char-lessp"}),", ",(0,c.jsx)(r.strong,{children:"char-greaterp"}),", ",(0,c.jsx)(r.strong,{children:"char-not-greaterp"}),", and ",(0,c.jsx)(r.strong,{children:"char-not-lessp"})," are similar to ",(0,c.jsx)(r.strong,{children:"char="}),", ",(0,c.jsx)(r.strong,{children:"char/="}),", ",(0,c.jsx)(r.strong,{children:"char"}),"<, ",(0,c.jsx)(r.strong,{children:"char"}),">, ",(0,c.jsx)(r.strong,{children:"char"}),"<",(0,c.jsx)(r.strong,{children:"="}),", ",(0,c.jsx)(r.strong,{children:"char"}),">",(0,c.jsx)(r.strong,{children:"="}),", respectively, except that they ignore differences in ",(0,c.jsx)(r.em,{children:"case"})," and might have an ",(0,c.jsx)(r.em,{children:"implementation-defined"})," behavior for ",(0,c.jsx)(r.em,{children:"non-simple characters"}),". For example, an ",(0,c.jsx)(r.em,{children:"implementation"})," might define that ",(0,c.jsx)(r.strong,{children:"char-equal"}),", ",(0,c.jsx)(r.em,{children:"etc."})," ignore certain ",(0,c.jsx)(r.em,{children:"implementation-defined attributes"}),". The effect, if any, of each ",(0,c.jsx)(r.em,{children:"implementation-defined attribute"})," upon these functions must be specified as part of the definition of that ",(0,c.jsx)(r.em,{children:"attribute"}),"."]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-lisp",children:"\n(char= #\\d #\\d) \u2192 true \n(char= #\\A #\\a) \u2192 false \n(char= #\\d #\\x) \u2192 false \n(char= #\\d #\\D) \u2192 false \n(char/= #\\d #\\d) \u2192 false \n(char/= #\\d #\\x) \u2192 true \n(char/= #\\d #\\D) \u2192 true \n(char= #\\d #\\d #\\d #\\d) \u2192 true \n(char/= #\\d #\\d #\\d #\\d) \u2192 false \n(char= #\\d #\\d #\\x #\\d) \u2192 false \n(char/= #\\d #\\d #\\x #\\d) \u2192 false \n(char= #\\d #\\y #\\x #\\c) \u2192 false \n(char/= #\\d #\\y #\\x #\\c) \u2192 true \n(char= #\\d #\\c #\\d) \u2192 false \n(char/= #\\d #\\c #\\d) \u2192 false \n(char< #\\d #\\x) \u2192 true \n(char<= #\\d #\\x) \u2192 true \n(char< #\\d #\\d) \u2192 false \n(char<= #\\d #\\d) \u2192 true \n(char< #\\a #\\e #\\y #\\z) \u2192 true \n(char<= #\\a #\\e #\\y #\\z) \u2192 true \n(char< #\\a #\\e #\\e #\\y) \u2192 false \n(char<= #\\a #\\e #\\e #\\y) \u2192 true \n(char> #\\e #\\d) \u2192 true \n(char>= #\\e #\\d) \u2192 true \n(char> #\\d #\\c #\\b #\\a) \u2192 true \n(char>= #\\d #\\c #\\b #\\a) \u2192 true \n(char> #\\d #\\d #\\c #\\a) \u2192 false \n(char>= #\\d #\\d #\\c #\\a) \u2192 true \n(char> #\\e #\\d #\\b #\\c #\\a) \u2192 false \n(char>= #\\e #\\d #\\b #\\c #\\a) \u2192 false \n(char> #\\z #\\A) \u2192 implementation-dependent \n(char> #\\Z #\\a) \u2192 implementation-dependent \n(char-equal #\\A #\\a) \u2192 true \n\n\n\n(stable-sort (list #\\b #\\A #\\B #\\a #\\c #\\C) #\u2019char-lessp) \n\u2192 (#\\A #\\a #\\b #\\B #\\c #\\C) \n(stable-sort (list #\\b #\\A #\\B #\\a #\\c #\\C) #\u2019char<) \n\u2192 (#\\A #\\B #\\C #\\a #\\b #\\c) ;Implementation A \n\u2192 (#\\a #\\b #\\c #\\A #\\B #\\C) ;Implementation B \n\u2192 (#\\a #\\A #\\b #\\B #\\c #\\C) ;Implementation C \n\u2192 (#\\A #\\a #\\B #\\b #\\C #\\c) ;Implementation D \n\u2192 (#\\A #\\B #\\a #\\b #\\C #\\c) ;Implementation E \n\n"})}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Exceptional Situations:"})}),"\n",(0,c.jsxs)(r.p,{children:["Should signal an error of ",(0,c.jsx)(r.em,{children:"type"})," ",(0,c.jsx)(r.strong,{children:"program-error"})," if at least one ",(0,c.jsx)(r.em,{children:"character"})," is not supplied."]}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,c.jsx)(r.p,{children:"Section 2.1 (Character Syntax), Section 13.1.10 (Documentation of Implementation-Defined Scripts)"}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,c.jsxs)(r.p,{children:["If characters differ in their ",(0,c.jsx)(r.em,{children:"code attribute"})," or any ",(0,c.jsx)(r.em,{children:"implementation-defined attribute"}),", they are considered to be different by ",(0,c.jsx)(r.strong,{children:"char="}),"."]}),"\n",(0,c.jsxs)(r.p,{children:["There is no requirement that (eq c1 c2) be true merely because (char= c1 c2) is ",(0,c.jsx)(r.em,{children:"true"}),". While ",(0,c.jsx)(r.strong,{children:"eq"})," can distinguish two ",(0,c.jsx)(r.em,{children:"characters"})," that ",(0,c.jsx)(r.strong,{children:"char="})," does not, it is distinguishing them not as ",(0,c.jsx)(r.em,{children:"characters"}),", but in some sense on the basis of a lower level implementation characteristic. If (eq c1 c2) is ",(0,c.jsx)(r.em,{children:"true"}),", then (char= c1 c2) is also true. ",(0,c.jsx)(r.strong,{children:"eql"})," and ",(0,c.jsx)(r.strong,{children:"equal"})," compare ",(0,c.jsx)(r.em,{children:"characters"})," in the same way that ",(0,c.jsx)(r.strong,{children:"char="})," does."]}),"\n",(0,c.jsxs)(r.p,{children:["The manner in which ",(0,c.jsx)(r.em,{children:"case"})," is used by ",(0,c.jsx)(r.strong,{children:"char-equal"}),", ",(0,c.jsx)(r.strong,{children:"char-not-equal"}),", ",(0,c.jsx)(r.strong,{children:"char-lessp"}),", ",(0,c.jsx)(r.strong,{children:"char-greaterp"}),", ",(0,c.jsx)(r.strong,{children:"char-not-greaterp"}),", and ",(0,c.jsx)(r.strong,{children:"char-not-lessp"})," implies an ordering for ",(0,c.jsx)(r.em,{children:"standard characters"})," such that ",(0,c.jsx)(r.code,{children:"A=a"}),", ",(0,c.jsx)(r.code,{children:"B=b"}),", and so on, up to ",(0,c.jsx)(r.code,{children:"Z=z"}),", and furthermore either ",(0,c.jsx)(r.code,{children:"9<A"})," or ",(0,c.jsx)(r.code,{children:"Z<0"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(s,{...e})}):s(e)}const t={title:"char=, char/=, char<, char>, char<=, char>=, char-equal, char-not-equal, char-lessp, char-greaterp, char-not-greaterp, char-not-lessp"},i=void 0,l={id:"chap-13/bd-c-dictionary/charequal",title:"char=, char/=, char<, char>, char<=, char>=, char-equal, char-not-equal, char-lessp, char-greaterp, char-not-greaterp, char-not-lessp",description:"Expanded Reference: char=, char/=, char&lt;, char&gt;, char&lt;=, char&gt;=, char-equal, char-not-equal, char-lessp, char-greaterp, char-not-greaterp, char-not-lessp",source:"@site/docs/chap-13/bd-c-dictionary/charequal.md",sourceDirName:"chap-13/bd-c-dictionary",slug:"/chap-13/bd-c-dictionary/charequal",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/charequal",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-13/bd-c-dictionary/charequal.md",tags:[],version:"current",frontMatter:{title:"char=, char/=, char<, char>, char<=, char>=, char-equal, char-not-equal, char-lessp, char-greaterp, char-not-greaterp, char-not-lessp"},sidebar:"tutorialSidebar",previous:{title:"characterp",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/characterp_function"},next:{title:"code-char",permalink:"/cl-language-reference/docs/chap-13/bd-c-dictionary/code-char_function"}},d={},o=[{value:"Expanded Reference: char=, char/=, char&lt;, char&gt;, char&lt;=, char&gt;=, char-equal, char-not-equal, char-lessp, char-greaterp, char-not-greaterp, char-not-lessp",id:"expanded-reference-char-char-char-char-char-char-char-equal-char-not-equal-char-lessp-char-greaterp-char-not-greaterp-char-not-lessp",level:2}];function x(e){const r={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(h,{}),"\n",(0,c.jsx)(r.h2,{id:"expanded-reference-char-char-char-char-char-char-char-equal-char-not-equal-char-lessp-char-greaterp-char-not-greaterp-char-not-lessp",children:"Expanded Reference: char=, char/=, char<, char>, char<=, char>=, char-equal, char-not-equal, char-lessp, char-greaterp, char-not-greaterp, char-not-lessp"}),"\n",(0,c.jsx)(r.admonition,{type:"tip",children:(0,c.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-lisp",children:"(char= )\n(char/= )\n(char< )\n(char> )\n(char<= )\n(char>= )\n(char-equal )\n(char-not-equal )\n(char-lessp )\n(char-greaterp )\n(char-not-greaterp )\n(char-not-lessp )\n"})})]})}function j(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>t,a:()=>h});var c=n(67294);const a={},s=c.createContext(a);function h(e){const r=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:h(e.components),c.createElement(s.Provider,{value:r},e.children)}}}]);