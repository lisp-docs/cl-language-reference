"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[36599],{4180:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var r=s(85893),n=s(11151);const i={},a="writer-method-class",c={id:"meta-object-protocol/dictionary/writer-method-class",title:"writer-method-class",description:"Generic Function WRITER-METHOD-CLASS",source:"@site/docs/meta-object-protocol/dictionary/writer-method-class.md",sourceDirName:"meta-object-protocol/dictionary",slug:"/meta-object-protocol/dictionary/writer-method-class",permalink:"/cl-language-reference/meta-object-protocol/dictionary/writer-method-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/dictionary/writer-method-class.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"writer-method-class-standard-class-standard-direct-slot-definition",permalink:"/cl-language-reference/meta-object-protocol/dictionary/writer-method-class-standard-class-standard-direct-slot-definition"},next:{title:"Introduction",permalink:"/cl-language-reference/data-structures/"}},d={},o=[{value:"<strong>writer-method-class</strong> (<em>class</em> standard-class) (<em>direct-slot</em> standard-direct-slot-definition) <code>&amp;rest</code> <em>initargs</em>\n<strong>writer-method-class</strong> (<em>class</em> funcallable-standard-class) (<em>direct-slot</em> standard-direct-slot-definition) <code>&amp;rest</code> <em>initargs</em>",id:"writer-method-class-class-standard-class-direct-slot-standard-direct-slot-definition-rest-initargswriter-method-class-class-funcallable-standard-class-direct-slot-standard-direct-slot-definition-rest-initargs",level:2}];function l(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"writer-method-class",children:"writer-method-class"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Generic Function"})," ",(0,r.jsx)(t.strong,{children:"WRITER-METHOD-CLASS"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Syntax:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"writer-method-class"})," ",(0,r.jsx)(t.em,{children:"class"})," ",(0,r.jsx)(t.em,{children:"direct-slot"})," ",(0,r.jsx)(t.code,{children:"&rest"})," ",(0,r.jsx)(t.em,{children:"initargs"})," => ",(0,r.jsx)(t.em,{children:"writer-method-class"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Arguments and values:"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"class"})," -- A class metaobject."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"direct-slot"})," -- A direct slot definition metaobject."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"initargs"})," -- A suite of alternating initialization argument names and values."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"writer-method-class"})," -- A class metaobject."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Description:"})}),"\n",(0,r.jsxs)(t.p,{children:["This generic function is called to determine the class of writer methods created during class initialization and reinitialization. The result must be a subclass of",(0,r.jsx)(t.a,{href:"/meta-object-protocol/class-standard-writer-method",children:"standard-writer-method"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.em,{children:"initargs"})," argument must be the same as will be passed to ",(0,r.jsx)(t.a,{href:"/meta-object-protocol/make-instance",children:"make-instance"})," to create the writer method. The ",(0,r.jsx)(t.em,{children:"initargs"})," must include ",(0,r.jsx)(t.code,{children:":slot-definition"})," with ",(0,r.jsx)(t.em,{children:"slot-definition"})," as its value."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Methods:"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.h2,{id:"writer-method-class-class-standard-class-direct-slot-standard-direct-slot-definition-rest-initargswriter-method-class-class-funcallable-standard-class-direct-slot-standard-direct-slot-definition-rest-initargs",children:[(0,r.jsxs)(t.a,{href:"/meta-object-protocol/writer-method-class-standard-class-standard-direct-slot-definition",children:[(0,r.jsx)(t.strong,{children:"writer-method-class"})," (",(0,r.jsx)(t.em,{children:"class"})," standard-class) (",(0,r.jsx)(t.em,{children:"direct-slot"})," standard-direct-slot-definition) ",(0,r.jsx)(t.code,{children:"&rest"})," ",(0,r.jsx)(t.em,{children:"initargs"})]}),"\n",(0,r.jsxs)(t.a,{href:"/meta-object-protocol/writer-method-class-funcallable-standard-class-standard-direct-slot-definition",children:[(0,r.jsx)(t.strong,{children:"writer-method-class"})," (",(0,r.jsx)(t.em,{children:"class"})," funcallable-standard-class) (",(0,r.jsx)(t.em,{children:"direct-slot"})," standard-direct-slot-definition) ",(0,r.jsx)(t.code,{children:"&rest"})," ",(0,r.jsx)(t.em,{children:"initargs"})]})]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>a});var r=s(67294);const n={},i=r.createContext(n);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);