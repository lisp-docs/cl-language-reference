"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[45326],{18969:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>g,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>h,toc:()=>o});var i=r(85893),t=r(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"integer-length"})," ",(0,i.jsx)(n.em,{children:"Function"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"integer-length"})," ",(0,i.jsx)(n.em,{children:"integer \u2192 number-of-bits"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"integer"}),"\u2014an ",(0,i.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"number-of-bits"}),"\u2014a non-negative ",(0,i.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns the number of bits needed to represent ",(0,i.jsx)(n.em,{children:"integer"})," in binary two\u2019s-complement format. ",(0,i.jsx)(n.strong,{children:"Examples:"})]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length 0) ",(0,i.jsx)(n.em,{children:"\u2192"})," 0"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length 1) ",(0,i.jsx)(n.em,{children:"\u2192"})," 1"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length 3) ",(0,i.jsx)(n.em,{children:"\u2192"})," 2"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length 4) ",(0,i.jsx)(n.em,{children:"\u2192"})," 3"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length 7) ",(0,i.jsx)(n.em,{children:"\u2192"})," 3"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length -1) ",(0,i.jsx)(n.em,{children:"\u2192"})," 0"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length -4) ",(0,i.jsx)(n.em,{children:"\u2192"})," 2"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length -7) ",(0,i.jsx)(n.em,{children:"\u2192"})," 3"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length -8) ",(0,i.jsx)(n.em,{children:"\u2192"})," 3"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length (expt 2 9)) ",(0,i.jsx)(n.em,{children:"\u2192"})," 10"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length (1- (expt 2 9))) ",(0,i.jsx)(n.em,{children:"\u2192"})," 9"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length (- (expt 2 9))) ",(0,i.jsx)(n.em,{children:"\u2192"})," 9"]}),"\n",(0,i.jsxs)(n.p,{children:["(integer-length (- (1+ (expt 2 9)))) ",(0,i.jsx)(n.em,{children:"\u2192"})," 10"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["Should signal an error of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.strong,{children:"type-error"})," if ",(0,i.jsx)(n.em,{children:"integer"})," is not an ",(0,i.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsx)(n.p,{children:"This function could have been defined by:"}),"\n",(0,i.jsx)(n.p,{children:"(defun integer-length (integer)"}),"\n",(0,i.jsx)(n.p,{children:"(ceiling (log (if (minusp integer)"}),"\n",(0,i.jsx)(n.p,{children:"(- integer)"}),"\n",(0,i.jsx)(n.p,{children:"(1+ integer))"}),"\n",(0,i.jsx)(n.p,{children:"2)))"}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"integer"})," is non-negative, then its value can be represented in unsigned binary form in a field whose width in bits is no smaller than (integer-length ",(0,i.jsx)(n.em,{children:"integer"}),"). Regardless of the sign of ",(0,i.jsx)(n.em,{children:"integer"}),", its value can be represented in signed binary two\u2019s-complement form in a field whose width in bits is no smaller than (+ (integer-length ",(0,i.jsx)(n.em,{children:"integer"}),") 1)."]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}const l={},d="integer-length",h={id:"chap-12/bc-c-dictionary/integerlength",title:"integer-length",description:"Expanded Reference: integer-length",source:"@site/docs/chap-12/bc-c-dictionary/integerlength.md",sourceDirName:"chap-12/bc-c-dictionary",slug:"/chap-12/bc-c-dictionary/integerlength",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/integerlength",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-12/bc-c-dictionary/integerlength.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"integer",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/integer"},next:{title:"integerp",permalink:"/cl-language-reference/docs/chap-12/bc-c-dictionary/integerp"}},g={},o=[{value:"Expanded Reference: integer-length",id:"expanded-reference-integer-length",level:2}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"integer-length",children:"integer-length"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-integer-length",children:"Expanded Reference: integer-length"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(integer-length )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>c});var i=r(67294);const t={},s=i.createContext(t);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);