"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[15611],{23678:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>g,frontMatter:()=>d,metadata:()=>l,toc:()=>p});var s=r(85893),t=r(11151);function i(e){const n={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:i}=n;return r||a("DictionaryLink",!0),i||a("GlossaryTerm",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"base-string"})," ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"Type"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Supertypes:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(r,{term:"base-string",children:(0,s.jsx)("b",{children:"base-string"})}),", ",(0,s.jsx)(r,{term:"string",children:(0,s.jsx)("b",{children:"string"})}),", ",(0,s.jsx)(r,{term:"vector",children:(0,s.jsx)("b",{children:"vector"})}),", ",(0,s.jsx)(r,{term:"array",children:(0,s.jsx)("b",{children:"array"})}),", ",(0,s.jsx)(r,{term:"sequence",children:(0,s.jsx)("b",{children:"sequence"})}),", ",(0,s.jsx)(r,{term:"t",children:(0,s.jsx)("b",{children:"t"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(i,{term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(r,{term:"base-string",children:(0,s.jsx)("b",{children:"base-string"})})," is equivalent to (vector base-char). The ",(0,s.jsx)(i,{styled:!0,term:"base string",children:(0,s.jsx)("i",{children:"base string"})})," representation is the most efficient ",(0,s.jsx)(i,{term:"string",children:(0,s.jsx)("i",{children:"string"})})," representation that can hold an arbitrary sequence of ",(0,s.jsx)(i,{styled:!0,term:"standard character",children:(0,s.jsx)("i",{children:"standard characters"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,s.jsx)(n.p,{children:"Abbreviating."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:["(base-string [",(0,s.jsx)(n.em,{children:"size"}),"])"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"size"}),"\u2014a non-negative ",(0,s.jsx)(i,{term:"fixnum",children:(0,s.jsx)("i",{children:"fixnum"})}),", or the ",(0,s.jsx)(i,{term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," ",(0,s.jsx)(n.strong,{children:"*"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["This is equivalent to the type (vector base-char ",(0,s.jsx)(n.em,{children:"size"}),"); that is, the set of ",(0,s.jsx)(i,{styled:!0,term:"base string",children:(0,s.jsx)("i",{children:"base strings"})})," of size ",(0,s.jsx)(n.em,{children:"size"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}function a(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"base-string"},o="base-string",l={id:"chap-16/bg-c-dictionary/base-string_type",title:"base-string",description:"Expanded Reference: base-string",source:"@site/docs/chap-16/bg-c-dictionary/base-string_type.md",sourceDirName:"chap-16/bg-c-dictionary",slug:"/chap-16/bg-c-dictionary/base-string_type",permalink:"/cl-language-reference/chap-16/bg-c-dictionary/base-string_type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-16/bg-c-dictionary/base-string_type.md",tags:[],version:"current",frontMatter:{title:"base-string"},sidebar:"tutorialSidebar",previous:{title:"16.2 Strings Dictionary",permalink:"/cl-language-reference/category/162-strings-dictionary"},next:{title:"char, schar",permalink:"/cl-language-reference/chap-16/bg-c-dictionary/char_schar_accessor"}},h={},p=[{value:"Expanded Reference: base-string",id:"expanded-reference-base-string",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"base-string",children:"base-string"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-base-string",children:"Expanded Reference: base-string"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(base-string )\n"})})]})}function g(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>c});var s=r(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);