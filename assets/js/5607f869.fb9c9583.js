"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[80914],{93088:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>k,contentTitle:()=>v,default:()=>E,frontMatter:()=>b,metadata:()=>w,toc:()=>T});var r=t(85893),n=t(11151);function i(e){const s={em:"em",p:"p",strong:"strong",...(0,n.a)(),...e.components},{GlossaryTerm:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," is a compound data ",(0,r.jsx)(t,{styled:!0,term:"object",children:(0,r.jsx)("i",{children:"object"})})," having two components called the ",(0,r.jsx)(t,{styled:!0,term:"car",children:(0,r.jsx)("i",{children:"car"})})," and the ",(0,r.jsx)(t,{styled:!0,term:"cdr",children:(0,r.jsx)("i",{children:"cdr"})})," ."]}),"\n",(0,r.jsxs)(s.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"car cons rplacd"})," "]}),(0,r.jsx)("p",{children:(0,r.jsx)(s.strong,{children:"cdr rplaca"})}),"|"]}),"\n",(0,r.jsx)(s.p,{children:"| :- |"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 14\u20131. Some defined names relating to conses."})}),"\n",(0,r.jsxs)(s.p,{children:["Depending on context, a group of connected ",(0,r.jsx)(s.em,{children:"conses"})," can be viewed in a variety of different ways. A variety of operations is provided to support each of these various views."]})]})}function c(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}function l(e){const s={em:"em",p:"p",strong:"strong",...(0,n.a)(),...e.components},{GlossaryTerm:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(t,{styled:!0,term:"tree",children:(0,r.jsx)("i",{children:"tree"})})," is a binary recursive data structure made up of ",(0,r.jsx)(s.em,{children:"conses"})," and ",(0,r.jsx)(t,{styled:!0,term:"atom",children:(0,r.jsx)("i",{children:"atoms"})}),": the ",(0,r.jsx)(s.em,{children:"conses"})," are themselves also ",(0,r.jsx)(t,{styled:!0,term:"tree",children:(0,r.jsx)("i",{children:"trees"})})," (sometimes called \u201csubtrees\u201d or \u201cbranches\u201d), and the ",(0,r.jsx)(t,{styled:!0,term:"atom",children:(0,r.jsx)("i",{children:"atoms"})})," are terminal nodes (sometimes called ",(0,r.jsx)(s.em,{children:"leaves"}),"). Typically, the ",(0,r.jsx)(s.em,{children:"leaves"})," represent data while the branches establish some relationship among that data."]}),"\n",(0,r.jsxs)(s.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"caaaar caddar cdar nsubst"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"caaadr cadddr cddaar nsubst-if"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"caaar caddr cddadr nsubst-if-not caadar cadr cddar nthcdr"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"caaddr cdaaar cdddar sublis"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"caadr cdaadr cddddr subst"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"caar cdaar cdddr subst-if"})," "]}),(0,r.jsx)("p",{children:(0,r.jsx)(s.strong,{children:"cadaar cdadar cddr subst-if-not cadadr cdaddr copy-tree tree-equal cadar cdadr nsublis"})}),"|"]}),"\n",(0,r.jsx)(s.p,{children:"| :- |"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 14\u20132. Some defined names relating to trees."})})]})}function d(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}function o(e){const s={em:"em",p:"p",...(0,n.a)(),...e.components},{GlossaryTerm:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(s.p,{children:["Except as explicitly stated otherwise, for any ",(0,r.jsx)(s.em,{children:"standardized function"})," that takes a ",(0,r.jsx)(t,{styled:!0,term:"parameter",children:(0,r.jsx)("i",{children:"parameter"})})," that is required to be a ",(0,r.jsx)(t,{styled:!0,term:"tree",children:(0,r.jsx)("i",{children:"tree"})}),", the consequences are undefined if that ",(0,r.jsx)(t,{styled:!0,term:"tree",children:(0,r.jsx)("i",{children:"tree"})})," is circular."]})}function a(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}function h(e){const s={em:"em",p:"p",strong:"strong",...(0,n.a)(),...e.components},{GlossaryTerm:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," is a chain of ",(0,r.jsx)(s.em,{children:"conses"})," in which the ",(0,r.jsx)(t,{styled:!0,term:"car",children:(0,r.jsx)("i",{children:"car"})})," of each ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," is an ",(0,r.jsx)(t,{styled:!0,term:"element",children:(0,r.jsx)("i",{children:"element"})})," of the ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})}),", and the ",(0,r.jsx)(t,{styled:!0,term:"cdr",children:(0,r.jsx)("i",{children:"cdr"})})," of each ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," is either the next link in the chain or a terminating ",(0,r.jsx)(t,{styled:!0,term:"atom",children:(0,r.jsx)("i",{children:"atom"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(t,{styled:!0,term:"proper list",children:(0,r.jsx)("i",{children:"proper list"})})," is a ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," terminated by the ",(0,r.jsx)(t,{styled:!0,term:"empty list",children:(0,r.jsx)("i",{children:"empty list"})}),". The ",(0,r.jsx)(t,{styled:!0,term:"empty list",children:(0,r.jsx)("i",{children:"empty list"})})," is a ",(0,r.jsx)(t,{styled:!0,term:"proper list",children:(0,r.jsx)("i",{children:"proper list"})}),", but is not a ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["An ",(0,r.jsx)(s.em,{children:"improper list"})," is a ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," that is not a ",(0,r.jsx)(t,{styled:!0,term:"proper list",children:(0,r.jsx)("i",{children:"proper list"})}),"; that is, it is a ",(0,r.jsx)(t,{styled:!0,term:"circular list",children:(0,r.jsx)("i",{children:"circular list"})})," or a ",(0,r.jsx)(t,{styled:!0,term:"dotted list",children:(0,r.jsx)("i",{children:"dotted list"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(t,{styled:!0,term:"dotted list",children:(0,r.jsx)("i",{children:"dotted list"})})," is a ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," that has a terminating ",(0,r.jsx)(t,{styled:!0,term:"atom",children:(0,r.jsx)("i",{children:"atom"})})," that is not the ",(0,r.jsx)(t,{styled:!0,term:"empty list",children:(0,r.jsx)("i",{children:"empty list"})}),". A ",(0,r.jsx)(s.em,{children:"non-nil atom"})," by itself is not considered to be a ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," of any kind\u2014not even a ",(0,r.jsx)(t,{styled:!0,term:"dotted list",children:(0,r.jsx)("i",{children:"dotted list"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(t,{styled:!0,term:"circular list",children:(0,r.jsx)("i",{children:"circular list"})})," is a chain of ",(0,r.jsx)(s.em,{children:"conses"})," that has no termination because some ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," in the chain is the ",(0,r.jsx)(t,{styled:!0,term:"cdr",children:(0,r.jsx)("i",{children:"cdr"})})," of a later ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"append last nbutlast rest"})," "]}),(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"butlast ldiff nconc revappend copy-alist list ninth second copy-list list* nreconc seventh eighth list-length nth sixth endp make-list nthcdr tailp"})," "]}),(0,r.jsx)("p",{children:(0,r.jsx)(s.strong,{children:"fifth member pop tenth first member-if push third fourth member-if-not pushnew"})}),"|"]}),"\n",(0,r.jsx)(s.p,{children:"| :- |"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 14\u20133. Some defined names relating to lists."})})]})}function x(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function j(e){const s={em:"em",p:"p",strong:"strong",...(0,n.a)(),...e.components},{GlossaryTerm:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["An ",(0,r.jsx)(t,{styled:!0,term:"association list",children:(0,r.jsx)("i",{children:"association list"})})," is a ",(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," of ",(0,r.jsx)(s.em,{children:"conses"})," representing an association of ",(0,r.jsx)(t,{styled:!0,term:"key",children:(0,r.jsx)("i",{children:"keys"})})," with ",(0,r.jsx)(t,{styled:!0,term:"value",children:(0,r.jsx)("i",{children:"values"})}),", where the ",(0,r.jsx)(t,{styled:!0,term:"car",children:(0,r.jsx)("i",{children:"car"})})," of each ",(0,r.jsx)(t,{styled:!0,term:"cons",children:(0,r.jsx)("i",{children:"cons"})})," is the ",(0,r.jsx)(t,{styled:!0,term:"key",children:(0,r.jsx)("i",{children:"key"})})," and the ",(0,r.jsx)(t,{styled:!0,term:"cdr",children:(0,r.jsx)("i",{children:"cdr"})})," is the ",(0,r.jsx)(t,{styled:!0,term:"value",children:(0,r.jsx)("i",{children:"value"})})," associated with that ",(0,r.jsx)(t,{styled:!0,term:"key",children:(0,r.jsx)("i",{children:"key"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"acons assoc-if pairlis rassoc-if"})," "]}),(0,r.jsx)("p",{children:(0,r.jsx)(s.strong,{children:"assoc assoc-if-not rassoc rassoc-if-not"})}),"|"]}),"\n",(0,r.jsx)(s.p,{children:"| :- |"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 14\u20134. Some defined names related to assocation lists."})})]})}function p(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}function m(e){const s={p:"p",strong:"strong",...(0,n.a)(),...e.components},{GlossaryTerm:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(t,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"Lists"})})," are sometimes viewed as sets by considering their elements unordered and by assuming there is no duplication of elements."]}),"\n",(0,r.jsxs)(s.p,{children:["|",(0,r.jsxs)("p",{children:[(0,r.jsx)(s.strong,{children:"adjoin nset-difference set-difference union intersection nset-exclusive-or set-exclusive-or"})," "]}),(0,r.jsx)("p",{children:(0,r.jsx)(s.strong,{children:"nintersection nunion subsetp"})}),"|"]}),"\n",(0,r.jsx)(s.p,{children:"| :- |"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 14\u20135. Some defined names related to sets."})})]})}function u(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}function y(e){const s={em:"em",p:"p",...(0,n.a)(),...e.components},{DictionaryLink:t,GlossaryTerm:i}=s;return t||g("DictionaryLink",!0),i||g("GlossaryTerm",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["Except as explicitly specified otherwise, any ",(0,r.jsx)(s.em,{children:"standardized function"})," that takes a ",(0,r.jsx)(i,{styled:!0,term:"parameter",children:(0,r.jsx)("i",{children:"parameter"})})," that is required to be a ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," should be prepared to signal an error of ",(0,r.jsx)(i,{styled:!0,term:"type",children:(0,r.jsx)("i",{children:"type"})})," ",(0,r.jsx)(t,{styled:!0,term:"type-error",children:(0,r.jsx)("b",{children:"type-error"})})," if the ",(0,r.jsx)(i,{styled:!0,term:"value",children:(0,r.jsx)("i",{children:"value"})})," received is a ",(0,r.jsx)(i,{styled:!0,term:"dotted list",children:(0,r.jsx)("i",{children:"dotted list"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Except as explicitly specified otherwise, for any ",(0,r.jsx)(s.em,{children:"standardized function"})," that takes a ",(0,r.jsx)(i,{styled:!0,term:"parameter",children:(0,r.jsx)("i",{children:"parameter"})})," that is required to be a ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})}),", the consequences are undefined if that ",(0,r.jsx)(i,{styled:!0,term:"list",children:(0,r.jsx)("i",{children:"list"})})," is ",(0,r.jsx)(i,{styled:!0,term:"circular",children:(0,r.jsx)("i",{children:"circular"})})," ."]})]})}function f(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(y,{...e})}):y(e)}function g(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const b={title:"14.1 Cons Concepts"},v="14.1 Cons Concepts",w={id:"chap-14/be-b-cons-concepts",title:"14.1 Cons Concepts",description:"14.1.1 Conses as Trees",source:"@site/docs/chap-14/be-b-cons-concepts.md",sourceDirName:"chap-14",slug:"/chap-14/be-b-cons-concepts",permalink:"/cl-language-reference/chap-14/be-b-cons-concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-14/be-b-cons-concepts.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"14.1 Cons Concepts"},sidebar:"tutorialSidebar",previous:{title:"upper-case-p, lower-case-p, both-case-p",permalink:"/cl-language-reference/chap-13/bd-c-dictionary/upper-case-p_lower-case-p_both-case-p_function"},next:{title:"14.2 Conses Dictionary",permalink:"/cl-language-reference/category/142-conses-dictionary"}},k={},T=[{value:"14.1.1 Conses as Trees",id:"1411-conses-as-trees",level:2},{value:"14.1.1.1 General Restrictions on Parameters that must be Trees",id:"14111-general-restrictions-on-parameters-that-must-be-trees",level:3},{value:"14.1.2 Conses as Lists",id:"1412-conses-as-lists",level:2},{value:"14.1.2.1 Lists as Association Lists",id:"14121-lists-as-association-lists",level:3},{value:"14.1.2.2 Lists as Sets",id:"14122-lists-as-sets",level:3},{value:"14.1.2.3 General Restrictions on Parameters that must be Lists",id:"14123-general-restrictions-on-parameters-that-must-be-lists",level:3}];function C(e){const s={h1:"h1",h2:"h2",h3:"h3",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"141-cons-concepts",children:"14.1 Cons Concepts"}),"\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(s.h2,{id:"1411-conses-as-trees",children:"14.1.1 Conses as Trees"}),"\n","\n",(0,r.jsx)(d,{}),"\n",(0,r.jsx)(s.h3,{id:"14111-general-restrictions-on-parameters-that-must-be-trees",children:"14.1.1.1 General Restrictions on Parameters that must be Trees"}),"\n","\n",(0,r.jsx)(a,{}),"\n",(0,r.jsx)(s.h2,{id:"1412-conses-as-lists",children:"14.1.2 Conses as Lists"}),"\n","\n",(0,r.jsx)(x,{}),"\n",(0,r.jsx)(s.h3,{id:"14121-lists-as-association-lists",children:"14.1.2.1 Lists as Association Lists"}),"\n","\n",(0,r.jsx)(p,{}),"\n",(0,r.jsx)(s.h3,{id:"14122-lists-as-sets",children:"14.1.2.2 Lists as Sets"}),"\n","\n",(0,r.jsx)(u,{}),"\n",(0,r.jsx)(s.h3,{id:"14123-general-restrictions-on-parameters-that-must-be-lists",children:"14.1.2.3 General Restrictions on Parameters that must be Lists"}),"\n","\n","\n",(0,r.jsx)(f,{})]})}function E(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(C,{...e})}):C(e)}},11151:(e,s,t)=>{t.d(s,{Z:()=>l,a:()=>c});var r=t(67294);const n={},i=r.createContext(n);function c(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);