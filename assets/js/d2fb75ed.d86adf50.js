"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[14374],{75002:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>j,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>h,toc:()=>o});var i=n(85893),a=n(11151);function s(e){const r={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{DictionaryLink:n,GlossaryTerm:s}=r;return n||l("DictionaryLink",!0),s||l("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"adjust-array"})," ",(0,i.jsx)(s,{term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," ",(0,i.jsx)(r.em,{children:"array new-dimensions"})," &key ",(0,i.jsx)(r.em,{children:"element-type"})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"initial-element"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"initial-contents"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"fill-pointer"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"displaced-to"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"displaced-index-offset"})}),"\n",(0,i.jsx)(r.p,{children:"\u2192 adjusted-array"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"\u2014an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"new-dimensions"}),"\u2014a ",(0,i.jsx)(s,{styled:!0,term:"valid array dimension",children:(0,i.jsx)("i",{children:"valid array dimension"})})," or a ",(0,i.jsx)(s,{term:"list",children:(0,i.jsx)("i",{children:"list"})})," of ",(0,i.jsx)(s,{styled:!0,term:"valid array dimension",children:(0,i.jsx)("i",{children:"valid array dimensions"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"element-type"}),"\u2014a ",(0,i.jsx)(s,{styled:!0,term:"type specifier",children:(0,i.jsx)("i",{children:"type specifier"})})," ."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"initial-element"}),"\u2014an ",(0,i.jsx)(s,{term:"object",children:(0,i.jsx)("i",{children:"object"})}),". ",(0,i.jsx)(r.em,{children:"Initial-element"})," must not be supplied if either ",(0,i.jsx)(r.em,{children:"initial-contents"})," or ",(0,i.jsx)(r.em,{children:"displaced-to"})," is supplied."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"initial-contents"}),"\u2014an ",(0,i.jsx)(s,{term:"object",children:(0,i.jsx)("i",{children:"object"})}),". If ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," has rank greater than zero, then ",(0,i.jsx)(r.em,{children:"initial-contents"})," is composed of nested ",(0,i.jsx)(r.em,{children:"sequences"}),", the depth of which must equal the rank of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". Otherwise, ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is zero-dimensional and ",(0,i.jsx)(r.em,{children:"initial-contents"})," supplies the single element. ",(0,i.jsx)(r.em,{children:"initial-contents"})," must not be supplied if either ",(0,i.jsx)(r.em,{children:"initial-element"})," or ",(0,i.jsx)(r.em,{children:"displaced-to"})," is given."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"fill-pointer"}),"\u2014a ",(0,i.jsx)(s,{styled:!0,term:"valid fill pointer",children:(0,i.jsx)("i",{children:"valid fill pointer"})})," for the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," to be created, or ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("b",{children:"t"})}),", or ",(0,i.jsx)(n,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),". The default is ",(0,i.jsx)(n,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"displaced-to"}),"\u2014an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," or ",(0,i.jsx)(n,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),". ",(0,i.jsx)(r.em,{children:"initial-elements"})," and ",(0,i.jsx)(r.em,{children:"initial-contents"})," must not be supplied if ",(0,i.jsx)(r.em,{children:"displaced-to"})," is supplied."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"displaced-index-offset"}),"\u2014an ",(0,i.jsx)(s,{term:"object",children:(0,i.jsx)("i",{children:"object"})})," of ",(0,i.jsx)(s,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," (fixnum 0 ",(0,i.jsx)(r.em,{children:"n"}),") where ",(0,i.jsx)(r.em,{children:"n"})," is (array-total-size ",(0,i.jsx)(r.em,{children:"displaced-to"}),"). ",(0,i.jsx)(r.em,{children:"displaced-index-offset"})," may be supplied only if ",(0,i.jsx)(r.em,{children:"displaced-to"})," is supplied."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"adjusted-array"}),"\u2014an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," changes the dimensions or elements of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". The result is an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," of the same ",(0,i.jsx)(s,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," and rank as ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", that is either the modified ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", or a newly created ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," to which ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," can be displaced, and that has the given ",(0,i.jsx)(r.em,{children:"new-dimensions"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"New-dimensions"})," specify the size of each ",(0,i.jsx)(s,{term:"dimension",children:(0,i.jsx)("i",{children:"dimension"})})," of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"Element-type"})," specifies the ",(0,i.jsx)(s,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," of the ",(0,i.jsx)(s,{term:"element",children:(0,i.jsx)("i",{children:"elements"})})," of the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". If ",(0,i.jsx)(r.em,{children:"element-type"})," is supplied, the consequences are unspecified if the ",(0,i.jsx)(s,{styled:!0,term:"upgraded array element type",children:(0,i.jsx)("i",{children:"upgraded array element type"})})," of ",(0,i.jsx)(r.em,{children:"element-type"})," is not the same as the ",(0,i.jsx)(s,{styled:!0,term:"actual array element type",children:(0,i.jsx)("i",{children:"actual array element type"})})," of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(r.em,{children:"initial-contents"})," is supplied, it is treated as for ",(0,i.jsx)(n,{term:"make-array",children:(0,i.jsx)("b",{children:"make-array"})}),". In this case none of the original contents of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," appears in the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(r.em,{children:"fill-pointer"})," is an ",(0,i.jsx)(r.em,{children:"integer"})," , it becomes the ",(0,i.jsx)(s,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," for the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". If ",(0,i.jsx)(r.em,{children:"fill-pointer"})," is the symbol ",(0,i.jsx)(n,{term:"t",children:(0,i.jsx)("b",{children:"t"})}),", it indicates that the size of the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," should be used as the ",(0,i.jsx)(s,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," . If ",(0,i.jsx)(r.em,{children:"fill-pointer"})," is ",(0,i.jsx)(n,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),", it indicates that the ",(0,i.jsx)(s,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," should be left as it is."]}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(r.em,{children:"displaced-to non-nil"}),", a ",(0,i.jsx)(s,{styled:!0,term:"displaced array",children:(0,i.jsx)("i",{children:"displaced array"})})," is created. The resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," shares its contents with the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," given by ",(0,i.jsx)(r.em,{children:"displaced-to"}),". The resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," cannot contain more elements than the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," it is displaced to. If ",(0,i.jsx)(r.em,{children:"displaced-to"})," is not supplied or ",(0,i.jsx)(n,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),", the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is not a ",(0,i.jsx)(s,{styled:!0,term:"displaced array",children:(0,i.jsx)("i",{children:"displaced array"})}),". If array ",(0,i.jsx)(r.em,{children:"A"})," is created displaced to array ",(0,i.jsx)(r.em,{children:"B"})," and subsequently array ",(0,i.jsx)(r.em,{children:"B"})," is given to ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})}),", array ",(0,i.jsx)(r.em,{children:"A"})," will still be displaced to array ",(0,i.jsx)(r.em,{children:"B"}),". Although ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," might be a ",(0,i.jsx)(s,{styled:!0,term:"displaced array",children:(0,i.jsx)("i",{children:"displaced array"})}),", the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is not a ",(0,i.jsx)(s,{styled:!0,term:"displaced array",children:(0,i.jsx)("i",{children:"displaced array"})})," unless ",(0,i.jsx)(r.em,{children:"displaced-to"})," is supplied and not ",(0,i.jsx)(n,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),". The interaction between ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," and displaced ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"arrays"})})," is as follows given three ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"arrays"})}),", A, B, and C:"]}),"\n",(0,i.jsx)(r.p,{children:"A is not displaced before or after the call"}),"\n",(0,i.jsx)(r.p,{children:"(adjust-array A ...)"}),"\n",(0,i.jsxs)(r.p,{children:["The dimensions of A are altered, and the contents rearranged as appropriate. Additional elements of A are taken from ",(0,i.jsx)(r.em,{children:"initial-element"}),". The use of ",(0,i.jsx)(r.em,{children:"initial-contents"})," causes all old contents to be discarded."]}),"\n",(0,i.jsx)(r.p,{children:"A is not displaced before, but is displaced to C after the call"}),"\n",(0,i.jsxs)(r.p,{children:["(adjust-array A ... ",":displaced-to"," C)"]}),"\n",(0,i.jsx)(r.p,{children:"None of the original contents of A appears in A afterwards; A now contains the contents of C, without any rearrangement of C."}),"\n",(0,i.jsx)(r.p,{children:"A is displaced to B before the call, and is displaced to C after the call"}),"\n",(0,i.jsxs)(r.p,{children:["(adjust-array A ... ",":displaced-to"," B)"]}),"\n",(0,i.jsxs)(r.p,{children:["(adjust-array A ... ",":displaced-to"," C)"]}),"\n",(0,i.jsxs)(r.p,{children:["B and C might be the same. The contents of B do not appear in A afterward unless such contents also happen to be in C If ",(0,i.jsx)(r.em,{children:"displaced-index-offset"})," is not supplied in the ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," call, it defaults to zero; the old offset into B is not retained."]}),"\n",(0,i.jsx)(r.p,{children:"A is displaced to B before the call, but not displaced afterward."}),"\n",(0,i.jsxs)(r.p,{children:["(adjust-array A ... ",":displaced-to"," B)"]}),"\n",(0,i.jsxs)(r.p,{children:["(adjust-array A ... ",":displaced-to"," nil)"]}),"\n",(0,i.jsxs)(r.p,{children:["A gets a new \u201cdata region,\u201d and contents of B are copied into it as appropriate to maintain the existing old contents; additional elements of A are taken from ",(0,i.jsx)(r.em,{children:"initial-element"})," if supplied. However, the use of ",(0,i.jsx)(r.em,{children:"initial-contents"})," causes all old contents to be discarded."]}),"\n",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(r.em,{children:"displaced-index-offset"})," is supplied, it specifies the offset of the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," from the beginning of the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that it is displaced to. If ",(0,i.jsx)(r.em,{children:"displaced-index-offset"})," is not supplied, the offset is 0. The size of the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," plus the offset value cannot exceed the size of the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that it is displaced to."]}),"\n",(0,i.jsxs)(r.p,{children:["If only ",(0,i.jsx)(r.em,{children:"new-dimensions"})," and an ",(0,i.jsx)(r.em,{children:"initial-element"})," argument are supplied, those elements of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that are still in bounds appear in the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". The elements of the resulting ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that are not in the bounds of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," are initialized to ",(0,i.jsx)(r.em,{children:"initial-element"}),"; if ",(0,i.jsx)(r.em,{children:"initial-element"})," is not provided, the consequences of later reading any such new ",(0,i.jsx)(s,{term:"element",children:(0,i.jsx)("i",{children:"element"})})," of ",(0,i.jsx)(r.em,{children:"new-array"})," before it has been initialized are undefined."]}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(r.em,{children:"initial-contents"})," or ",(0,i.jsx)(r.em,{children:"displaced-to"})," is supplied, then none of the original contents of ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," appears in the new ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["The consequences are unspecified if ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is adjusted to a size smaller than its ",(0,i.jsx)(s,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," without supplying the ",(0,i.jsx)(r.em,{children:"fill-pointer"})," argument so that its ",(0,i.jsx)(r.em,{children:"fill-pointer"})," is properly adjusted in the process."]}),"\n",(0,i.jsx)(r.p,{children:"If A is displaced to B, the consequences are unspecified if B is adjusted in such a way that it no longer has enough elements to satisfy A."}),"\n",(0,i.jsxs)(r.p,{children:["If ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," is applied to an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," that is ",(0,i.jsx)(s,{styled:!0,term:"actually adjustable",children:(0,i.jsx)("i",{children:"actually adjustable"})}),", the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," returned is ",(0,i.jsx)(s,{term:"identical",children:(0,i.jsx)("i",{children:"identical"})})," to ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),". If the ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," returned by ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," is ",(0,i.jsx)(s,{term:"distinct",children:(0,i.jsx)("i",{children:"distinct"})})," from ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),", then the argument ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," is unchanged."]}),"\n",(0,i.jsxs)(r.p,{children:["Note that if an ",(0,i.jsx)(r.em,{children:"array A"})," is displaced to another ",(0,i.jsx)(r.em,{children:"array B"}),", and ",(0,i.jsx)(r.em,{children:"B"})," is displaced to another ",(0,i.jsx)(r.em,{children:"array C"}),", and ",(0,i.jsx)(r.em,{children:"B"})," is altered by ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})}),", ",(0,i.jsx)(r.em,{children:"A"})," must now refer to the adjust contents of ",(0,i.jsx)(r.em,{children:"B"}),". This means that an implementation cannot collapse the chain to make ",(0,i.jsx)(r.em,{children:"A"})," refer to ",(0,i.jsx)(r.em,{children:"C"})," directly and forget that the chain of reference passes through ",(0,i.jsx)(r.em,{children:"B"}),". However, caching techniques are permitted as long as they preserve the semantics specified here."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lisp",children:" \n(adjustable-array-p \n(setq ada (adjust-array \n(make-array \u2019(2 3) \n:adjustable t \n:initial-contents \u2019((a b c) (1 2 3))) \n\u2019(4 6)))) \u2192 T \n(array-dimensions ada) \u2192 (4 6) \n(aref ada 1 1) \u2192 2 \n(setq beta (make-array \u2019(2 3) :adjustable t)) \n\u2192 #2A((NIL NIL NIL) (NIL NIL NIL)) \n(adjust-array beta \u2019(4 6) :displaced-to ada) \n\u2192 #2A((A B C NIL NIL NIL) \n(1 2 3 NIL NIL NIL) \n(NIL NIL NIL NIL NIL NIL) \n(NIL NIL NIL NIL NIL NIL)) \n \n \n(array-dimensions beta) \u2192 (4 6) \n(aref beta 1 1) \u2192 2 \nSuppose that the 4-by-4 array in m looks like this: \n#2A(( alpha beta gamma delta ) \n( epsilon zeta eta theta ) \n( iota kappa lambda mu ) \n( nu xi omicron pi )) \nThen the result of \n(adjust-array m \u2019(3 5) :initial-element \u2019baz) \nis a 3-by-5 array with contents \n#2A(( alpha beta gamma delta baz ) \n( epsilon zeta eta theta baz ) \n( iota kappa lambda mu baz )) \n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(r.p,{children:["An error of ",(0,i.jsx)(s,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"error",children:(0,i.jsx)("b",{children:"error"})})," is signaled if ",(0,i.jsx)(r.em,{children:"fill-pointer"})," is supplied and ",(0,i.jsx)(s,{term:"non-nil",children:(0,i.jsx)("i",{children:"non-nil"})})," but ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," has no ",(0,i.jsx)(s,{styled:!0,term:"fill pointer",children:(0,i.jsx)("i",{children:"fill pointer"})})," ."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"adjustable-array-p"}),", ",(0,i.jsx)(n,{term:"make-array",children:(0,i.jsx)("b",{children:"make-array"})}),", ",(0,i.jsx)(n,{term:"array-dimension-limit",children:(0,i.jsx)("b",{children:"array-dimension-limit"})}),", ",(0,i.jsx)(n,{term:"array-total-size-limit",children:(0,i.jsx)("b",{children:"array-total-size-limit"})}),", ",(0,i.jsx)(r.strong,{children:"array adjustable-array-p"})," ",(0,i.jsx)(s,{term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"adjustable-array-p"})," ",(0,i.jsx)(r.em,{children:"array \u2192 generalized-boolean"})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"\u2014an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"generalized-boolean"}),"\u2014a ",(0,i.jsx)(s,{styled:!0,term:"generalized boolean",children:(0,i.jsx)("i",{children:"generalized boolean"})}),"."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(r.p,{children:["Returns true if and only if ",(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})})," could return a ",(0,i.jsx)(s,{term:"value",children:(0,i.jsx)("i",{children:"value"})})," which is ",(0,i.jsx)(s,{term:"identical",children:(0,i.jsx)("i",{children:"identical"})})," to ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," when given that ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})})," as its first ",(0,i.jsx)(s,{term:"argument",children:(0,i.jsx)("i",{children:"argument"})}),"."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lisp",children:"(adjustable-array-p \n (make-array 5 \n\t     :element-type \u2019character \n\t     \n\t     \n\t     :adjustable t \n\t     :fill-pointer 3)) \u2192 true \n(adjustable-array-p (make-array 4)) \u2192 implementation-dependent \n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(r.p,{children:["Should signal an error of ",(0,i.jsx)(s,{term:"type",children:(0,i.jsx)("i",{children:"type"})})," ",(0,i.jsx)(n,{term:"type-error",children:(0,i.jsx)("b",{children:"type-error"})})," if its argument is not an ",(0,i.jsx)(s,{term:"array",children:(0,i.jsx)("i",{children:"array"})}),"."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(n,{term:"adjust-array",children:(0,i.jsx)("b",{children:"adjust-array"})}),", ",(0,i.jsx)(n,{term:"make-array",children:(0,i.jsx)("b",{children:"make-array"})})]})]})}function t(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}function l(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const d={title:"adjust-array"},c="adjust-array",h={id:"chap-15/bf-c-dictionary/adjust-array_function",title:"adjust-array",description:"Expanded Reference: adjust-array",source:"@site/docs/chap-15/bf-c-dictionary/adjust-array_function.md",sourceDirName:"chap-15/bf-c-dictionary",slug:"/chap-15/bf-c-dictionary/adjust-array_function",permalink:"/cl-language-reference/chap-15/bf-c-dictionary/adjust-array_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-c-dictionary/adjust-array_function.md",tags:[],version:"current",frontMatter:{title:"adjust-array"},sidebar:"tutorialSidebar",previous:{title:"15.2 Arrays Dictionary",permalink:"/cl-language-reference/category/152-arrays-dictionary"},next:{title:"aref",permalink:"/cl-language-reference/chap-15/bf-c-dictionary/aref_accessor"}},j={},o=[{value:"Expanded Reference: adjust-array",id:"expanded-reference-adjust-array",level:2}];function x(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"adjust-array",children:"adjust-array"}),"\n","\n","\n",(0,i.jsx)(t,{}),"\n",(0,i.jsx)(r.h2,{id:"expanded-reference-adjust-array",children:"Expanded Reference: adjust-array"}),"\n",(0,i.jsx)(r.admonition,{type:"tip",children:(0,i.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-lisp",children:"(adjust-array )\n"})})]})}function m(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>t});var i=n(67294);const a={},s=i.createContext(a);function t(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);