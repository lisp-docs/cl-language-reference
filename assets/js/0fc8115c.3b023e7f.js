"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[59051],{7813:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>a,toc:()=>p});var o=i(85893),t=i(11151);function r(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{DictionaryLink:i,GlossaryTerm:r}=n;return i||l("DictionaryLink",!0),r||l("GlossaryTerm",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"loop-finish"})," ",(0,o.jsx)(n.em,{children:"Local Macro"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(i,{styled:!0,term:"loop-finish",children:(0,o.jsx)("b",{children:"loop-finish"})})," ",(0,o.jsx)(n.em,{children:"\u27e8no arguments\u27e9 \u2192"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Description:"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(i,{styled:!0,term:"loop-finish",children:(0,o.jsx)("b",{children:"loop-finish"})})," ",(0,o.jsx)(r,{styled:!0,term:"macro",children:(0,o.jsx)("i",{children:"macro"})})," can be used lexically within an extended ",(0,o.jsx)(i,{styled:!0,term:"loop",children:(0,o.jsx)("b",{children:"loop"})})," ",(0,o.jsx)(r,{styled:!0,term:"form",children:(0,o.jsx)("i",{children:"form"})})," to terminate that ",(0,o.jsx)(r,{styled:!0,term:"form",children:(0,o.jsx)("i",{children:"form"})})," \u201cnormally.\u201d That is, it transfers control to the loop epilogue of the lexically innermost extended ",(0,o.jsx)(i,{styled:!0,term:"loop",children:(0,o.jsx)("b",{children:"loop"})})," ",(0,o.jsx)(r,{styled:!0,term:"form",children:(0,o.jsx)("i",{children:"form"})}),". This permits execution of any ",(0,o.jsx)(n.strong,{children:"finally"})," clause (for effect) and the return of any accumulated result."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lisp",children:';; Terminate the loop, but return the accumulated count. \n(loop for i in \u2019(1 2 3 stop-here 4 5 6) \n      when (symbolp i) do (loop-finish) \n      count i) \n\u2192 3 \n;; The preceding loop is equivalent to: \n(loop for i in \u2019(1 2 3 stop-here 4 5 6) \n      until (symbolp i) \n      count i) \n\u2192 3 \n;; While LOOP-FINISH can be used can be used in a variety of \n;; situations it is really most needed in a situation where a need \n;; to exit is detected at other than the loop\u2019s \u2018top level\u2019 \n;; (where UNTIL or WHEN often work just as well), or where some \n;; computation must occur between the point where a need to exit is \n;; detected and the point where the exit actually occurs. For example: \n(defun tokenize-sentence (string) \n  (macrolet ((add-word (wvar svar) \n\t       \u2018(when ,wvar \n\t\t  (push (coerce (nreverse ,wvar) \u2019string) ,svar) \n\t\t  (setq ,wvar nil)))) \n    \n    \n    **loop-finish** \n    (loop with word = \u2019() and sentence = \u2019() and endpos = nil \n\t  for i below (length string) \n\t  do (let ((char (aref string i))) \n\t       (case char \n\t\t (#\\Space (add-word word sentence)) \n\t\t (#\\. (setq endpos (1+ i)) (loop-finish)) \n\t\t (otherwise (push char word)))) \n\t  finally (add-word word sentence) \n\t  (return (values (nreverse sentence) endpos))))) \n\u2192 TOKENIZE-SENTENCE \n(tokenize-sentence "this is a sentence. this is another sentence.") \n\u2192 ("this" "is" "a" "sentence"), 19 \n(tokenize-sentence "this is a sentence") \n\u2192 ("this" "is" "a" "sentence"), NIL \n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,o.jsx)(n.p,{children:"Transfers control."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,o.jsxs)(n.p,{children:["Whether or not ",(0,o.jsx)(i,{styled:!0,term:"loop-finish",children:(0,o.jsx)("b",{children:"loop-finish"})})," is ",(0,o.jsx)(r,{styled:!0,term:"fbound",children:(0,o.jsx)("i",{children:"fbound"})})," in the ",(0,o.jsx)(r,{styled:!0,term:"global environment",children:(0,o.jsx)("i",{children:"global environment"})})," is ",(0,o.jsx)(r,{styled:!0,term:"implementation-dependent",children:(0,o.jsx)("i",{children:"implementation-dependent"})}),"; however, the restrictions on redefinition and ",(0,o.jsx)(n.em,{children:"shadowing"})," of ",(0,o.jsx)(i,{styled:!0,term:"loop-finish",children:(0,o.jsx)("b",{children:"loop-finish"})})," are the same as for ",(0,o.jsx)(r,{styled:!0,term:"symbol",children:(0,o.jsx)("i",{children:"symbols"})})," in the COMMON-LISP ",(0,o.jsx)(r,{styled:!0,term:"package",children:(0,o.jsx)("i",{children:"package"})})," which are ",(0,o.jsx)(r,{styled:!0,term:"fbound",children:(0,o.jsx)("i",{children:"fbound"})})," in the ",(0,o.jsx)(r,{styled:!0,term:"global environment",children:(0,o.jsx)("i",{children:"global environment"})}),". The consequences of attempting to use ",(0,o.jsx)(i,{styled:!0,term:"loop-finish",children:(0,o.jsx)("b",{children:"loop-finish"})})," outside of ",(0,o.jsx)(i,{styled:!0,term:"loop",children:(0,o.jsx)("b",{children:"loop"})})," are undefined."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(i,{styled:!0,term:"loop",children:(0,o.jsx)("b",{children:"loop"})}),", Section 6.1 (The LOOP Facility)"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Notes:"})})]})}function s(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const c={title:"loop-finish"},d="loop-finish",a={id:"chap-6/g-c-dictionary/loop-finish_local-macro",title:"loop-finish",description:"Expanded Reference: loop-finish",source:"@site/docs/chap-6/g-c-dictionary/loop-finish_local-macro.md",sourceDirName:"chap-6/g-c-dictionary",slug:"/chap-6/g-c-dictionary/loop-finish_local-macro",permalink:"/cl-language-reference/chap-6/g-c-dictionary/loop-finish_local-macro",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-6/g-c-dictionary/loop-finish_local-macro.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"loop-finish"},sidebar:"tutorialSidebar",previous:{title:"dotimes",permalink:"/cl-language-reference/chap-6/g-c-dictionary/dotimes_macro"},next:{title:"loop",permalink:"/cl-language-reference/chap-6/g-c-dictionary/loop_macro"}},h={},p=[{value:"Expanded Reference: loop-finish",id:"expanded-reference-loop-finish",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"loop-finish",children:"loop-finish"}),"\n","\n","\n",(0,o.jsx)(s,{}),"\n",(0,o.jsx)(n.h2,{id:"expanded-reference-loop-finish",children:"Expanded Reference: loop-finish"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lisp",children:"(loop-finish )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>s});var o=i(67294);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);