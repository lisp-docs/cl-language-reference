"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[80093],{61603:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var s=r(85893),t=r(11151);function i(e){const n={code:"code",del:"del",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"restart-case"})," ",(0,s.jsx)(n.em,{children:"Macro"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"restart-case"})," ",(0,s.jsx)(n.em,{children:"restartable-form &#123;\u2193clause&#125; \u2192 &#123;result&#125;"}),"*"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"clause::"}),"=(",(0,s.jsx)(n.em,{children:"case-name lambda-list"})]}),"\n",(0,s.jsxs)(n.p,{children:["[[ ",":interactive"," ",(0,s.jsx)(n.em,{children:"interactive-expression |"})," ",":report"," ",(0,s.jsx)(n.em,{children:"report-expression |"})," ",":test"," ",(0,s.jsx)(n.em,{children:"test-expression"})," ]] ",(0,s.jsx)(n.em,{children:"&#123;declaration&#125;"}),"* ",(0,s.jsx)(n.em,{children:"&#123;form&#125;"}),"*)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"restartable-form"}),"\u2014a ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"case-name"}),"\u2014a ",(0,s.jsx)(n.em,{children:"symbol"})," or ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"lambda-list"}),"\u2014an ",(0,s.jsx)(n.em,{children:"ordinary lambda list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"interactive-expression"}),"\u2014a ",(0,s.jsx)(n.em,{children:"symbol"})," or a ",(0,s.jsx)(n.em,{children:"lambda expression"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"report-expression"}),"\u2014a ",(0,s.jsx)(n.em,{children:"string"}),", a ",(0,s.jsx)(n.em,{children:"symbol"}),", or a ",(0,s.jsx)(n.em,{children:"lambda expression"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"test-expression"}),"\u2014a ",(0,s.jsx)(n.em,{children:"symbol"})," or a ",(0,s.jsx)(n.em,{children:"lambda expression"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"declaration"}),"\u2014a ",(0,s.jsx)(n.strong,{children:"declare"})," ",(0,s.jsx)(n.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"form"}),"\u2014a ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"results"}),"\u2014the ",(0,s.jsx)(n.em,{children:"values"})," resulting from the ",(0,s.jsx)(n.em,{children:"evaluation"})," of ",(0,s.jsx)(n.em,{children:"restartable-form"}),", or the ",(0,s.jsx)(n.em,{children:"values"})," returned by the last ",(0,s.jsx)(n.em,{children:"form"})," executed in a chosen ",(0,s.jsx)(n.em,{children:"clause"}),", or ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"restart-case"})," evaluates ",(0,s.jsx)(n.em,{children:"restartable-form"})," in a ",(0,s.jsx)(n.em,{children:"dynamic environment"})," where the clauses have special meanings as points to which control may be transferred. If ",(0,s.jsx)(n.em,{children:"restartable-form"})," finishes executing and returns any values, all values returned are returned by ",(0,s.jsx)(n.strong,{children:"restart-case"})," and processing has completed. While ",(0,s.jsx)(n.em,{children:"restartable-form"})," is executing, any code may transfer control to one of the clauses (see"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"restart-case"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"invoke-restart"}),"). If a transfer occurs, the forms in the body of that clause is evaluated and any values returned by the last such form are returned by ",(0,s.jsx)(n.strong,{children:"restart-case"}),". In this case, the dynamic state is unwound appropriately (so that the restarts established around the ",(0,s.jsx)(n.em,{children:"restartable-form"})," are no longer active) prior to execution of the clause."]}),"\n",(0,s.jsxs)(n.p,{children:["If there are no ",(0,s.jsx)(n.em,{children:"forms"})," in a selected clause, ",(0,s.jsx)(n.strong,{children:"restart-case"})," returns ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"case-name"})," is a ",(0,s.jsx)(n.em,{children:"symbol"}),", it names this restart."]}),"\n",(0,s.jsxs)(n.p,{children:["It is possible to have more than one clause use the same ",(0,s.jsx)(n.em,{children:"case-name"}),". In this case, the first clause with that name is found by ",(0,s.jsx)(n.strong,{children:"find-restart"}),". The other clauses are accessible using ",(0,s.jsx)(n.strong,{children:"compute-restarts"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Each ",(0,s.jsx)(n.em,{children:"arglist"})," is an ",(0,s.jsx)(n.em,{children:"ordinary lambda list"})," to be bound during the execution of its corresponding ",(0,s.jsx)(n.em,{children:"forms"}),". These parameters are used by the ",(0,s.jsx)(n.strong,{children:"restart-case"})," clause to receive any necessary data from a call to ",(0,s.jsx)(n.strong,{children:"invoke-restart"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["By default, ",(0,s.jsx)(n.strong,{children:"invoke-restart-interactively"})," passes no arguments and all arguments must be optional in order to accomodate interactive restarting. However, the arguments need not be optional if the ",":interactive"," keyword has been used to inform ",(0,s.jsx)(n.strong,{children:"invoke-restart-interactively"})," about how to compute a proper argument list."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Keyword"})," options have the following meaning."]}),"\n",(0,s.jsx)(n.p,{children:":interactive"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"value"})," supplied by ",":interactive"," ",(0,s.jsx)(n.em,{children:"value"})," must be a suitable argument to ",(0,s.jsx)(n.strong,{children:"function"}),". (function ",(0,s.jsx)(n.em,{children:"value"}),") is evaluated in the current lexical environment. It should return a ",(0,s.jsx)(n.em,{children:"function"})," of no arguments which returns arguments to be used by ",(0,s.jsx)(n.strong,{children:"invoke-restart-interactively"})," when it is invoked. ",(0,s.jsx)(n.strong,{children:"invoke-restart-interactively"})," is called in the dynamic environment available prior to any restart attempt, and uses ",(0,s.jsx)(n.em,{children:"query I/O"})," for user interaction."]}),"\n",(0,s.jsxs)(n.p,{children:["If a restart is invoked interactively but no ",":interactive"," option was supplied, the argument list used in the invocation is the empty list."]}),"\n",(0,s.jsx)(n.p,{children:":report"}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.em,{children:"value"})," supplied by ",":report"," ",(0,s.jsx)(n.em,{children:"value"})," is a ",(0,s.jsx)(n.em,{children:"lambda expression"})," or a ",(0,s.jsx)(n.em,{children:"symbol"}),", it must be acceptable to ",(0,s.jsx)(n.strong,{children:"function"}),". (function ",(0,s.jsx)(n.em,{children:"value"}),") is evaluated in the current lexical environment. It should return a ",(0,s.jsx)(n.em,{children:"function"})," of one argument, a ",(0,s.jsx)(n.em,{children:"stream"}),", which prints on the ",(0,s.jsx)(n.em,{children:"stream"})," a description of the restart. This ",(0,s.jsx)(n.em,{children:"function"})," is called whenever the restart is printed while ",(0,s.jsx)(n.strong,{children:"*print-escape*"})," is ",(0,s.jsx)(n.strong,{children:"nil"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"value"})," is a ",(0,s.jsx)(n.em,{children:"string"}),", it is a shorthand for"]}),"\n",(0,s.jsx)(n.p,{children:"(lambda (stream) (write-string value stream))"}),"\n",(0,s.jsx)(n.p,{children:"If a named restart is asked to report but no report information has been supplied, the name of the restart is used in generating default report text."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"restart-case"})}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.strong,{children:"*print-escape*"})," is ",(0,s.jsx)(n.strong,{children:"nil"}),", the printer uses the report information for a restart. For example, a debugger might announce the action of typing a \u201ccontinue\u201d command by:"]}),"\n",(0,s.jsxs)(n.p,{children:['(format t "~&~S \u2013 ',(0,s.jsx)(n.del,{children:"A"}),'%" \u2019',":continue"," some-restart)"]}),"\n",(0,s.jsx)(n.p,{children:"which might then display as something like:"}),"\n",(0,s.jsxs)(n.p,{children:[":CONTINUE"," \u2013 Return to command level"]}),"\n",(0,s.jsxs)(n.p,{children:["The consequences are unspecified if an unnamed restart is specified but no ",":report"," option is provided."]}),"\n",(0,s.jsx)(n.p,{children:":test"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"value"})," supplied by ",":test"," ",(0,s.jsx)(n.em,{children:"value"})," must be a suitable argument to ",(0,s.jsx)(n.strong,{children:"function"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["(function ",(0,s.jsx)(n.em,{children:"value"}),") is evaluated in the current lexical environment. It should return a ",(0,s.jsx)(n.em,{children:"function"})," of one ",(0,s.jsx)(n.em,{children:"argument"}),", the ",(0,s.jsx)(n.em,{children:"condition"}),", that returns ",(0,s.jsx)(n.em,{children:"true"})," if the restart is to be considered visible."]}),"\n",(0,s.jsx)(n.p,{children:"The default for this option is equivalent to (lambda (c) (declare (ignore c)) t)."}),"\n",(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.em,{children:"restartable-form"})," is a ",(0,s.jsx)(n.em,{children:"list"})," whose ",(0,s.jsx)(n.em,{children:"car"})," is any of the ",(0,s.jsx)(n.em,{children:"symbols"})," ",(0,s.jsx)(n.strong,{children:"signal"}),", ",(0,s.jsx)(n.strong,{children:"error"}),", ",(0,s.jsx)(n.strong,{children:"cerror"}),", or ",(0,s.jsx)(n.strong,{children:"warn"})," (or is a ",(0,s.jsx)(n.em,{children:"macro form"})," which macroexpands into such a ",(0,s.jsx)(n.em,{children:"list"}),"), then ",(0,s.jsx)(n.strong,{children:"with-condition-restarts"})," is used implicitly to associate the indicated ",(0,s.jsx)(n.em,{children:"restarts"})," with the ",(0,s.jsx)(n.em,{children:"condition"})," to be signaled."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:' \n\n\n\n(restart-case \n\n\n\n(handler-bind ((error #\u2019(lambda (c) \n\n\n\n(declare (ignore condition)) \n\n\n\n(invoke-restart \u2019my-restart 7)))) \n\n\n\n(error "Foo.")) \n\n\n\n(my-restart (&optional v) v)) \n\n\n\n*\u2192* 7 \n\n\n\n(define-condition food-error (error) ()) \n\n\n\n*\u2192* FOOD-ERROR \n\n\n\n(define-condition bad-tasting-sundae (food-error) \n\n\n\n((ice-cream :initarg :ice-cream :reader bad-tasting-sundae-ice-cream) \n\n\n\n(sauce :initarg :sauce :reader bad-tasting-sundae-sauce) \n\n\n\n(topping :initarg :topping :reader bad-tasting-sundae-topping)) \n\n\n\n(:report (lambda (condition stream) \n\n\n\n(format stream "Bad tasting sundae with ~S, ~S, and ~S" \n\n\n\n(bad-tasting-sundae-ice-cream condition) \n\n\n\n(bad-tasting-sundae-sauce condition) \n\n\n\n(bad-tasting-sundae-topping condition))))) \n\n\n\n*\u2192* BAD-TASTING-SUNDAE \n\n\n\n(defun all-start-with-same-letter (symbol1 symbol2 symbol3) \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n**restart-case** \n\n\n\n(let ((first-letter (char (symbol-name symbol1) 0))) \n\n\n\n(and (eql first-letter (char (symbol-name symbol2) 0)) \n\n\n\n(eql first-letter (char (symbol-name symbol3) 0))))) \n\n\n\n*\u2192* ALL-START-WITH-SAME-LETTER \n\n\n\n(defun read-new-value () \n\n\n\n(format t "Enter a new value: ") \n\n\n\n(multiple-value-list (eval (read)))) \n\n\n\n*\u2192* READ-NEW-VALUE \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n**restart-case** \n\n\n\n(defun verify-or-fix-perfect-sundae (ice-cream sauce topping) (do () \n\n\n\n((all-start-with-same-letter ice-cream sauce topping)) \n\n\n\n(restart-case \n\n\n\n(error \u2019bad-tasting-sundae \n\n\n\n:ice-cream ice-cream \n\n\n\n:sauce sauce \n\n\n\n:topping topping) \n\n\n\n(use-new-ice-cream (new-ice-cream) \n\n\n\n:report "Use a new ice cream." \n\n\n\n:interactive read-new-value \n\n\n\n(setq ice-cream new-ice-cream)) \n\n\n\n(use-new-sauce (new-sauce) \n\n\n\n:report "Use a new sauce." \n\n\n\n:interactive read-new-value \n\n\n\n(setq sauce new-sauce)) \n\n\n\n(use-new-topping (new-topping) \n\n\n\n:report "Use a new topping." \n\n\n\n:interactive read-new-value \n\n\n\n(setq topping new-topping)))) \n\n\n\n(values ice-cream sauce topping)) \n\n\n\n*\u2192* VERIFY-OR-FIX-PERFECT-SUNDAE \n\n\n\n(verify-or-fix-perfect-sundae \u2019vanilla \u2019caramel \u2019cherry) \u25b7 Error: Bad tasting sundae with VANILLA, CARAMEL, and CHERRY. \u25b7 To continue, type :CONTINUE followed by an option number: \u25b7 1: Use a new ice cream. \n\n\n\n\u25b7 2: Use a new sauce. \n\n\n\n\u25b7 3: Use a new topping. \n\n\n\n\u25b7 4: Return to Lisp Toplevel. \n\n\n\n\u25b7 Debug> :continue 1 \n\n\n\n\u25b7 Use a new ice cream. \n\n\n\n\u25b7 Enter a new ice cream: \u2019chocolate \n\n\n\n*\u2192* CHOCOLATE, CARAMEL, CHERRY \n\n\n\n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"restart-bind"}),", ",(0,s.jsx)(n.strong,{children:"with-simple-restart"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.p,{children:["(restart-case ",(0,s.jsx)(n.em,{children:"expression"})]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"name1 arglist1"})," ...",(0,s.jsx)(n.em,{children:"options1"}),"... . ",(0,s.jsx)(n.em,{children:"body1"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"name2 arglist2"})," ...",(0,s.jsx)(n.em,{children:"options2"}),"... . ",(0,s.jsx)(n.em,{children:"body2"}),"))"]}),"\n",(0,s.jsx)(n.p,{children:"is essentially equivalent to"}),"\n",(0,s.jsxs)(n.p,{children:["(block #1=#",":g0001"]}),"\n",(0,s.jsxs)(n.p,{children:["(let ((#2=#",":g0002"," nil))"]}),"\n",(0,s.jsx)(n.p,{children:"(tagbody"}),"\n",(0,s.jsx)(n.p,{children:"(restart-bind ((name1 #\u2019(lambda (&rest temp)"}),"\n",(0,s.jsx)(n.p,{children:"(setq #2# temp)"}),"\n",(0,s.jsxs)(n.p,{children:["(go #3=#",":g0003","))"]}),"\n",(0,s.jsxs)(n.p,{children:["...",(0,s.jsx)(n.em,{children:"slightly-transformed-options1"}),"...)"]}),"\n",(0,s.jsx)(n.p,{children:"(name2 #\u2019(lambda (&rest temp)"}),"\n",(0,s.jsx)(n.p,{children:"(setq #2# temp)"}),"\n",(0,s.jsxs)(n.p,{children:["(go #4=#",":g0004","))"]}),"\n",(0,s.jsxs)(n.p,{children:["...",(0,s.jsx)(n.em,{children:"slightly-transformed-options2"}),"...))"]}),"\n",(0,s.jsxs)(n.p,{children:["(return-from #1# ",(0,s.jsx)(n.em,{children:"expression"}),"))"]}),"\n",(0,s.jsx)(n.p,{children:"#3# (return-from #1#"}),"\n",(0,s.jsxs)(n.p,{children:["(apply #\u2019(lambda ",(0,s.jsx)(n.em,{children:"arglist1"})," . ",(0,s.jsx)(n.em,{children:"body1"}),") #2#))"]}),"\n",(0,s.jsx)(n.p,{children:"#4# (return-from #1#"}),"\n",(0,s.jsxs)(n.p,{children:["(apply #\u2019(lambda ",(0,s.jsx)(n.em,{children:"arglist2"})," . ",(0,s.jsx)(n.em,{children:"body2"}),") #2#)))))"]}),"\n",(0,s.jsx)(n.p,{children:"Unnamed restarts are generally only useful interactively and an interactive option which has no description is of little value. Implementations are encouraged to warn if an unnamed restart is used and no report information is provided at compilation time. At runtime, this error might be noticed when entering the debugger. Since signaling an error would probably cause recursive entry into the debugger (causing yet another recursive error, etc.) it is suggested that the debugger print some indication of such problems when they occur but not actually signal errors."}),"\n",(0,s.jsx)(n.p,{children:"(restart-case (signal fred)"}),"\n",(0,s.jsx)(n.p,{children:"(a ...)"}),"\n",(0,s.jsx)(n.p,{children:"(b ...))"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"\u2261"})}),"\n",(0,s.jsx)(n.p,{children:"(restart-case"}),"\n",(0,s.jsx)(n.p,{children:"(with-condition-restarts fred"}),"\n",(0,s.jsx)(n.p,{children:"(list (find-restart \u2019a)"}),"\n",(0,s.jsx)(n.p,{children:"(find-restart \u2019b))"}),"\n",(0,s.jsx)(n.p,{children:"(signal fred))"}),"\n",(0,s.jsx)(n.p,{children:"(a ...)"}),"\n",(0,s.jsx)(n.p,{children:"(b ...))"})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const c={},l="restart-case",o={id:"chap-9/j-c-dictionary/restartcase",title:"restart-case",description:"Expanded Reference: restart-case",source:"@site/docs/chap-9/j-c-dictionary/restartcase.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/restartcase",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/restartcase",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/restartcase.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"restart-bind",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/restartbind"},next:{title:"restart-name",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/restartname"}},d={},h=[{value:"Expanded Reference: restart-case",id:"expanded-reference-restart-case",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"restart-case",children:"restart-case"}),"\n","\n","\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-restart-case",children:"Expanded Reference: restart-case"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(restart-case )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>a});var s=r(67294);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);