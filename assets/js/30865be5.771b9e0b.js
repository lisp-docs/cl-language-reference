"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[23371],{25077:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var s=i(85893),r=i(11151);const t={title:"I",sidebar_position:105},c=void 0,a={id:"chap-26/i",title:"I",description:"I",source:"@site/docs/chap-26/i.md",sourceDirName:"chap-26",slug:"/chap-26/i",permalink:"/cl-language-reference/docs/chap-26/i",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-26/i.md",tags:[],version:"current",sidebarPosition:105,frontMatter:{title:"I",sidebar_position:105},sidebar:"tutorialSidebar",previous:{title:"H",permalink:"/cl-language-reference/docs/chap-26/h"},next:{title:"K",permalink:"/cl-language-reference/docs/chap-26/k"}},d={},l=[];function o(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"I"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"I/O customization variable"})," ",(0,s.jsx)(n.em,{children:"n."})," one of the ",(0,s.jsx)(n.em,{children:"stream variables"})," in Figure 26\u20132, or some other (",(0,s.jsx)(n.em,{children:"implementation-defined"}),") ",(0,s.jsx)(n.em,{children:"stream variable"})," that is defined by the ",(0,s.jsx)(n.em,{children:"implementation"})," to be an ",(0,s.jsx)(n.em,{children:"I/O customization variable"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["|",(0,s.jsx)("p",{children:"*debug-io* *error-io* query-io* "}),(0,s.jsx)("p",{children:"*standard-input* *standard-output* *trace-output*"}),"|"]}),"\n",(0,s.jsx)(n.p,{children:"| :- |"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Figure 26\u20132. Standardized I/O Customization Variables"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"identical"})," ",(0,s.jsx)(n.em,{children:"adj."})," the ",(0,s.jsx)(n.em,{children:"same"})," under ",(0,s.jsx)(n.strong,{children:"eq"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"identifier"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. a ",(0,s.jsx)(n.em,{children:"symbol"})," used to identify or to distinguish ",(0,s.jsx)(n.em,{children:"names"}),". 2. a ",(0,s.jsx)(n.em,{children:"string"})," used the same way."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"immutable"})," ",(0,s.jsx)(n.em,{children:"adj."})," not subject to change, either because no ",(0,s.jsx)(n.em,{children:"operator"})," is provided which is capable of effecting such change or because some constraint exists which prohibits the use of an ",(0,s.jsx)(n.em,{children:"operator"})," that might otherwise be capable of effecting such a change. Except as explicitly indicated otherwise, ",(0,s.jsx)(n.em,{children:"implementations"})," are not required to detect attempts to modify ",(0,s.jsx)(n.em,{children:"immutable objects"})," or ",(0,s.jsx)(n.em,{children:"cells"}),'; the consequences of attempting to make such modification are undefined. "Numbers are immutable."']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implementation"})," ",(0,s.jsx)(n.em,{children:"n."})," a system, mechanism, or body of ",(0,s.jsx)(n.em,{children:"code"})," that implements the semantics of Common Lisp."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implementation limit"})," ",(0,s.jsx)(n.em,{children:"n."})," a restriction imposed by an ",(0,s.jsx)(n.em,{children:"implementation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implementation-defined"})," ",(0,s.jsx)(n.em,{children:"adj. implementation-dependent"}),", but required by this specification to be defined by each ",(0,s.jsx)(n.em,{children:"conforming implementation"})," and to be documented by the corresponding implementor."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implementation-dependent"})," ",(0,s.jsx)(n.em,{children:"adj."})," describing a behavior or aspect of Common Lisp which has been deliberately left unspecified, that might be defined in some  ",(0,s.jsx)(n.em,{children:"conforming implementations"})," but not in others, and whose details may differ between ",(0,s.jsx)(n.em,{children:"implementations"}),". A ",(0,s.jsx)(n.em,{children:"conforming implementation"})," is encouraged (but not required) to document its treatment of each item in this specification which is marked  ",(0,s.jsx)(n.em,{children:"implementation-dependent"}),', although in some cases such documentation might simply identify the item as "undefined."']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implementation-independent"})," ",(0,s.jsx)(n.em,{children:"adj."})," used to identify or emphasize a behavior or aspect of Common Lisp which does not vary between ",(0,s.jsx)(n.em,{children:"conforming implementations"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implicit block"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"block"})," introduced by a ",(0,s.jsx)(n.em,{children:"macro form"})," rather than by an explicit ",(0,s.jsx)(n.strong,{children:"block"})," ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implicit compilation"})," ",(0,s.jsx)(n.em,{children:"n. compilation"})," performed during ",(0,s.jsx)(n.em,{children:"evaluation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implicit progn"})," ",(0,s.jsx)(n.em,{children:"n."})," an ordered set of adjacent ",(0,s.jsx)(n.em,{children:"forms"})," appearing in another ",(0,s.jsx)(n.em,{children:"form"}),", and defined by their context in that ",(0,s.jsx)(n.em,{children:"form"})," to be executed as if within a ",(0,s.jsx)(n.strong,{children:"progn"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"implicit tagbody"})," ",(0,s.jsx)(n.em,{children:"n."})," an ordered set of adjacent ",(0,s.jsx)(n.em,{children:"forms"})," and/or ",(0,s.jsx)(n.em,{children:"tags"})," appearing in another ",(0,s.jsx)(n.em,{children:"form"}),", and defined by their context in that ",(0,s.jsx)(n.em,{children:"form"})," to be executed as if within a ",(0,s.jsx)(n.strong,{children:"tagbody"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"import"})," ",(0,s.jsx)(n.em,{children:"v.t."})," (a ",(0,s.jsx)(n.em,{children:"symbol"})," into a ",(0,s.jsx)(n.em,{children:"package"}),") to make the ",(0,s.jsx)(n.em,{children:"symbol"})," be ",(0,s.jsx)(n.em,{children:"present"})," in the ",(0,s.jsx)(n.em,{children:"package"}),". ",(0,s.jsx)(n.strong,{children:"improper list"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"list"})," which is not a ",(0,s.jsx)(n.em,{children:"proper list"}),": a ",(0,s.jsx)(n.em,{children:"circular list"})," or a ",(0,s.jsx)(n.em,{children:"dotted list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"inaccessible"})," ",(0,s.jsx)(n.em,{children:"adj."})," not ",(0,s.jsx)(n.em,{children:"accessible"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"indefinite extent"})," ",(0,s.jsx)(n.em,{children:"n."})," an ",(0,s.jsx)(n.em,{children:"extent"}),' whose duration is unlimited. "Most Common Lisp objects have indefinite extent."']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"indefinite scope"})," ",(0,s.jsx)(n.em,{children:"n. scope"})," that is unlimited."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"indicator"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"property indicator"})," ."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"indirect instance"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"class C"}),(0,s.jsx)("sub",{children:"1"}),") an ",(0,s.jsx)(n.em,{children:"object"})," of ",(0,s.jsx)(n.em,{children:"class C"}),(0,s.jsx)("sub",{children:"2"}),", where ",(0,s.jsx)(n.em,{children:"C"}),(0,s.jsx)("sub",{children:"2"})," is a ",(0,s.jsx)(n.em,{children:"subclass"})," of ",(0,s.jsx)(n.em,{children:"C"}),(0,s.jsx)("sub",{children:"1"}),'. "An integer is an indirect instance of the class ',(0,s.jsx)(n.strong,{children:"number"}),'."']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"inherit"})," ",(0,s.jsx)(n.em,{children:"v.t."})," 1. to receive or acquire a quality, trait, or characteristic; to gain access to a feature defined elsewhere. 2. (a ",(0,s.jsx)(n.em,{children:"class"}),") to acquire the structure and behavior defined by a ",(0,s.jsx)(n.em,{children:"superclass"}),". 3. (a ",(0,s.jsx)(n.em,{children:"package"}),") to make ",(0,s.jsx)(n.em,{children:"symbols exported"})," by another ",(0,s.jsx)(n.em,{children:"package accessible"})," by using ",(0,s.jsx)(n.strong,{children:"use-package"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"initial pprint dispatch table"})," ",(0,s.jsx)(n.em,{children:"n."})," the ",(0,s.jsx)(n.em,{children:"value"})," of ",(0,s.jsx)(n.strong,{children:"*print-pprint-dispatch*"})," at the time the ",(0,s.jsx)(n.em,{children:"Lisp image"})," is started."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"initial readtable"})," ",(0,s.jsx)(n.em,{children:"n."})," the ",(0,s.jsx)(n.em,{children:"value"})," of ",(0,s.jsx)(n.strong,{children:"*readtable*"})," at the time the ",(0,s.jsx)(n.em,{children:"Lisp image"})," is started."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"initialization argument list"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"property list"})," of initialization argument ",(0,s.jsx)(n.em,{children:"names"})," and ",(0,s.jsx)(n.em,{children:"values"})," used in the protocol for initializing and reinitializing ",(0,s.jsx)(n.em,{children:"instances"})," of ",(0,s.jsx)(n.em,{children:"classes"}),". See Section 7.1 (Object Creation and Initialization)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"initialization form"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"form"})," used to supply the initial ",(0,s.jsx)(n.em,{children:"value"})," for a ",(0,s.jsx)(n.em,{children:"slot"})," or ",(0,s.jsx)(n.em,{children:"variable"}),'. "The initialization form for a slot in a ',(0,s.jsx)(n.strong,{children:"defclass"})," form is introduced by the keyword ",":initform",'."']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"input"})," ",(0,s.jsx)(n.em,{children:"adj."})," (of a ",(0,s.jsx)(n.em,{children:"stream"}),") supporting input operations (",(0,s.jsx)(n.em,{children:"i.e."}),', being a "data source"). An ',(0,s.jsx)(n.em,{children:"input stream"})," might also be an ",(0,s.jsx)(n.em,{children:"output stream"}),", in which case it is sometimes called a ",(0,s.jsx)(n.em,{children:"bidirectional stream"}),". See the ",(0,s.jsx)(n.em,{children:"function"})," ",(0,s.jsx)(n.strong,{children:"input-stream-p"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"instance"})," ",(0,s.jsx)(n.em,{children:"n."})," 1. a ",(0,s.jsx)(n.em,{children:"direct instance"}),". 2. a ",(0,s.jsx)(n.em,{children:"generalized instance"}),". 3. an ",(0,s.jsx)(n.em,{children:"indirect instance"}),". ",(0,s.jsx)(n.strong,{children:"integer"})," ",(0,s.jsx)(n.em,{children:"n."})," an ",(0,s.jsx)(n.em,{children:"object"})," of ",(0,s.jsx)(n.em,{children:"type"})," ",(0,s.jsx)(n.strong,{children:"integer"}),", which represents a mathematical integer."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"interactive stream"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"stream"})," on which it makes sense to perform interactive querying. See Section 21.1.1.1.3 (Interactive Streams)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"intern"})," ",(0,s.jsx)(n.em,{children:"v.t."})," 1. (a ",(0,s.jsx)(n.em,{children:"string"})," in a ",(0,s.jsx)(n.em,{children:"package"}),") to look up the ",(0,s.jsx)(n.em,{children:"string"})," in the ",(0,s.jsx)(n.em,{children:"package"}),", returning either a ",(0,s.jsx)(n.em,{children:"symbol"})," with that ",(0,s.jsx)(n.em,{children:"name"})," which was already ",(0,s.jsx)(n.em,{children:"accessible"})," in the ",(0,s.jsx)(n.em,{children:"package"})," or a newly created ",(0,s.jsx)(n.em,{children:"internal symbol"})," of the ",(0,s.jsx)(n.em,{children:"package"})," with that ",(0,s.jsx)(n.em,{children:"name"}),". 2. ",(0,s.jsx)(n.em,{children:"Idiom."})," generally, to observe a protocol whereby objects which are equivalent or have equivalent names under some predicate defined by the protocol are mapped to a single canonical object."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"internal symbol"})," ",(0,s.jsx)(n.em,{children:"n."})," (of a ",(0,s.jsx)(n.em,{children:"package"}),") a symbol which is ",(0,s.jsx)(n.em,{children:"accessible"})," in the ",(0,s.jsx)(n.em,{children:"package"}),", but which is not an ",(0,s.jsx)(n.em,{children:"external symbol"})," of the ",(0,s.jsx)(n.em,{children:"package"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"internal time"})," ",(0,s.jsx)(n.em,{children:"n. time"}),", represented as an ",(0,s.jsx)(n.em,{children:"integer"})," number of ",(0,s.jsx)(n.em,{children:"internal time units"}),". ",(0,s.jsx)(n.em,{children:"Absolute internal time"})," is measured as an offset from an arbitrarily chosen,  ",(0,s.jsx)(n.em,{children:"implementation-dependent"})," base. See Section 25.1.4.3 (Internal Time)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"internal time unit"})," ",(0,s.jsx)(n.em,{children:"n."})," a unit of time equal to 1*/n* of a second, for some ",(0,s.jsx)(n.em,{children:"implementation defined integer"})," value of ",(0,s.jsx)(n.em,{children:"n"}),". See the ",(0,s.jsx)(n.em,{children:"variable"})," ",(0,s.jsx)(n.strong,{children:"internal-time-units-per-second"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"interned"})," ",(0,s.jsx)(n.em,{children:"adj. Trad."})," 1. (of a ",(0,s.jsx)(n.em,{children:"symbol"}),") ",(0,s.jsx)(n.em,{children:"accessible"}),(0,s.jsx)("sub",{children:"3"})," in any ",(0,s.jsx)(n.em,{children:"package"}),". 2. (of a ",(0,s.jsx)(n.em,{children:"symbol"})," in a specific ",(0,s.jsx)(n.em,{children:"package"}),") ",(0,s.jsx)(n.em,{children:"present"})," in that ",(0,s.jsx)(n.em,{children:"package"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"interpreted function"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"function"})," that is not a ",(0,s.jsx)(n.em,{children:"compiled function"}),". (It is possible for there to be a ",(0,s.jsx)(n.em,{children:"conforming implementation"})," which has no ",(0,s.jsx)(n.em,{children:"interpreted functions"}),", but a ",(0,s.jsx)(n.em,{children:"conforming program"})," must not assume that all ",(0,s.jsx)(n.em,{children:"functions"})," are ",(0,s.jsx)(n.em,{children:"compiled functions"}),".)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"interpreted implementation"})," ",(0,s.jsx)(n.em,{children:"n."})," an ",(0,s.jsx)(n.em,{children:"implementation"})," that uses an execution strategy for ",(0,s.jsx)(n.em,{children:"interpreted functions"}),' that does not involve a one-time semantic analysis pre-pass, and instead uses "lazy" (and sometimes repetitious) semantic analysis of ',(0,s.jsx)(n.em,{children:"forms"})," as they are encountered during execution."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"interval designator"})," ",(0,s.jsx)(n.em,{children:"n."})," (of ",(0,s.jsx)(n.em,{children:"type T"}),") an ordered pair of ",(0,s.jsx)(n.em,{children:"objects"})," that describe a ",(0,s.jsx)(n.em,{children:"subtype"})," of ",(0,s.jsx)(n.em,{children:"T"})," by delimiting an interval on the real number line. See Section 12.1.6 (Interval Designators)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"invalid"})," ",(0,s.jsx)(n.em,{children:"n."}),", ",(0,s.jsx)(n.em,{children:"adj."})," 1. ",(0,s.jsx)(n.em,{children:"n."})," a possible ",(0,s.jsx)(n.em,{children:"constituent trait"})," of a ",(0,s.jsx)(n.em,{children:"character"})," which if present signifies that the ",(0,s.jsx)(n.em,{children:"character"})," cannot ever appear in a ",(0,s.jsx)(n.em,{children:"token"})," except under the control of a ",(0,s.jsx)(n.em,{children:"single escape character"})," . For details, see Section 2.1.4.1 (Constituent Characters). 2. ",(0,s.jsx)(n.em,{children:"adj."})," (of a ",(0,s.jsx)(n.em,{children:"character"})," ) being a ",(0,s.jsx)(n.em,{children:"character"})," that has ",(0,s.jsx)(n.em,{children:"syntax type constituent"})," in the ",(0,s.jsx)(n.em,{children:"current readtable"})," and that has the ",(0,s.jsx)(n.em,{children:"constituent trait invalid"})," ",(0,s.jsx)("sub",{children:"1"}),". See Figure 2\u20138."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"iteration form"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"compound form"})," whose ",(0,s.jsx)(n.em,{children:"operator"})," is named in Figure 26\u20133, or a ",(0,s.jsx)(n.em,{children:"compound form"})," that has an ",(0,s.jsx)(n.em,{children:"implementation-defined operator"})," and that is defined by the ",(0,s.jsx)(n.em,{children:"implementation"})," to be an ",(0,s.jsx)(n.em,{children:"iteration form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["|",(0,s.jsxs)("p",{children:[(0,s.jsx)(n.strong,{children:"do do-external-symbols dotimes do* do-symbols loop"})," "]}),(0,s.jsx)("p",{children:(0,s.jsx)(n.strong,{children:"do-all-symbols dolist"})}),"|"]}),"\n",(0,s.jsx)(n.p,{children:"| :- |"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Figure 26\u20133. Standardized Iteration Forms"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"iteration variable"})," ",(0,s.jsx)(n.em,{children:"n."})," a ",(0,s.jsx)(n.em,{children:"variable V"})," , the ",(0,s.jsx)(n.em,{children:"binding"})," for which was created by an ",(0,s.jsx)(n.em,{children:"explicit use"})," of ",(0,s.jsx)(n.em,{children:"V"})," in an ",(0,s.jsx)(n.em,{children:"iteration form"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>c});var s=i(67294);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);