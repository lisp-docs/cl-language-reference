"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[62763],{47326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>u});var i=t(85893),r=t(11151);function s(e){const n={em:"em",p:"p",strong:"strong",...(0,r.a)(),...e.components},{ClLinks:t,GlossaryTerm:s}=n;return t||l("ClLinks",!0),s||l("GlossaryTerm",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"get-internal-run-time"})," ",(0,i.jsx)(t,{styled:!0,term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(t,{styled:!0,term:"get-internal-run-time",children:(0,i.jsx)("b",{children:"get-internal-run-time"})})," ",(0,i.jsx)(n.em,{children:"\u27e8no arguments\u27e9 \u2192 internal-time"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"internal-time"}),"\u2014a non-negative ",(0,i.jsx)(n.em,{children:"integer"})," ."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns as an ",(0,i.jsx)(n.em,{children:"integer"})," the current run time in ",(0,i.jsx)(s,{styled:!0,term:"internal time unit",children:(0,i.jsx)("i",{children:"internal time units"})}),". The precise meaning of this quantity is ",(0,i.jsx)(t,{styled:!0,term:"implementation-defined",children:(0,i.jsx)("i",{children:"implementation-defined"})}),"; it may measure real time, run time, CPU cycles, or some other quantity. The intent is that the difference between the values of two calls to this function be the amount of time between the two calls during which computational effort was expended on behalf of the executing program."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(t,{styled:!0,term:"implementation",children:(0,i.jsx)("i",{children:"implementation"})}),", the time of day (",(0,i.jsx)(n.em,{children:"i.e."}),", the passage of time)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(t,{styled:!0,term:"internal-time-units-per-second",children:(0,i.jsx)("b",{children:"internal-time-units-per-second"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(n.p,{children:["Depending on the ",(0,i.jsx)(t,{styled:!0,term:"implementation",children:(0,i.jsx)("i",{children:"implementation"})}),", paging time and garbage collection time might be included in this measurement. Also, in a multitasking environment, it might not be possible to show the time for just the running process, so in some ",(0,i.jsx)(t,{styled:!0,term:"implementation",children:(0,i.jsx)("i",{children:"implementations"})}),", time taken by other processes during the same time interval might be included in this measurement as well."]})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const a={title:"get-internal-run-time"},o="get-internal-run-time",d={id:"chap-25/cf-c-dictionary/get-internal-run-time_function",title:"get-internal-run-time",description:"Expanded Reference: get-internal-run-time",source:"@site/docs/chap-25/cf-c-dictionary/get-internal-run-time_function.md",sourceDirName:"chap-25/cf-c-dictionary",slug:"/chap-25/cf-c-dictionary/get-internal-run-time_function",permalink:"/cl-language-reference/chap-25/cf-c-dictionary/get-internal-run-time_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-25/cf-c-dictionary/get-internal-run-time_function.md",tags:[],version:"current",frontMatter:{title:"get-internal-run-time"},sidebar:"tutorialSidebar",previous:{title:"get-internal-real-time",permalink:"/cl-language-reference/chap-25/cf-c-dictionary/get-internal-real-time_function"},next:{title:"get-universal-time, get-decoded-time",permalink:"/cl-language-reference/chap-25/cf-c-dictionary/get-universal-time_get-decoded-time_function"}},m={},u=[{value:"Expanded Reference: get-internal-run-time",id:"expanded-reference-get-internal-run-time",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"get-internal-run-time",children:"get-internal-run-time"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-get-internal-run-time",children:"Expanded Reference: get-internal-run-time"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(get-internal-run-time )\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>c});var i=t(67294);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);