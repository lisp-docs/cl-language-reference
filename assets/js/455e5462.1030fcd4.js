"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[75146],{24891:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var o=t(85893),s=t(11151);const a={title:"Code Blocks Indented",authors:"daniel",tags:["status","beginning","glossary"]},l=void 0,r={permalink:"/cl-language-reference/blog/2023/12/07/code-indented",editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/blog/2023-12-07-code-indented.md",source:"@site/blog/2023-12-07-code-indented.md",title:"Code Blocks Indented",description:"Code Blocks Indented",date:"2023-12-07T00:00:00.000Z",formattedDate:"December 7, 2023",tags:[{label:"status",permalink:"/cl-language-reference/blog/tags/status"},{label:"beginning",permalink:"/cl-language-reference/blog/tags/beginning"},{label:"glossary",permalink:"/cl-language-reference/blog/tags/glossary"}],readingTime:.165,hasTruncateMarker:!1,authors:[{name:"Daniel N",title:"Lisp Docs Contributor",url:"https://github.com/daninus14",key:"daniel"}],frontMatter:{title:"Code Blocks Indented",authors:"daniel",tags:["status","beginning","glossary"]},unlisted:!1,nextItem:{title:"Glossary Improved!",permalink:"/cl-language-reference/blog/2023/12/07/"}},c={authorsImageUrls:[void 0]},d=[{value:"Code Blocks Indented",id:"code-blocks-indented",level:2}];function i(e){const n={h2:"h2",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"code-blocks-indented",children:"Code Blocks Indented"}),"\n",(0,o.jsxs)(n.p,{children:["Good news, now the code blocks look even better! I indented them using the emacs indentation so it follows the conventional indentation. Changes made to 414 files ",":D"]}),"\n",(0,o.jsx)(n.p,{children:"Enjoy!"})]})}function g(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var o=t(67294);const s={},a=o.createContext(s);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);