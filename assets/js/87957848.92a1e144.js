"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[22262],{10652:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>l,metadata:()=>o,toc:()=>x});var s=n(85893),t=n(11151);function i(e){const r={em:"em",p:"p",strong:"strong",...(0,t.a)(),...e.components},{ClLinks:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"vector"})," ",(0,s.jsx)(r.em,{children:"System Class"})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Class Precedence List:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("b",{children:"vector"})}),", ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("b",{children:"array"})}),", ",(0,s.jsx)(n,{styled:!0,term:"sequence",children:(0,s.jsx)("b",{children:"sequence"})}),", ",(0,s.jsx)(n,{styled:!0,term:"t",children:(0,s.jsx)("b",{children:"t"})})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(r.p,{children:["Any one-dimensional ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("i",{children:"array"})})," is a ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vector"})})," ."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("b",{children:"vector"})})," is a ",(0,s.jsx)(n,{styled:!0,term:"subtype",children:(0,s.jsx)("i",{children:"subtype"})})," of ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(n,{styled:!0,term:"array",children:(0,s.jsx)("b",{children:"array"})}),"; for all ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"types"})})," x, (vector x) is the same as (array x (*)). The ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," (vector t), the ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("b",{children:"string"})}),", and the ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(n,{styled:!0,term:"bit-vector",children:(0,s.jsx)("b",{children:"bit-vector"})})," are ",(0,s.jsx)(r.em,{children:"disjoint subtypes"})," of ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("b",{children:"vector"})}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Kind:"})}),"\n",(0,s.jsx)(r.p,{children:"Specializing."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Syntax:"})}),"\n",(0,s.jsxs)(r.p,{children:["(vector [",(0,s.jsx)(r.em,{children:"{element-type |"})," ",(0,s.jsx)(r.strong,{children:"*"}),(0,s.jsx)(r.em,{children:"}"})," [",(0,s.jsx)(r.em,{children:"{size |"})," ",(0,s.jsx)(r.strong,{children:"*"}),(0,s.jsx)(r.em,{children:"}"}),"]])"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Arguments:"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"size"}),"\u2014a non-negative ",(0,s.jsx)(n,{styled:!0,term:"fixnum",children:(0,s.jsx)("i",{children:"fixnum"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"element-type"}),"\u2014a ",(0,s.jsx)(r.em,{children:"type specifier"})," ."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compound Type Specifier Description:"})}),"\n",(0,s.jsxs)(r.p,{children:["This denotes the set of specialized ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vectors"})})," whose ",(0,s.jsx)(r.em,{children:"element type"})," and ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimension"})})," match the specified values. Specifically:"]}),"\n",(0,s.jsxs)(r.p,{children:["If ",(0,s.jsx)(r.em,{children:"element-type"})," is the ",(0,s.jsx)(n,{styled:!0,term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," ",(0,s.jsx)(r.strong,{children:"*"}),", ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vectors"})})," are not excluded on the basis of their ",(0,s.jsx)(r.em,{children:"element type"}),". Otherwise, only those ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vectors"})})," are included whose ",(0,s.jsx)(r.em,{children:"actual array element type"})," is the result of ",(0,s.jsx)(r.em,{children:"upgrading element-type"}),"; see Section 15.1.2.1 (Array Upgrading)."]}),"\n",(0,s.jsxs)(r.p,{children:["If a ",(0,s.jsx)(r.em,{children:"size"})," is specified, the set includes only those ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vectors"})})," whose only ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimension"})})," is ",(0,s.jsx)(r.em,{children:"size"}),". If the ",(0,s.jsx)(n,{styled:!0,term:"symbol",children:(0,s.jsx)("i",{children:"symbol"})})," ",(0,s.jsx)(r.strong,{children:"*"})," is specified instead of a ",(0,s.jsx)(r.em,{children:"size"}),", the set is not restricted on the basis of ",(0,s.jsx)(n,{styled:!0,term:"dimension",children:(0,s.jsx)("i",{children:"dimension"})}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"See Also:"})}),"\n",(0,s.jsx)(r.p,{children:"Section 15.1.2.2 (Required Kinds of Specialized Arrays), Section 2.4.8.3 (Sharpsign Left Parenthesis), Section 22.1.3.7 (Printing Other Vectors), Section 2.4.8.12 (Sharpsign A)"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," (vector ",(0,s.jsx)(r.em,{children:"e s"}),") is equivalent to the ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"type"})})," (array ",(0,s.jsx)(r.em,{children:"e"})," (",(0,s.jsx)(r.em,{children:"s"}),"))."]}),"\n",(0,s.jsxs)(r.p,{children:["The type (vector bit) has the name ",(0,s.jsx)(n,{styled:!0,term:"bit-vector",children:(0,s.jsx)("b",{children:"bit-vector"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The union of all ",(0,s.jsx)(n,{styled:!0,term:"type",children:(0,s.jsx)("i",{children:"types"})})," (vector ",(0,s.jsx)(r.em,{children:"C"}),"), where ",(0,s.jsx)(r.em,{children:"C"})," is any ",(0,s.jsx)(n,{styled:!0,term:"subtype",children:(0,s.jsx)("i",{children:"subtype"})})," of ",(0,s.jsx)(n,{styled:!0,term:"character",children:(0,s.jsx)("b",{children:"character"})}),", has the name ",(0,s.jsx)(n,{styled:!0,term:"string",children:(0,s.jsx)("b",{children:"string"})}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["(vector *) refers to all ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vectors"})})," regardless of element type, (vector ",(0,s.jsx)(r.em,{children:"type-specifier"}),") refers only to those ",(0,s.jsx)(n,{styled:!0,term:"vector",children:(0,s.jsx)("i",{children:"vectors"})})," that can result from giving ",(0,s.jsx)(r.em,{children:"type-specifier"})," as the ",":element-type"," argument to ",(0,s.jsx)(n,{styled:!0,term:"make-array",children:(0,s.jsx)("b",{children:"make-array"})}),"."]})]})}function c(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const l={title:"vector"},d="vector",o={id:"chap-15/bf-c-dictionary/vector_system-class",title:"vector",description:"Expanded Reference: vector",source:"@site/docs/chap-15/bf-c-dictionary/vector_system-class.md",sourceDirName:"chap-15/bf-c-dictionary",slug:"/chap-15/bf-c-dictionary/vector_system-class",permalink:"/cl-language-reference/chap-15/bf-c-dictionary/vector_system-class",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-15/bf-c-dictionary/vector_system-class.md",tags:[],version:"current",frontMatter:{title:"vector"},sidebar:"tutorialSidebar",previous:{title:"vector",permalink:"/cl-language-reference/chap-15/bf-c-dictionary/vector_function"},next:{title:"vectorp",permalink:"/cl-language-reference/chap-15/bf-c-dictionary/vectorp_function"}},h={},x=[{value:"Expanded Reference: vector",id:"expanded-reference-vector",level:2}];function a(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"vector",children:"vector"}),"\n","\n","\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(r.h2,{id:"expanded-reference-vector",children:"Expanded Reference: vector"}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsx)(r.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lisp",children:"(vector )\n"})})]})}function j(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>c});var s=n(67294);const t={},i=s.createContext(t);function c(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);