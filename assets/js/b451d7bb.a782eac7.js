"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[14933],{65553:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>m});var n=o(85893),c=o(11151);const i={},a="Method combinations",r={id:"meta-object-protocol/method-combinations",title:"Method combinations",description:"Method combinations",source:"@site/docs/meta-object-protocol/method-combinations.md",sourceDirName:"meta-object-protocol",slug:"/meta-object-protocol/method-combinations",permalink:"/cl-language-reference/meta-object-protocol/method-combinations",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/meta-object-protocol/method-combinations.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Metaobjects",permalink:"/cl-language-reference/meta-object-protocol/metaobjects"},next:{title:"method-function-standard-method",permalink:"/cl-language-reference/meta-object-protocol/method-function-standard-method"}},s={},m=[{value:"Method combinations",id:"method-combinations-1",level:3},{value:"Note",id:"note",level:4}];function d(e){const t={em:"em",h1:"h1",h3:"h3",h4:"h4",p:"p",...(0,c.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"method-combinations",children:"Method combinations"}),"\n",(0,n.jsx)(t.h3,{id:"method-combinations-1",children:"Method combinations"}),"\n",(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.em,{children:"method combination metaobject"})," represents the information about the method combination being used by a generic function."]}),"\n",(0,n.jsx)(t.h4,{id:"note",children:"Note"}),"\n",(0,n.jsx)(t.p,{children:"This document does not specify the structure of method combination metaobjects."})]})}function l(e={}){const{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>r,a:()=>a});var n=o(67294);const c={},i=n.createContext(c);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);