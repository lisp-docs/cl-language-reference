"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[9663],{29577:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>a,toc:()=>h});var l=i(85893),t=i(11151);function r(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{ClLinks:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"load"})," ",(0,l.jsx)(i,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"Function"})})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," ",(0,l.jsx)(n.em,{children:"filespec"})," &key ",(0,l.jsx)(n.em,{children:"verbose print"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.em,{children:"if-does-not-exist external-format"})}),"\n",(0,l.jsx)(n.p,{children:"\u2192 generalized-boolean"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"filespec"}),"\u2014a ",(0,l.jsx)(i,{styled:!0,term:"stream",children:(0,l.jsx)("i",{children:"stream"})}),", or a ",(0,l.jsx)(n.em,{children:"pathname designator"})," . The default is taken from"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(i,{styled:!0,term:"default-pathname-defaults",children:(0,l.jsx)("b",{children:"*default-pathname-defaults*"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"verbose"}),"\u2014a ",(0,l.jsx)(n.em,{children:"generalized boolean"}),". The default is the ",(0,l.jsx)(i,{styled:!0,term:"value",children:(0,l.jsx)("i",{children:"value"})})," of ",(0,l.jsx)(i,{styled:!0,term:"load-verbose",children:(0,l.jsx)("b",{children:"*load-verbose*"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"print"}),"\u2014a ",(0,l.jsx)(n.em,{children:"generalized boolean"}),". The default is the ",(0,l.jsx)(i,{styled:!0,term:"value",children:(0,l.jsx)("i",{children:"value"})})," of ",(0,l.jsx)(n.strong,{children:"*load-print*"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"if-does-not-exist"}),"\u2014a ",(0,l.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,l.jsx)(i,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"external-format"}),"\u2014an ",(0,l.jsx)(n.em,{children:"external file format designator"})," . The default is ",":default","."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"generalized-boolean"}),"\u2014a ",(0,l.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("i",{children:"loads"})})," the ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," named by ",(0,l.jsx)(n.em,{children:"filespec"})," into the Lisp environment."]}),"\n",(0,l.jsxs)(n.p,{children:["The manner in which a ",(0,l.jsx)(n.em,{children:"source file"})," is distinguished from a ",(0,l.jsx)(n.em,{children:"compiled file"})," is ",(0,l.jsx)(i,{styled:!0,term:"implementation-dependent",children:(0,l.jsx)("i",{children:"implementation-dependent"})}),". If the file specification is not complete and both a ",(0,l.jsx)(n.em,{children:"source file"})," and a ",(0,l.jsx)(n.em,{children:"compiled file"})," exist which might match, then which of those files ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," selects is ",(0,l.jsx)(i,{styled:!0,term:"implementation-dependent",children:(0,l.jsx)("i",{children:"implementation-dependent"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.em,{children:"filespec"})," is a ",(0,l.jsx)(i,{styled:!0,term:"stream",children:(0,l.jsx)("i",{children:"stream"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," determines what kind of ",(0,l.jsx)(i,{styled:!0,term:"stream",children:(0,l.jsx)("i",{children:"stream"})})," it is and loads directly from the ",(0,l.jsx)(i,{styled:!0,term:"stream",children:(0,l.jsx)("i",{children:"stream"})}),". If ",(0,l.jsx)(n.em,{children:"filespec"})," is a ",(0,l.jsx)(n.em,{children:"logical pathname"}),", it is translated into a ",(0,l.jsx)(n.em,{children:"physical pathname"})," as if by calling ",(0,l.jsx)(i,{styled:!0,term:"translate-logical-pathname",children:(0,l.jsx)("b",{children:"translate-logical-pathname"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," sequentially executes each ",(0,l.jsx)(i,{styled:!0,term:"form",children:(0,l.jsx)("i",{children:"form"})})," it encounters in the ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," named by ",(0,l.jsx)(n.em,{children:"filespec"}),". If the ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," is a ",(0,l.jsx)(n.em,{children:"source file"})," and the ",(0,l.jsx)(i,{styled:!0,term:"implementation",children:(0,l.jsx)("i",{children:"implementation"})})," chooses to perform ",(0,l.jsx)(n.em,{children:"implicit compilation"}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," must recognize ",(0,l.jsx)(n.em,{children:"top level forms"})," as described in Section 3.2.3.1 (Processing of Top Level Forms) and arrange for each ",(0,l.jsx)(n.em,{children:"top level form"})," to be executed before beginning ",(0,l.jsx)(n.em,{children:"implicit compilation"})," of the next. (Note, however, that processing of ",(0,l.jsx)(i,{styled:!0,term:"eval-when",children:(0,l.jsx)("b",{children:"eval-when"})})," ",(0,l.jsx)(i,{styled:!0,term:"form",children:(0,l.jsx)("i",{children:"forms"})})," by ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," is controlled by the ",":execute"," situation.)"]}),"\n",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.em,{children:"verbose"})," is ",(0,l.jsx)(i,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," prints a message in the form of a comment (",(0,l.jsx)(n.em,{children:"i.e."}),", with a leading ",(0,l.jsx)(i,{styled:!0,term:"semicolon",children:(0,l.jsx)("i",{children:"semicolon"})}),") to ",(0,l.jsx)(n.em,{children:"standard output"})," indicating what ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," is being ",(0,l.jsx)(n.em,{children:"loaded"})," and other useful information. If ",(0,l.jsx)(n.em,{children:"verbose"})," is ",(0,l.jsx)(i,{styled:!0,term:"false",children:(0,l.jsx)("i",{children:"false"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," does not print this information."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.em,{children:"print"})," is ",(0,l.jsx)(i,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," incrementally prints information to ",(0,l.jsx)(n.em,{children:"standard output"})," showing the progress of the ",(0,l.jsx)(n.em,{children:"loading"})," process. For a ",(0,l.jsx)(n.em,{children:"source file"}),", this information might mean printing the ",(0,l.jsx)(n.em,{children:"values yielded"})," by each ",(0,l.jsx)(i,{styled:!0,term:"form",children:(0,l.jsx)("i",{children:"form"})})," in the ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," as soon as those ",(0,l.jsx)(i,{styled:!0,term:"value",children:(0,l.jsx)("i",{children:"values"})})," are returned. For a ",(0,l.jsx)(n.em,{children:"compiled file"}),", what is printed might not reflect precisely the contents of the ",(0,l.jsx)(n.em,{children:"source file"}),", but some information is generally printed. If ",(0,l.jsx)(n.em,{children:"print"})," is ",(0,l.jsx)(i,{styled:!0,term:"false",children:(0,l.jsx)("i",{children:"false"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," does not print this information."]}),"\n",(0,l.jsxs)(n.p,{children:["If the file named by ",(0,l.jsx)(n.em,{children:"filespec"})," is successfully loaded, ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," returns ",(0,l.jsx)(i,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["If the file does not exist, the specific action taken depends on ",(0,l.jsx)(n.em,{children:"if-does-not-exist"}),": if it is ",(0,l.jsx)(i,{styled:!0,term:"nil",children:(0,l.jsx)("b",{children:"nil"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," returns ",(0,l.jsx)(i,{styled:!0,term:"nil",children:(0,l.jsx)("b",{children:"nil"})}),"; otherwise, ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," signals an error."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.em,{children:"external-format"})," specifies the ",(0,l.jsx)(n.em,{children:"external file format"})," to be used when opening the ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," (see the ",(0,l.jsx)(i,{styled:!0,term:"function",children:(0,l.jsx)("i",{children:"function"})})," ",(0,l.jsx)(i,{styled:!0,term:"open",children:(0,l.jsx)("b",{children:"open"})}),"), except that when the ",(0,l.jsx)(i,{styled:!0,term:"file",children:(0,l.jsx)("i",{children:"file"})})," named by ",(0,l.jsx)(n.em,{children:"filespec"})," is a ",(0,l.jsx)(n.em,{children:"compiled file"}),", the ",(0,l.jsx)(n.em,{children:"external-format"})," is ignored. ",(0,l.jsx)(i,{styled:!0,term:"compile-file",children:(0,l.jsx)("b",{children:"compile-file"})})," and ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," cooperate in an ",(0,l.jsx)(i,{styled:!0,term:"implementation-dependent",children:(0,l.jsx)("i",{children:"implementation-dependent"})})," way to assure the preservation of the ",(0,l.jsx)(i,{styled:!0,term:"similarity",children:(0,l.jsx)("i",{children:"similarity"})})," of ",(0,l.jsx)(i,{styled:!0,term:"character",children:(0,l.jsx)("i",{children:"characters"})})," referred to in the ",(0,l.jsx)(n.em,{children:"source file"})," at the time the ",(0,l.jsx)(n.em,{children:"source file"})," was processed by the ",(0,l.jsx)(n.em,{children:"file compiler"})," under a given ",(0,l.jsx)(n.em,{children:"external file format"}),", regardless of the value of ",(0,l.jsx)(n.em,{children:"external-format"})," at the time the ",(0,l.jsx)(n.em,{children:"compiled file"})," is ",(0,l.jsx)(n.em,{children:"loaded"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," binds ",(0,l.jsx)(i,{styled:!0,term:"readtable",children:(0,l.jsx)("b",{children:"*readtable*"})})," and ",(0,l.jsx)(i,{styled:!0,term:"package",children:(0,l.jsx)("b",{children:"*package*"})})," to the values they held before ",(0,l.jsx)(n.em,{children:"loading"})," the file. ",(0,l.jsx)(i,{styled:!0,term:"load-truename",children:(0,l.jsx)("b",{children:"*load-truename*"})})," is ",(0,l.jsx)(i,{styled:!0,term:"bound",children:(0,l.jsx)("i",{children:"bound"})})," by ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," to hold the ",(0,l.jsx)(i,{styled:!0,term:"truename",children:(0,l.jsx)("i",{children:"truename"})})," of the ",(0,l.jsx)(i,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})})," of the file being ",(0,l.jsx)(n.em,{children:"loaded"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"*load-pathname*"})," is ",(0,l.jsx)(i,{styled:!0,term:"bound",children:(0,l.jsx)("i",{children:"bound"})})," by ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," to hold a ",(0,l.jsx)(i,{styled:!0,term:"pathname",children:(0,l.jsx)("i",{children:"pathname"})})," that represents ",(0,l.jsx)(n.em,{children:"filespec"})," merged against the defaults. That is, (pathname (merge-pathnames ",(0,l.jsx)(n.em,{children:"filespec"}),"))."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lisp",children:'\n\t\t\t\t\t;Establish a data file... \n(with-open-file (str "data.in" :direction :output :if-exists :error) \n  (print 1 str) (print \u2019(setq a 888) str) t) \n\u2192 T \n(load "data.in") \u2192 true \na \u2192 888 \n(load (setq p (merge-pathnames "data.in")) :verbose t) \n\t\t\t\t\t; Loading contents of file /fred/data.in \n\t\t\t\t\t; Finished loading /fred/data.in \n\u2192 true \n(load p :print t) \n\t\t\t\t\t; Loading contents of file /fred/data.in \n\t\t\t\t\t; 1 \n\t\t\t\t\t; 888 \n\t\t\t\t\t; Finished loading /fred/data.in \n\u2192 true \nSystem \n\n\n\t\t\t\t\t;\u2013\u2013[Begin file SETUP]\u2013\u2013 \n(in-package "MY-STUFF") \n(defmacro compile-truename () \u2018\u2019,\\*compile-file-truename\\*) \n(defvar \\*my-compile-truename\\* (compile-truename) "Just for debugging.") \n(defvar \\*my-load-pathname\\* \\*load-pathname\\*) \n(defun load-my-system () \n  (dolist (module-name \u2019("FOO" "BAR" "BAZ")) \n    (load (merge-pathnames module-name \\*my-load-pathname\\*)))) \n\t\t\t\t\t;\u2013\u2013[End of file SETUP]\u2013\u2013 \n(load "SETUP") \n(load-my-system) \n\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,l.jsx)(n.p,{children:"The implementation, and the host computer\u2019s file system."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,l.jsxs)(n.p,{children:["If ",":if-does-not-exist"," is supplied and is ",(0,l.jsx)(i,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),", or is not supplied, ",(0,l.jsx)(i,{styled:!0,term:"load",children:(0,l.jsx)("b",{children:"load"})})," signals an error of ",(0,l.jsx)(i,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(i,{styled:!0,term:"file-error",children:(0,l.jsx)("b",{children:"file-error"})})," if the file named by ",(0,l.jsx)(n.em,{children:"filespec"})," does not exist, or if the ",(0,l.jsx)(n.em,{children:"file system"})," cannot perform the requested operation."]}),"\n",(0,l.jsxs)(n.p,{children:["An error of ",(0,l.jsx)(i,{styled:!0,term:"type",children:(0,l.jsx)("i",{children:"type"})})," ",(0,l.jsx)(i,{styled:!0,term:"file-error",children:(0,l.jsx)("b",{children:"file-error"})})," might be signaled if (wild-pathname-p ",(0,l.jsx)(n.em,{children:"filespec"}),") returns ",(0,l.jsx)(i,{styled:!0,term:"true",children:(0,l.jsx)("i",{children:"true"})}),"."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(i,{styled:!0,term:"error",children:(0,l.jsx)("b",{children:"error"})}),", ",(0,l.jsx)(i,{styled:!0,term:"merge-pathnames",children:(0,l.jsx)("b",{children:"merge-pathnames"})}),", ",(0,l.jsx)(i,{styled:!0,term:"load-verbose",children:(0,l.jsx)("b",{children:"*load-verbose*"})}),", ",(0,l.jsx)(i,{styled:!0,term:"default-pathname-defaults",children:(0,l.jsx)("b",{children:"*default-pathname-defaults*"})}),", ",(0,l.jsx)(i,{styled:!0,term:"pathname",children:(0,l.jsx)("b",{children:"pathname"})}),", ",(0,l.jsx)(i,{styled:!0,term:"logical-pathname",children:(0,l.jsx)("b",{children:"logical-pathname"})}),", Section 20.1 (File System Concepts), Section 19.1.2 (Pathnames as File names)"]})]})}function s(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(r,{...e})}):r(e)}const d={title:"load"},c="load",a={id:"chap-24/ce-c-dictionary/load_function",title:"load",description:"Expanded Reference: load",source:"@site/docs/chap-24/ce-c-dictionary/load_function.md",sourceDirName:"chap-24/ce-c-dictionary",slug:"/chap-24/ce-c-dictionary/load_function",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/load_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-24/ce-c-dictionary/load_function.md",tags:[],version:"current",frontMatter:{title:"load"},sidebar:"tutorialSidebar",previous:{title:"load-verbose",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/load-verbose_variable"},next:{title:"modules",permalink:"/cl-language-reference/chap-24/ce-c-dictionary/modules_variable"}},o={},h=[{value:"Expanded Reference: load",id:"expanded-reference-load",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"load",children:"load"}),"\n","\n","\n",(0,l.jsx)(s,{}),"\n",(0,l.jsx)(n.h2,{id:"expanded-reference-load",children:"Expanded Reference: load"}),"\n",(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lisp",children:"(load )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(m,{...e})}):m(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>s});var l=i(67294);const t={},r=l.createContext(t);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);