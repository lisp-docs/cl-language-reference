"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[39868],{2363:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var s=c(85893),i=c(11151);function t(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"nconc"})," ",(0,s.jsx)(n.em,{children:"Function"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"nconc"})," &rest ",(0,s.jsx)(n.em,{children:"lists \u2192 concatenated-list"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"list"}),"\u2014each but the last must be a ",(0,s.jsx)(n.em,{children:"list"})," (which might be a ",(0,s.jsx)(n.em,{children:"dotted list"})," but must not be a ",(0,s.jsx)(n.em,{children:"circular list"}),"); the last ",(0,s.jsx)(n.em,{children:"list"})," may be any ",(0,s.jsx)(n.em,{children:"object"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"concatenated-list"}),"\u2014a ",(0,s.jsx)(n.em,{children:"list"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:["Returns a ",(0,s.jsx)(n.em,{children:"list"})," that is the concatenation of ",(0,s.jsx)(n.em,{children:"lists"}),". If no ",(0,s.jsx)(n.em,{children:"lists"})," are supplied, (nconc) returns ",(0,s.jsx)(n.strong,{children:"nil"}),". ",(0,s.jsx)(n.strong,{children:"nconc"})," is defined using the following recursive relationship:"]}),"\n",(0,s.jsx)(n.p,{children:"(nconc) \u2192 ()"}),"\n",(0,s.jsxs)(n.p,{children:["(nconc nil . ",(0,s.jsx)(n.em,{children:"lists"}),") ",(0,s.jsx)(n.em,{children:"\u2261"})," (nconc . ",(0,s.jsx)(n.em,{children:"lists"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(nconc ",(0,s.jsx)(n.em,{children:"list"}),") \u2192 list"]}),"\n",(0,s.jsxs)(n.p,{children:["(nconc ",(0,s.jsx)(n.em,{children:"list-1 list-2"}),") ",(0,s.jsx)(n.em,{children:"\u2261"})," (progn (rplacd (last ",(0,s.jsx)(n.em,{children:"list-1"}),") ",(0,s.jsx)(n.em,{children:"list-2"}),") ",(0,s.jsx)(n.em,{children:"list-1"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(nconc ",(0,s.jsx)(n.em,{children:"list-1 list-2"})," . ",(0,s.jsx)(n.em,{children:"lists"}),") ",(0,s.jsx)(n.em,{children:"\u2261"})," (nconc (nconc ",(0,s.jsx)(n.em,{children:"list-1 list-2"}),") . ",(0,s.jsx)(n.em,{children:"lists"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"\n(nconc) \u2192 NIL \n(setq x \u2019(a b c)) \u2192 (A B C) \n(setq y \u2019(d e f)) \u2192 (D E F) \n(nconc x y) \u2192 (A B C D E F) \nx \u2192 (A B C D E F) \nNote, in the example, that the value of x is now different, since its last *cons* has been **rplacd**\u2019d to the value of y. If (nconc x y) were evaluated again, it would yield a piece of a *circular list*, whose printed representation would be (A B C D E F D E F D E F ...), repeating forever; if the **\\*print-circle\\*** switch were *non-nil*, it would be printed as (A B C . #1=(D E F . #1#)). \n(setq foo (list \u2019a \u2019b \u2019c \u2019d \u2019e) \n      bar (list \u2019f \u2019g \u2019h \u2019i \u2019j) \n      baz (list \u2019k \u2019l \u2019m)) \u2192 (K L M) \n(setq foo (nconc foo bar baz)) \u2192 (A B C D E F G H I J K L M) \nfoo \u2192 (A B C D E F G H I J K L M) \nbar \u2192 (F G H I J K L M) \nbaz \u2192 (K L M) \n(setq foo (list \u2019a \u2019b \u2019c \u2019d \u2019e) \n      bar (list \u2019f \u2019g \u2019h \u2019i \u2019j) \n      baz (list \u2019k \u2019l \u2019m)) \u2192 (K L M) \n(setq foo (nconc nil foo bar nil baz)) \u2192 (A B C D E F G H I J K L M) \nfoo \u2192 (A B C D E F G H I J K L M) \nbar \u2192 (F G H I J K L M) \nbaz \u2192 (K L M) \n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"lists"})," are modified rather than copied."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"append"}),", ",(0,s.jsx)(n.strong,{children:"concatenate"})]})]})}function r(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}const l={},o="nconc",d={id:"chap-14/be-c-dictionary/nconc",title:"nconc",description:"Expanded Reference: nconc",source:"@site/docs/chap-14/be-c-dictionary/nconc.md",sourceDirName:"chap-14/be-c-dictionary",slug:"/chap-14/be-c-dictionary/nconc",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/nconc",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-14/be-c-dictionary/nconc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"member, member-if, member-if-not",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/member"},next:{title:"nth",permalink:"/cl-language-reference/docs/chap-14/be-c-dictionary/nth"}},a={},h=[{value:"Expanded Reference: nconc",id:"expanded-reference-nconc",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"nconc",children:"nconc"}),"\n","\n","\n",(0,s.jsx)(r,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-nconc",children:"Expanded Reference: nconc"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(nconc )\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,c)=>{c.d(n,{Z:()=>l,a:()=>r});var s=c(67294);const i={},t=s.createContext(i);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);