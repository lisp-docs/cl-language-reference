"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[72073],{13017:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var i=r(85893),s=r(11151);function l(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{ClLinks:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ClLinks",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"read-line"})," ",(0,i.jsx)(r,{term:"function",children:(0,i.jsx)("i",{children:"Function"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(r,{term:"read-line",children:(0,i.jsx)("b",{children:"read-line"})})," &optional ",(0,i.jsx)(n.em,{children:"input-stream eof-error-p eof-value recursive-p"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"\u2192 line, missing-newline-p"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"input-stream"}),"\u2014an ",(0,i.jsx)(n.em,{children:"input stream designator"})," . The default is ",(0,i.jsx)(n.em,{children:"standard input"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"eof-error-p"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,i.jsx)(r,{term:"true",children:(0,i.jsx)("i",{children:"true"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"eof-value"}),"\u2014an ",(0,i.jsx)(r,{term:"object",children:(0,i.jsx)("i",{children:"object"})}),". The default is ",(0,i.jsx)(r,{term:"nil",children:(0,i.jsx)("b",{children:"nil"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"recursive-p"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),". The default is ",(0,i.jsx)(r,{term:"false",children:(0,i.jsx)("i",{children:"false"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"line"}),"\u2014a ",(0,i.jsx)(r,{term:"string",children:(0,i.jsx)("i",{children:"string"})})," or the ",(0,i.jsx)(n.em,{children:"eof-value"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"missing-newline-p"}),"\u2014a ",(0,i.jsx)(n.em,{children:"generalized boolean"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Reads from ",(0,i.jsx)(n.em,{children:"input-stream"})," a line of text that is terminated by a ",(0,i.jsx)(r,{term:"newline",children:(0,i.jsx)("i",{children:"newline"})})," or ",(0,i.jsx)(n.em,{children:"end of file"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.em,{children:"recursive-p"})," is ",(0,i.jsx)(r,{term:"true",children:(0,i.jsx)("i",{children:"true"})}),", this call is expected to be embedded in a higher-level call to ",(0,i.jsx)(r,{term:"read",children:(0,i.jsx)("b",{children:"read"})})," or a similar ",(0,i.jsx)(r,{term:"function",children:(0,i.jsx)("i",{children:"function"})})," used by the ",(0,i.jsx)(n.em,{children:"Lisp reader"})," ."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"primary value"}),", ",(0,i.jsx)(n.em,{children:"line"}),", is the line that is read, represented as a ",(0,i.jsx)(r,{term:"string",children:(0,i.jsx)("i",{children:"string"})})," (without the trailing ",(0,i.jsx)(r,{term:"newline",children:(0,i.jsx)("i",{children:"newline"})}),", if any). If ",(0,i.jsx)(n.em,{children:"eof-error-p"})," is ",(0,i.jsx)(r,{term:"false",children:(0,i.jsx)("i",{children:"false"})})," and the ",(0,i.jsx)(n.em,{children:"end of file"})," for ",(0,i.jsx)(n.em,{children:"input-stream"})," is reached before any ",(0,i.jsx)(r,{term:"character",children:(0,i.jsx)("i",{children:"characters"})})," are read, ",(0,i.jsx)(n.em,{children:"eof-value"})," is returned as the ",(0,i.jsx)(n.em,{children:"line"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"secondary value"}),", ",(0,i.jsx)(n.em,{children:"missing-newline-p"}),", is a ",(0,i.jsx)(n.em,{children:"generalized boolean"})," that is ",(0,i.jsx)(r,{term:"false",children:(0,i.jsx)("i",{children:"false"})})," if the ",(0,i.jsx)(n.em,{children:"line"})," was terminated by a ",(0,i.jsx)(r,{term:"newline",children:(0,i.jsx)("i",{children:"newline"})}),", or ",(0,i.jsx)(r,{term:"true",children:(0,i.jsx)("i",{children:"true"})})," if the ",(0,i.jsx)(n.em,{children:"line"})," was terminated by the ",(0,i.jsx)(n.em,{children:"end of file"})," for ",(0,i.jsx)(n.em,{children:"input-stream"})," (or if the ",(0,i.jsx)(n.em,{children:"line"})," is the ",(0,i.jsx)(n.em,{children:"eof-value"}),")."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:'(setq a "line 1 \nline2") \n\u2192 "line 1 \nline2" \n(read-line (setq input-stream (make-string-input-stream a))) \n\u2192 "line 1", *false* \n(read-line input-stream) \n\u2192 "line2", *true* \n(read-line input-stream nil nil) \n\u2192 NIL, *true* \n\n\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Affected By:"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"*standard-input*"}),", ",(0,i.jsx)(r,{term:"terminal-io",children:(0,i.jsx)("b",{children:"*terminal-io*"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exceptional Situations:"})}),"\n",(0,i.jsxs)(n.p,{children:["If an ",(0,i.jsx)(n.em,{children:"end of file"}),(0,i.jsx)("sub",{children:"2"})," occurs before any characters are read in the line, an error is signaled if ",(0,i.jsx)(n.em,{children:"eof-error-p"})," is ",(0,i.jsx)(r,{term:"true",children:(0,i.jsx)("i",{children:"true"})}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,i.jsx)(r,{term:"read",children:(0,i.jsx)("b",{children:"read"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,i.jsxs)(n.p,{children:["The corresponding output function is ",(0,i.jsx)(r,{term:"write-line",children:(0,i.jsx)("b",{children:"write-line"})}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}const t={title:"read-line"},d="read-line",a={id:"chap-21/cb-c-dictionary/read-line_function",title:"read-line",description:"Expanded Reference: read-line",source:"@site/docs/chap-21/cb-c-dictionary/read-line_function.md",sourceDirName:"chap-21/cb-c-dictionary",slug:"/chap-21/cb-c-dictionary/read-line_function",permalink:"/cl-language-reference/chap-21/cb-c-dictionary/read-line_function",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-21/cb-c-dictionary/read-line_function.md",tags:[],version:"current",frontMatter:{title:"read-line"},sidebar:"tutorialSidebar",previous:{title:"read-char",permalink:"/cl-language-reference/chap-21/cb-c-dictionary/read-char_function"},next:{title:"read-sequence",permalink:"/cl-language-reference/chap-21/cb-c-dictionary/read-sequence_function"}},h={},o=[{value:"Expanded Reference: read-line",id:"expanded-reference-read-line",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"read-line",children:"read-line"}),"\n","\n","\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(n.h2,{id:"expanded-reference-read-line",children:"Expanded Reference: read-line"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lisp",children:"(read-line )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>t,a:()=>c});var i=r(67294);const s={},l=i.createContext(s);function c(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);