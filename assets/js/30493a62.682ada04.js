"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[65402],{85346:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>j,frontMatter:()=>c,metadata:()=>d,toc:()=>x});var t=r(85893),i=r(11151);function s(e){const n={p:"p",strong:"strong",...(0,i.a)(),...e.components},{DictionaryLink:r,GlossaryTerm:s}=n;return r||l("DictionaryLink",!0),s||l("GlossaryTerm",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"boolean"})," ",(0,t.jsx)(s,{term:"type",children:(0,t.jsx)("i",{children:"Type"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Supertypes:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{term:"boolean",children:(0,t.jsx)("b",{children:"boolean"})}),", ",(0,t.jsx)(r,{term:"symbol",children:(0,t.jsx)("b",{children:"symbol"})}),", ",(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(s,{term:"type",children:(0,t.jsx)("i",{children:"type"})})," ",(0,t.jsx)(r,{term:"boolean",children:(0,t.jsx)("b",{children:"boolean"})})," contains the ",(0,t.jsx)(s,{term:"symbol",children:(0,t.jsx)("i",{children:"symbols"})})," ",(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})})," and ",(0,t.jsx)(r,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})}),", which represent true and false, respectively."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})})," (",(0,t.jsx)(s,{styled:!0,term:"constant variable",children:(0,t.jsx)("i",{children:"constant variable"})}),"), ",(0,t.jsx)(r,{term:"nil",children:(0,t.jsx)("b",{children:"nil"})})," (",(0,t.jsx)(s,{styled:!0,term:"constant variable",children:(0,t.jsx)("i",{children:"constant variable"})}),"), ",(0,t.jsx)(r,{term:"if",children:(0,t.jsx)("b",{children:"if"})}),", ",(0,t.jsx)(r,{term:"not",children:(0,t.jsx)("b",{children:"not"})}),", ",(0,t.jsx)(r,{term:"complement",children:(0,t.jsx)("b",{children:"complement"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.p,{children:["Conditional operations, such as ",(0,t.jsx)(r,{term:"if",children:(0,t.jsx)("b",{children:"if"})}),", permit the use of ",(0,t.jsx)(s,{styled:!0,term:"generalized boolean",children:(0,t.jsx)("i",{children:"generalized booleans"})}),", not just ",(0,t.jsx)(s,{term:"boolean",children:(0,t.jsx)("i",{children:"booleans"})}),"; any ",(0,t.jsx)(s,{term:"non-nil",children:(0,t.jsx)("i",{children:"non-nil"})})," value, not just ",(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})}),", counts as true for a ",(0,t.jsx)(s,{styled:!0,term:"generalized boolean",children:(0,t.jsx)("i",{children:"generalized boolean"})}),". However, as a matter of convention, the ",(0,t.jsx)(s,{term:"symbol",children:(0,t.jsx)("i",{children:"symbol"})})," ",(0,t.jsx)(r,{term:"t",children:(0,t.jsx)("b",{children:"t"})})," is considered the canonical value to use even for a ",(0,t.jsx)(s,{styled:!0,term:"generalized boolean",children:(0,t.jsx)("i",{children:"generalized boolean"})})," when no better choice presents itself."]}),"\n",(0,t.jsx)(r,{term:"function",children:(0,t.jsx)("b",{children:"function"})})]})}function o(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}function l(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}const c={title:"boolean"},a="boolean",d={id:"chap-4/e-e-dictionary/boolean_type",title:"boolean",description:"Expanded Reference: boolean",source:"@site/docs/chap-4/e-e-dictionary/boolean_type.md",sourceDirName:"chap-4/e-e-dictionary",slug:"/chap-4/e-e-dictionary/boolean_type",permalink:"/cl-language-reference/chap-4/e-e-dictionary/boolean_type",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/main/docs/chap-4/e-e-dictionary/boolean_type.md",tags:[],version:"current",lastUpdatedBy:"Daniel Nussenbaum",frontMatter:{title:"boolean"},sidebar:"tutorialSidebar",previous:{title:"4.4 Types and Classes Dictionary",permalink:"/cl-language-reference/category/44-types-and-classes-dictionary"},next:{title:"built-in-class",permalink:"/cl-language-reference/chap-4/e-e-dictionary/built-in-class_system-class"}},h={},x=[{value:"Expanded Reference: boolean",id:"expanded-reference-boolean",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"boolean",children:"boolean"}),"\n","\n","\n",(0,t.jsx)(o,{}),"\n",(0,t.jsx)(n.h2,{id:"expanded-reference-boolean",children:"Expanded Reference: boolean"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lisp",children:"(boolean )\n"})})]})}function j(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>o});var t=r(67294);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);