"use strict";(self.webpackChunkcl_language_reference=self.webpackChunkcl_language_reference||[]).push([[50704],{22250:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>o,toc:()=>h});var s=r(85893),i=r(11151);function c(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"handler-case"})," ",(0,s.jsx)(n.em,{children:"Macro"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"handler-case"})," ",(0,s.jsx)(n.em,{children:"expression"})," [[ ",(0,s.jsx)(n.em,{children:"{\u2193error-clause}"}),"* ",(0,s.jsx)(n.em,{children:"| \u2193no-error-clause"})," ]] \u2192 {result}*"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"clause::"}),"=",(0,s.jsx)(n.em,{children:"\u2193error-clause | \u2193no-error-clause"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"error-clause::"}),"=(",(0,s.jsx)(n.em,{children:"typespec"})," ([",(0,s.jsx)(n.em,{children:"var"}),"]) ",(0,s.jsx)(n.em,{children:"{declaration}"}),"* ",(0,s.jsx)(n.em,{children:"{form}"}),"*)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"no-error-clause::"}),"=(",":no-error"," ",(0,s.jsx)(n.em,{children:"lambda-list {declaration}"}),"* ",(0,s.jsx)(n.em,{children:"{form}"}),"*)"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments and Values:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"expression"}),"\u2014a ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"typespec"}),"\u2014a ",(0,s.jsx)(n.em,{children:"type specifier"})," ."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"handler-case"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"var"}),"\u2014a ",(0,s.jsx)(n.em,{children:"variable name"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"lambda-list"}),"\u2014an ",(0,s.jsx)(n.em,{children:"ordinary lambda list"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"declaration"}),"\u2014a ",(0,s.jsx)(n.strong,{children:"declare"})," ",(0,s.jsx)(n.em,{children:"expression"}),"; not evaluated."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"form"}),"\u2014a ",(0,s.jsx)(n.em,{children:"form"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"results"}),"\u2014In the normal situation, the values returned are those that result from the evaluation of ",(0,s.jsx)(n.em,{children:"expression"}),"; in the exceptional situation when control is transferred to a ",(0,s.jsx)(n.em,{children:"clause"}),", the value of the last ",(0,s.jsx)(n.em,{children:"form"})," in that ",(0,s.jsx)(n.em,{children:"clause"})," is returned."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"handler-case"})," executes ",(0,s.jsx)(n.em,{children:"expression"})," in a ",(0,s.jsx)(n.em,{children:"dynamic environment"})," where various handlers are active. Each ",(0,s.jsx)(n.em,{children:"error-clause"})," specifies how to handle a ",(0,s.jsx)(n.em,{children:"condition"})," matching the indicated ",(0,s.jsx)(n.em,{children:"typespec"}),". A ",(0,s.jsx)(n.em,{children:"no-error-clause"})," allows the specification of a particular action if control returns normally."]}),"\n",(0,s.jsxs)(n.p,{children:["If a ",(0,s.jsx)(n.em,{children:"condition"})," is signaled for which there is an appropriate ",(0,s.jsx)(n.em,{children:"error-clause"})," during the execution of ",(0,s.jsx)(n.em,{children:"expression"})," (",(0,s.jsx)(n.em,{children:"i.e."}),", one for which (typep ",(0,s.jsx)(n.em,{children:"condition"})," \u2019",(0,s.jsx)(n.em,{children:"typespec"}),") returns ",(0,s.jsx)(n.em,{children:"true"}),") and if there is no intervening handler for a ",(0,s.jsx)(n.em,{children:"condition"})," of that ",(0,s.jsx)(n.em,{children:"type"}),", then control is transferred to the body of the relevant ",(0,s.jsx)(n.em,{children:"error-clause"}),". In this case, the dynamic state is unwound appropriately (so that the handlers established around the ",(0,s.jsx)(n.em,{children:"expression"})," are no longer active), and ",(0,s.jsx)(n.em,{children:"var"})," is bound to the ",(0,s.jsx)(n.em,{children:"condition"})," that had been signaled. If more than one case is provided, those cases are made accessible in parallel. That is, in"]}),"\n",(0,s.jsxs)(n.p,{children:["(handler-case ",(0,s.jsx)(n.em,{children:"form"})]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"typespec1"})," (",(0,s.jsx)(n.em,{children:"var1"}),") ",(0,s.jsx)(n.em,{children:"form1"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"typespec2"})," (",(0,s.jsx)(n.em,{children:"var2"}),") ",(0,s.jsx)(n.em,{children:"form2"}),"))"]}),"\n",(0,s.jsxs)(n.p,{children:["if the first ",(0,s.jsx)(n.em,{children:"clause"})," (containing ",(0,s.jsx)(n.em,{children:"form1"}),") has been selected, the handler for the second is no longer visible (or vice versa)."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"clauses"})," are searched sequentially from top to bottom. If there is ",(0,s.jsx)(n.em,{children:"type"})," overlap between ",(0,s.jsx)(n.em,{children:"typespecs"}),", the earlier of the ",(0,s.jsx)(n.em,{children:"clauses"})," is selected."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.em,{children:"var"})," is not needed, it can be omitted. That is, a ",(0,s.jsx)(n.em,{children:"clause"})," such as:"]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"typespec"})," (",(0,s.jsx)(n.em,{children:"var"}),") (declare (ignore ",(0,s.jsx)(n.em,{children:"var"}),")) ",(0,s.jsx)(n.em,{children:"form"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["can be written (",(0,s.jsx)(n.em,{children:"typespec"})," () ",(0,s.jsx)(n.em,{children:"form"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["If there are no ",(0,s.jsx)(n.em,{children:"forms"})," in a selected ",(0,s.jsx)(n.em,{children:"clause"}),", the case, and therefore ",(0,s.jsx)(n.strong,{children:"handler-case"}),", returns ",(0,s.jsx)(n.strong,{children:"nil"}),". If execution of ",(0,s.jsx)(n.em,{children:"expression"})," returns normally and no ",(0,s.jsx)(n.em,{children:"no-error-clause"})," exists, the values returned by ",(0,s.jsx)(n.em,{children:"expression"})," are returned by ",(0,s.jsx)(n.strong,{children:"handler-case"}),". If execution of ",(0,s.jsx)(n.em,{children:"expression"})," returns normally and a ",(0,s.jsx)(n.em,{children:"no-error-clause"})," does exist, the values returned are used as arguments to the function described by constructing (lambda ",(0,s.jsx)(n.em,{children:"lambda-list {form}"}),"*) from the ",(0,s.jsx)(n.em,{children:"no-error-clause"}),", and the ",(0,s.jsx)(n.em,{children:"values"})," of that function call are returned by ",(0,s.jsx)(n.strong,{children:"handler-case"}),". The handlers which were established around the ",(0,s.jsx)(n.em,{children:"expression"})," are no longer active at the time of this call."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"handler-case"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:' \n\n(defun assess-condition (condition) \n\n(handler-case (signal condition) \n\n(warning () "Lots of smoke, but no fire.") \n\n((or arithmetic-error control-error cell-error stream-error) \n\n(condition) \n\n(format nil "&#126;S looks especially bad." condition)) \n\n(serious-condition (condition) \n\n(format nil "&#126;S looks serious." condition)) \n\n(condition () "Hardly worth mentioning."))) \n\n\u2192 ASSESS-CONDITION \n\n(assess-condition (make-condition \u2019stream-error :stream \\*terminal-io\\*)) \u2192 "#<STREAM-ERROR 12352256> looks especially bad." \n\n(define-condition random-condition (condition) () \n\n(:report (lambda (condition stream) \n\n(declare (ignore condition)) \n\n(princ "Yow" stream)))) \n\n\u2192 RANDOM-CONDITION \n\n(assess-condition (make-condition \u2019random-condition)) \n\n\u2192 "Hardly worth mentioning." \n\n\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"See Also:"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"handler-bind"}),", ",(0,s.jsx)(n.strong,{children:"ignore-errors"}),", Section 9.1 (Condition System Concepts) ",(0,s.jsx)(n.strong,{children:"Notes:"})]}),"\n",(0,s.jsx)(n.p,{children:"(handler-case form"}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"type1"})," (",(0,s.jsx)(n.em,{children:"var1"}),") . ",(0,s.jsx)(n.em,{children:"body1"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"type2"})," (",(0,s.jsx)(n.em,{children:"var2"}),") . ",(0,s.jsx)(n.em,{children:"body2"}),") ...)"]}),"\n",(0,s.jsx)(n.p,{children:"is approximately equivalent to:"}),"\n",(0,s.jsxs)(n.p,{children:["(block #1=#",":g0001"]}),"\n",(0,s.jsxs)(n.p,{children:["(let ((#2=#",":g0002"," nil))"]}),"\n",(0,s.jsx)(n.p,{children:"(tagbody"}),"\n",(0,s.jsxs)(n.p,{children:["(handler-bind ((",(0,s.jsx)(n.em,{children:"type1"})," #\u2019(lambda (temp)"]}),"\n",(0,s.jsx)(n.p,{children:"(setq #1# temp)"}),"\n",(0,s.jsxs)(n.p,{children:["(go #3=#",":g0003",")))"]}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"type2"})," #\u2019(lambda (temp)"]}),"\n",(0,s.jsx)(n.p,{children:"(setq #2# temp)"}),"\n",(0,s.jsxs)(n.p,{children:["(go #4=#",":g0004","))) ...)"]}),"\n",(0,s.jsx)(n.p,{children:"(return-from #1# form))"}),"\n",(0,s.jsxs)(n.p,{children:["#3# (return-from #1# (let ((",(0,s.jsx)(n.em,{children:"var1"})," #2#)) . ",(0,s.jsx)(n.em,{children:"body1"}),"))"]}),"\n",(0,s.jsxs)(n.p,{children:["#4# (return-from #1# (let ((",(0,s.jsx)(n.em,{children:"var2"})," #2#)) . ",(0,s.jsx)(n.em,{children:"body2"}),")) ...)))"]}),"\n",(0,s.jsx)(n.p,{children:"(handler-case form"}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"type1 (var1)"})," . ",(0,s.jsx)(n.em,{children:"body1"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"..."}),"\n",(0,s.jsxs)(n.p,{children:["(",":no-error"," (",(0,s.jsx)(n.em,{children:"varN-1 varN-2"})," ...) . ",(0,s.jsx)(n.em,{children:"bodyN"}),"))"]}),"\n",(0,s.jsx)(n.p,{children:"is approximately equivalent to:"}),"\n",(0,s.jsxs)(n.p,{children:["(block #1=#",":error-return"]}),"\n",(0,s.jsxs)(n.p,{children:["(multiple-value-call #\u2019(lambda (",(0,s.jsx)(n.em,{children:"varN-1 varN-2"})," ...) . ",(0,s.jsx)(n.em,{children:"bodyN"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["(block #2=#",":normal-return"]}),"\n",(0,s.jsx)(n.p,{children:"(return-from #1#"}),"\n",(0,s.jsx)(n.p,{children:"(handler-case (return-from #2# form)"}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.em,{children:"type1"})," (",(0,s.jsx)(n.em,{children:"var1"}),") . ",(0,s.jsx)(n.em,{children:"body1"}),") ...)))))"]})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}const d={},a="handler-case",o={id:"chap-9/j-c-dictionary/handlercase",title:"handler-case",description:"Expanded Reference: handler-case",source:"@site/docs/chap-9/j-c-dictionary/handlercase.md",sourceDirName:"chap-9/j-c-dictionary",slug:"/chap-9/j-c-dictionary/handlercase",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/handlercase",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/cl-language-reference/tree/develop/docs/chap-9/j-c-dictionary/handlercase.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"handler-bind",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/handlerbind"},next:{title:"ignore-errors",permalink:"/cl-language-reference/docs/chap-9/j-c-dictionary/ignoreerrors"}},t={},h=[{value:"Expanded Reference: handler-case",id:"expanded-reference-handler-case",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"handler-case",children:"handler-case"}),"\n","\n","\n",(0,s.jsx)(l,{}),"\n",(0,s.jsx)(n.h2,{id:"expanded-reference-handler-case",children:"Expanded Reference: handler-case"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TODO: Please contribute to this page by adding explanations and examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lisp",children:"(handler-case )\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>l});var s=r(67294);const i={},c=s.createContext(i);function l(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);